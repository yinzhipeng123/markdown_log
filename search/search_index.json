{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MarkDown_Log \u672c\u6587\u6863\u7531\u4e8eMkDocs\u8fdb\u884c\u751f\u6210 git\u5e93\u5730\u5740\uff1ahttps://github.com/yinzhipeng123/markdown_log","title":"Home"},{"location":"#markdown_log","text":"\u672c\u6587\u6863\u7531\u4e8eMkDocs\u8fdb\u884c\u751f\u6210 git\u5e93\u5730\u5740\uff1ahttps://github.com/yinzhipeng123/markdown_log","title":"MarkDown_Log"},{"location":"KubeSphere/KubeSphere/","text":"KubeSphere \u5355\u70b9\u5b89\u88c5 https://kubesphere.com.cn/docs/quick-start/all-in-one-on-linux/ all in one\uff1a \u8bbe\u7f6e4\u6838\uff0c8G\u5185\u5b58\uff0c\u592a\u5c0f\u7684\u8bdd\uff0c\u6709\u7684\u670d\u52a1\u65e0\u6cd5\u542f\u52a8\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux \u4e3b\u673a\u540d KubeSphere\u7248\u672c IP centos7 3.1.1 192.168.70.130 [root@centos7 ~]# yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset [root@centos7 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@centos7 ~]# yum list docker-ce --showduplicates | sort -r [root@centos7 ~]# yum install docker-ce-20.10.6 [root@centos7 ~]# systemctl enable --now docker [root@centos7 ~]# export KKZONE=cn [root@centos7 ~]# curl -sfL https://get-kk.kubesphere.io | VERSION=v1.1.1 sh - [root@centos7 ~]# chmod +x kk [root@centos7 ~]#./kk create cluster --with-kubernetes v1.20.4 --with-kubesphere v3.1.1 \u7136\u540e\u4f1a\u63d0\u793a\u8ba9\u5b89\u88c5\u4f9d\u8d56\uff0c\u5ffd\u7565\u5c31\u53ef\u4ee5 \u8f93\u5165yes\uff0c\u7136\u540e\u5c31\u5b8c\u6210\u4e86\u5b89\u88c5 \u542f\u7528\u591a\u96c6\u7fa4\u7ba1\u7406\u529f\u80fd https://v3-1.docs.kubesphere.io/zh/docs/multicluster-management/enable-multicluster/direct-connection/ \u542f\u52a8\u5546\u5e97 https://v3-1.docs.kubesphere.io/zh/docs/pluggable-components/app-store/ \u542f\u7528\u8fb9\u7f18\u8282\u70b9\u529f\u80fd \u5b98\u65b9\u6587\u6863 https://kubesphere.com.cn/docs/pluggable-components/kubeedge/#%E5%9C%A8%E5%AE%89%E8%A3%85%E5%90%8E%E5%90%AF%E7%94%A8-kubeedge \u6211\u662f\u5b89\u88c5\u540e\u542f\u7528 KubeEdge\uff0c\u5176\u4e2d\u6587\u7ae0\u4e2d \u201c\u5c06 kubeedge.cloudCore.cloudHub.advertiseAddress \u7684\u503c\u8bbe\u7f6e\u4e3a\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\u6216\u8fb9\u7f18\u8282\u70b9\u53ef\u4ee5\u8bbf\u95ee\u7684 IP \u5730\u5740\u201c \u63d0\u5230\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\uff0c\u56e0\u4e3a\u6211\u4f7f\u7528\u7684\u662fall in one\u6a21\u5f0f\uff0c\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u90a3\u4e48\u8fd9\u91cc\u6211\u586b\u5199\u7684\u5c31\u662f192.168.70.130 \u7136\u540e\u5728\u673a\u5668\u4e0a\u6267\u884c [root@centos7 ~] kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-install -o jsonpath='{.items[0].metadata.name}') -f \u7b49\u5f85\u914d\u7f6e\u66f4\u6539\u5b8c\u6210\uff0c\u51fa\u73b0\u4e0b\u9762\u8fd9\u4e2a\uff0c\u5c31\u8868\u793a\u53d8\u66f4\u5b8c\u6210 ##################################################### ### Welcome to KubeSphere! ### ##################################################### Console: http://192.168.70.130:30880 Account: admin Password: P@88w0rd NOTES\uff1a 1. After you log into the console, please check the monitoring status of service components in \"Cluster Management\". If any service is not ready, please wait patiently until all components are up and running. 2. Please change the default password after login. ##################################################### https://kubesphere.io 2021-09-01 10:35:12 ##################################################### \u5237\u65b0\u9875\u9762\uff0c\u8282\u70b9\u7ba1\u7406\u4e2d\uff0c\u51fa\u73b0\u8fb9\u7f18\u8282\u70b9 \u6dfb\u52a0\u8fb9\u7f18\u8282\u70b9 \u65b0\u5efa\u4e00\u53f0\u673a\u5668\uff0c\u6765\u5f53\u505a\u8fb9\u7f18\u8282\u70b9\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux\uff0c\u6211\u8bbe\u7f6e\u7684\u662f4G\uff0c\u53cc\u6838\u673a\u5668 \u4e3b\u673a\u540d IP edgenode 192.168.70.140 \u673a\u5668\u51c6\u5907\u5de5\u4f5c\uff0c\u5b89\u88c5\u4f9d\u8d56 [root@edgenode ~] yum install -y yum-utils device-mapper-persistent-data lvm2 wget [root@edgenode ~] yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@edgenode ~] yum makecache fast [root@edgenode ~] yum install docker-ce-19.03.15-3.el7 docker-ce-cli-19.03.15-3.el7 -y [root@edgenode ~] systemctl enable docker && systemctl restart docker [root@edgenode ~] vi /etc/nsswitch.conf //\u4fee\u6539\u8fd9\u884c hosts: dns files mdns4_minimal [NOTFOUND=return] [root@edgenode ~] echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf [root@edgenode ~] sysctl -p | grep ip_forward \u7136\u540e\u5c31\u53ef\u4ee5\u5728KubeSphere\u9875\u9762\u4e0a\uff0c\u8282\u70b9\u7ba1\u7406--\u300b\u8fb9\u7f18\u8282\u70b9--\u300b\u6dfb\u52a0\u8282\u70b9\uff0c\u8f93\u5165\u7ed9node\u7684\u540d\u5b57\uff0cnode\u7684IP\u5730\u5740\uff0c\u7136\u540e\u590d\u5236\u4e0b\u9762\u7684\u547d\u4ee4 \u4f46\u662f\u9700\u8981\u628a\u547d\u4ee4\u4e2d\u768410000,10001,10002,10004\u4f9d\u6b21\u66f4\u6362\u4e3a30000,30001,30002,30004 [root@edgenode ~]# arch=$(uname -m); curl -LO https://kubeedge.pek3b.qingstor.com/bin/v1.6.2/$arch/keadm-v1.6.2-linux-$arch.tar.gz && tar xvf keadm-v1.6.2-linux-$arch.tar.gz && chmod +x keadm && ./keadm join --kubeedge-version=1.6.2 --region=zh --cloudcore-ipport=192.168.70.130:30000 --quicport 30001 --certport 30002 --tunnelport 30004 --edgenode-name edge-1 --edgenode-ip 192.168.70.140 --token 41c74c8e8f86d03b8560eb5be566c62c33eeac1865cdf3a48ad554e9626ef34e.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzA1NTAwNDZ9.mmR51Ue8rduKViXYqEuQQFyNcYol_IHQIm0K53iOQdM --with-edge-taint % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 38.5M 100 38.5M 0 0 1061k 0 0:00:37 0:00:37 --:--:-- 1034k ./keadm install MQTT service successfully. kubeedge-v1.6.2-linux-amd64.tar.gz checksum: checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content: [Run as service] start to download service file for edgecore [Run as service] success to download service file for edgecore kubeedge-v1.6.2-linux-amd64/ kubeedge-v1.6.2-linux-amd64/edge/ kubeedge-v1.6.2-linux-amd64/edge/edgecore kubeedge-v1.6.2-linux-amd64/cloud/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/csidriver kubeedge-v1.6.2-linux-amd64/cloud/admission/ kubeedge-v1.6.2-linux-amd64/cloud/admission/admission kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/ kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/cloudcore kubeedge-v1.6.2-linux-amd64/version KubeEdge edgecore is running, For logs visit: journalctl -u edgecore.service -b \u670d\u52a1\u7aef\u5237\u65b0\u9875\u9762\uff0c\u5c31\u6dfb\u52a0\u5b8c\u6210\u4e86 \u5176\u5b9e\u4e0a\u9762arch=$(uname -m)\u5f00\u5934\u7684\u547d\u4ee4\uff0c\u662f\u8fde\u63a5[cloudcore]\u670d\u52a1\uff0c\u5728\u9875\u9762\u4e2d\u67e5\u770bcloudcore\u662fnodeport\u7684\u5f62\u5f0f\u63d0\u4f9b\u7684\uff0c\u6620\u5c04\u90fd\u662f30000\u540e\u7684\u7aef\u53e3\u53f7\uff0c\u6240\u4ee5\u9700\u8981\u6539\u4e0b\uff0c\u800c kubeedge.cloudCore.cloudHub.advertiseAddress \u5219\u5e94\u8be5\u662fcloudcore\u670d\u52a1\u7684IP\u5730\u5740\uff0c\u4ed6\u4eec\u662f\u4e00\u4e2aIP\u5730\u5740\uff0call-in-one\u6a21\u5f0f\u4e0b\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u5982\u679c\u5728\u516c\u7f51\u4e0b\uff0ccloudcore\u5e94\u8be5\u662fSLB\u6216\u8005\u516c\u7f51\u5730\u5740\u624d\u884c \u8fb9\u7f18\u8282\u70b9\u91cd\u7f6e \u5982\u679c\u8be5\u8fb9\u7f18\u8282\u70b9\u9700\u8981\u91cd\u7f6e\uff0c\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\u3002 ./keadm reset yum remove mosquitto rm -rf /var/lib/kubeedge /var/lib/edged /etc/kubeedge/ca /etc/kubeedge/certs rm -rf /etc/systemd/system/edgecore.service \u5220\u9664\u8fb9\u7f18\u8282\u70b9 \u5728\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c \u662f\u9875\u9762\u4e0a\u7684\u8fb9\u7f18\u8282\u70b9\u7684\u540d\u5b57 kubectl delete node <edgenode-name>","title":"KubeSphere\u5b89\u88c5"},{"location":"KubeSphere/KubeSphere/#kubesphere","text":"https://kubesphere.com.cn/docs/quick-start/all-in-one-on-linux/ all in one\uff1a \u8bbe\u7f6e4\u6838\uff0c8G\u5185\u5b58\uff0c\u592a\u5c0f\u7684\u8bdd\uff0c\u6709\u7684\u670d\u52a1\u65e0\u6cd5\u542f\u52a8\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux \u4e3b\u673a\u540d KubeSphere\u7248\u672c IP centos7 3.1.1 192.168.70.130 [root@centos7 ~]# yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset [root@centos7 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@centos7 ~]# yum list docker-ce --showduplicates | sort -r [root@centos7 ~]# yum install docker-ce-20.10.6 [root@centos7 ~]# systemctl enable --now docker [root@centos7 ~]# export KKZONE=cn [root@centos7 ~]# curl -sfL https://get-kk.kubesphere.io | VERSION=v1.1.1 sh - [root@centos7 ~]# chmod +x kk [root@centos7 ~]#./kk create cluster --with-kubernetes v1.20.4 --with-kubesphere v3.1.1 \u7136\u540e\u4f1a\u63d0\u793a\u8ba9\u5b89\u88c5\u4f9d\u8d56\uff0c\u5ffd\u7565\u5c31\u53ef\u4ee5 \u8f93\u5165yes\uff0c\u7136\u540e\u5c31\u5b8c\u6210\u4e86\u5b89\u88c5 \u542f\u7528\u591a\u96c6\u7fa4\u7ba1\u7406\u529f\u80fd https://v3-1.docs.kubesphere.io/zh/docs/multicluster-management/enable-multicluster/direct-connection/ \u542f\u52a8\u5546\u5e97 https://v3-1.docs.kubesphere.io/zh/docs/pluggable-components/app-store/","title":"KubeSphere \u5355\u70b9\u5b89\u88c5"},{"location":"KubeSphere/KubeSphere/#_1","text":"\u5b98\u65b9\u6587\u6863 https://kubesphere.com.cn/docs/pluggable-components/kubeedge/#%E5%9C%A8%E5%AE%89%E8%A3%85%E5%90%8E%E5%90%AF%E7%94%A8-kubeedge \u6211\u662f\u5b89\u88c5\u540e\u542f\u7528 KubeEdge\uff0c\u5176\u4e2d\u6587\u7ae0\u4e2d \u201c\u5c06 kubeedge.cloudCore.cloudHub.advertiseAddress \u7684\u503c\u8bbe\u7f6e\u4e3a\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\u6216\u8fb9\u7f18\u8282\u70b9\u53ef\u4ee5\u8bbf\u95ee\u7684 IP \u5730\u5740\u201c \u63d0\u5230\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\uff0c\u56e0\u4e3a\u6211\u4f7f\u7528\u7684\u662fall in one\u6a21\u5f0f\uff0c\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u90a3\u4e48\u8fd9\u91cc\u6211\u586b\u5199\u7684\u5c31\u662f192.168.70.130 \u7136\u540e\u5728\u673a\u5668\u4e0a\u6267\u884c [root@centos7 ~] kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-install -o jsonpath='{.items[0].metadata.name}') -f \u7b49\u5f85\u914d\u7f6e\u66f4\u6539\u5b8c\u6210\uff0c\u51fa\u73b0\u4e0b\u9762\u8fd9\u4e2a\uff0c\u5c31\u8868\u793a\u53d8\u66f4\u5b8c\u6210 ##################################################### ### Welcome to KubeSphere! ### ##################################################### Console: http://192.168.70.130:30880 Account: admin Password: P@88w0rd NOTES\uff1a 1. After you log into the console, please check the monitoring status of service components in \"Cluster Management\". If any service is not ready, please wait patiently until all components are up and running. 2. Please change the default password after login. ##################################################### https://kubesphere.io 2021-09-01 10:35:12 ##################################################### \u5237\u65b0\u9875\u9762\uff0c\u8282\u70b9\u7ba1\u7406\u4e2d\uff0c\u51fa\u73b0\u8fb9\u7f18\u8282\u70b9","title":"\u542f\u7528\u8fb9\u7f18\u8282\u70b9\u529f\u80fd"},{"location":"KubeSphere/KubeSphere/#_2","text":"\u65b0\u5efa\u4e00\u53f0\u673a\u5668\uff0c\u6765\u5f53\u505a\u8fb9\u7f18\u8282\u70b9\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux\uff0c\u6211\u8bbe\u7f6e\u7684\u662f4G\uff0c\u53cc\u6838\u673a\u5668 \u4e3b\u673a\u540d IP edgenode 192.168.70.140 \u673a\u5668\u51c6\u5907\u5de5\u4f5c\uff0c\u5b89\u88c5\u4f9d\u8d56 [root@edgenode ~] yum install -y yum-utils device-mapper-persistent-data lvm2 wget [root@edgenode ~] yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@edgenode ~] yum makecache fast [root@edgenode ~] yum install docker-ce-19.03.15-3.el7 docker-ce-cli-19.03.15-3.el7 -y [root@edgenode ~] systemctl enable docker && systemctl restart docker [root@edgenode ~] vi /etc/nsswitch.conf //\u4fee\u6539\u8fd9\u884c hosts: dns files mdns4_minimal [NOTFOUND=return] [root@edgenode ~] echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf [root@edgenode ~] sysctl -p | grep ip_forward \u7136\u540e\u5c31\u53ef\u4ee5\u5728KubeSphere\u9875\u9762\u4e0a\uff0c\u8282\u70b9\u7ba1\u7406--\u300b\u8fb9\u7f18\u8282\u70b9--\u300b\u6dfb\u52a0\u8282\u70b9\uff0c\u8f93\u5165\u7ed9node\u7684\u540d\u5b57\uff0cnode\u7684IP\u5730\u5740\uff0c\u7136\u540e\u590d\u5236\u4e0b\u9762\u7684\u547d\u4ee4 \u4f46\u662f\u9700\u8981\u628a\u547d\u4ee4\u4e2d\u768410000,10001,10002,10004\u4f9d\u6b21\u66f4\u6362\u4e3a30000,30001,30002,30004 [root@edgenode ~]# arch=$(uname -m); curl -LO https://kubeedge.pek3b.qingstor.com/bin/v1.6.2/$arch/keadm-v1.6.2-linux-$arch.tar.gz && tar xvf keadm-v1.6.2-linux-$arch.tar.gz && chmod +x keadm && ./keadm join --kubeedge-version=1.6.2 --region=zh --cloudcore-ipport=192.168.70.130:30000 --quicport 30001 --certport 30002 --tunnelport 30004 --edgenode-name edge-1 --edgenode-ip 192.168.70.140 --token 41c74c8e8f86d03b8560eb5be566c62c33eeac1865cdf3a48ad554e9626ef34e.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzA1NTAwNDZ9.mmR51Ue8rduKViXYqEuQQFyNcYol_IHQIm0K53iOQdM --with-edge-taint % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 38.5M 100 38.5M 0 0 1061k 0 0:00:37 0:00:37 --:--:-- 1034k ./keadm install MQTT service successfully. kubeedge-v1.6.2-linux-amd64.tar.gz checksum: checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content: [Run as service] start to download service file for edgecore [Run as service] success to download service file for edgecore kubeedge-v1.6.2-linux-amd64/ kubeedge-v1.6.2-linux-amd64/edge/ kubeedge-v1.6.2-linux-amd64/edge/edgecore kubeedge-v1.6.2-linux-amd64/cloud/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/csidriver kubeedge-v1.6.2-linux-amd64/cloud/admission/ kubeedge-v1.6.2-linux-amd64/cloud/admission/admission kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/ kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/cloudcore kubeedge-v1.6.2-linux-amd64/version KubeEdge edgecore is running, For logs visit: journalctl -u edgecore.service -b \u670d\u52a1\u7aef\u5237\u65b0\u9875\u9762\uff0c\u5c31\u6dfb\u52a0\u5b8c\u6210\u4e86 \u5176\u5b9e\u4e0a\u9762arch=$(uname -m)\u5f00\u5934\u7684\u547d\u4ee4\uff0c\u662f\u8fde\u63a5[cloudcore]\u670d\u52a1\uff0c\u5728\u9875\u9762\u4e2d\u67e5\u770bcloudcore\u662fnodeport\u7684\u5f62\u5f0f\u63d0\u4f9b\u7684\uff0c\u6620\u5c04\u90fd\u662f30000\u540e\u7684\u7aef\u53e3\u53f7\uff0c\u6240\u4ee5\u9700\u8981\u6539\u4e0b\uff0c\u800c kubeedge.cloudCore.cloudHub.advertiseAddress \u5219\u5e94\u8be5\u662fcloudcore\u670d\u52a1\u7684IP\u5730\u5740\uff0c\u4ed6\u4eec\u662f\u4e00\u4e2aIP\u5730\u5740\uff0call-in-one\u6a21\u5f0f\u4e0b\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u5982\u679c\u5728\u516c\u7f51\u4e0b\uff0ccloudcore\u5e94\u8be5\u662fSLB\u6216\u8005\u516c\u7f51\u5730\u5740\u624d\u884c","title":"\u6dfb\u52a0\u8fb9\u7f18\u8282\u70b9"},{"location":"KubeSphere/KubeSphere/#_3","text":"\u5982\u679c\u8be5\u8fb9\u7f18\u8282\u70b9\u9700\u8981\u91cd\u7f6e\uff0c\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\u3002 ./keadm reset yum remove mosquitto rm -rf /var/lib/kubeedge /var/lib/edged /etc/kubeedge/ca /etc/kubeedge/certs rm -rf /etc/systemd/system/edgecore.service","title":"\u8fb9\u7f18\u8282\u70b9\u91cd\u7f6e"},{"location":"KubeSphere/KubeSphere/#_4","text":"\u5728\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c \u662f\u9875\u9762\u4e0a\u7684\u8fb9\u7f18\u8282\u70b9\u7684\u540d\u5b57 kubectl delete node <edgenode-name>","title":"\u5220\u9664\u8fb9\u7f18\u8282\u70b9"},{"location":"api/MkDoc/","text":"\u90e8\u7f72MkDocs \u6211\u7684\u73af\u5883\u662fwindows10 \uff0c\u5b89\u88c5\u597dPython\u3001Git\u3001Pip \u6709\u7684\u4eba\u4e0d\u4f1aPython\uff0c\u8fd9\u91cc\u5199\u4e0bPython\u73af\u5883\u53caPip\u7684\u5b89\u88c5\u3002Git\u81ea\u884c\u767e\u5ea6 1\u3001\u4e0b\u8f7dpython\u5b89\u88c5\u5305 \u3000\u3000\u5728python\u5b98\u7f51\u8fdb\u884c\u4e0b\u8f7dhttps://www.python.org/downloads/ \u6211\u8fd9\u91cc\u4e0b\u8f7d\u7684\u662f2.7.9\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u6700\u65b0\u7684\uff1a \u5b89\u88c5\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e0b\u4e00\u6b65...\u5c31\u884c\u3002 2\u3001\u6dfb\u52a0Python\u7684\u7cfb\u7edf\u8def\u5f84 \u3000\u3000\u5728\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u4e2d\u7684\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u91cc\u9762\u7684path\u4e2d\uff0c\u6dfb\u52a0\u4f60\u7684python\u7684\u5b89\u88c5\u8def\u5f84\u5373\u53ef\uff0c\u5982\u6211\u7684\u5b89\u88c5\u8def\u5f84\u5982\u4e0b\uff1a 3\u3001\u68c0\u9a8c\u5b89\u88c5\u662f\u5426\u6210\u529f \u3000\u3000\u5728\u63a7\u5236\u53f0\u8f93\u5165python\uff0c\u662f\u5426\u80fd\u8fdb\u5165\u547d\u4ee4\u884c \u3000 4\u3001\u5b89\u88c5pip \u3000\u3000pip\u662f\u4e00\u4e2a\u5b89\u88c5\u548c\u7ba1\u7406 Python \u5305\u7684\u5de5\u5177,\u540e\u9762\u5b89\u88c5\u8f6f\u4ef6\u7528pip\u5b89\u88c5\u7279\u522b\u65b9\u4fbf \u3000\u3000\uff081\uff09\u4e0b\u8f7dpip\u538b\u7f29\u5305 https://pypi.org/project/pip/20.3.4/#files \u3000\u3000\u3000\u3000\u3000 \u3000\u3000\uff082\uff09\u89e3\u538b\uff0c\u5728\u63a7\u5236\u53f0\u5207\u6362\u5230pip\u7684\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u7684\u8def\u5f84\u4e2d\u8f93\u5165\"python setup.py install\",setup.py\u5c31\u662f\u5b83\u7684\u5b89\u88c5\u6587\u4ef6 \u3000\u3000 \u3000\u3000\uff083)\u6dfb\u52a0pip\u7684\u73af\u5883\u53d8\u91cf\uff0cpip\u4f1a\u88ab\u5b89\u88c5\u5728\u4f60python\u5b89\u88c5\u8def\u5f84\u4e2d\u7684Scripts\u6587\u4ef6\u5939\u4e2d \uff084)\u68c0\u9a8cpip\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u63a7\u5236\u53f0\u8f93\u5165\"pip\",\u7531\u5982\u4e0b\u8f93\u51fa\u5219\u5b89\u88c5\u6210\u529f \u5982\u679c\u5b89\u88c5\u5b8c PIP\u51fa\u73b0\u8fd9\u4e2a $-> pip Traceback (most recent call last): File \"/home/work/.jumbo/bin/pip\", line 9, in <module> load_entry_point('pip==21.1.1', 'console_scripts', 'pip')() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 552, in load_entry_point return get_distribution(dist).load_entry_point(group, name) File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2672, in load_entry_point return ep.load() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2345, in load return self.resolve() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2351, in resolve module = __import__(self.module_name, fromlist=['__name__'], level=0) File \"/home/work/.jumbo/lib/python2.7/site-packages/pip/__init__.py\", line 1, in <module> from typing import List, Optional ImportError: No module named typing \u89e3\u51b3\u65b9\u6848\uff1a > curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py > python get-pip.py > python -m pip install --upgrade \"pip < 21.0\" 5\u3001pip\u5b89\u88c5wheel \u63a7\u5236\u53f0\u8f93\u5165\uff1a pip install wheel -i https://pypi.tuna.tsinghua.edu.cn/simple Python\u53capip\u5b89\u88c5\u5b8c\u6210 cmd\u4e0b\u8f93\u5165 pip install mkdocs -i https://pypi.tuna.tsinghua.edu.cn/simple \u5728github\u4e0a\u5efa\u7acb\u7a7a\u7684\u516c\u5f00git\u5e93\uff0c\u5e76\u514b\u9686\u5230\u672c\u5730 \u4ee5\u6211\u7684\u4e3a\u4f8b D:\\git>git clone https://github.com/yinzhipeng123/markdown_log.git D:\\git>cd markdown_log D:\\git\\markdown_log>mkdocs new . INFO - Writing config file: .\\mkdocs.yml INFO - Writing initial docs: .\\docs\\index.md D:\\git\\markdown_log>mkdocs serve mkdocs serve\u4f1a\u628amakedown\u6587\u4ef6\u4ee5\u9759\u6001\u9875\u9762\u7684\u5f62\u5f0f\u5c55\u793a\u5230127.0.0.1:8000\uff0c\u53ef\u4ee5\u66f4\u6539docs\u4e0b\u7684md\u6587\u4ef6\u8fdb\u884c\u5b9e\u65f6\u66f4\u65b0 \u4fee\u6539mkdocs.yml\u4f1a\u5bf9\u7f51\u7ad9\u4e00\u4e9b\u9875\u9762\u8fdb\u884c\u8bbe\u7f6e \u4ee5\u4e0a\u8be6\u7ec6\u53c2\u8003https://www.mkdocs.org/getting-started/ \u6709\u4e2a\u9879\u76ee\u5b8c\u5168\u7528\u7684mkdocs\u8fdb\u884cAPI\u53d1\u5e03\uff0c\u9875\u9762\u5730\u5740https://siddhi-io.github.io/siddhi/ \u8be5\u9879\u76eeyml\u6587\u4ef6\u914d\u7f6ehttps://github.com/siddhi-io/siddhi/blob/master/mkdocs.yml \u53ef\u4ee5\u53c2\u8003\u5176\u914d\u7f6e GitHub Pages\u53d1\u5e03 D:\\git\\markdown_log>mkdocs build WARNING - Config value: 'pages'. Warning: The 'pages' configuration option has been deprecated and will be removed in a future release of MkDocs. Use 'nav' instead. INFO - Cleaning site directory INFO - Building documentation to directory: D:\\git\\markdown_log\\site \u7136\u540e\u526a\u5207site\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230D:\\git\\markdown_log\u4e0b \u8fd9\u91cc\u6211\u505a\u4e86\u4e2a\u811a\u672c clear_code.sh #!/usr/bin/env bash shopt -s extglob rm -rf !(mkdocs.yml|README.md|docs|site|.git|clear_code.sh) mkdocs build mv site/* ./ windows\u5b89\u88c5git\u540e\uff0c\u8fd9\u4e2a\u811a\u672c\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\uff0c\u53cc\u51fb\u5c31\u80fd\u6267\u884c\uff0c\u811a\u672c\u89e3\u91ca\uff1a\u5220\u9664\u4e0a\u6b21\u6784\u5efa\uff0c\u7136\u540e\u6784\u5efa\uff0c\u79fb\u52a8\u76ee\u5f55 \u7136\u540egit\u4e0a\u4f20\u4e0a\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main \u7136\u540e\u5728git\u5e93\u7684\u9875\u9762\u8fd9\u6837\u8bbe\u7f6e \u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\u4e86 \u7f8e\u5316MkDocs cmd\u4e2d\u6267\u884cpip pip install mkdocs-windmill \u4fee\u6539mkdocs.yml\uff0c\u6dfb\u52a0\u884ctheme: windmill\uff0c\u4f7f\u7528nav site_name: markdown_log site_url: https://yinzhipeng123.github.io/markdown_log/ nav: - MkDocs: index.md - \u6587\u7ae0\u5217\u8868: - MkDocs: api/MkDoc.md theme: windmill cmd\u4e2d\u542f\u52a8 mkdocs serve 127.0.0.1:8000\u9884\u89c8\u4e4b\u540e\u3002\u5c31\u53cc\u51fb\u6267\u884cclear_code.sh\u8fdb\u884c\u6784\u5efa\uff0c\u7136\u540egit\u56de\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main \u4e3a\u4ec0\u4e48\u8981\u5199\u535a\u5ba2 \u5f53\u6211\u8981\u56de\u7b54\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u9700\u8981\u786e\u5b9a\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6240\u6d89\u53ca\u5230\u7684\u6280\u672f\u90fd\u4e86\u7136\u4e8e\u5fc3\uff0c\u4e0d\u7136\u5199\u51fa\u6765\u7684\u4e1c\u897f\u5982\u679c\u662f\u9519\u7684\u8bdd\uff0c\u59d1\u4e14\u4e0d\u8bf4\u4e22\u4e0d\u4e22\u4eba\uff0c\u6700\u91cd\u8981\u7684\u662f\u8fd9\u6837\u4f1a\u8bef\u4eba\u5b50\u5f1f\u3002\u6240\u4ee5\u5982\u679c\u770b\u5230\u4e00\u4e2a\u95ee\u9898\u6211\u5e76\u4e0d\u662f\u975e\u5e38\u4e86\u89e3\uff0c\u6211\u4e0d\u4f1a\u7b2c\u4e00\u65f6\u95f4\u5c31\u53bb\u56de\u7b54\uff0c\u800c\u662f\u81ea\u5df1\u53bb\u7814\u7a76\u4e00\u8f6e\uff0c\u7814\u7a76\u900f\u5f7b\u4e86\uff0c\u518d\u53bb\u56de\u7b54\u95ee\u9898\u3002\u5728\u8fd9\u4e48\u4e00\u4e2a\u8fc7\u7a0b\u5f53\u4e2d\uff0c \u6211\u53c8\u5de9\u56fa\u4e86\u4ee5\u524d\u7684\u77e5\u8bc6\uff0c\u5e76\u5b66\u4e60\u5230\u4e86\u65b0\u7684\u77e5\u8bc6\uff0c\u987a\u5e26\u8fd8\u5e2e\u52a9\u5230\u63d0\u51fa\u95ee\u9898\u7684\u4eba\uff0c\u8fd9\u662f\u53cc\u8d62\u7684\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a \uff1f \u53e6\u5916\uff0c \u591a\u5199\u4e1c\u897f\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4f60\u7684\u8868\u8fbe\u80fd\u529b \u3002 \u8fd9\u6bb5\u8f6c\u81ea\u77e5\u4e4e \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/39212891/answer/80685372","title":"MkDocs"},{"location":"api/MkDoc/#mkdocs","text":"\u6211\u7684\u73af\u5883\u662fwindows10 \uff0c\u5b89\u88c5\u597dPython\u3001Git\u3001Pip \u6709\u7684\u4eba\u4e0d\u4f1aPython\uff0c\u8fd9\u91cc\u5199\u4e0bPython\u73af\u5883\u53caPip\u7684\u5b89\u88c5\u3002Git\u81ea\u884c\u767e\u5ea6 1\u3001\u4e0b\u8f7dpython\u5b89\u88c5\u5305 \u3000\u3000\u5728python\u5b98\u7f51\u8fdb\u884c\u4e0b\u8f7dhttps://www.python.org/downloads/ \u6211\u8fd9\u91cc\u4e0b\u8f7d\u7684\u662f2.7.9\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u6700\u65b0\u7684\uff1a \u5b89\u88c5\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e0b\u4e00\u6b65...\u5c31\u884c\u3002 2\u3001\u6dfb\u52a0Python\u7684\u7cfb\u7edf\u8def\u5f84 \u3000\u3000\u5728\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u4e2d\u7684\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u91cc\u9762\u7684path\u4e2d\uff0c\u6dfb\u52a0\u4f60\u7684python\u7684\u5b89\u88c5\u8def\u5f84\u5373\u53ef\uff0c\u5982\u6211\u7684\u5b89\u88c5\u8def\u5f84\u5982\u4e0b\uff1a 3\u3001\u68c0\u9a8c\u5b89\u88c5\u662f\u5426\u6210\u529f \u3000\u3000\u5728\u63a7\u5236\u53f0\u8f93\u5165python\uff0c\u662f\u5426\u80fd\u8fdb\u5165\u547d\u4ee4\u884c \u3000 4\u3001\u5b89\u88c5pip \u3000\u3000pip\u662f\u4e00\u4e2a\u5b89\u88c5\u548c\u7ba1\u7406 Python \u5305\u7684\u5de5\u5177,\u540e\u9762\u5b89\u88c5\u8f6f\u4ef6\u7528pip\u5b89\u88c5\u7279\u522b\u65b9\u4fbf \u3000\u3000\uff081\uff09\u4e0b\u8f7dpip\u538b\u7f29\u5305 https://pypi.org/project/pip/20.3.4/#files \u3000\u3000\u3000\u3000\u3000 \u3000\u3000\uff082\uff09\u89e3\u538b\uff0c\u5728\u63a7\u5236\u53f0\u5207\u6362\u5230pip\u7684\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u7684\u8def\u5f84\u4e2d\u8f93\u5165\"python setup.py install\",setup.py\u5c31\u662f\u5b83\u7684\u5b89\u88c5\u6587\u4ef6 \u3000\u3000 \u3000\u3000\uff083)\u6dfb\u52a0pip\u7684\u73af\u5883\u53d8\u91cf\uff0cpip\u4f1a\u88ab\u5b89\u88c5\u5728\u4f60python\u5b89\u88c5\u8def\u5f84\u4e2d\u7684Scripts\u6587\u4ef6\u5939\u4e2d \uff084)\u68c0\u9a8cpip\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u63a7\u5236\u53f0\u8f93\u5165\"pip\",\u7531\u5982\u4e0b\u8f93\u51fa\u5219\u5b89\u88c5\u6210\u529f \u5982\u679c\u5b89\u88c5\u5b8c PIP\u51fa\u73b0\u8fd9\u4e2a $-> pip Traceback (most recent call last): File \"/home/work/.jumbo/bin/pip\", line 9, in <module> load_entry_point('pip==21.1.1', 'console_scripts', 'pip')() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 552, in load_entry_point return get_distribution(dist).load_entry_point(group, name) File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2672, in load_entry_point return ep.load() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2345, in load return self.resolve() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2351, in resolve module = __import__(self.module_name, fromlist=['__name__'], level=0) File \"/home/work/.jumbo/lib/python2.7/site-packages/pip/__init__.py\", line 1, in <module> from typing import List, Optional ImportError: No module named typing \u89e3\u51b3\u65b9\u6848\uff1a > curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py > python get-pip.py > python -m pip install --upgrade \"pip < 21.0\" 5\u3001pip\u5b89\u88c5wheel \u63a7\u5236\u53f0\u8f93\u5165\uff1a pip install wheel -i https://pypi.tuna.tsinghua.edu.cn/simple Python\u53capip\u5b89\u88c5\u5b8c\u6210 cmd\u4e0b\u8f93\u5165 pip install mkdocs -i https://pypi.tuna.tsinghua.edu.cn/simple \u5728github\u4e0a\u5efa\u7acb\u7a7a\u7684\u516c\u5f00git\u5e93\uff0c\u5e76\u514b\u9686\u5230\u672c\u5730 \u4ee5\u6211\u7684\u4e3a\u4f8b D:\\git>git clone https://github.com/yinzhipeng123/markdown_log.git D:\\git>cd markdown_log D:\\git\\markdown_log>mkdocs new . INFO - Writing config file: .\\mkdocs.yml INFO - Writing initial docs: .\\docs\\index.md D:\\git\\markdown_log>mkdocs serve mkdocs serve\u4f1a\u628amakedown\u6587\u4ef6\u4ee5\u9759\u6001\u9875\u9762\u7684\u5f62\u5f0f\u5c55\u793a\u5230127.0.0.1:8000\uff0c\u53ef\u4ee5\u66f4\u6539docs\u4e0b\u7684md\u6587\u4ef6\u8fdb\u884c\u5b9e\u65f6\u66f4\u65b0 \u4fee\u6539mkdocs.yml\u4f1a\u5bf9\u7f51\u7ad9\u4e00\u4e9b\u9875\u9762\u8fdb\u884c\u8bbe\u7f6e \u4ee5\u4e0a\u8be6\u7ec6\u53c2\u8003https://www.mkdocs.org/getting-started/ \u6709\u4e2a\u9879\u76ee\u5b8c\u5168\u7528\u7684mkdocs\u8fdb\u884cAPI\u53d1\u5e03\uff0c\u9875\u9762\u5730\u5740https://siddhi-io.github.io/siddhi/ \u8be5\u9879\u76eeyml\u6587\u4ef6\u914d\u7f6ehttps://github.com/siddhi-io/siddhi/blob/master/mkdocs.yml \u53ef\u4ee5\u53c2\u8003\u5176\u914d\u7f6e","title":"\u90e8\u7f72MkDocs"},{"location":"api/MkDoc/#github-pages","text":"D:\\git\\markdown_log>mkdocs build WARNING - Config value: 'pages'. Warning: The 'pages' configuration option has been deprecated and will be removed in a future release of MkDocs. Use 'nav' instead. INFO - Cleaning site directory INFO - Building documentation to directory: D:\\git\\markdown_log\\site \u7136\u540e\u526a\u5207site\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230D:\\git\\markdown_log\u4e0b \u8fd9\u91cc\u6211\u505a\u4e86\u4e2a\u811a\u672c clear_code.sh #!/usr/bin/env bash shopt -s extglob rm -rf !(mkdocs.yml|README.md|docs|site|.git|clear_code.sh) mkdocs build mv site/* ./ windows\u5b89\u88c5git\u540e\uff0c\u8fd9\u4e2a\u811a\u672c\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\uff0c\u53cc\u51fb\u5c31\u80fd\u6267\u884c\uff0c\u811a\u672c\u89e3\u91ca\uff1a\u5220\u9664\u4e0a\u6b21\u6784\u5efa\uff0c\u7136\u540e\u6784\u5efa\uff0c\u79fb\u52a8\u76ee\u5f55 \u7136\u540egit\u4e0a\u4f20\u4e0a\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main \u7136\u540e\u5728git\u5e93\u7684\u9875\u9762\u8fd9\u6837\u8bbe\u7f6e \u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\u4e86","title":"GitHub Pages\u53d1\u5e03"},{"location":"api/MkDoc/#mkdocs_1","text":"cmd\u4e2d\u6267\u884cpip pip install mkdocs-windmill \u4fee\u6539mkdocs.yml\uff0c\u6dfb\u52a0\u884ctheme: windmill\uff0c\u4f7f\u7528nav site_name: markdown_log site_url: https://yinzhipeng123.github.io/markdown_log/ nav: - MkDocs: index.md - \u6587\u7ae0\u5217\u8868: - MkDocs: api/MkDoc.md theme: windmill cmd\u4e2d\u542f\u52a8 mkdocs serve 127.0.0.1:8000\u9884\u89c8\u4e4b\u540e\u3002\u5c31\u53cc\u51fb\u6267\u884cclear_code.sh\u8fdb\u884c\u6784\u5efa\uff0c\u7136\u540egit\u56de\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main","title":"\u7f8e\u5316MkDocs"},{"location":"api/MkDoc/#_1","text":"\u5f53\u6211\u8981\u56de\u7b54\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u9700\u8981\u786e\u5b9a\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6240\u6d89\u53ca\u5230\u7684\u6280\u672f\u90fd\u4e86\u7136\u4e8e\u5fc3\uff0c\u4e0d\u7136\u5199\u51fa\u6765\u7684\u4e1c\u897f\u5982\u679c\u662f\u9519\u7684\u8bdd\uff0c\u59d1\u4e14\u4e0d\u8bf4\u4e22\u4e0d\u4e22\u4eba\uff0c\u6700\u91cd\u8981\u7684\u662f\u8fd9\u6837\u4f1a\u8bef\u4eba\u5b50\u5f1f\u3002\u6240\u4ee5\u5982\u679c\u770b\u5230\u4e00\u4e2a\u95ee\u9898\u6211\u5e76\u4e0d\u662f\u975e\u5e38\u4e86\u89e3\uff0c\u6211\u4e0d\u4f1a\u7b2c\u4e00\u65f6\u95f4\u5c31\u53bb\u56de\u7b54\uff0c\u800c\u662f\u81ea\u5df1\u53bb\u7814\u7a76\u4e00\u8f6e\uff0c\u7814\u7a76\u900f\u5f7b\u4e86\uff0c\u518d\u53bb\u56de\u7b54\u95ee\u9898\u3002\u5728\u8fd9\u4e48\u4e00\u4e2a\u8fc7\u7a0b\u5f53\u4e2d\uff0c \u6211\u53c8\u5de9\u56fa\u4e86\u4ee5\u524d\u7684\u77e5\u8bc6\uff0c\u5e76\u5b66\u4e60\u5230\u4e86\u65b0\u7684\u77e5\u8bc6\uff0c\u987a\u5e26\u8fd8\u5e2e\u52a9\u5230\u63d0\u51fa\u95ee\u9898\u7684\u4eba\uff0c\u8fd9\u662f\u53cc\u8d62\u7684\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a \uff1f \u53e6\u5916\uff0c \u591a\u5199\u4e1c\u897f\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4f60\u7684\u8868\u8fbe\u80fd\u529b \u3002 \u8fd9\u6bb5\u8f6c\u81ea\u77e5\u4e4e \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/39212891/answer/80685372","title":"\u4e3a\u4ec0\u4e48\u8981\u5199\u535a\u5ba2"},{"location":"etcd/etcd/","text":"Etcd \u5355\u673a\u90e8\u7f72 \u670d\u52a1\u7aef \u4e3b\u673a\u540d etcd\u7248\u672c IP\u5730\u5740 etcd v3.4.13 192.168.70.132 \u4e0b\u8f7d\u5730\u5740: https://github.com/etcd-io/etcd/releases/tag/v3.4.13 [root@etcd ~]# tar -zxvf etcd-v3.4.13-linux-amd64.tar.gz [root@centos7 ~]# cd etcd-v3.4.13-linux-amd64 [root@centos7 etcd-v3.4.13-linux-amd64]# nohup ./etcd --advertise-client-urls 'http://0.0.0.0:2379' --listen-client-urls 'http://0.0.0.0:2379' --enable-v2 > etcd.log 2>&1 & --advertise-client-urls --listen-client-urls \u8fd9\u4e24\u4e2a0.0.0.0\u5f00\u5934\u662f\u4e3a\u4e86\u6d4f\u89c8\u5668\u4e5f\u80fd\u8bbf\u95ee\uff0c\u9ed8\u8ba4\u53ea\u80fd\u8bbf\u95ee127.0.0.1 --enable-v2 \u5f00\u542fV2\u7684API \u56e0\u4e3a\u662f\u5355\u673a\u96c6\u7fa4\uff0c\u6240\u4ee5\u5c31\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\u5373\u53ef [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --version etcd Version: 3.4.13 Git SHA: ae9734ed2 Go Version: go1.12.17 Go OS/Arch: linux/amd64 [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --help Usage: etcd [flags] Start an etcd server. etcd --version Show the version of etcd. etcd -h | --help Show the help information about etcd. etcd --config-file Path to the server configuration file. Note that if a configuration file is provided, other command line flags and environment variables will be ignored. etcd gateway Run the stateless pass-through etcd TCP connection forwarding proxy. etcd grpc-proxy Run the stateless etcd v3 gRPC L7 reverse proxy. Member: --name 'default' Human-readable name for this member. --data-dir '${name}.etcd' Path to the data directory. --wal-dir '' Path to the dedicated wal directory. --snapshot-count '100000' Number of committed transactions to trigger a snapshot to disk. --heartbeat-interval '100' Time (in milliseconds) of a heartbeat interval. --election-timeout '1000' Time (in milliseconds) for an election to timeout. See tuning documentation for details. --initial-election-tick-advance 'true' Whether to fast-forward initial election ticks on boot for faster election. --listen-peer-urls 'http://localhost:2380' List of URLs to listen on for peer traffic. --listen-client-urls 'http://localhost:2379' List of URLs to listen on for client traffic. --max-snapshots '5' Maximum number of snapshot files to retain (0 is unlimited). --max-wals '5' Maximum number of wal files to retain (0 is unlimited). --quota-backend-bytes '0' Raise alarms when backend size exceeds the given quota (0 defaults to low space quota). --backend-batch-interval '' BackendBatchInterval is the maximum time before commit the backend transaction. --backend-batch-limit '0' BackendBatchLimit is the maximum operations before commit the backend transaction. --max-txn-ops '128' Maximum number of operations permitted in a transaction. --max-request-bytes '1572864' Maximum client request size in bytes the server will accept. --grpc-keepalive-min-time '5s' Minimum duration interval that a client should wait before pinging server. --grpc-keepalive-interval '2h' Frequency duration of server-to-client ping to check if a connection is alive (0 to disable). --grpc-keepalive-timeout '20s' Additional duration of wait before closing a non-responsive connection (0 to disable). Clustering: --initial-advertise-peer-urls 'http://localhost:2380' List of this member's peer URLs to advertise to the rest of the cluster. --initial-cluster 'default=http://localhost:2380' Initial cluster configuration for bootstrapping. --initial-cluster-state 'new' Initial cluster state ('new' or 'existing'). --initial-cluster-token 'etcd-cluster' Initial cluster token for the etcd cluster during bootstrap. Specifying this can protect you from unintended cross-cluster interaction when running multiple clusters. --advertise-client-urls 'http://localhost:2379' List of this member's client URLs to advertise to the public. The client URLs advertised should be accessible to machines that talk to etcd cluster. etcd client libraries parse these URLs to connect to the cluster. --discovery '' Discovery URL used to bootstrap the cluster. --discovery-fallback 'proxy' Expected behavior ('exit' or 'proxy') when discovery services fails. \"proxy\" supports v2 API only. --discovery-proxy '' HTTP proxy to use for traffic to discovery service. --discovery-srv '' DNS srv domain used to bootstrap the cluster. --discovery-srv-name '' Suffix to the dns srv name queried when bootstrapping. --strict-reconfig-check 'true' Reject reconfiguration requests that would cause quorum loss. --pre-vote 'false' Enable to run an additional Raft election phase. --auto-compaction-retention '0' Auto compaction retention length. 0 means disable auto compaction. --auto-compaction-mode 'periodic' Interpret 'auto-compaction-retention' one of: periodic|revision. 'periodic' for duration based retention, defaulting to hours if no time unit is provided (e.g. '5m'). 'revision' for revision number based retention. --enable-v2 'false' Accept etcd V2 client requests. Security: --cert-file '' Path to the client server TLS cert file. --key-file '' Path to the client server TLS key file. --client-cert-auth 'false' Enable client cert authentication. --client-crl-file '' Path to the client certificate revocation list file. --client-cert-allowed-hostname '' Allowed TLS hostname for client cert authentication. --trusted-ca-file '' Path to the client server TLS trusted CA cert file. --auto-tls 'false' Client TLS using generated certificates. --peer-cert-file '' Path to the peer server TLS cert file. --peer-key-file '' Path to the peer server TLS key file. --peer-client-cert-auth 'false' Enable peer client cert authentication. --peer-trusted-ca-file '' Path to the peer server TLS trusted CA file. --peer-cert-allowed-cn '' Required CN for client certs connecting to the peer endpoint. --peer-cert-allowed-hostname '' Allowed TLS hostname for inter peer authentication. --peer-auto-tls 'false' Peer TLS using self-generated certificates if --peer-key-file and --peer-cert-file are not provided. --peer-crl-file '' Path to the peer certificate revocation list file. --cipher-suites '' Comma-separated list of supported TLS cipher suites between client/server and peers (empty will be auto-populated by Go). --cors '*' Comma-separated whitelist of origins for CORS, or cross-origin resource sharing, (empty or * means allow all). --host-whitelist '*' Acceptable hostnames from HTTP client requests, if server is not secure (empty or * means allow all). Auth: --auth-token 'simple' Specify a v3 authentication token type and its options ('simple' or 'jwt'). --bcrypt-cost 10 Specify the cost / strength of the bcrypt algorithm for hashing auth passwords. Valid values are between 4 and 31. --auth-token-ttl 300 Time (in seconds) of the auth-token-ttl. Profiling and Monitoring: --enable-pprof 'false' Enable runtime profiling data via HTTP server. Address is at client URL + \"/debug/pprof/\" --metrics 'basic' Set level of detail for exported metrics, specify 'extensive' to include histogram metrics. --listen-metrics-urls '' List of URLs to listen on for the metrics and health endpoints. Logging: --logger 'capnslog' Specify 'zap' for structured logging or 'capnslog'. [WARN] 'capnslog' will be deprecated in v3.5. --log-outputs 'default' Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd, or list of comma separated output targets. --log-level 'info' Configures log level. Only supports debug, info, warn, error, panic, or fatal. v2 Proxy (to be deprecated in v4): --proxy 'off' Proxy mode setting ('off', 'readonly' or 'on'). --proxy-failure-wait 5000 Time (in milliseconds) an endpoint will be held in a failed state. --proxy-refresh-interval 30000 Time (in milliseconds) of the endpoints refresh interval. --proxy-dial-timeout 1000 Time (in milliseconds) for a dial to timeout. --proxy-write-timeout 5000 Time (in milliseconds) for a write to timeout. --proxy-read-timeout 0 Time (in milliseconds) for a read to timeout. Experimental feature: --experimental-initial-corrupt-check 'false' Enable to check data corruption before serving any client/peer traffic. --experimental-corrupt-check-time '0s' Duration of time between cluster corruption check passes. --experimental-enable-v2v3 '' Serve v2 requests through the v3 backend under a given prefix. --experimental-backend-bbolt-freelist-type 'array' ExperimentalBackendFreelistType specifies the type of freelist that boltdb backend uses(array and map are supported types). --experimental-enable-lease-checkpoint 'false' ExperimentalEnableLeaseCheckpoint enables primary lessor to persist lease remainingTTL to prevent indefinite auto-renewal of long lived leases. --experimental-compaction-batch-limit 1000 ExperimentalCompactionBatchLimit sets the maximum revisions deleted in each compaction batch. --experimental-peer-skip-client-san-verification 'false' Skip verification of SAN field in client certificate for peer connections. --experimental-watch-progress-notify-interval '10m' Duration of periodical watch progress notification. Unsafe feature: --force-new-cluster 'false' Force to create a new one-member cluster. CAUTIOUS with unsafe flag! It may break the guarantees given by the consensus protocol! TO BE DEPRECATED: --debug 'false' Enable debug-level logging for etcd. [WARN] Will be deprecated in v3.5. Use '--log-level=debug' instead. --log-package-levels '' Specify a particular log level for each etcd package (eg: 'etcdmain=CRITICAL,etcdserver=DEBUG'). yum\u5b89\u88c5\u65b9\u6cd5 [root@etcd ~]# yum install -y etcd [root@etcd ~]# systemctl start etcd API\u63a5\u53e3 https://github.com/etcd-io/etcd/blob/6acb3d67fbe131b3b2d5d010e00ec80182be4628/Documentation/v2/api.md \u67e5\u770b\u6240\u6709\u503c\u7684API\u63a5\u53e3 curl http://127.0.0.1:2379/v2/keys {\"action\":\"get\",\"node\":{\"dir\":true}} lucas - \u7528\u4e8e kubernetes etcd3.0 + \u96c6\u7fa4\u7684\u57fa\u4e8e Web \u7684\u952e\u503c\u67e5\u770b\u5668\u3002 etcd-manager - \u73b0\u4ee3\u3001\u9ad8\u6548\u3001\u591a\u5e73\u53f0\u548c\u514d\u8d39\u7684 etcd 3.x GUI \u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002\u9002\u7528\u4e8e Windows\u3001Linux \u548c Mac\u3002","title":"etcd\u90e8\u7f72"},{"location":"etcd/etcd/#etcd","text":"","title":"Etcd"},{"location":"etcd/etcd/#_1","text":"\u670d\u52a1\u7aef \u4e3b\u673a\u540d etcd\u7248\u672c IP\u5730\u5740 etcd v3.4.13 192.168.70.132 \u4e0b\u8f7d\u5730\u5740: https://github.com/etcd-io/etcd/releases/tag/v3.4.13 [root@etcd ~]# tar -zxvf etcd-v3.4.13-linux-amd64.tar.gz [root@centos7 ~]# cd etcd-v3.4.13-linux-amd64 [root@centos7 etcd-v3.4.13-linux-amd64]# nohup ./etcd --advertise-client-urls 'http://0.0.0.0:2379' --listen-client-urls 'http://0.0.0.0:2379' --enable-v2 > etcd.log 2>&1 & --advertise-client-urls --listen-client-urls \u8fd9\u4e24\u4e2a0.0.0.0\u5f00\u5934\u662f\u4e3a\u4e86\u6d4f\u89c8\u5668\u4e5f\u80fd\u8bbf\u95ee\uff0c\u9ed8\u8ba4\u53ea\u80fd\u8bbf\u95ee127.0.0.1 --enable-v2 \u5f00\u542fV2\u7684API \u56e0\u4e3a\u662f\u5355\u673a\u96c6\u7fa4\uff0c\u6240\u4ee5\u5c31\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\u5373\u53ef [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --version etcd Version: 3.4.13 Git SHA: ae9734ed2 Go Version: go1.12.17 Go OS/Arch: linux/amd64 [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --help Usage: etcd [flags] Start an etcd server. etcd --version Show the version of etcd. etcd -h | --help Show the help information about etcd. etcd --config-file Path to the server configuration file. Note that if a configuration file is provided, other command line flags and environment variables will be ignored. etcd gateway Run the stateless pass-through etcd TCP connection forwarding proxy. etcd grpc-proxy Run the stateless etcd v3 gRPC L7 reverse proxy. Member: --name 'default' Human-readable name for this member. --data-dir '${name}.etcd' Path to the data directory. --wal-dir '' Path to the dedicated wal directory. --snapshot-count '100000' Number of committed transactions to trigger a snapshot to disk. --heartbeat-interval '100' Time (in milliseconds) of a heartbeat interval. --election-timeout '1000' Time (in milliseconds) for an election to timeout. See tuning documentation for details. --initial-election-tick-advance 'true' Whether to fast-forward initial election ticks on boot for faster election. --listen-peer-urls 'http://localhost:2380' List of URLs to listen on for peer traffic. --listen-client-urls 'http://localhost:2379' List of URLs to listen on for client traffic. --max-snapshots '5' Maximum number of snapshot files to retain (0 is unlimited). --max-wals '5' Maximum number of wal files to retain (0 is unlimited). --quota-backend-bytes '0' Raise alarms when backend size exceeds the given quota (0 defaults to low space quota). --backend-batch-interval '' BackendBatchInterval is the maximum time before commit the backend transaction. --backend-batch-limit '0' BackendBatchLimit is the maximum operations before commit the backend transaction. --max-txn-ops '128' Maximum number of operations permitted in a transaction. --max-request-bytes '1572864' Maximum client request size in bytes the server will accept. --grpc-keepalive-min-time '5s' Minimum duration interval that a client should wait before pinging server. --grpc-keepalive-interval '2h' Frequency duration of server-to-client ping to check if a connection is alive (0 to disable). --grpc-keepalive-timeout '20s' Additional duration of wait before closing a non-responsive connection (0 to disable). Clustering: --initial-advertise-peer-urls 'http://localhost:2380' List of this member's peer URLs to advertise to the rest of the cluster. --initial-cluster 'default=http://localhost:2380' Initial cluster configuration for bootstrapping. --initial-cluster-state 'new' Initial cluster state ('new' or 'existing'). --initial-cluster-token 'etcd-cluster' Initial cluster token for the etcd cluster during bootstrap. Specifying this can protect you from unintended cross-cluster interaction when running multiple clusters. --advertise-client-urls 'http://localhost:2379' List of this member's client URLs to advertise to the public. The client URLs advertised should be accessible to machines that talk to etcd cluster. etcd client libraries parse these URLs to connect to the cluster. --discovery '' Discovery URL used to bootstrap the cluster. --discovery-fallback 'proxy' Expected behavior ('exit' or 'proxy') when discovery services fails. \"proxy\" supports v2 API only. --discovery-proxy '' HTTP proxy to use for traffic to discovery service. --discovery-srv '' DNS srv domain used to bootstrap the cluster. --discovery-srv-name '' Suffix to the dns srv name queried when bootstrapping. --strict-reconfig-check 'true' Reject reconfiguration requests that would cause quorum loss. --pre-vote 'false' Enable to run an additional Raft election phase. --auto-compaction-retention '0' Auto compaction retention length. 0 means disable auto compaction. --auto-compaction-mode 'periodic' Interpret 'auto-compaction-retention' one of: periodic|revision. 'periodic' for duration based retention, defaulting to hours if no time unit is provided (e.g. '5m'). 'revision' for revision number based retention. --enable-v2 'false' Accept etcd V2 client requests. Security: --cert-file '' Path to the client server TLS cert file. --key-file '' Path to the client server TLS key file. --client-cert-auth 'false' Enable client cert authentication. --client-crl-file '' Path to the client certificate revocation list file. --client-cert-allowed-hostname '' Allowed TLS hostname for client cert authentication. --trusted-ca-file '' Path to the client server TLS trusted CA cert file. --auto-tls 'false' Client TLS using generated certificates. --peer-cert-file '' Path to the peer server TLS cert file. --peer-key-file '' Path to the peer server TLS key file. --peer-client-cert-auth 'false' Enable peer client cert authentication. --peer-trusted-ca-file '' Path to the peer server TLS trusted CA file. --peer-cert-allowed-cn '' Required CN for client certs connecting to the peer endpoint. --peer-cert-allowed-hostname '' Allowed TLS hostname for inter peer authentication. --peer-auto-tls 'false' Peer TLS using self-generated certificates if --peer-key-file and --peer-cert-file are not provided. --peer-crl-file '' Path to the peer certificate revocation list file. --cipher-suites '' Comma-separated list of supported TLS cipher suites between client/server and peers (empty will be auto-populated by Go). --cors '*' Comma-separated whitelist of origins for CORS, or cross-origin resource sharing, (empty or * means allow all). --host-whitelist '*' Acceptable hostnames from HTTP client requests, if server is not secure (empty or * means allow all). Auth: --auth-token 'simple' Specify a v3 authentication token type and its options ('simple' or 'jwt'). --bcrypt-cost 10 Specify the cost / strength of the bcrypt algorithm for hashing auth passwords. Valid values are between 4 and 31. --auth-token-ttl 300 Time (in seconds) of the auth-token-ttl. Profiling and Monitoring: --enable-pprof 'false' Enable runtime profiling data via HTTP server. Address is at client URL + \"/debug/pprof/\" --metrics 'basic' Set level of detail for exported metrics, specify 'extensive' to include histogram metrics. --listen-metrics-urls '' List of URLs to listen on for the metrics and health endpoints. Logging: --logger 'capnslog' Specify 'zap' for structured logging or 'capnslog'. [WARN] 'capnslog' will be deprecated in v3.5. --log-outputs 'default' Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd, or list of comma separated output targets. --log-level 'info' Configures log level. Only supports debug, info, warn, error, panic, or fatal. v2 Proxy (to be deprecated in v4): --proxy 'off' Proxy mode setting ('off', 'readonly' or 'on'). --proxy-failure-wait 5000 Time (in milliseconds) an endpoint will be held in a failed state. --proxy-refresh-interval 30000 Time (in milliseconds) of the endpoints refresh interval. --proxy-dial-timeout 1000 Time (in milliseconds) for a dial to timeout. --proxy-write-timeout 5000 Time (in milliseconds) for a write to timeout. --proxy-read-timeout 0 Time (in milliseconds) for a read to timeout. Experimental feature: --experimental-initial-corrupt-check 'false' Enable to check data corruption before serving any client/peer traffic. --experimental-corrupt-check-time '0s' Duration of time between cluster corruption check passes. --experimental-enable-v2v3 '' Serve v2 requests through the v3 backend under a given prefix. --experimental-backend-bbolt-freelist-type 'array' ExperimentalBackendFreelistType specifies the type of freelist that boltdb backend uses(array and map are supported types). --experimental-enable-lease-checkpoint 'false' ExperimentalEnableLeaseCheckpoint enables primary lessor to persist lease remainingTTL to prevent indefinite auto-renewal of long lived leases. --experimental-compaction-batch-limit 1000 ExperimentalCompactionBatchLimit sets the maximum revisions deleted in each compaction batch. --experimental-peer-skip-client-san-verification 'false' Skip verification of SAN field in client certificate for peer connections. --experimental-watch-progress-notify-interval '10m' Duration of periodical watch progress notification. Unsafe feature: --force-new-cluster 'false' Force to create a new one-member cluster. CAUTIOUS with unsafe flag! It may break the guarantees given by the consensus protocol! TO BE DEPRECATED: --debug 'false' Enable debug-level logging for etcd. [WARN] Will be deprecated in v3.5. Use '--log-level=debug' instead. --log-package-levels '' Specify a particular log level for each etcd package (eg: 'etcdmain=CRITICAL,etcdserver=DEBUG'). yum\u5b89\u88c5\u65b9\u6cd5 [root@etcd ~]# yum install -y etcd [root@etcd ~]# systemctl start etcd","title":"\u5355\u673a\u90e8\u7f72"},{"location":"etcd/etcd/#api","text":"https://github.com/etcd-io/etcd/blob/6acb3d67fbe131b3b2d5d010e00ec80182be4628/Documentation/v2/api.md \u67e5\u770b\u6240\u6709\u503c\u7684API\u63a5\u53e3 curl http://127.0.0.1:2379/v2/keys {\"action\":\"get\",\"node\":{\"dir\":true}} lucas - \u7528\u4e8e kubernetes etcd3.0 + \u96c6\u7fa4\u7684\u57fa\u4e8e Web \u7684\u952e\u503c\u67e5\u770b\u5668\u3002 etcd-manager - \u73b0\u4ee3\u3001\u9ad8\u6548\u3001\u591a\u5e73\u53f0\u548c\u514d\u8d39\u7684 etcd 3.x GUI \u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002\u9002\u7528\u4e8e Windows\u3001Linux \u548c Mac\u3002","title":"API\u63a5\u53e3"},{"location":"go/gin__app_route/","text":"Gin \u8def\u7531\u62c6\u5206\u5230\u4e0d\u540c\u7684APP \u6709\u65f6\u5019\u9879\u76ee\u89c4\u6a21\u5b9e\u5728\u592a\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u66f4\u503e\u5411\u4e8e\u628a\u4e1a\u52a1\u62c6\u5206\u7684\u66f4\u8be6\u7ec6\u4e00\u4e9b\uff0c\u4f8b\u5982\u628a\u4e0d\u540c\u7684\u4e1a\u52a1\u4ee3\u7801\u62c6\u5206\u6210\u4e0d\u540c\u7684APP\u3002 \u56e0\u6b64\u6211\u4eec\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u5355\u72ec\u5b9a\u4e49\u4e00\u4e2aapp\u76ee\u5f55\uff0c\u7528\u6765\u5b58\u653e\u6211\u4eec\u4e0d\u540c\u4e1a\u52a1\u7ebf\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u8fdb\u884c\u6a2a\u5411\u6269\u5c55\u3002\u5927\u81f4\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myapp \u2502 go.mod \u2502 main.go \u251c\u2500app \u2502 \u251c\u2500blog \u2502 \u2502 handler.go \u2502 \u2502 router.go \u2502 \u2502 \u2502 \u2514\u2500shop \u2502 handler.go \u2502 router.go \u2502 \u2514\u2500routers route.go main.go package main import ( \"fmt\" \"myapp/app/blog\" \"myapp/app/shop\" \"myapp/routers\" ) func main() { // \u52a0\u8f7d\u591a\u4e2aAPP\u7684\u8def\u7531\u914d\u7f6e routers.Include(shop.Routers, blog.Routers) // \u521d\u59cb\u5316\u8def\u7531 r := routers.Init() if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } go.mod module myapp go 1.16 require github.com/gin-gonic/gin v1.7.3 route.go package routers import \"github.com/gin-gonic/gin\" type Option func(*gin.Engine) var options = []Option{} // \u6ce8\u518capp\u7684\u8def\u7531\u914d\u7f6e func Include(opts ...Option) { options = append(options, opts...) } // \u521d\u59cb\u5316 func Init() *gin.Engine { r := gin.Default() for _, opt := range options { opt(r) } return r } app/shop/handler.go package shop import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } app/shop/router.go package shop import \"github.com/gin-gonic/gin\" func Routers(e *gin.Engine) { e.GET(\"/shop\", helloShop) } app/blog/handler.go package blog import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } app/blog/router.go package blog import ( \"github.com/gin-gonic/gin\" ) func Routers(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u72ecAPP"},{"location":"go/gin__app_route/#gin-app","text":"\u6709\u65f6\u5019\u9879\u76ee\u89c4\u6a21\u5b9e\u5728\u592a\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u66f4\u503e\u5411\u4e8e\u628a\u4e1a\u52a1\u62c6\u5206\u7684\u66f4\u8be6\u7ec6\u4e00\u4e9b\uff0c\u4f8b\u5982\u628a\u4e0d\u540c\u7684\u4e1a\u52a1\u4ee3\u7801\u62c6\u5206\u6210\u4e0d\u540c\u7684APP\u3002 \u56e0\u6b64\u6211\u4eec\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u5355\u72ec\u5b9a\u4e49\u4e00\u4e2aapp\u76ee\u5f55\uff0c\u7528\u6765\u5b58\u653e\u6211\u4eec\u4e0d\u540c\u4e1a\u52a1\u7ebf\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u8fdb\u884c\u6a2a\u5411\u6269\u5c55\u3002\u5927\u81f4\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myapp \u2502 go.mod \u2502 main.go \u251c\u2500app \u2502 \u251c\u2500blog \u2502 \u2502 handler.go \u2502 \u2502 router.go \u2502 \u2502 \u2502 \u2514\u2500shop \u2502 handler.go \u2502 router.go \u2502 \u2514\u2500routers route.go main.go package main import ( \"fmt\" \"myapp/app/blog\" \"myapp/app/shop\" \"myapp/routers\" ) func main() { // \u52a0\u8f7d\u591a\u4e2aAPP\u7684\u8def\u7531\u914d\u7f6e routers.Include(shop.Routers, blog.Routers) // \u521d\u59cb\u5316\u8def\u7531 r := routers.Init() if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } go.mod module myapp go 1.16 require github.com/gin-gonic/gin v1.7.3 route.go package routers import \"github.com/gin-gonic/gin\" type Option func(*gin.Engine) var options = []Option{} // \u6ce8\u518capp\u7684\u8def\u7531\u914d\u7f6e func Include(opts ...Option) { options = append(options, opts...) } // \u521d\u59cb\u5316 func Init() *gin.Engine { r := gin.Default() for _, opt := range options { opt(r) } return r } app/shop/handler.go package shop import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } app/shop/router.go package shop import \"github.com/gin-gonic/gin\" func Routers(e *gin.Engine) { e.GET(\"/shop\", helloShop) } app/blog/handler.go package blog import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } app/blog/router.go package blog import ( \"github.com/gin-gonic/gin\" ) func Routers(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Gin \u8def\u7531\u62c6\u5206\u5230\u4e0d\u540c\u7684APP"},{"location":"go/gin_route/","text":"Go Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u4e2a\u6587\u4ef6 Gin \u8def\u7531\u62c6\u5206\u6210\u591a\u4e2a\u6587\u4ef6\uff0c\u8fd9\u6837\u9002\u5408\u4e2d\u5c0f\u578b\u9879\u76ee mygin \u2502 go.mod \u2502 main.go \u2514\u2500 routers load.go shop.go main.go package main import ( \"fmt\" \"github.com/gin-gonic/gin\" \"mygin/routers\" ) func main() { r := gin.Default() routers.LoadBlog(r) routers.LoadShop(r) if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } load.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } func LoadBlog(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } shop.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } func LoadShop(e *gin.Engine) { e.GET(\"/Shop\", helloShop) } go.mod module mygin go 1.16 require github.com/gin-gonic/gin v1.7.3 \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u4e2a\u6587\u4ef6"},{"location":"go/gin_route/#go-gin","text":"Gin \u8def\u7531\u62c6\u5206\u6210\u591a\u4e2a\u6587\u4ef6\uff0c\u8fd9\u6837\u9002\u5408\u4e2d\u5c0f\u578b\u9879\u76ee mygin \u2502 go.mod \u2502 main.go \u2514\u2500 routers load.go shop.go main.go package main import ( \"fmt\" \"github.com/gin-gonic/gin\" \"mygin/routers\" ) func main() { r := gin.Default() routers.LoadBlog(r) routers.LoadShop(r) if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } load.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } func LoadBlog(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } shop.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } func LoadShop(e *gin.Engine) { e.GET(\"/Shop\", helloShop) } go.mod module mygin go 1.16 require github.com/gin-gonic/gin v1.7.3 \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Go Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u4e2a\u6587\u4ef6"},{"location":"go/go_gin/","text":"Go Gin Web\u6846\u67b6\u5165\u95e8 Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u8bbe\u7f6e\u6e90 \u5b98\u7f51\u5730\u5740\uff1ahttps://goproxy.io/zh/ 1. \u53f3\u952e \u6211\u7684\u7535\u8111 -> \u5c5e\u6027 -> \u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e -> \u73af\u5883\u53d8\u91cf 2. \u5728 \u201c[\u4f60\u7684\u7528\u6237\u540d]\u7684\u7528\u6237\u53d8\u91cf\u201d \u4e2d\u70b9\u51fb \u201d\u65b0\u5efa\u201c \u6309\u94ae 3. \u5728 \u201c\u53d8\u91cf\u540d\u201d \u8f93\u5165\u6846\u5e76\u65b0\u589e \u201cGOPROXY\u201d 4. \u5728\u5bf9\u5e94\u7684 \u201c\u53d8\u91cf\u503c\u201d \u8f93\u5165\u6846\u4e2d\u65b0\u589e \u201chttps://goproxy.io,direct\u201d 5. \u6700\u540e\u70b9\u51fb \u201c\u786e\u5b9a\u201d \u6309\u94ae\u4fdd\u5b58\u8bbe\u7f6e \u521b\u5efagin\u9879\u76ee \u7136\u540e\u9879\u76ee\u4e2d\u65b0\u5efamain.go\u6587\u4ef6 package main import \"github.com/gin-gonic/gin\" func main() { r := gin.Default() r.GET(\"/ping\", func(c *gin.Context) { c.JSON(200, gin.H{ \"message\": \"pong\", }) }) r.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\") } \u5728goland\u7ec8\u7aef\u8f93\u5165\u4e0b\u9762\u4ee3\u7801\uff0c\u7f16\u8bd1\u4f9d\u8d56\u5305\uff0c\u4e0b\u8f7d\u5305 D:\\idea\\mygin>go mod edit -require github.com/gin-gonic/gin@latest D:\\idea\\mygin>go mod tidy \u5982\u56fe \u9879\u76ee\u4e2d\u53f3\u952e\u8fd0\u884c\uff0c\u5982\u56fe","title":"Gin\u5165\u95e8"},{"location":"go/go_gin/#go-gin-web","text":"Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u8bbe\u7f6e\u6e90 \u5b98\u7f51\u5730\u5740\uff1ahttps://goproxy.io/zh/ 1. \u53f3\u952e \u6211\u7684\u7535\u8111 -> \u5c5e\u6027 -> \u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e -> \u73af\u5883\u53d8\u91cf 2. \u5728 \u201c[\u4f60\u7684\u7528\u6237\u540d]\u7684\u7528\u6237\u53d8\u91cf\u201d \u4e2d\u70b9\u51fb \u201d\u65b0\u5efa\u201c \u6309\u94ae 3. \u5728 \u201c\u53d8\u91cf\u540d\u201d \u8f93\u5165\u6846\u5e76\u65b0\u589e \u201cGOPROXY\u201d 4. \u5728\u5bf9\u5e94\u7684 \u201c\u53d8\u91cf\u503c\u201d \u8f93\u5165\u6846\u4e2d\u65b0\u589e \u201chttps://goproxy.io,direct\u201d 5. \u6700\u540e\u70b9\u51fb \u201c\u786e\u5b9a\u201d \u6309\u94ae\u4fdd\u5b58\u8bbe\u7f6e \u521b\u5efagin\u9879\u76ee \u7136\u540e\u9879\u76ee\u4e2d\u65b0\u5efamain.go\u6587\u4ef6 package main import \"github.com/gin-gonic/gin\" func main() { r := gin.Default() r.GET(\"/ping\", func(c *gin.Context) { c.JSON(200, gin.H{ \"message\": \"pong\", }) }) r.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\") } \u5728goland\u7ec8\u7aef\u8f93\u5165\u4e0b\u9762\u4ee3\u7801\uff0c\u7f16\u8bd1\u4f9d\u8d56\u5305\uff0c\u4e0b\u8f7d\u5305 D:\\idea\\mygin>go mod edit -require github.com/gin-gonic/gin@latest D:\\idea\\mygin>go mod tidy \u5982\u56fe \u9879\u76ee\u4e2d\u53f3\u952e\u8fd0\u884c\uff0c\u5982\u56fe","title":"Go Gin Web\u6846\u67b6\u5165\u95e8"},{"location":"go/go_one/","text":"\u5b89\u88c5 Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u4e0b\u8f7d\u5b89\u88c5 hello world \u6253\u5f00goland idea \u521b\u5efa\u9879\u76ee\uff0c\u521b\u5efago\u6587\u4ef6 package main import \"fmt\" func main() { fmt.Println(\"Hello, World!\") } \u53f3\u952e--\u300b\u8fd0\u884c \u547d\u4ee4\u884c \u7528git\u5e26\u7684bash \u8fdb\u5165\u9879\u76ee\u76ee\u5f55 \u6267\u884c\u547d\u4ee4 fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go run one.go Hello, World! fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go build one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ls one.exe* one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ./one.exe Hello, World!","title":"Go\u5165\u95e8"},{"location":"go/go_one/#_1","text":"Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u4e0b\u8f7d\u5b89\u88c5","title":"\u5b89\u88c5"},{"location":"go/go_one/#hello-world","text":"\u6253\u5f00goland idea \u521b\u5efa\u9879\u76ee\uff0c\u521b\u5efago\u6587\u4ef6 package main import \"fmt\" func main() { fmt.Println(\"Hello, World!\") } \u53f3\u952e--\u300b\u8fd0\u884c","title":"hello world"},{"location":"go/go_one/#_2","text":"\u7528git\u5e26\u7684bash \u8fdb\u5165\u9879\u76ee\u76ee\u5f55 \u6267\u884c\u547d\u4ee4 fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go run one.go Hello, World! fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go build one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ls one.exe* one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ./one.exe Hello, World!","title":"\u547d\u4ee4\u884c"},{"location":"prometheus/alertmanager/alertmanager_config/","text":"\u57fa\u672c\u914d\u7f6e Alertmanager \u901a\u8fc7\u547d\u4ee4\u884c\u548c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u5728 \u53ef\u89c6\u5316\u7f16\u8f91\u5668 \u53ef\u4ee5\u5e2e\u52a9\u5efa\u7acb\u8def\u7531\u6811 \u3002\u8fd9\u4e2a\u9875\u9762\u7c98\u8d34alertmanager\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u4f1a\u628a\u544a\u8b66\u7ebf\u8def\u753b\u51fa\u6765 Alertmanager \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u91cd\u65b0\u52a0\u8f7d\u5176\u914d\u7f6e\u3002alertmanager\u8fdb\u7a0b\u53d1\u9001SIGHUP\u4fe1\u53f7\u3002\u6216\u8005\u7ed9altermanager\u521b\u5efa\u7684http\u8bf7\u6c42\u53d1\u9001 -reload \u6bd4\u5982\u8fd9\u6837 curl -X POST \"http://10.102.74.90:9090/-/reload\" \u8981\u6307\u5b9a\u8981\u52a0\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528\u8be5 --config.file \u6807\u5fd7\u3002 ./alertmanager --config.file=alertmanager.yml Alertmanager\u4e3b\u8981\u8d1f\u8d23\u5bf9Prometheus\u4ea7\u751f\u7684\u544a\u8b66\u8fdb\u884c\u7edf\u4e00\u5904\u7406\uff0c\u56e0\u6b64\u5728Alertmanager\u914d\u7f6e\u4e2d\u4e00\u822c\u4f1a\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a \u5168\u5c40\u914d\u7f6e\uff08global\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u7684\u516c\u5171\u53c2\u6570\uff0c\u5982\u5168\u5c40\u7684SMTP\u914d\u7f6e\uff0cSlack\u914d\u7f6e\u7b49\u5185\u5bb9\uff1b \u6a21\u677f\uff08templates\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u544a\u8b66\u901a\u77e5\u65f6\u7684\u6a21\u677f\uff0c\u5982HTML\u6a21\u677f\uff0c\u90ae\u4ef6\u6a21\u677f\u7b49\uff1b \u544a\u8b66\u8def\u7531\uff08route\uff09\uff1a\u6839\u636e\u6807\u7b7e\u5339\u914d\uff0c\u786e\u5b9a\u5f53\u524d\u544a\u8b66\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1b \u63a5\u6536\u4eba\uff08receivers\uff09\uff1a\u63a5\u6536\u4eba\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u90ae\u7bb1\u4e5f\u53ef\u4ee5\u662f\u5fae\u4fe1\uff0cSlack\u6216\u8005Webhook\u7b49\uff0c\u63a5\u6536\u4eba\u4e00\u822c\u914d\u5408\u544a\u8b66\u8def\u7531\u4f7f\u7528\uff1b \u6291\u5236\u89c4\u5219\uff08inhibit_rules\uff09\uff1a\u5408\u7406\u8bbe\u7f6e\u6291\u5236\u89c4\u5219\u53ef\u4ee5\u51cf\u5c11\u5783\u573e\u544a\u8b66\u7684\u4ea7\u751f \u8be5\u6587\u4ef6\u4ee5 YAML \u683c\u5f0f \u7f16\u5199\uff1a <duration> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6301\u7eed\u65f6\u95f4 ((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0) \uff0c\u4f8b\u5982 1d , 1h30m , 5m , 10s <labelname> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32 [a-zA-Z_][a-zA-Z0-9_]* <labelvalue> : \u4e00\u4e32unicode\u5b57\u7b26 <filepath> : \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6709\u6548\u8def\u5f84 <boolean> : \u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u53ef\u4ee5\u53d6\u503c true \u6216 false <string> : \u666e\u901a\u5b57\u7b26\u4e32 <secret> \uff1a\u4f5c\u4e3a\u79d8\u5bc6\u7684\u5e38\u89c4\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u5bc6\u7801 <tmpl_string> : \u4f7f\u7528\u524d\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32 <tmpl_secret> : \u4e00\u4e2a\u5728\u4f7f\u7528\u524d\u88ab\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u4e00\u4e2a\u5bc6\u7801 <int> : \u4e00\u4e2a\u6574\u6570\u503c global: # \u9ed8\u8ba4\u7684SMTP\u53d1\u4ef6\u4eba\u6807\u5934\u5b57\u6bb5\u3002 [ smtp_from: <tmpl_string> ] #\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u9ed8\u8ba4SMTP \u7aef\u53e3\u53f7 [ smtp_smarthost: <string> ] #SMTP\u7684\u4e3b\u673a\u540d [ smtp_hello: <string> | default = \"localhost\" ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u540d\u5b57 [ smtp_auth_username: <string> ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u5bc6\u7801 [ smtp_auth_password: <secret> ] # SMTP \u767b\u5f55ID [ smtp_auth_identity: <string> ] # SMTP \u767b\u5f55\u5bc6\u7801 [ smtp_auth_secret: <secret> ] #\u9ed8\u8ba4\u7684SMTP TLS\u8981\u6c42\u3002 #\u8bf7\u6ce8\u610f\uff0cGo\u4e0d\u652f\u6301\u5230\u8fdc\u7a0bSMTP\u7aef\u70b9\u7684\u672a\u52a0\u5bc6\u8fde\u63a5\u3002 [ smtp_require_tls: <bool> | default = true ] #\u7528\u4e8e\u5ef6\u8fdf\u901a\u77e5\u7684API URL\u3002 [ slack_api_url: <secret> ] [ slack_api_url_file: <filepath> ] [ victorops_api_key: <secret> ] [ victorops_api_url: <string> | default = \"https://alert.victorops.com/integrations/generic/20131114/alert/\" ] [ pagerduty_url: <string> | default = \"https://events.pagerduty.com/v2/enqueue\" ] [ opsgenie_api_key: <secret> ] [ opsgenie_api_url: <string> | default = \"https://api.opsgenie.com/\" ] [ wechat_api_url: <string> | default = \"https://qyapi.weixin.qq.com/cgi-bin/\" ] [ wechat_api_secret: <secret> ] [ wechat_api_corp_id: <string> ] # \u9ed8\u8ba4\u7684HTTP\u5ba2\u6237\u7aef\u914d\u7f6e [ http_config: <http_config> ] #ResolveTimeout\u662falertmanager\u5728\u8b66\u62a5\u6267\u884c\u65f6\u4f7f\u7528\u7684\u9ed8\u8ba4\u503c #\u4e0d\u5305\u62ecEndsAt\uff0c\u5728\u6b64\u65f6\u95f4\u8fc7\u540e\uff0c\u5982\u679c\u8b66\u62a5\u5c1a\u672a\u66f4\u65b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u5176\u58f0\u660e\u4e3a\u5df2\u89e3\u51b3\u3002 #\u8fd9\u5bf9\u6765\u81ea\u666e\u7f57\u7c73\u4fee\u65af\u7684\u8b66\u62a5\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u4eec\u603b\u662f\u5305\u542bEndsAt\u3002 [ resolve_timeout: <duration> | default = 5m ] #\u4ece\u4e2d\u8bfb\u53d6\u81ea\u5b9a\u4e49\u901a\u77e5\u6a21\u677f\u5b9a\u4e49\u7684\u6587\u4ef6\u3002 #\u6700\u540e\u4e00\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u5339\u914d\u5668\uff0c\u4f8b\u5982\u201ctemplates/*.tmpl\u201d\u3002 templates: [ - <filepath> ... ] #\u8def\u7531\u6811\u7684\u6839\u8282\u70b9\u3002 route: <route> #\u901a\u77e5\u63a5\u6536\u8005\u7684\u5217\u8868\u3002 receivers: - <receiver> ... #\u6291\u5236\u89c4\u5219\u5217\u8868\u3002 inhibit_rules: [ - <inhibit_rule> ... ] #\u9759\u97f3\u8def\u7531\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u5217\u8868\u3002 mute_time_intervals: [ - <mute_time_interval> ... ] Route \u8def\u7531\u5757\u5b9a\u4e49\u8def\u7531\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u3002\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5176\u53ef\u9009\u914d\u7f6e\u53c2\u6570\u5c06\u4ece\u5176\u7236\u8282\u70b9\u7ee7\u627f\u3002 \u6bcf\u4e2a\u8b66\u62a5\u5728\u914d\u7f6e\u7684\u9876\u7ea7\u8def\u7531\u5904\u8fdb\u5165\u8def\u7531\u6811\uff0c\u8be5\u8def\u7531\u6811\u5fc5\u987b\u5339\u914d\u6240\u6709\u8b66\u62a5\uff08\u5373\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u7684\u5339\u914d\u5668\uff09\u3002\u7136\u540e\u904d\u5386\u5b50\u8282\u70b9\u3002\u5982\u679c continue \u8bbe\u7f6e\u4e3a false\uff0c\u5b83\u4f1a\u5728\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5b69\u5b50\u4e4b\u540e\u505c\u6b62\u3002\u5982\u679c continue \u5728\u5339\u914d\u8282\u70b9\u4e0a\u4e3a true\uff0c\u5219\u8b66\u62a5\u5c06\u7ee7\u7eed\u4e0e\u540e\u7eed\u5144\u5f1f\u8282\u70b9\u5339\u914d\u3002\u5982\u679c\u8b66\u62a5\u4e0e\u8282\u70b9\u7684\u4efb\u4f55\u5b50\u8282\u70b9\u90fd\u4e0d\u5339\u914d\uff08\u6ca1\u6709\u5339\u914d\u7684\u5b50\u8282\u70b9\u6216\u4e0d\u5b58\u5728\uff09\uff0c\u5219\u6839\u636e\u5f53\u524d\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\u5904\u7406\u8b66\u62a5\u3002 \u7ffb\u8bd1\u81ea\uff1ahttps://prometheus.io/docs/alerting/latest/configuration/#route \u4e2a\u4eba\u8ba4\u4e3a\u8be5\u89e3\u91ca\u5df2\u7ecf\u8fc7\u65f6 [ receiver: <string> ] #\u7528\u4e8e\u5c06\u4f20\u5165\u8b66\u62a5\u5206\u7ec4\u5728\u4e00\u8d77\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff0c #cluster=A\u548calertname=LatencyHigh\u5c06\u51fa\u73b0\u591a\u4e2a\u8b66\u62a5 #\u5206\u6210\u4e00\u7ec4\u3002 # #\u8981\u6309\u6240\u6709\u53ef\u80fd\u7684\u6807\u7b7e\u8fdb\u884c\u805a\u5408\uff0c\u8bf7\u4f7f\u7528\u7279\u6b8a\u503c\u201c\u2026\u201d\u4f5c\u4e3a\u552f\u4e00\u7684\u6807\u7b7e\u540d\u79f0\uff0c\u4f8b\u5982\uff1a #\u5206\u7ec4\u4f9d\u636e\uff1a['\u2026'] #\u8fd9\u5b9e\u9645\u4e0a\u5b8c\u5168\u7981\u7528\u4e86\u805a\u5408\uff0c\u901a\u8fc7\u6240\u6709 #\u6309\u539f\u6837\u53d1\u51fa\u8b66\u62a5\u3002\u8fd9\u4e0d\u53ef\u80fd\u662f\u4f60\u60f3\u8981\u7684\uff0c\u9664\u975e\u4f60\u6709 #\u8b66\u62a5\u91cf\u975e\u5e38\u4f4e\u6216\u4e0a\u6e38\u901a\u77e5\u7cfb\u7edf\u6267\u884c #\u5b83\u81ea\u5df1\u7684\u5206\u7ec4\u3002 [ group_by: '[' <labelname>, ... ']' ] #\u8b66\u62a5\u662f\u5426\u5e94\u7ee7\u7eed\u5339\u914d\u540e\u7eed\u540c\u7ea7\u8282\u70b9\u3002 [ continue: <boolean> | default = false ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u76f8\u7b49\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match: [ <labelname>: <labelvalue>, ... ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match_re: [ <labelname>: <regex>, ... ] #\u8b66\u62a5\u5fc5\u987b\u5b8c\u6210\u4ee5\u5339\u914d\u8282\u70b9\u7684\u5339\u914d\u5668\u5217\u8868\u3002 matchers: [ - <matcher> ... ] #\u53d1\u9001\u7ec4\u901a\u77e5\u7684\u521d\u59cb\u7b49\u5f85\u65f6\u95f4 #\u8b66\u62a5\u6570\u91cf\u3002\u5141\u8bb8\u7b49\u5f85\u7981\u6b62\u8b66\u62a5\u5230\u8fbe\u6216\u6536\u96c6 #\u540c\u4e00\u7ec4\u7684\u66f4\u591a\u521d\u59cb\u8b66\u62a5(\u901a\u5e38\u662f0\u5230\u51e0\u5206\u949f\u3002\uff09 [ group_wait: <duration> | default = 30s ] #\u5728\u53d1\u9001\u6709\u5173\u65b0\u8b66\u62a5\u7684\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u6dfb\u52a0\u5230\u5df2\u53d1\u51fa\u521d\u59cb\u901a\u77e5\u7684\u8b66\u62a5\u7ec4\u4e2d #\u5df2\u7ecf\u53d1\u9001\u4e86(\u901a\u5e38\u7ea65\u5206\u949f\u6216\u4ee5\u4e0a\u3002\uff09 [ group_interval: <duration> | default = 5m ] #\u5982\u679c\u5df2\u7ecf\u53d1\u9001\u4e86\u901a\u77e5\uff0c\u5728\u518d\u6b21\u53d1\u9001\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u5df2\u6210\u529f\u53d1\u9001\u8b66\u62a5(\u901a\u5e38\u7ea63\u5c0f\u65f6\u6216\u4ee5\u4e0a\uff09\u3002 [ repeat_interval: <duration> | default = 4h ] #\u8def\u7531\u5e94\u9759\u97f3\u7684\u65f6\u95f4\u3002\u8fd9\u4e9b\u5fc5\u987b\u4e0e #\u201c\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u201d\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u3002 #\u6b64\u5916\uff0c\u6839\u8282\u70b9\u4e0d\u80fd\u6709\u4efb\u4f55\u9759\u97f3\u65f6\u95f4\u3002 #\u5f53\u8def\u7531\u88ab\u7981\u7528\u65f6\uff0c\u5b83\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u901a\u77e5\uff0c\u4f46\u662f #\u5426\u5219\u6b63\u5e38\u52a8\u4f5c\uff08\u5305\u62ec\u7ed3\u675f\u8def\u7531\u5339\u914d\u8fc7\u7a0b\uff09 #\u5982\u679c\u672a\u8bbe\u7f6e\u201ccontinue\u201d\u9009\u9879\u3002\uff09 mute_time_intervals: [ - <string> ...] #\u96f6\u4e2a\u6216\u591a\u4e2a\u5b50\u8def\u7531\u3002 routes: [ - <route> ... ] \u4f8b\u5b50 #\u5305\u542b\u5b50\u7ea7\u7ee7\u627f\u7684\u6240\u6709\u53c2\u6570\u7684\u6839\u8def\u7531 #\u5982\u679c\u672a\u8986\u76d6\uff0c\u5219\u8fd4\u56de\u8def\u7531\u3002 route: receiver: 'default-receiver' group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [cluster, alertname] #\u4e0e\u4ee5\u4e0b\u5b50\u8def\u7531\u4e0d\u5339\u914d\u7684\u6240\u6709\u8b66\u62a5 #\u5c06\u4fdd\u7559\u5728\u6839\u8282\u70b9\u4e0a\u5e76\u88ab\u5206\u6d3e\u5230\u201cdefault receiver\u201d\u3002 routes: #service=mysql\u6216service=cassandra\u7684\u6240\u6709\u8b66\u62a5 - receiver: 'database-pager' group_wait: 10s matchers: - service=~\"mysql|cassandra\" #\u6240\u6709\u5e26\u6709team=frontend\u6807\u7b7e\u7684\u8b66\u62a5\u90fd\u4e0e\u6b64\u5b50\u8def\u7531\u5339\u914d\u3002 - receiver: 'frontend-pager' group_by: [product, environment] matchers: - team=\"frontend\" \u63a5\u4e0b\u6765\u770b\u4e0b\u5b98\u65b9\u5728git\u5e93\u4e2d\u7684\u4f8b\u5b50 https://github.com/prometheus/alertmanager/blob/main/doc/examples/simple.yml","title":"Alertmanager\u914d\u7f6e"},{"location":"prometheus/alertmanager/alertmanager_config/#_1","text":"","title":""},{"location":"prometheus/alertmanager/alertmanager_config/#_2","text":"Alertmanager \u901a\u8fc7\u547d\u4ee4\u884c\u548c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u5728 \u53ef\u89c6\u5316\u7f16\u8f91\u5668 \u53ef\u4ee5\u5e2e\u52a9\u5efa\u7acb\u8def\u7531\u6811 \u3002\u8fd9\u4e2a\u9875\u9762\u7c98\u8d34alertmanager\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u4f1a\u628a\u544a\u8b66\u7ebf\u8def\u753b\u51fa\u6765 Alertmanager \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u91cd\u65b0\u52a0\u8f7d\u5176\u914d\u7f6e\u3002alertmanager\u8fdb\u7a0b\u53d1\u9001SIGHUP\u4fe1\u53f7\u3002\u6216\u8005\u7ed9altermanager\u521b\u5efa\u7684http\u8bf7\u6c42\u53d1\u9001 -reload \u6bd4\u5982\u8fd9\u6837 curl -X POST \"http://10.102.74.90:9090/-/reload\" \u8981\u6307\u5b9a\u8981\u52a0\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528\u8be5 --config.file \u6807\u5fd7\u3002 ./alertmanager --config.file=alertmanager.yml Alertmanager\u4e3b\u8981\u8d1f\u8d23\u5bf9Prometheus\u4ea7\u751f\u7684\u544a\u8b66\u8fdb\u884c\u7edf\u4e00\u5904\u7406\uff0c\u56e0\u6b64\u5728Alertmanager\u914d\u7f6e\u4e2d\u4e00\u822c\u4f1a\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a \u5168\u5c40\u914d\u7f6e\uff08global\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u7684\u516c\u5171\u53c2\u6570\uff0c\u5982\u5168\u5c40\u7684SMTP\u914d\u7f6e\uff0cSlack\u914d\u7f6e\u7b49\u5185\u5bb9\uff1b \u6a21\u677f\uff08templates\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u544a\u8b66\u901a\u77e5\u65f6\u7684\u6a21\u677f\uff0c\u5982HTML\u6a21\u677f\uff0c\u90ae\u4ef6\u6a21\u677f\u7b49\uff1b \u544a\u8b66\u8def\u7531\uff08route\uff09\uff1a\u6839\u636e\u6807\u7b7e\u5339\u914d\uff0c\u786e\u5b9a\u5f53\u524d\u544a\u8b66\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1b \u63a5\u6536\u4eba\uff08receivers\uff09\uff1a\u63a5\u6536\u4eba\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u90ae\u7bb1\u4e5f\u53ef\u4ee5\u662f\u5fae\u4fe1\uff0cSlack\u6216\u8005Webhook\u7b49\uff0c\u63a5\u6536\u4eba\u4e00\u822c\u914d\u5408\u544a\u8b66\u8def\u7531\u4f7f\u7528\uff1b \u6291\u5236\u89c4\u5219\uff08inhibit_rules\uff09\uff1a\u5408\u7406\u8bbe\u7f6e\u6291\u5236\u89c4\u5219\u53ef\u4ee5\u51cf\u5c11\u5783\u573e\u544a\u8b66\u7684\u4ea7\u751f \u8be5\u6587\u4ef6\u4ee5 YAML \u683c\u5f0f \u7f16\u5199\uff1a <duration> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6301\u7eed\u65f6\u95f4 ((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0) \uff0c\u4f8b\u5982 1d , 1h30m , 5m , 10s <labelname> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32 [a-zA-Z_][a-zA-Z0-9_]* <labelvalue> : \u4e00\u4e32unicode\u5b57\u7b26 <filepath> : \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6709\u6548\u8def\u5f84 <boolean> : \u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u53ef\u4ee5\u53d6\u503c true \u6216 false <string> : \u666e\u901a\u5b57\u7b26\u4e32 <secret> \uff1a\u4f5c\u4e3a\u79d8\u5bc6\u7684\u5e38\u89c4\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u5bc6\u7801 <tmpl_string> : \u4f7f\u7528\u524d\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32 <tmpl_secret> : \u4e00\u4e2a\u5728\u4f7f\u7528\u524d\u88ab\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u4e00\u4e2a\u5bc6\u7801 <int> : \u4e00\u4e2a\u6574\u6570\u503c global: # \u9ed8\u8ba4\u7684SMTP\u53d1\u4ef6\u4eba\u6807\u5934\u5b57\u6bb5\u3002 [ smtp_from: <tmpl_string> ] #\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u9ed8\u8ba4SMTP \u7aef\u53e3\u53f7 [ smtp_smarthost: <string> ] #SMTP\u7684\u4e3b\u673a\u540d [ smtp_hello: <string> | default = \"localhost\" ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u540d\u5b57 [ smtp_auth_username: <string> ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u5bc6\u7801 [ smtp_auth_password: <secret> ] # SMTP \u767b\u5f55ID [ smtp_auth_identity: <string> ] # SMTP \u767b\u5f55\u5bc6\u7801 [ smtp_auth_secret: <secret> ] #\u9ed8\u8ba4\u7684SMTP TLS\u8981\u6c42\u3002 #\u8bf7\u6ce8\u610f\uff0cGo\u4e0d\u652f\u6301\u5230\u8fdc\u7a0bSMTP\u7aef\u70b9\u7684\u672a\u52a0\u5bc6\u8fde\u63a5\u3002 [ smtp_require_tls: <bool> | default = true ] #\u7528\u4e8e\u5ef6\u8fdf\u901a\u77e5\u7684API URL\u3002 [ slack_api_url: <secret> ] [ slack_api_url_file: <filepath> ] [ victorops_api_key: <secret> ] [ victorops_api_url: <string> | default = \"https://alert.victorops.com/integrations/generic/20131114/alert/\" ] [ pagerduty_url: <string> | default = \"https://events.pagerduty.com/v2/enqueue\" ] [ opsgenie_api_key: <secret> ] [ opsgenie_api_url: <string> | default = \"https://api.opsgenie.com/\" ] [ wechat_api_url: <string> | default = \"https://qyapi.weixin.qq.com/cgi-bin/\" ] [ wechat_api_secret: <secret> ] [ wechat_api_corp_id: <string> ] # \u9ed8\u8ba4\u7684HTTP\u5ba2\u6237\u7aef\u914d\u7f6e [ http_config: <http_config> ] #ResolveTimeout\u662falertmanager\u5728\u8b66\u62a5\u6267\u884c\u65f6\u4f7f\u7528\u7684\u9ed8\u8ba4\u503c #\u4e0d\u5305\u62ecEndsAt\uff0c\u5728\u6b64\u65f6\u95f4\u8fc7\u540e\uff0c\u5982\u679c\u8b66\u62a5\u5c1a\u672a\u66f4\u65b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u5176\u58f0\u660e\u4e3a\u5df2\u89e3\u51b3\u3002 #\u8fd9\u5bf9\u6765\u81ea\u666e\u7f57\u7c73\u4fee\u65af\u7684\u8b66\u62a5\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u4eec\u603b\u662f\u5305\u542bEndsAt\u3002 [ resolve_timeout: <duration> | default = 5m ] #\u4ece\u4e2d\u8bfb\u53d6\u81ea\u5b9a\u4e49\u901a\u77e5\u6a21\u677f\u5b9a\u4e49\u7684\u6587\u4ef6\u3002 #\u6700\u540e\u4e00\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u5339\u914d\u5668\uff0c\u4f8b\u5982\u201ctemplates/*.tmpl\u201d\u3002 templates: [ - <filepath> ... ] #\u8def\u7531\u6811\u7684\u6839\u8282\u70b9\u3002 route: <route> #\u901a\u77e5\u63a5\u6536\u8005\u7684\u5217\u8868\u3002 receivers: - <receiver> ... #\u6291\u5236\u89c4\u5219\u5217\u8868\u3002 inhibit_rules: [ - <inhibit_rule> ... ] #\u9759\u97f3\u8def\u7531\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u5217\u8868\u3002 mute_time_intervals: [ - <mute_time_interval> ... ]","title":"\u57fa\u672c\u914d\u7f6e"},{"location":"prometheus/alertmanager/alertmanager_config/#route","text":"\u8def\u7531\u5757\u5b9a\u4e49\u8def\u7531\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u3002\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5176\u53ef\u9009\u914d\u7f6e\u53c2\u6570\u5c06\u4ece\u5176\u7236\u8282\u70b9\u7ee7\u627f\u3002 \u6bcf\u4e2a\u8b66\u62a5\u5728\u914d\u7f6e\u7684\u9876\u7ea7\u8def\u7531\u5904\u8fdb\u5165\u8def\u7531\u6811\uff0c\u8be5\u8def\u7531\u6811\u5fc5\u987b\u5339\u914d\u6240\u6709\u8b66\u62a5\uff08\u5373\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u7684\u5339\u914d\u5668\uff09\u3002\u7136\u540e\u904d\u5386\u5b50\u8282\u70b9\u3002\u5982\u679c continue \u8bbe\u7f6e\u4e3a false\uff0c\u5b83\u4f1a\u5728\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5b69\u5b50\u4e4b\u540e\u505c\u6b62\u3002\u5982\u679c continue \u5728\u5339\u914d\u8282\u70b9\u4e0a\u4e3a true\uff0c\u5219\u8b66\u62a5\u5c06\u7ee7\u7eed\u4e0e\u540e\u7eed\u5144\u5f1f\u8282\u70b9\u5339\u914d\u3002\u5982\u679c\u8b66\u62a5\u4e0e\u8282\u70b9\u7684\u4efb\u4f55\u5b50\u8282\u70b9\u90fd\u4e0d\u5339\u914d\uff08\u6ca1\u6709\u5339\u914d\u7684\u5b50\u8282\u70b9\u6216\u4e0d\u5b58\u5728\uff09\uff0c\u5219\u6839\u636e\u5f53\u524d\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\u5904\u7406\u8b66\u62a5\u3002 \u7ffb\u8bd1\u81ea\uff1ahttps://prometheus.io/docs/alerting/latest/configuration/#route \u4e2a\u4eba\u8ba4\u4e3a\u8be5\u89e3\u91ca\u5df2\u7ecf\u8fc7\u65f6 [ receiver: <string> ] #\u7528\u4e8e\u5c06\u4f20\u5165\u8b66\u62a5\u5206\u7ec4\u5728\u4e00\u8d77\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff0c #cluster=A\u548calertname=LatencyHigh\u5c06\u51fa\u73b0\u591a\u4e2a\u8b66\u62a5 #\u5206\u6210\u4e00\u7ec4\u3002 # #\u8981\u6309\u6240\u6709\u53ef\u80fd\u7684\u6807\u7b7e\u8fdb\u884c\u805a\u5408\uff0c\u8bf7\u4f7f\u7528\u7279\u6b8a\u503c\u201c\u2026\u201d\u4f5c\u4e3a\u552f\u4e00\u7684\u6807\u7b7e\u540d\u79f0\uff0c\u4f8b\u5982\uff1a #\u5206\u7ec4\u4f9d\u636e\uff1a['\u2026'] #\u8fd9\u5b9e\u9645\u4e0a\u5b8c\u5168\u7981\u7528\u4e86\u805a\u5408\uff0c\u901a\u8fc7\u6240\u6709 #\u6309\u539f\u6837\u53d1\u51fa\u8b66\u62a5\u3002\u8fd9\u4e0d\u53ef\u80fd\u662f\u4f60\u60f3\u8981\u7684\uff0c\u9664\u975e\u4f60\u6709 #\u8b66\u62a5\u91cf\u975e\u5e38\u4f4e\u6216\u4e0a\u6e38\u901a\u77e5\u7cfb\u7edf\u6267\u884c #\u5b83\u81ea\u5df1\u7684\u5206\u7ec4\u3002 [ group_by: '[' <labelname>, ... ']' ] #\u8b66\u62a5\u662f\u5426\u5e94\u7ee7\u7eed\u5339\u914d\u540e\u7eed\u540c\u7ea7\u8282\u70b9\u3002 [ continue: <boolean> | default = false ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u76f8\u7b49\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match: [ <labelname>: <labelvalue>, ... ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match_re: [ <labelname>: <regex>, ... ] #\u8b66\u62a5\u5fc5\u987b\u5b8c\u6210\u4ee5\u5339\u914d\u8282\u70b9\u7684\u5339\u914d\u5668\u5217\u8868\u3002 matchers: [ - <matcher> ... ] #\u53d1\u9001\u7ec4\u901a\u77e5\u7684\u521d\u59cb\u7b49\u5f85\u65f6\u95f4 #\u8b66\u62a5\u6570\u91cf\u3002\u5141\u8bb8\u7b49\u5f85\u7981\u6b62\u8b66\u62a5\u5230\u8fbe\u6216\u6536\u96c6 #\u540c\u4e00\u7ec4\u7684\u66f4\u591a\u521d\u59cb\u8b66\u62a5(\u901a\u5e38\u662f0\u5230\u51e0\u5206\u949f\u3002\uff09 [ group_wait: <duration> | default = 30s ] #\u5728\u53d1\u9001\u6709\u5173\u65b0\u8b66\u62a5\u7684\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u6dfb\u52a0\u5230\u5df2\u53d1\u51fa\u521d\u59cb\u901a\u77e5\u7684\u8b66\u62a5\u7ec4\u4e2d #\u5df2\u7ecf\u53d1\u9001\u4e86(\u901a\u5e38\u7ea65\u5206\u949f\u6216\u4ee5\u4e0a\u3002\uff09 [ group_interval: <duration> | default = 5m ] #\u5982\u679c\u5df2\u7ecf\u53d1\u9001\u4e86\u901a\u77e5\uff0c\u5728\u518d\u6b21\u53d1\u9001\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u5df2\u6210\u529f\u53d1\u9001\u8b66\u62a5(\u901a\u5e38\u7ea63\u5c0f\u65f6\u6216\u4ee5\u4e0a\uff09\u3002 [ repeat_interval: <duration> | default = 4h ] #\u8def\u7531\u5e94\u9759\u97f3\u7684\u65f6\u95f4\u3002\u8fd9\u4e9b\u5fc5\u987b\u4e0e #\u201c\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u201d\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u3002 #\u6b64\u5916\uff0c\u6839\u8282\u70b9\u4e0d\u80fd\u6709\u4efb\u4f55\u9759\u97f3\u65f6\u95f4\u3002 #\u5f53\u8def\u7531\u88ab\u7981\u7528\u65f6\uff0c\u5b83\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u901a\u77e5\uff0c\u4f46\u662f #\u5426\u5219\u6b63\u5e38\u52a8\u4f5c\uff08\u5305\u62ec\u7ed3\u675f\u8def\u7531\u5339\u914d\u8fc7\u7a0b\uff09 #\u5982\u679c\u672a\u8bbe\u7f6e\u201ccontinue\u201d\u9009\u9879\u3002\uff09 mute_time_intervals: [ - <string> ...] #\u96f6\u4e2a\u6216\u591a\u4e2a\u5b50\u8def\u7531\u3002 routes: [ - <route> ... ] \u4f8b\u5b50 #\u5305\u542b\u5b50\u7ea7\u7ee7\u627f\u7684\u6240\u6709\u53c2\u6570\u7684\u6839\u8def\u7531 #\u5982\u679c\u672a\u8986\u76d6\uff0c\u5219\u8fd4\u56de\u8def\u7531\u3002 route: receiver: 'default-receiver' group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [cluster, alertname] #\u4e0e\u4ee5\u4e0b\u5b50\u8def\u7531\u4e0d\u5339\u914d\u7684\u6240\u6709\u8b66\u62a5 #\u5c06\u4fdd\u7559\u5728\u6839\u8282\u70b9\u4e0a\u5e76\u88ab\u5206\u6d3e\u5230\u201cdefault receiver\u201d\u3002 routes: #service=mysql\u6216service=cassandra\u7684\u6240\u6709\u8b66\u62a5 - receiver: 'database-pager' group_wait: 10s matchers: - service=~\"mysql|cassandra\" #\u6240\u6709\u5e26\u6709team=frontend\u6807\u7b7e\u7684\u8b66\u62a5\u90fd\u4e0e\u6b64\u5b50\u8def\u7531\u5339\u914d\u3002 - receiver: 'frontend-pager' group_by: [product, environment] matchers: - team=\"frontend\" \u63a5\u4e0b\u6765\u770b\u4e0b\u5b98\u65b9\u5728git\u5e93\u4e2d\u7684\u4f8b\u5b50 https://github.com/prometheus/alertmanager/blob/main/doc/examples/simple.yml","title":"Route"},{"location":"prometheus/grafana/grafana_dashboard/","text":"Grafana Dashboard Grafana\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u5bf9Prometheus\u7684\u5b8c\u6574\u652f\u6301 Grafana\u53ef\u4ee5\u72ec\u7acb\u90e8\u7f72\uff0c\u5b89\u88c5\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\u3002\u53ef\u4ee5yum\u76f4\u63a5\u5b89\u88c5\u542f\u52a8 \u6211\u6d4b\u8bd5\u7684\u7248\u672c\u4e3aGrafana v6.6.0 \u6dfb\u52a0\u6570\u636e\u6e90 \u542f\u52a8\u540e\uff0c\u8bbf\u95eeGrafana\u7684\u5730\u5740\u540e\uff0c\u9700\u8981\u6dfb\u52a0\u6570\u636e\u6e90\uff0c\u5982\u56fe\uff1a \u6570\u636e\u6e90\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0cGrafana\u53ef\u4ee5\u9488\u5bf9\u591a\u79cd\u6570\u636e\u8fdb\u884c\u51fa\u56fe\uff0c\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff0c\u4f60\u7ed9\u4e00\u6bb5\u6570\u636e\uff0cGrafana\u53ef\u4ee5\u4e3a\u4f60\u628a\u56fe\u5f62\u753b\u51fa\u6765\uff0c\u8fd9\u4e2a\u6570\u636e\u53ef\u4ee5\u662f\u6570\u636e\u5e93\uff0c\u6587\u672c\uff0cAPI\u63a5\u53e3\uff0c\u4efb\u4f55\u53ef\u4ee5\u63d0\u4f9b\u6570\u636e\u7684\u4e1c\u897f\u3002 \u9488\u5bf9Prometheus\u7684\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0c\u6dfb\u52a0\u65f6\u53ea\u9700\u8981\u9009\u62e9Prometheus\uff0c\u8f93\u5165Prometheus\u7684\u5730\u5740\u5373\u53ef\uff0c\u5982\u4e0b\u56fe\uff1a \u6dfb\u52a0\u5b8c\u6210\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5728Grafana\u521b\u5efa\u51fa\u6211\u4eec\u60f3\u8981\u7684\u56fe\u8868\u4e86\u3002","title":"Dashboard"},{"location":"prometheus/grafana/grafana_dashboard/#grafana-dashboard","text":"Grafana\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u5bf9Prometheus\u7684\u5b8c\u6574\u652f\u6301 Grafana\u53ef\u4ee5\u72ec\u7acb\u90e8\u7f72\uff0c\u5b89\u88c5\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\u3002\u53ef\u4ee5yum\u76f4\u63a5\u5b89\u88c5\u542f\u52a8 \u6211\u6d4b\u8bd5\u7684\u7248\u672c\u4e3aGrafana v6.6.0","title":"Grafana Dashboard"},{"location":"prometheus/grafana/grafana_dashboard/#_1","text":"\u542f\u52a8\u540e\uff0c\u8bbf\u95eeGrafana\u7684\u5730\u5740\u540e\uff0c\u9700\u8981\u6dfb\u52a0\u6570\u636e\u6e90\uff0c\u5982\u56fe\uff1a \u6570\u636e\u6e90\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0cGrafana\u53ef\u4ee5\u9488\u5bf9\u591a\u79cd\u6570\u636e\u8fdb\u884c\u51fa\u56fe\uff0c\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff0c\u4f60\u7ed9\u4e00\u6bb5\u6570\u636e\uff0cGrafana\u53ef\u4ee5\u4e3a\u4f60\u628a\u56fe\u5f62\u753b\u51fa\u6765\uff0c\u8fd9\u4e2a\u6570\u636e\u53ef\u4ee5\u662f\u6570\u636e\u5e93\uff0c\u6587\u672c\uff0cAPI\u63a5\u53e3\uff0c\u4efb\u4f55\u53ef\u4ee5\u63d0\u4f9b\u6570\u636e\u7684\u4e1c\u897f\u3002 \u9488\u5bf9Prometheus\u7684\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0c\u6dfb\u52a0\u65f6\u53ea\u9700\u8981\u9009\u62e9Prometheus\uff0c\u8f93\u5165Prometheus\u7684\u5730\u5740\u5373\u53ef\uff0c\u5982\u4e0b\u56fe\uff1a \u6dfb\u52a0\u5b8c\u6210\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5728Grafana\u521b\u5efa\u51fa\u6211\u4eec\u60f3\u8981\u7684\u56fe\u8868\u4e86\u3002","title":"\u6dfb\u52a0\u6570\u636e\u6e90"},{"location":"prometheus/grafana/grafana_install/","text":"\u90e8\u7f72 \u4e0b\u8f7d\u5730\u5740\uff1a https://grafana.com/grafana/download centos\u7cfb\u5217\u5b89\u88c5\uff1a [root@centos7 ~]# wget https://dl.grafana.com/oss/release/grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# sudo yum install grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# systemctl daemon-reload [root@centos7 ~]# systemctl start grafana-server [root@centos7 ~]# systemctl status grafana-server [root@centos7 ~]# grafana-server -v Version 6.6.0 (commit: 5c11bbdfb4, branch: HEAD) [root@centos7 ~]# sudo systemctl enable grafana-server Created symlink from /etc/systemd/system/multi-user.target.wants/grafana-server.service to /usr/lib/systemd/system/grafana-server.service. [root@centos7 ~]# curl 127.0.0.7:3000 <a href=\"/login\">Found</a>.","title":"Grafana\u90e8\u7f72"},{"location":"prometheus/grafana/grafana_install/#_1","text":"\u4e0b\u8f7d\u5730\u5740\uff1a https://grafana.com/grafana/download centos\u7cfb\u5217\u5b89\u88c5\uff1a [root@centos7 ~]# wget https://dl.grafana.com/oss/release/grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# sudo yum install grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# systemctl daemon-reload [root@centos7 ~]# systemctl start grafana-server [root@centos7 ~]# systemctl status grafana-server [root@centos7 ~]# grafana-server -v Version 6.6.0 (commit: 5c11bbdfb4, branch: HEAD) [root@centos7 ~]# sudo systemctl enable grafana-server Created symlink from /etc/systemd/system/multi-user.target.wants/grafana-server.service to /usr/lib/systemd/system/grafana-server.service. [root@centos7 ~]# curl 127.0.0.7:3000 <a href=\"/login\">Found</a>.","title":"\u90e8\u7f72"},{"location":"prometheus/grafana/grafana_var/","text":"\u53d8\u91cf\u5b9a\u4e49 Query \u7c7b\u578b\u7684\u53d8\u91cf\u5141\u8bb8\u60a8\u67e5\u8be2 Prometheus \u4ee5\u83b7\u53d6\u6307\u6807\u3001\u6807\u7b7e\u6216\u6807\u7b7e\u503c\u5217\u8868\u3002Prometheus \u6570\u636e\u6e90\u63d2\u4ef6\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728 Query \u8f93\u5165\u5b57\u6bb5\u4e2d\u4f7f\u7528\u3002 \u59d3\u540d \u63cf\u8ff0 label_names() \u8fd4\u56de\u6807\u7b7e\u540d\u79f0\u5217\u8868\u3002 label_values(label) \u8fd4\u56de label \u6bcf\u4e2a\u6307\u6807\u4e2d\u7684\u6807\u7b7e\u503c\u5217\u8868\u3002 label_values(metric, label) \u8fd4\u56de label \u6307\u5b9a\u6307\u6807\u4e2d \u7684\u6807\u7b7e\u503c\u5217\u8868\u3002 metrics(metric) \u8fd4\u56de\u4e0e\u6307\u5b9a metric \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6307\u6807\u5217\u8868\u3002 query_result(query) \u8fd4\u56de \u7684 Prometheus \u67e5\u8be2\u7ed3\u679c\u5217\u8868 query \u3002 \u5728\u9762\u677f\u7684\u8bbe\u7f6e\u4e2d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e9b\u53d8\u91cf\uff0c\u4f9bGrafana\u5927\u5c4f\u4e2d\u7684\u6570\u636e\u516c\u5f0f\u8c03\u7528 \u4f8b\u5982\uff0c\u83b7\u53d6\u96c6\u7fa4\u603b\u5171\u7684\u5185\u5b58\u5927\u5c0f \u672c\u8eabsum(node_memory_MemTotal_bytes)\u662f\u53e5promSQL\uff0c\u9700\u8981\u653e\u8fdb query_result(query) \u4e2d\uff0c\u4f46\u662f\u67e5\u51fa\u6765\u7684\u6570\u636e\u662f\u5e26\u6807\u7b7e\u548c\u65f6\u95f4\u6233\u7684 {} 2792702402560 1631610328000 \uff0c\u8fd9\u65f6\u5019\u9700\u8981\u6b63\u5219/. ([^\\ ] ) .*/\u6765\u8fc7\u6ee4\u51fa\u4e2d\u95f4\u7684\u6570\u5b57 \u5173\u4e8eGrafana\u6dfb\u52a0Prometheus\u6570\u636e\uff0c\u5b98\u7f51\u6587\u6863\u4e3ahttps://grafana.com/docs/grafana/latest/datasources/prometheus/ \u4e2a\u4eba\u535a\u5ba2\u8bb2\u89e3\uff1a https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/grafana/templating https://www.jianshu.com/p/aa50419b4ed3","title":"Grafana\u6dfb\u52a0\u53d8\u91cf"},{"location":"prometheus/prometheus/Exporter_Metrics/","text":"Exporter Metrics\u89e3\u91ca \u5728\u5b98\u65b9\u7684exporter\u4ecb\u7ecd\u9875\u9762\u4e2d\uff0c\u4ecb\u7ecd\u4e86\u7f16\u5199exporter\u516c\u7ea6\u548cMetrics\u7684\u89e3\u91ca\uff0c\u5730\u5740\uff1ahttps://prometheus.io/docs/instrumenting/writing_clientlibs/#labels \u5b98\u65b9\u5b9a\u4e49\u4e86\u4e3b\u89814\u79cd\u6307\u6807(metric type)\uff1aCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u3001Summary\uff08\u6458\u8981\uff09\u3002 \u8bbf\u95ee http://192.168.70.131:9100/metrics \u4f1a\u8fd4\u56de\u5982\u4e0b\u8fd9\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff1a # HELP node_cpu Seconds the cpus spent in each mode. # TYPE node_cpu counter node_cpu{cpu=\"cpu0\",mode=\"idle\"} 362812.7890625 #HELP\u89e3\u91ca\u4e86\u8be5\u6570\u636e\u662f\u4ec0\u4e48 #TYPE\u4f1a\u8bf4\u8be5\u6570\u636e\u662f\u4ec0\u4e48\u6307\u6807 Counter\uff1a\u53ea\u589e\u4e0d\u51cf\u7684\u8ba1\u6570\u5668 Counter\u7c7b\u578b\u7684\u6307\u6807\u5176\u5de5\u4f5c\u65b9\u5f0f\u548c\u8ba1\u6570\u5668\u4e00\u6837\uff0c\u53ea\u589e\u4e0d\u51cf\uff08\u9664\u975e\u7cfb\u7edf\u53d1\u751f\u91cd\u7f6e\uff09\u3002\u5e38\u89c1\u7684\u76d1\u63a7\u6307\u6807\uff0c\u5982http_requests_total\uff0cnode_cpu\u90fd\u662fCounter\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u3002 \u4e00\u822c\u5728\u5b9a\u4e49Counter\u7c7b\u578b\u6307\u6807\u7684\u540d\u79f0\u65f6\u63a8\u8350\u4f7f\u7528_total\u4f5c\u4e3a\u540e\u7f00\u3002 Counter\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u6709\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bb0\u5f55\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u6b21\u6570\uff0c\u901a\u8fc7\u4ee5\u65f6\u5e8f\u7684\u5f62\u5f0f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u4e86\u89e3\u8be5\u4e8b\u4ef6\u4ea7\u751f\u901f\u7387\u7684\u53d8\u5316\u3002 Gauge\uff1a\u53ef\u589e\u53ef\u51cf\u7684\u4eea\u8868\u76d8 \u4e0eCounter\u4e0d\u540c\uff0cGauge\u7c7b\u578b\u7684\u6307\u6807\u4fa7\u91cd\u4e8e\u53cd\u5e94\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\u3002\u56e0\u6b64\u8fd9\u7c7b\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u53ef\u589e\u53ef\u51cf\u3002\u5e38\u89c1\u6307\u6807\u5982\uff1anode_memory_MemFree\uff08\u4e3b\u673a\u5f53\u524d\u7a7a\u95f2\u7684\u5185\u5bb9\u5927\u5c0f\uff09\u3001node_memory_MemAvailable\uff08\u53ef\u7528\u5185\u5b58\u5927\u5c0f\uff09\u90fd\u662fGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807 Histogram\u548cSummary \u9664\u4e86Counter\u548cGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u4ee5\u5916\uff0cPrometheus\u8fd8\u5b9a\u4e49\u4e86Histogram\u548cSummary\u7684\u6307\u6807\u7c7b\u578b\u3002Histogram\u548cSummary\u4e3b\u7528\u7528\u4e8e\u7edf\u8ba1\u548c\u5206\u6790\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002 \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4eba\u4eec\u90fd\u503e\u5411\u4e8e\u4f7f\u7528\u67d0\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982CPU\u7684\u5e73\u5747\u4f7f\u7528\u7387\u3001\u9875\u9762\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u95ee\u9898\u5f88\u660e\u663e\uff0c\u4ee5\u7cfb\u7edfAPI\u8c03\u7528\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u4e3a\u4f8b\uff1a\u5982\u679c\u5927\u591a\u6570API\u8bf7\u6c42\u90fd\u7ef4\u6301\u5728100ms\u7684\u54cd\u5e94\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u800c\u4e2a\u522b\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4\u9700\u89815s\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u67d0\u4e9bWEB\u9875\u9762\u7684\u54cd\u5e94\u65f6\u95f4\u843d\u5230\u4e2d\u4f4d\u6570\u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u957f\u5c3e\u95ee\u9898\u3002 \u4e3a\u4e86\u533a\u5206\u662f\u5e73\u5747\u7684\u6162\u8fd8\u662f\u957f\u5c3e\u7684\u6162\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u6309\u7167\u8bf7\u6c42\u5ef6\u8fdf\u7684\u8303\u56f4\u8fdb\u884c\u5206\u7ec4\u3002\u4f8b\u5982\uff0c\u7edf\u8ba1\u5ef6\u8fdf\u57280~10ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u6709\u591a\u5c11\u800c10~20ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u53c8\u6709\u591a\u5c11\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5feb\u901f\u5206\u6790\u7cfb\u7edf\u6162\u7684\u539f\u56e0\u3002Histogram\u548cSummary\u90fd\u662f\u4e3a\u4e86\u80fd\u591f\u89e3\u51b3\u8fd9\u6837\u95ee\u9898\u7684\u5b58\u5728\uff0c\u901a\u8fc7Histogram\u548cSummary\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3\u76d1\u63a7\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002","title":"Exporter Metrics\u89e3\u91ca"},{"location":"prometheus/prometheus/Exporter_Metrics/#exporter-metrics","text":"\u5728\u5b98\u65b9\u7684exporter\u4ecb\u7ecd\u9875\u9762\u4e2d\uff0c\u4ecb\u7ecd\u4e86\u7f16\u5199exporter\u516c\u7ea6\u548cMetrics\u7684\u89e3\u91ca\uff0c\u5730\u5740\uff1ahttps://prometheus.io/docs/instrumenting/writing_clientlibs/#labels \u5b98\u65b9\u5b9a\u4e49\u4e86\u4e3b\u89814\u79cd\u6307\u6807(metric type)\uff1aCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u3001Summary\uff08\u6458\u8981\uff09\u3002 \u8bbf\u95ee http://192.168.70.131:9100/metrics \u4f1a\u8fd4\u56de\u5982\u4e0b\u8fd9\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff1a # HELP node_cpu Seconds the cpus spent in each mode. # TYPE node_cpu counter node_cpu{cpu=\"cpu0\",mode=\"idle\"} 362812.7890625 #HELP\u89e3\u91ca\u4e86\u8be5\u6570\u636e\u662f\u4ec0\u4e48 #TYPE\u4f1a\u8bf4\u8be5\u6570\u636e\u662f\u4ec0\u4e48\u6307\u6807","title":"Exporter Metrics\u89e3\u91ca"},{"location":"prometheus/prometheus/Exporter_Metrics/#counter","text":"Counter\u7c7b\u578b\u7684\u6307\u6807\u5176\u5de5\u4f5c\u65b9\u5f0f\u548c\u8ba1\u6570\u5668\u4e00\u6837\uff0c\u53ea\u589e\u4e0d\u51cf\uff08\u9664\u975e\u7cfb\u7edf\u53d1\u751f\u91cd\u7f6e\uff09\u3002\u5e38\u89c1\u7684\u76d1\u63a7\u6307\u6807\uff0c\u5982http_requests_total\uff0cnode_cpu\u90fd\u662fCounter\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u3002 \u4e00\u822c\u5728\u5b9a\u4e49Counter\u7c7b\u578b\u6307\u6807\u7684\u540d\u79f0\u65f6\u63a8\u8350\u4f7f\u7528_total\u4f5c\u4e3a\u540e\u7f00\u3002 Counter\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u6709\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bb0\u5f55\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u6b21\u6570\uff0c\u901a\u8fc7\u4ee5\u65f6\u5e8f\u7684\u5f62\u5f0f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u4e86\u89e3\u8be5\u4e8b\u4ef6\u4ea7\u751f\u901f\u7387\u7684\u53d8\u5316\u3002","title":"Counter\uff1a\u53ea\u589e\u4e0d\u51cf\u7684\u8ba1\u6570\u5668"},{"location":"prometheus/prometheus/Exporter_Metrics/#gauge","text":"\u4e0eCounter\u4e0d\u540c\uff0cGauge\u7c7b\u578b\u7684\u6307\u6807\u4fa7\u91cd\u4e8e\u53cd\u5e94\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\u3002\u56e0\u6b64\u8fd9\u7c7b\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u53ef\u589e\u53ef\u51cf\u3002\u5e38\u89c1\u6307\u6807\u5982\uff1anode_memory_MemFree\uff08\u4e3b\u673a\u5f53\u524d\u7a7a\u95f2\u7684\u5185\u5bb9\u5927\u5c0f\uff09\u3001node_memory_MemAvailable\uff08\u53ef\u7528\u5185\u5b58\u5927\u5c0f\uff09\u90fd\u662fGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807","title":"Gauge\uff1a\u53ef\u589e\u53ef\u51cf\u7684\u4eea\u8868\u76d8"},{"location":"prometheus/prometheus/Exporter_Metrics/#histogramsummary","text":"\u9664\u4e86Counter\u548cGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u4ee5\u5916\uff0cPrometheus\u8fd8\u5b9a\u4e49\u4e86Histogram\u548cSummary\u7684\u6307\u6807\u7c7b\u578b\u3002Histogram\u548cSummary\u4e3b\u7528\u7528\u4e8e\u7edf\u8ba1\u548c\u5206\u6790\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002 \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4eba\u4eec\u90fd\u503e\u5411\u4e8e\u4f7f\u7528\u67d0\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982CPU\u7684\u5e73\u5747\u4f7f\u7528\u7387\u3001\u9875\u9762\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u95ee\u9898\u5f88\u660e\u663e\uff0c\u4ee5\u7cfb\u7edfAPI\u8c03\u7528\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u4e3a\u4f8b\uff1a\u5982\u679c\u5927\u591a\u6570API\u8bf7\u6c42\u90fd\u7ef4\u6301\u5728100ms\u7684\u54cd\u5e94\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u800c\u4e2a\u522b\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4\u9700\u89815s\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u67d0\u4e9bWEB\u9875\u9762\u7684\u54cd\u5e94\u65f6\u95f4\u843d\u5230\u4e2d\u4f4d\u6570\u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u957f\u5c3e\u95ee\u9898\u3002 \u4e3a\u4e86\u533a\u5206\u662f\u5e73\u5747\u7684\u6162\u8fd8\u662f\u957f\u5c3e\u7684\u6162\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u6309\u7167\u8bf7\u6c42\u5ef6\u8fdf\u7684\u8303\u56f4\u8fdb\u884c\u5206\u7ec4\u3002\u4f8b\u5982\uff0c\u7edf\u8ba1\u5ef6\u8fdf\u57280~10ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u6709\u591a\u5c11\u800c10~20ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u53c8\u6709\u591a\u5c11\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5feb\u901f\u5206\u6790\u7cfb\u7edf\u6162\u7684\u539f\u56e0\u3002Histogram\u548cSummary\u90fd\u662f\u4e3a\u4e86\u80fd\u591f\u89e3\u51b3\u8fd9\u6837\u95ee\u9898\u7684\u5b58\u5728\uff0c\u901a\u8fc7Histogram\u548cSummary\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3\u76d1\u63a7\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002","title":"Histogram\u548cSummary"},{"location":"prometheus/prometheus/function/","text":"\u51fd\u6570 avg_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\u3002 range-vector \uff1a\u8fd9\u4e2a\u4ee3\u8868\u4e00\u6bb5\u65f6\u95f4\u6240\u6709\u7684\u503c\uff0c\u6bd4\u5982\u8fd9\u79cd\uff1anode_procs_running[1m] \u7136\u540e\u901a\u8fc7avg_over_time\u8ba1\u7b971\u5206\u949f\u5185\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982\uff1aavg_over_time(node_procs_running[1m]) max_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5927\u503c\u3002 min_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5c0f\u503c\u3002 sum_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u603b\u548c\u3002 count_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u8ba1\u6570\u3002 quantile_over_time(scalar, range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684 \u03c6 \u5206\u4f4d\u6570 (0 \u2264 \u03c6 \u2264 1)\u3002 stddev_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002 stdvar_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u65b9\u5dee\u3002 last_over_time(range-vector)\uff1a\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u7684\u6700\u8fd1\u70b9\u503c\u3002","title":"Prometheus\u8bed\u6cd5\u51fd\u6570"},{"location":"prometheus/prometheus/function/#_1","text":"","title":"\u51fd\u6570"},{"location":"prometheus/prometheus/function/#avg_over_timerange-vector","text":"range-vector \uff1a\u8fd9\u4e2a\u4ee3\u8868\u4e00\u6bb5\u65f6\u95f4\u6240\u6709\u7684\u503c\uff0c\u6bd4\u5982\u8fd9\u79cd\uff1anode_procs_running[1m] \u7136\u540e\u901a\u8fc7avg_over_time\u8ba1\u7b971\u5206\u949f\u5185\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982\uff1aavg_over_time(node_procs_running[1m])","title":"avg_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\u3002"},{"location":"prometheus/prometheus/function/#max_over_timerange-vector","text":"","title":"max_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5927\u503c\u3002"},{"location":"prometheus/prometheus/function/#min_over_timerange-vector","text":"","title":"min_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5c0f\u503c\u3002"},{"location":"prometheus/prometheus/function/#sum_over_timerange-vector","text":"","title":"sum_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u603b\u548c\u3002"},{"location":"prometheus/prometheus/function/#count_over_timerange-vector","text":"","title":"count_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u8ba1\u6570\u3002"},{"location":"prometheus/prometheus/function/#quantile_over_timescalar-range-vector-0-1","text":"","title":"quantile_over_time(scalar, range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684 \u03c6 \u5206\u4f4d\u6570 (0 \u2264 \u03c6 \u2264 1)\u3002"},{"location":"prometheus/prometheus/function/#stddev_over_timerange-vector","text":"","title":"stddev_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002"},{"location":"prometheus/prometheus/function/#stdvar_over_timerange-vector","text":"","title":"stdvar_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u65b9\u5dee\u3002"},{"location":"prometheus/prometheus/function/#last_over_timerange-vector","text":"","title":"last_over_time(range-vector)\uff1a\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u7684\u6700\u8fd1\u70b9\u503c\u3002"},{"location":"prometheus/prometheus/prometheus/","text":"Prometheus \u670d\u52a1\u7aef\u90e8\u7f72 Prometheus\u662f\u670d\u52a1\u7aef\uff0c\u9ed8\u8ba4\u4e5f\u76d1\u63a7\u81ea\u5df1\uff0c\u8d1f\u8d23\u5b9a\u65f6\u8f6e\u8be2\u91c7\u96c6\u6570\u636e\u3001\u5b58\u50a8\u3001\u5bf9\u5916\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u3001\u544a\u8b66\u89c4\u5219\u68c0\u6d4b \u670d\u52a1\u7aef\uff1a \u4e3b\u673a\u540d prometheus\u7248\u672c IP prometheus v2.15.2 192.168.70.130 \u5ba2\u6237\u7aef\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP node_exporter v0.18.1 192.168.70.131 \u544a\u8b66\u4e2d\u5fc3\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP alertmanager v0.20.0 192.168.70.133 prometheus\u7a0b\u5e8f\u4e0b\u8f7d\u5730\u5740 https://github.com/prometheus/prometheus/releases/tag/v2.15.2 [root@prometheus ~]# tar -zxvf prometheus-2.15.2.linux-amd64.tar.gz prometheus-2.15.2.linux-amd64/ prometheus-2.15.2.linux-amd64/promtool prometheus-2.15.2.linux-amd64/consoles/ prometheus-2.15.2.linux-amd64/consoles/node-cpu.html prometheus-2.15.2.linux-amd64/consoles/index.html.example prometheus-2.15.2.linux-amd64/consoles/node-overview.html prometheus-2.15.2.linux-amd64/consoles/prometheus-overview.html prometheus-2.15.2.linux-amd64/consoles/node-disk.html prometheus-2.15.2.linux-amd64/consoles/node.html prometheus-2.15.2.linux-amd64/consoles/prometheus.html prometheus-2.15.2.linux-amd64/NOTICE prometheus-2.15.2.linux-amd64/LICENSE prometheus-2.15.2.linux-amd64/prometheus.yml prometheus-2.15.2.linux-amd64/prometheus prometheus-2.15.2.linux-amd64/tsdb prometheus-2.15.2.linux-amd64/console_libraries/ prometheus-2.15.2.linux-amd64/console_libraries/menu.lib prometheus-2.15.2.linux-amd64/console_libraries/prom.lib [root@prometheus ~]# mv prometheus-2.15.2.linux-amd64 /usr/local/prometheus [root@prometheus prometheus]# cat prometheus.yml | grep -v '^#' | grep -v '^$' global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e\u3002 evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. #\u9644\u52a0\u76ee\u6807\u62c9\u53d6\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e # scrape_timeout is set to the global default (10s). alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. # job\u540d\u79f0\u4f1a\u589e\u52a0\u5230\u62c9\u53d6\u5230\u7684\u6240\u6709\u91c7\u6837\u70b9\u4e0a\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e2ainstance\u76ee\u6807\u670d\u52a1\u7684host\uff1aport\u6807\u7b7e\u4e5f\u4f1a\u589e\u52a0\u5230\u91c7\u6837\u70b9\u4e0a - job_name: 'prometheus' # metrics_path defaults to '/metrics' # \u76d1\u63a7\u6307\u6807\u8def\u5f84\u9ed8\u8ba4\u8bbf\u95eelocalhost:9090/metrics # scheme defaults to 'http'. # \u76ee\u6807\u9ed8\u8ba4\u4e3ahttp static_configs: - targets: ['localhost:9090'] #\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1 [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 1969 #\u542f\u52a8 \u4e00\u4e9b\u542f\u52a8\u53c2\u6570 [root@prometheus prometheus]# ./prometheus --help usage: prometheus [<flags>] The Prometheus monitoring server Flags: -h, --help \u5c55\u793a\u5e2e\u52a9 --version \u663e\u793a\u7248\u672c --config.file=\"prometheus.yml\" \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 --web.listen-address=\"0.0.0.0:9090\" \u7528\u4e8e\u4fa6\u542c UI\u3001API \u7684\u5730\u5740 --web.read-timeout=5m \u8d85\u65f6\u8bfb\u53d6\u8bf7\u6c42\u548c\u5173\u95ed\u7a7a\u95f2\u8fde\u63a5\u4e4b\u524d\u7684\u6700\u5927\u6301\u7eed\u65f6\u95f4 --web.max-connections=512 \u540c\u65f6\u8fde\u63a5\u7684\u6700\u5927\u6570\u91cf --web.external-url=<URL> \u5916\u90e8\u53ef\u8bbf\u95ee Prometheus \u7684 URL --web.route-prefix=<path> Prefix for the internal routes of web endpoints. Defaults to path of --web.external-url. --web.user-assets=<path> Path to static asset directory, available at /user. --web.enable-lifecycle \u901a\u8fc7 HTTP \u8bf7\u6c42\u542f\u7528\u5173\u95ed\u548c\u91cd\u65b0\u52a0\u8f7d\u3002. \u914d\u7f6e\u8be5\u9009\u9879\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c curl -X POST \"http://xxx.xxx.xx.xxx:9090/-/reload\" \u8fdb\u884c\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e --web.enable-admin-api \u4e3a\u7ba1\u7406\u63a7\u5236\u64cd\u4f5c\u542f\u7528 API \u7aef\u70b9 --web.console.templates=\"consoles\" \u63a7\u5236\u53f0\u6a21\u677f\u76ee\u5f55\u7684\u8def\u5f84\uff0c\u4f4d\u4e8e /consoles\u3002 --web.console.libraries=\"console_libraries\" Path to the console library directory. --web.page-title=\"Prometheus Time Series Collection and Processing Server\" Document title of Prometheus instance. --web.cors.origin=\".*\" Regex for CORS origin. It is fully anchored. Example: 'https?://(domain1|domain2)\\.com' --storage.tsdb.path=\"data/\" tsdb\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5f53\u524ddata/ --storage.tsdb.retention=STORAGE.TSDB.RETENTION \u5b58\u50a8\u6570\u636e\u4fdd\u5b58\u591a\u957f\u65f6\u95f4\u7684\uff0c\u9ed8\u8ba415\u5929\uff0c\u8fd9\u4e2a\u9009\u9879\u5728\u8fd9\u4e2a\u7248\u672c\u5df2\u7ecf\u5f03\u7528\uff0c\u7528storage.tsdb.retention.time\u4ee3\u66ff --storage.tsdb.retention.time=STORAGE.TSDB.RETENTION.TIME \u4fdd\u7559\u65f6\u95f4\u9ed8\u8ba4\u4e3a15d\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1ay\u3001 w\u3001d\u3001h\u3001m\u3001s\u3001ms\u3002 --storage.tsdb.retention.size=STORAGE.TSDB.RETENTION.SIZE [\u5b9e\u9a8c] \u53ef\u4ee5\u4e3a\u5757\u5b58\u50a8\u7684\u6700\u5927\u5b57\u8282\u6570\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1aKB\u3001MB\u3001GB\u3001TB\u3001PB\u3002 \u6b64\u6807\u5fd7\u662f\u5b9e\u9a8c\u6027\u7684\uff0c\u53ef\u4ee5\u5728\u672a\u6765\u7248\u672c\u4e2d\u66f4\u6539\u3002 --storage.tsdb.no-lockfile \u4e0d\u8981\u5728\u6570\u636e\u76ee\u5f55\u4e2d\u521b\u5efa\u9501\u6587\u4ef6 --storage.tsdb.allow-overlapping-blocks [EXPERIMENTAL] Allow overlapping blocks, which in turn enables vertical compaction and vertical query merge. --storage.tsdb.wal-compression Compress the tsdb WAL. --storage.remote.flush-deadline=<duration> How long to wait flushing sample on shutdown or config reload. --storage.remote.read-sample-limit=5e7 Maximum overall number of samples to return via the remote read interface, in a single query. 0 means no limit. This limit is ignored for streamed response types. --storage.remote.read-concurrent-limit=10 Maximum number of concurrent remote read calls. 0 means no limit. --storage.remote.read-max-bytes-in-frame=1048576 Maximum number of bytes in a single frame for streaming remote read response types before marshalling. Note that client might have limit on frame size as well. 1MB as recommended by protobuf by default. --rules.alert.for-outage-tolerance=1h Max time to tolerate prometheus outage for restoring \"for\" state of alert. --rules.alert.for-grace-period=10m Minimum duration between alert and restored \"for\" state. This is maintained only for alerts with configured \"for\" time greater than grace period. --rules.alert.resend-delay=1m Minimum amount of time to wait before resending an alert to Alertmanager. --alertmanager.notification-queue-capacity=10000 The capacity of the queue for pending Alertmanager notifications. --alertmanager.timeout=10s Timeout for sending alerts to Alertmanager. --query.lookback-delta=5m The maximum lookback duration for retrieving metrics during expression evaluations. --query.timeout=2m Maximum time a query may take before being aborted. --query.max-concurrency=20 \u5e76\u53d1\u6267\u884c\u7684\u6700\u5927\u67e5\u8be2\u6570\u3002 --query.max-samples=50000000 Maximum number of samples a single query can load into memory. Note that queries will fail if they try to load more samples than this into memory, so this also limits the number of samples a query can return. --log.level=info Only log messages with the given severity or above. One of: [debug, info, warn, error] --log.format=logfmt Output format of log messages. One of: [logfmt, json] \u8fd9\u5c31\u90e8\u7f72\u5b8c\u6210\u4e86\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/\u5c31\u80fd\u770b\u5230\u76d1\u63a7\u9875\u9762\u3002\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1\uff0c\u90a3\u4e48\u76d1\u63a7\u54ea\u4e9b\u6307\u6807\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/metrics\u5c31\u53ef\u4ee5\u770b\u5230\u4e86\u3002 \u5ba2\u6237\u7aef\u90e8\u7f72 exporter\uff1a\u4ee5http\u7684\u65b9\u5f0f\uff0c\u66b4\u9732\u6536\u96c6\u7684metric\uff0c\u7136\u540ePrometheus server\u4f1a\u5b9a\u671f\u6765\u62c9\u53d6\u6570\u636e\uff0c\u53ef\u5b89\u88c5\u5728\u88ab\u76d1\u63a7\u4e3b\u673a node_exporter\u662fexporter\u7684\u4e00\u79cd\uff0c\u7528\u6765\u76d1\u63a7Linux\u4e3b\u673a\uff0c\u5982\u679c\u76d1\u63a7windows\u4e3b\u673a\uff0c\u7528windows_exporter,\u5730\u5740\u5982\u4e0b https://github.com/prometheus-community/windows_exporter \u90e8\u7f72 node_exporter\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/prometheus/node_exporter/releases/tag/v0.18.1 [root@node_exporter ~]# tar zxvf node_exporter-0.18.1.linux-amd64.tar.gz node_exporter-0.18.1.linux-amd64/ node_exporter-0.18.1.linux-amd64/node_exporter node_exporter-0.18.1.linux-amd64/NOTICE node_exporter-0.18.1.linux-amd64/LICENSE [root@node_exporter ~]# mv node_exporter-0.18.1.linux-amd64 /usr/local/node_exporter [root@node_exporter ~]# cd /usr/local/node_exporter/ [root@node_exporter node_exporter]# nohup ./node_exporter > node_exporter.log 2>&1 & [root@node_exporter node_exporter]# ss -tanp | grep node_exporter LISTEN 0 128 [::]:9100 [::]:* users:((\"node_exporter\",pid=1846,fd=3)) \u4fee\u6539\u670d\u52a1\u7aefPrometheus\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u4f7f\u5176\u914d\u7f6e\u751f\u6548 [root@prometheus prometheus]# cat prometheus.yml # my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# ps -ef | grep prome root 1969 1808 0 11:05 pts/0 00:00:02 ./prometheus --config.file=prometheus.yml root 11775 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# kill -9 1969 [root@prometheus prometheus]# ps -ef | grep prome root 11777 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# ps -ef | grep prome root 11779 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 11786 \u7136\u540e\u67e5\u770bprometheus\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u51fa\u73b0131\u8be5\u673a\u5668 \u544a\u8b66\u4e2d\u5fc3 Alertmanager\u90e8\u7f72 Alertmanager \u7528\u4e8e\u53d1\u9001\u544a\u8b66\uff0c \u662f\u771f\u6b63\u53d1\u9001\u4fe1\u606f\u7ed9\u7528\u6237\u7684\u6a21\u5757\u3002 Alertmanager \u4f1a\u63a5\u53d7Prometheus\u53d1\u9001\u8fc7\u6765\u7684\u8b66\u544a\u4fe1\u606f\uff0c\u518d\u7531Alertmanager\u6765\u53d1\u9001\u3002 [root@alertmanager ~]# tar -zxvf alertmanager-0.20.0.linux-amd64.tar.gz alertmanager-0.20.0.linux-amd64/ alertmanager-0.20.0.linux-amd64/LICENSE alertmanager-0.20.0.linux-amd64/alertmanager alertmanager-0.20.0.linux-amd64/amtool alertmanager-0.20.0.linux-amd64/NOTICE alertmanager-0.20.0.linux-amd64/alertmanager.yml [root@alertmanager ~]# mv alertmanager-0.20.0.linux-amd64 /usr/local/alertmanager [root@alertmanager ~]# cd /usr/local/alertmanager/ [root@alertmanager alertmanager]# cat alertmanager.yml global: resolve_timeout: 5m route: group_by: ['alertname'] group_wait: 10s group_interval: 10s repeat_interval: 1h receiver: 'web.hook' receivers: - name: 'web.hook' webhook_configs: - url: 'http://127.0.0.1:5001/' inhibit_rules: - source_match: severity: 'critical' target_match: severity: 'warning' equal: ['alertname', 'dev', 'instance'] [root@alertmanager alertmanager]# nohup ./alertmanager --config.file=./alertmanager.yml > alertmanager.log 2>&1 & \u7136\u540e\u4fee\u6539prometheus\u914d\u7f6e\uff0c\u914d\u7f6e\u4e00\u4e9b\u544a\u8b66 [root@prometheus prometheus]# cat prometheus.yml global: scrape_interval: 1s evaluation_interval: 1s alerting: alertmanagers: - static_configs: - targets: ['192.168.70.133:9093'] rule_files: - rules/*.yml scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# cat rules/host.yml groups: - name: Host rules: - alert: running expr: node_procs_running > 0 for: 5s labels: serverity: high annotations: summary: \"{{$labels.instance}}: High running\" description: \"{{$labels.instance}}: running is {{$value}}\" [root@prometheus prometheus]# ps -ef | grep prom root 1168 1 0 13:49 ? 00:00:00 /sbin/dhclient -1 -q -lf /var/lib/dhclient/dhclient-f52ff6ca-5e7d-4f00-b4f7-679ef47b77da-ens33.lease -pf /var/run/dhclient-ens33.pid -H prometheus ens33 root 1728 1704 0 13:54 pts/0 00:00:03 ./prometheus --config.file=prometheus.yml root 1847 1704 0 14:55 pts/0 00:00:00 grep --color=auto prom [root@prometheus prometheus]# kill -9 1728 [root@prometheus prometheus]# [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml --web.enable-lifecycle > prometheus.log 2>&1 & \u8fd9\u91cc\u6709\u4e00\u4e9b\u53c2\u6570\u9700\u8981\u660e\u786e\u4e0b\uff1a evaluation_interval \u544a\u8b66\u7684\u68c0\u6d4b\u5468\u671f\uff0c\u5c31\u662f\u544a\u8b66\u7684\u89e6\u53d1\u5468\u671f\uff0c\u6bd4\u5982\u4f60\u5199\u4e86\u4e00\u4e2a\u68c0\u6d4b\u811a\u672c\u6216\u8005rules\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5c31\u662f\u6bcf\u9694\u591a\u957f\u65f6\u95f4\u53bb\u8c03\u7528\u8fd9\u4e2a\u811a\u672c scrape_interval \u76d1\u63a7\u4fe1\u606f\u7684\u62c9\u53d6\u65f6\u95f4\uff0c\u5c31\u662f\u62c9\u53d6metrics\u7684\u5468\u671f\uff0cPrometheus\u662f\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u53bb\u62c9\u53d6target\u4e2d\u7684\u76ee\u6807\u7684metrics \u5728roles\u4e2d expr \u7528\u6765\u89e6\u53d1\u62a5\u8b66\u7684\u516c\u5f0f\uff0c\u53ef\u4ee5\u5728prom\u8f93\u5165\u8fd9\u4e2a\u516c\u5f0f\u67e5\u770b\u5f53\u524d\u503c for \u8fd9\u4e2a\u89e6\u53d1\u6301\u7eed\u4e86\u591a\u4e45\uff0c\u6709\u4e9b\u6307\u6807\u5fc5\u987b\u7ef4\u6301\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u7b97\u5f02\u5e38\uff0c\u5728Prometheus\u4e2d\uff0c\u544a\u8b66\u4e3a3\u79cd\u72b6\u6001\uff0cInactive\u3001Pending\u3001Firing\u4e09\u79cd\uff0cinactive\u5c31\u662f\u6ca1\u6709\u89e6\u53d1\u7684\u544a\u8b66\uff0cPending\u5c31\u662f\u5df2\u7ecf\u89e6\u53d1\u7684\u544a\u8b66\uff0c\u4f46\u662f\u6ca1\u6709\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\uff0cFiring\u5c31\u662f\u5df2\u7ecf\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\u7684\u544a\u8b66\uff0c\u5c31\u662f\u6709\u6548\u544a\u8b66 \u4e0a\u9762\u6211\u76d1\u63a7\u7684\u662f\u4e3b\u673a\u5185\u7684\u6b63\u5728\u8fd0\u884c\u6216\u8005\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u5927\u4e8e0\u5c31\u544a\u8b66\uff0c\u6b63\u5e38\u8fd9\u4e2a\u503c\u662f\u4e00\u76f4\u5927\u4e8e0\u7684 \u67e5\u770bprometheus\u4e0a\u7684\u544a\u8b66\uff1a \u663e\u793a\u5df2\u7ecf\u6210\u529f\u544a\u8b66 \u7136\u540e\u67e5\u770baltermanager\u4e0a\u7684\u544a\u8b66 \u8bbf\u95ee192.168.70.133:9093 info\u5c31\u662frules\u4e2d\u586b\u5199\u7684\u5185\u5bb9\uff0csource\u70b9\u51fb\u4f1a\u8df3\u8f6c\u53bb\u663e\u793aprometheus\u4e2d\u8be5\u516c\u5f0f\u7684\u5b9e\u65f6\u503c\uff0csilence\u5c31\u662f\u521b\u5efa\u4e00\u6761\u8be5\u544a\u8b66\u7684\u9759\u97f3\u89c4\u5219","title":"Alertmanager\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus/#_1","text":"Prometheus\u662f\u670d\u52a1\u7aef\uff0c\u9ed8\u8ba4\u4e5f\u76d1\u63a7\u81ea\u5df1\uff0c\u8d1f\u8d23\u5b9a\u65f6\u8f6e\u8be2\u91c7\u96c6\u6570\u636e\u3001\u5b58\u50a8\u3001\u5bf9\u5916\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u3001\u544a\u8b66\u89c4\u5219\u68c0\u6d4b \u670d\u52a1\u7aef\uff1a \u4e3b\u673a\u540d prometheus\u7248\u672c IP prometheus v2.15.2 192.168.70.130 \u5ba2\u6237\u7aef\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP node_exporter v0.18.1 192.168.70.131 \u544a\u8b66\u4e2d\u5fc3\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP alertmanager v0.20.0 192.168.70.133 prometheus\u7a0b\u5e8f\u4e0b\u8f7d\u5730\u5740 https://github.com/prometheus/prometheus/releases/tag/v2.15.2 [root@prometheus ~]# tar -zxvf prometheus-2.15.2.linux-amd64.tar.gz prometheus-2.15.2.linux-amd64/ prometheus-2.15.2.linux-amd64/promtool prometheus-2.15.2.linux-amd64/consoles/ prometheus-2.15.2.linux-amd64/consoles/node-cpu.html prometheus-2.15.2.linux-amd64/consoles/index.html.example prometheus-2.15.2.linux-amd64/consoles/node-overview.html prometheus-2.15.2.linux-amd64/consoles/prometheus-overview.html prometheus-2.15.2.linux-amd64/consoles/node-disk.html prometheus-2.15.2.linux-amd64/consoles/node.html prometheus-2.15.2.linux-amd64/consoles/prometheus.html prometheus-2.15.2.linux-amd64/NOTICE prometheus-2.15.2.linux-amd64/LICENSE prometheus-2.15.2.linux-amd64/prometheus.yml prometheus-2.15.2.linux-amd64/prometheus prometheus-2.15.2.linux-amd64/tsdb prometheus-2.15.2.linux-amd64/console_libraries/ prometheus-2.15.2.linux-amd64/console_libraries/menu.lib prometheus-2.15.2.linux-amd64/console_libraries/prom.lib [root@prometheus ~]# mv prometheus-2.15.2.linux-amd64 /usr/local/prometheus [root@prometheus prometheus]# cat prometheus.yml | grep -v '^#' | grep -v '^$' global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e\u3002 evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. #\u9644\u52a0\u76ee\u6807\u62c9\u53d6\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e # scrape_timeout is set to the global default (10s). alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. # job\u540d\u79f0\u4f1a\u589e\u52a0\u5230\u62c9\u53d6\u5230\u7684\u6240\u6709\u91c7\u6837\u70b9\u4e0a\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e2ainstance\u76ee\u6807\u670d\u52a1\u7684host\uff1aport\u6807\u7b7e\u4e5f\u4f1a\u589e\u52a0\u5230\u91c7\u6837\u70b9\u4e0a - job_name: 'prometheus' # metrics_path defaults to '/metrics' # \u76d1\u63a7\u6307\u6807\u8def\u5f84\u9ed8\u8ba4\u8bbf\u95eelocalhost:9090/metrics # scheme defaults to 'http'. # \u76ee\u6807\u9ed8\u8ba4\u4e3ahttp static_configs: - targets: ['localhost:9090'] #\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1 [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 1969 #\u542f\u52a8 \u4e00\u4e9b\u542f\u52a8\u53c2\u6570 [root@prometheus prometheus]# ./prometheus --help usage: prometheus [<flags>] The Prometheus monitoring server Flags: -h, --help \u5c55\u793a\u5e2e\u52a9 --version \u663e\u793a\u7248\u672c --config.file=\"prometheus.yml\" \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 --web.listen-address=\"0.0.0.0:9090\" \u7528\u4e8e\u4fa6\u542c UI\u3001API \u7684\u5730\u5740 --web.read-timeout=5m \u8d85\u65f6\u8bfb\u53d6\u8bf7\u6c42\u548c\u5173\u95ed\u7a7a\u95f2\u8fde\u63a5\u4e4b\u524d\u7684\u6700\u5927\u6301\u7eed\u65f6\u95f4 --web.max-connections=512 \u540c\u65f6\u8fde\u63a5\u7684\u6700\u5927\u6570\u91cf --web.external-url=<URL> \u5916\u90e8\u53ef\u8bbf\u95ee Prometheus \u7684 URL --web.route-prefix=<path> Prefix for the internal routes of web endpoints. Defaults to path of --web.external-url. --web.user-assets=<path> Path to static asset directory, available at /user. --web.enable-lifecycle \u901a\u8fc7 HTTP \u8bf7\u6c42\u542f\u7528\u5173\u95ed\u548c\u91cd\u65b0\u52a0\u8f7d\u3002. \u914d\u7f6e\u8be5\u9009\u9879\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c curl -X POST \"http://xxx.xxx.xx.xxx:9090/-/reload\" \u8fdb\u884c\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e --web.enable-admin-api \u4e3a\u7ba1\u7406\u63a7\u5236\u64cd\u4f5c\u542f\u7528 API \u7aef\u70b9 --web.console.templates=\"consoles\" \u63a7\u5236\u53f0\u6a21\u677f\u76ee\u5f55\u7684\u8def\u5f84\uff0c\u4f4d\u4e8e /consoles\u3002 --web.console.libraries=\"console_libraries\" Path to the console library directory. --web.page-title=\"Prometheus Time Series Collection and Processing Server\" Document title of Prometheus instance. --web.cors.origin=\".*\" Regex for CORS origin. It is fully anchored. Example: 'https?://(domain1|domain2)\\.com' --storage.tsdb.path=\"data/\" tsdb\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5f53\u524ddata/ --storage.tsdb.retention=STORAGE.TSDB.RETENTION \u5b58\u50a8\u6570\u636e\u4fdd\u5b58\u591a\u957f\u65f6\u95f4\u7684\uff0c\u9ed8\u8ba415\u5929\uff0c\u8fd9\u4e2a\u9009\u9879\u5728\u8fd9\u4e2a\u7248\u672c\u5df2\u7ecf\u5f03\u7528\uff0c\u7528storage.tsdb.retention.time\u4ee3\u66ff --storage.tsdb.retention.time=STORAGE.TSDB.RETENTION.TIME \u4fdd\u7559\u65f6\u95f4\u9ed8\u8ba4\u4e3a15d\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1ay\u3001 w\u3001d\u3001h\u3001m\u3001s\u3001ms\u3002 --storage.tsdb.retention.size=STORAGE.TSDB.RETENTION.SIZE [\u5b9e\u9a8c] \u53ef\u4ee5\u4e3a\u5757\u5b58\u50a8\u7684\u6700\u5927\u5b57\u8282\u6570\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1aKB\u3001MB\u3001GB\u3001TB\u3001PB\u3002 \u6b64\u6807\u5fd7\u662f\u5b9e\u9a8c\u6027\u7684\uff0c\u53ef\u4ee5\u5728\u672a\u6765\u7248\u672c\u4e2d\u66f4\u6539\u3002 --storage.tsdb.no-lockfile \u4e0d\u8981\u5728\u6570\u636e\u76ee\u5f55\u4e2d\u521b\u5efa\u9501\u6587\u4ef6 --storage.tsdb.allow-overlapping-blocks [EXPERIMENTAL] Allow overlapping blocks, which in turn enables vertical compaction and vertical query merge. --storage.tsdb.wal-compression Compress the tsdb WAL. --storage.remote.flush-deadline=<duration> How long to wait flushing sample on shutdown or config reload. --storage.remote.read-sample-limit=5e7 Maximum overall number of samples to return via the remote read interface, in a single query. 0 means no limit. This limit is ignored for streamed response types. --storage.remote.read-concurrent-limit=10 Maximum number of concurrent remote read calls. 0 means no limit. --storage.remote.read-max-bytes-in-frame=1048576 Maximum number of bytes in a single frame for streaming remote read response types before marshalling. Note that client might have limit on frame size as well. 1MB as recommended by protobuf by default. --rules.alert.for-outage-tolerance=1h Max time to tolerate prometheus outage for restoring \"for\" state of alert. --rules.alert.for-grace-period=10m Minimum duration between alert and restored \"for\" state. This is maintained only for alerts with configured \"for\" time greater than grace period. --rules.alert.resend-delay=1m Minimum amount of time to wait before resending an alert to Alertmanager. --alertmanager.notification-queue-capacity=10000 The capacity of the queue for pending Alertmanager notifications. --alertmanager.timeout=10s Timeout for sending alerts to Alertmanager. --query.lookback-delta=5m The maximum lookback duration for retrieving metrics during expression evaluations. --query.timeout=2m Maximum time a query may take before being aborted. --query.max-concurrency=20 \u5e76\u53d1\u6267\u884c\u7684\u6700\u5927\u67e5\u8be2\u6570\u3002 --query.max-samples=50000000 Maximum number of samples a single query can load into memory. Note that queries will fail if they try to load more samples than this into memory, so this also limits the number of samples a query can return. --log.level=info Only log messages with the given severity or above. One of: [debug, info, warn, error] --log.format=logfmt Output format of log messages. One of: [logfmt, json] \u8fd9\u5c31\u90e8\u7f72\u5b8c\u6210\u4e86\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/\u5c31\u80fd\u770b\u5230\u76d1\u63a7\u9875\u9762\u3002\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1\uff0c\u90a3\u4e48\u76d1\u63a7\u54ea\u4e9b\u6307\u6807\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/metrics\u5c31\u53ef\u4ee5\u770b\u5230\u4e86\u3002","title":"\u670d\u52a1\u7aef\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus/#_2","text":"exporter\uff1a\u4ee5http\u7684\u65b9\u5f0f\uff0c\u66b4\u9732\u6536\u96c6\u7684metric\uff0c\u7136\u540ePrometheus server\u4f1a\u5b9a\u671f\u6765\u62c9\u53d6\u6570\u636e\uff0c\u53ef\u5b89\u88c5\u5728\u88ab\u76d1\u63a7\u4e3b\u673a node_exporter\u662fexporter\u7684\u4e00\u79cd\uff0c\u7528\u6765\u76d1\u63a7Linux\u4e3b\u673a\uff0c\u5982\u679c\u76d1\u63a7windows\u4e3b\u673a\uff0c\u7528windows_exporter,\u5730\u5740\u5982\u4e0b https://github.com/prometheus-community/windows_exporter \u90e8\u7f72 node_exporter\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/prometheus/node_exporter/releases/tag/v0.18.1 [root@node_exporter ~]# tar zxvf node_exporter-0.18.1.linux-amd64.tar.gz node_exporter-0.18.1.linux-amd64/ node_exporter-0.18.1.linux-amd64/node_exporter node_exporter-0.18.1.linux-amd64/NOTICE node_exporter-0.18.1.linux-amd64/LICENSE [root@node_exporter ~]# mv node_exporter-0.18.1.linux-amd64 /usr/local/node_exporter [root@node_exporter ~]# cd /usr/local/node_exporter/ [root@node_exporter node_exporter]# nohup ./node_exporter > node_exporter.log 2>&1 & [root@node_exporter node_exporter]# ss -tanp | grep node_exporter LISTEN 0 128 [::]:9100 [::]:* users:((\"node_exporter\",pid=1846,fd=3)) \u4fee\u6539\u670d\u52a1\u7aefPrometheus\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u4f7f\u5176\u914d\u7f6e\u751f\u6548 [root@prometheus prometheus]# cat prometheus.yml # my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# ps -ef | grep prome root 1969 1808 0 11:05 pts/0 00:00:02 ./prometheus --config.file=prometheus.yml root 11775 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# kill -9 1969 [root@prometheus prometheus]# ps -ef | grep prome root 11777 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# ps -ef | grep prome root 11779 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 11786 \u7136\u540e\u67e5\u770bprometheus\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u51fa\u73b0131\u8be5\u673a\u5668","title":"\u5ba2\u6237\u7aef\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus/#alertmanager","text":"Alertmanager \u7528\u4e8e\u53d1\u9001\u544a\u8b66\uff0c \u662f\u771f\u6b63\u53d1\u9001\u4fe1\u606f\u7ed9\u7528\u6237\u7684\u6a21\u5757\u3002 Alertmanager \u4f1a\u63a5\u53d7Prometheus\u53d1\u9001\u8fc7\u6765\u7684\u8b66\u544a\u4fe1\u606f\uff0c\u518d\u7531Alertmanager\u6765\u53d1\u9001\u3002 [root@alertmanager ~]# tar -zxvf alertmanager-0.20.0.linux-amd64.tar.gz alertmanager-0.20.0.linux-amd64/ alertmanager-0.20.0.linux-amd64/LICENSE alertmanager-0.20.0.linux-amd64/alertmanager alertmanager-0.20.0.linux-amd64/amtool alertmanager-0.20.0.linux-amd64/NOTICE alertmanager-0.20.0.linux-amd64/alertmanager.yml [root@alertmanager ~]# mv alertmanager-0.20.0.linux-amd64 /usr/local/alertmanager [root@alertmanager ~]# cd /usr/local/alertmanager/ [root@alertmanager alertmanager]# cat alertmanager.yml global: resolve_timeout: 5m route: group_by: ['alertname'] group_wait: 10s group_interval: 10s repeat_interval: 1h receiver: 'web.hook' receivers: - name: 'web.hook' webhook_configs: - url: 'http://127.0.0.1:5001/' inhibit_rules: - source_match: severity: 'critical' target_match: severity: 'warning' equal: ['alertname', 'dev', 'instance'] [root@alertmanager alertmanager]# nohup ./alertmanager --config.file=./alertmanager.yml > alertmanager.log 2>&1 & \u7136\u540e\u4fee\u6539prometheus\u914d\u7f6e\uff0c\u914d\u7f6e\u4e00\u4e9b\u544a\u8b66 [root@prometheus prometheus]# cat prometheus.yml global: scrape_interval: 1s evaluation_interval: 1s alerting: alertmanagers: - static_configs: - targets: ['192.168.70.133:9093'] rule_files: - rules/*.yml scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# cat rules/host.yml groups: - name: Host rules: - alert: running expr: node_procs_running > 0 for: 5s labels: serverity: high annotations: summary: \"{{$labels.instance}}: High running\" description: \"{{$labels.instance}}: running is {{$value}}\" [root@prometheus prometheus]# ps -ef | grep prom root 1168 1 0 13:49 ? 00:00:00 /sbin/dhclient -1 -q -lf /var/lib/dhclient/dhclient-f52ff6ca-5e7d-4f00-b4f7-679ef47b77da-ens33.lease -pf /var/run/dhclient-ens33.pid -H prometheus ens33 root 1728 1704 0 13:54 pts/0 00:00:03 ./prometheus --config.file=prometheus.yml root 1847 1704 0 14:55 pts/0 00:00:00 grep --color=auto prom [root@prometheus prometheus]# kill -9 1728 [root@prometheus prometheus]# [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml --web.enable-lifecycle > prometheus.log 2>&1 & \u8fd9\u91cc\u6709\u4e00\u4e9b\u53c2\u6570\u9700\u8981\u660e\u786e\u4e0b\uff1a evaluation_interval \u544a\u8b66\u7684\u68c0\u6d4b\u5468\u671f\uff0c\u5c31\u662f\u544a\u8b66\u7684\u89e6\u53d1\u5468\u671f\uff0c\u6bd4\u5982\u4f60\u5199\u4e86\u4e00\u4e2a\u68c0\u6d4b\u811a\u672c\u6216\u8005rules\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5c31\u662f\u6bcf\u9694\u591a\u957f\u65f6\u95f4\u53bb\u8c03\u7528\u8fd9\u4e2a\u811a\u672c scrape_interval \u76d1\u63a7\u4fe1\u606f\u7684\u62c9\u53d6\u65f6\u95f4\uff0c\u5c31\u662f\u62c9\u53d6metrics\u7684\u5468\u671f\uff0cPrometheus\u662f\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u53bb\u62c9\u53d6target\u4e2d\u7684\u76ee\u6807\u7684metrics \u5728roles\u4e2d expr \u7528\u6765\u89e6\u53d1\u62a5\u8b66\u7684\u516c\u5f0f\uff0c\u53ef\u4ee5\u5728prom\u8f93\u5165\u8fd9\u4e2a\u516c\u5f0f\u67e5\u770b\u5f53\u524d\u503c for \u8fd9\u4e2a\u89e6\u53d1\u6301\u7eed\u4e86\u591a\u4e45\uff0c\u6709\u4e9b\u6307\u6807\u5fc5\u987b\u7ef4\u6301\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u7b97\u5f02\u5e38\uff0c\u5728Prometheus\u4e2d\uff0c\u544a\u8b66\u4e3a3\u79cd\u72b6\u6001\uff0cInactive\u3001Pending\u3001Firing\u4e09\u79cd\uff0cinactive\u5c31\u662f\u6ca1\u6709\u89e6\u53d1\u7684\u544a\u8b66\uff0cPending\u5c31\u662f\u5df2\u7ecf\u89e6\u53d1\u7684\u544a\u8b66\uff0c\u4f46\u662f\u6ca1\u6709\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\uff0cFiring\u5c31\u662f\u5df2\u7ecf\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\u7684\u544a\u8b66\uff0c\u5c31\u662f\u6709\u6548\u544a\u8b66 \u4e0a\u9762\u6211\u76d1\u63a7\u7684\u662f\u4e3b\u673a\u5185\u7684\u6b63\u5728\u8fd0\u884c\u6216\u8005\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u5927\u4e8e0\u5c31\u544a\u8b66\uff0c\u6b63\u5e38\u8fd9\u4e2a\u503c\u662f\u4e00\u76f4\u5927\u4e8e0\u7684 \u67e5\u770bprometheus\u4e0a\u7684\u544a\u8b66\uff1a \u663e\u793a\u5df2\u7ecf\u6210\u529f\u544a\u8b66 \u7136\u540e\u67e5\u770baltermanager\u4e0a\u7684\u544a\u8b66 \u8bbf\u95ee192.168.70.133:9093 info\u5c31\u662frules\u4e2d\u586b\u5199\u7684\u5185\u5bb9\uff0csource\u70b9\u51fb\u4f1a\u8df3\u8f6c\u53bb\u663e\u793aprometheus\u4e2d\u8be5\u516c\u5f0f\u7684\u5b9e\u65f6\u503c\uff0csilence\u5c31\u662f\u521b\u5efa\u4e00\u6761\u8be5\u544a\u8b66\u7684\u9759\u97f3\u89c4\u5219","title":"\u544a\u8b66\u4e2d\u5fc3 Alertmanager\u90e8\u7f72"},{"location":"prometheus/prometheus/query_rules/","text":"metric\u4ecb\u7ecd\uff0cPrometheus\u672c\u8d28\u4e0a\u662f\u65f6\u5e8f\u6570\u636e\u5e93\uff0cPrometheus\u4f1a\u5c06\u6240\u6709\u91c7\u96c6\u5230\u7684\u6837\u672c\u6570\u636e\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u5185\u5b58\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14\u5b9a\u65f6\u4fdd\u5b58\u5230\u786c\u76d8\u4e0a \u6570\u636e\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a \u5728Prometheus\u7684\u4e16\u754c\u91cc\u9762\uff0c\u6240\u6709\u7684\u6570\u503c\u90fd\u662f64 bit\u7684\u3002\u6bcf\u6761\u65f6\u95f4\u5e8f\u5217\u91cc\u9762\u8bb0\u5f55\u7684\u5c31\u662f64 bit Timestamp\uff08\u65f6\u95f4\u6233\uff09\u548c64 bit\u7684Sample Value\uff08\u91c7\u6837\u503c\uff09 \u5728prometheus\u6709\u4e24\u79cd\u67e5\u8be2\u65b9\u5f0f\uff0c\u67e5\u8be2\u4e00\u822c\u662f\u4e0d\u5e26\u65f6\u95f4\u7684\uff0c\u8be5\u4e24\u79cd\u65b9\u5f0f\u5982\u4e0b\uff0c \u67e5\u8be2\u4ec0\u4e48\u6570\u636e\uff0c\u53ea\u8981\u5199\u597dPromQL\uff0c\u5728Prometheus\u66b4\u9732\u76849090\u7aef\u53e3\u7684\u9875\u9762\u4e2d\u67e5\u8be2\u5373\u53ef\u3002 \u76f8\u5173\u8bed\u6cd5\uff1a label\u4e0a\u7684\u5339\u914d\u5668 \u5339\u914d\u5668\u662f\u4f5c\u7528\u4e8e\u6807\u7b7e\u4e0a\u7684\uff0c\u6807\u7b7e\u5339\u914d\u5668\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0cPrometheus\u652f\u6301\u5b8c\u5168\u5339\u914d\u548c\u6b63\u5219\u5339\u914d\u4e24\u79cd\u6a21\u5f0f\u3002 1.\u76f8\u7b49\u5339\u914d\u5668\uff08=\uff09 \u76f8\u7b49\u5339\u914d\u5668\uff08Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u540c\u7684\u6807\u7b7e\u3002\u4e0b\u9762\u4ecb\u7ecd\u7684\u4f8b\u5b50\u4e2d\u5c31\u4f1a\u4f7f\u7528\u76f8\u7b49\u5339\u914d\u5668\u6309\u7167\u6761\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8fc7\u6ee4\u3002 http_requests_total{job=\"HelloWorld\",status=\"200\",method=\"POST\",handler=\"/api/comments\"} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6807\u7b7e\u4e3a\u7a7a\u6216\u8005\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528Label=\"\"\u7684\u5f62\u5f0f\u3002\u5bf9\u4e8e\u4e0d\u5b58\u5728\u7684\u6807\u7b7e\uff0c\u6bd4\u5982demo\u6807\u7b7e\uff0c\u56fe4-7\u6240\u793a\u7684go_gc_duration_seconds_count\u548c\u56fe4-8\u6240\u793a\u7684go_gc_duration_seconds_count{demo=\"\"}\u6548\u679c\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002 2.\u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08\uff01=\uff09 \u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08Negative Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\u7684\u6807\u7b7e\u3002\u5b83\u548c\u76f8\u7b49\u5339\u914d\u5668\u662f\u5b8c\u5168\u76f8\u53cd\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u60f3\u8981\u67e5\u770bjob\u5e76\u4e0d\u662fHelloWorld\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4e0d\u76f8\u7b49\u5339\u914d\u5668\u3002 http_requests_total{job!=\"HelloWorld\"} 3.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08=~\uff09 \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u76f8\u5339\u914d\u7684\u6807\u7b7e\u3002Prometheus\u7684\u6b63\u5219\u8fd0\u7b97\u662f\u5f3a\u6307\u5b9a\u7684\uff0c\u6bd4\u5982\u6b63\u5219\u8868\u8fbe\u5f0fa\u53ea\u4f1a\u5339\u914d\u5230\u5b57\u7b26\u4e32a\uff0c\u800c\u5e76\u4e0d\u4f1a\u5339\u914d\u5230ab\u6216\u8005ba\u6216\u8005abc\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u8fd9\u6837\u7684\u5f3a\u6307\u5b9a\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u524d\u9762\u6216\u8005\u540e\u9762\u52a0\u4e0a\u201c. \u201d\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u8868\u793ajob\u662f\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684HTTP\u8bf7\u6c42\u603b\u6570\u3002 http_requests_total{job=~\"Hello. \"} http_requests_total\u76f4\u63a5\u7b49\u6548\u4e8e{ name =\"http_requests_total\"}\uff0c\u540e\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u548c\u524d\u8005\u4e00\u6837\u76844\u79cd\u5339\u914d\u5668\uff08=\uff0c\uff01=\uff0c=~\uff0c\uff01~\uff09\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u6848\u4f8b\u53ef\u4ee5\u8868\u793a\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684\u6307\u6807\u3002 { name =~\"Hello.*\"} \u5982\u679c\u60f3\u8981\u67e5\u770bjob\u662f\u4ee5Hello\u5f00\u5934\u7684\uff0c\u4e14\u5728\u751f\u4ea7\uff08prod\uff09\u3001\u6d4b\u8bd5\uff08test\uff09\u3001\u9884\u53d1\u5e03\uff08pre\uff09\u7b49\u73af\u5883\u4e0b\u54cd\u5e94\u7ed3\u679c\u4e0d\u662f200\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2\u3002 http_requests_total{job=~\"Hello.*\",env=~\"prod|test|pre\",code!=\"200\"} \u7531\u4e8e\u6240\u6709\u7684PromQL\u8868\u8fbe\u5f0f\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6307\u6807\u540d\u79f0\uff0c\u6216\u8005\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668\uff0c\u56e0\u6b64\u7ed3\u5408Prometheus\u5b98\u65b9\u6587\u6863\uff0c\u53ef\u4ee5\u68b3\u7406\u51fa\u5982\u4e0b\u975e\u6cd5\u793a\u4f8b\u3002 {job=~\".*\"} # \u975e\u6cd5\uff01 {job=\"\"} # \u975e\u6cd5\uff01 {job!=\"\"} # \u975e\u6cd5\uff01 \u76f8\u53cd\uff0c\u5982\u4e0b\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\u3002 {job=~\".+\"} # \u5408\u6cd5\uff01.+\u8868\u793a\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26 {job=~\". \",method=\"get\"} # \u5408\u6cd5\uff01. \u8868\u793a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 {job=\"\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d {job=~\".+\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d 4.\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08\uff01~\uff09 \u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08Negative Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u4e0d\u5339\u914d\u7684\u6807\u7b7e\u3002\u56e0\u4e3aPromQL\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u57fa\u4e8eRE2\u7684\u8bed\u6cd5\uff0c\u4f46\u662fRE2\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\uff01~\u7684\u51fa\u73b0\u662f\u4f5c\u4e3a\u4e00\u79cd\u66ff\u4ee3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u6392\u9664\u6307\u5b9a\u6807\u7b7e\u503c\u7684\u529f\u80fd\u3002\u5728\u4e00\u4e2a\u9009\u62e9\u5668\u5f53\u4e2d\uff0c\u53ef\u4ee5\u9488\u5bf9\u540c\u4e00\u4e2a\u6807\u7b7e\u6765\u4f7f\u7528\u591a\u4e2a\u5339\u914d\u5668\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5b9e\u73b0\u67e5\u627ejob\u540d\u662fnode\u4e14\u5b89\u88c5\u5728/prometheus\u76ee\u5f55\u4e0b\uff0c\u4f46\u662f\u5e76\u4e0d\u5728/prometheus/user\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u5e76\u786e\u5b9a\u5176\u5927\u5c0f\u3002 node_filesystem_size_bytes{job=\"node\",mountpoint=~\"/prometheus/. \", mountpoint!~ \"/prometheus/user/. \"} PromQL\u91c7\u7528\u7684\u662fRE2[1]\u5f15\u64ce\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002RE2\u6765\u6e90\u4e8eGo\u8bed\u8a00\uff0c\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u4e00\u79cd\u7ebf\u6027\u65f6\u95f4\u7684\u6a21\u5f0f\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8ePromQL\u8fd9\u79cd\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u5c31\u50cf\u6211\u4eec\u524d\u6587\u63cf\u8ff0\u7684RE2\u90a3\u6837\uff0c\u5176\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff08\u5411\u524d\u65ad\u8a00\uff09\uff0c\u4e5f\u4e0d\u652f\u6301\u53cd\u5411\u5f15\u7528\uff0c\u540c\u65f6\u8fd8\u7f3a\u5931\u5f88\u591a\u9ad8\u7ea7\u7279\u6027\u3002 \u601d\u8003\u62d3\u5c55 =\u3001\uff01=\u3001=~\u3001\uff01~\u8fd94\u4e2a\u5339\u914d\u5668\u5728\u5b9e\u6218\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u5982\u679c\u9891\u7e41\u4e3a\u6807\u7b7e\u65bd\u52a0\u6b63\u5219\u5339\u914d\u5668\uff0c\u6bd4\u5982HTTP\u72b6\u6001\u7801\u67091xx\u30012xx\u30013xx\u30014xx\u30015xx\uff0c\u5728\u7edf\u8ba1\u6240\u6709\u8fd4\u56de\u503c\u662f5xx\u7684HTTP\u8bf7\u6c42\u65f6\uff0cPromQL\u8bed\u53e5\u5c31\u4f1a\u53d8\u6210http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500\"\uff0cstatus=~\"501\"\uff0cstatus=~\"502\"\uff0cstatus=~\"503\"\uff0cstatus=~\"504\"\uff0cstatus=~\"505\"\uff0cstatus=~\"506\"\u2026} \u4f46\u662f\uff0c\u6211\u4eec\u90fd\u77e5\u90535xx\u4ee3\u8868\u670d\u52a1\u5668\u9519\u8bef\uff0c\u8fd9\u4e9b\u72b6\u6001\u4ee3\u7801\u8868\u793a\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u4e86\u5185\u90e8\u9519\u8bef\u3002\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u6765\u81ea\u670d\u52a1\u5668\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u8bf7\u6c42\u3002 1\uff09500\uff1a\u670d\u52a1\u5668\u9047\u5230\u9519\u8bef\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42\uff08\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\uff09\u3002 2\uff09501\uff1a\u670d\u52a1\u5668\u4e0d\u5177\u5907\u5b8c\u6210\u8bf7\u6c42\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5f53\u670d\u52a1\u5668\u65e0\u6cd5\u8bc6\u522b\u8bf7\u6c42\u65b9\u6cd5\u65f6\u53ef\u80fd\u4f1a\u8fd4\u56de\u6b64\u4ee3\u7801\uff08\u5c1a\u672a\u5b9e\u65bd\uff09\u3002 3\uff09502\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u65e0\u6548\u54cd\u5e94\uff08\u9519\u8bef\u7f51\u5173\uff09\u3002 4\uff09503\uff1a\u670d\u52a1\u5668\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\uff08\u7531\u4e8e\u8d85\u8f7d\u6216\u505c\u673a\u7ef4\u62a4\uff09\uff0c\u901a\u5e38\u53ea\u662f\u6682\u65f6\u72b6\u6001\uff08\u670d\u52a1\u4e0d\u53ef\u7528\uff09\u3002 5\uff09504\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4f46\u662f\u6ca1\u6709\u53ca\u65f6\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff08\u7f51\u5173\u8d85\u65f6\uff09\u3002 6\uff09505\uff1a\u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u4e2d\u6240\u7528\u7684HTTP\u534f\u8bae\u7248\u672c\uff08HTTP\u7248\u672c\u4e0d\u53d7\u652f\u6301\uff09\u3002 7\uff09506\uff1a\u7531\u300a\u900f\u660e\u5185\u5bb9\u534f\u5546\u534f\u8bae\u300b\uff08RFC 2295\uff09\u6269\u5c55\u800c\u6765\uff0c\u4ee3\u8868\u670d\u52a1\u5668\u5b58\u5728\u5185\u90e8\u914d\u7f6e\u9519\u8bef\u3002 8\uff09507\uff1a\u670d\u52a1\u5668\u65e0\u6cd5\u5b58\u50a8\u5b8c\u6210\u8bf7\u6c42\u6240\u5fc5\u9700\u7684\u5185\u5bb9\u3002\u8fd9\u4e2a\u72b6\u51b5\u88ab\u8ba4\u4e3a\u662f\u4e34\u65f6\u7684\u3002 9\uff09509\uff1a\u670d\u52a1\u5668\u8fbe\u5230\u5e26\u5bbd\u9650\u5236\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b98\u65b9\u7684\u72b6\u6001\u7801\uff0c\u4f46\u662f\u4ecd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 10\uff09510\uff1a\u83b7\u53d6\u8d44\u6e90\u6240\u9700\u8981\u7684\u7b56\u7565\u5e76\u6ca1\u6709\u88ab\u6ee1\u8db3\u3002 \u4e3a\u4e86\u6d88\u9664\u8fd9\u6837\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u4f18\u5316\u3002 \u4f18\u5316\u4e00\u3000\u591a\u4e2a\u8868\u8fbe\u5f0f\u4e4b\u95f4\u4f7f\u7528\u201c|\u201d\u8fdb\u884c\u5206\u5272\uff1ahttp_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500|501|502|503|504|505|506|507|509|510\"}\u3002 \u4f18\u5316\u4e8c\u3000\u5c06\u8fd9\u4e9b\u8fd4\u56de\u503c\u5305\u88c5\u4e3a5xx\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u5bf9http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"5xx\"}\u8fdb\u884c\u4f18\u5316\u3002 \u4f18\u5316\u4e09\u3000\u5982\u679c\u8981\u9009\u62e9\u4e0d\u4ee54xx\u5f00\u5934\u7684\u6240\u6709HTTP\u72b6\u6001\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528http_requests_total{status\uff01~\"4..\"}\u3002 \u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668 \u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u8fd4\u56de\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e\u3002\u548c\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4ece\u5f53\u524d\u65f6\u95f4\u5411\u524d\u9009\u62e9\u4e86\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u7684\u6837\u672c\u3002\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u4e3b\u8981\u5728\u9009\u62e9\u5668\u672b\u5c3e\u7684\u65b9\u62ec\u53f7[]\u4e2d\uff0c\u901a\u8fc7\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668\u8fdb\u884c\u5b9a\u4e49\uff0c\u4ee5\u6307\u5b9a\u6bcf\u4e2a\u8fd4\u56de\u7684\u533a\u95f4\u5411\u91cf\u6837\u672c\u503c\u4e2d\u63d0\u53d6\u591a\u957f\u7684\u65f6\u95f4\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u8868\u793a\u6700\u8fd15\u5206\u949f\u5185\u7684\u6240\u6709HTTP\u8bf7\u6c42\u7684\u6837\u672c\u6570\u636e\uff0c\u5176\u4e2d[5m]\u5c06\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u8f6c\u53d8\u4e3a\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u3002 http_request_total{}[5m] \u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u6574\u6570\u6765\u8868\u793a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5355\u4f4d\u4e4b\u4e00\uff1a\u79d2\uff08s\uff09\u3001\u5206\u949f\uff08m\uff09\u3001\u5c0f\u65f6\uff08h\uff09\u3001\u5929\uff08d\uff09\u3001\u5468\uff08w\uff09\u3001\u5e74\uff08y\uff09\u3002\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u5fc5\u987b\u7528\u6574\u6570\u6765\u8868\u793a\u65f6\u95f4\uff0c\u6bd4\u598238 m\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f2 h 15 m\u548c1.5 h\u90fd\u662f\u9519\u8bef\u7684\u3002\u8fd9\u91cc\u7684y\u662f\u5ffd\u7565\u95f0\u5e74\u7684\uff0c\u6c38\u8fdc\u662f60\u00d760\u00d724\u00d7365\u79d2\u3002 \u6848\u4f8b\u4e00\uff1a\u8ba1\u7b972\u5206\u949f\u5185\u7cfb\u7edf\u8fdb\u7a0b\u7684CPU\u4f7f\u7528\u7387\u3002 rate(node_cpu[2m]) \u6848\u4f8b\u4e8c\uff1a\u8ba1\u7b97\u7cfb\u7edfCPU\u7684\u603b\u4f53\u4f7f\u7528\u7387\uff0c\u901a\u8fc7\u6392\u9664\u7cfb\u7edf\u95f2\u7f6e\u7684CPU\u4f7f\u7528\u7387\u5373\u53ef\u83b7\u5f97\u3002 1 - avg without(cpu) (rate(node_cpu{mode=\"idle\"}[2m])) \u6848\u4f8b\u4e09\uff1anode_cpu_seconds_total\u53ef\u4ee5\u83b7\u53d6\u5f53\u524dCPU\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4f7f\u7528avg\u805a\u5408\u67e5\u8be2\u5230\u6570\u636e\u540e\uff0c\u518d\u4f7f\u7528by\u6765\u533a\u5206\u5b9e\u4f8b\uff0c\u8fd9\u6837\u5c31\u80fd\u505a\u5230\u5206\u5b9e\u4f8b\u67e5\u8be2\u5404\u81ea\u7684\u6570\u636e\u3002 avg(irate(node_cpu_seconds_total{job=\"node_srv\"}[5m])) by (instance) \u5b9e\u6218\u62d3\u5c55 1\uff09\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u5f80\u5f80\u548c\u901f\u7387\u51fd\u6570rate\u4e00\u8d77\u4f7f\u7528\u3002\u6bd4\u5982\u5b50\u67e5\u8be2\uff0c\u4ee51\u6b21/\u5206\u949f\u7684\u901f\u7387\u91c7\u96c6\u5173\u4e8ehttp_requests_total\u6307\u6807\u5728\u8fc7\u53bb30\u5206\u949f\u5185\u7684\u6570\u636e\uff0c\u7136\u540e\u8fd4\u56de\u8fd930\u5206\u949f\u5185\u8ddd\u79bb\u5f53\u524d\u65f6\u95f4\u6700\u8fd1\u76845\u5206\u949f\u5185\u7684\u91c7\u96c6\u7ed3\u679c\uff0c\u5982\u4e0b\u6240\u793a\u3002 rate(http_requests_total[5m])[30m:1m] \u6ce8\u610f\uff0c\u4f7f\u7528\u4e0d\u5fc5\u8981\u7684\u5b50\u67e5\u8be2\u6216\u8005\u4e0d\u505c\u5730\u5d4c\u5957\u5b50\u67e5\u8be2\u5e76\u4e0d\u662f\u597d\u7684PromQL\u98ce\u683c\u3002 2\uff09\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e0d\u80fd\u76f4\u63a5\u5c55\u793a\u5728Graph\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5c55\u793a\u5728Console\u89c6\u56fe\u4e2d\u3002 \u504f\u79fb\u91cf\u4fee\u6539\u5668 \u504f\u79fb\u91cf\u4fee\u6539\u5668\u53ef\u4ee5\u8ba9\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u53d1\u751f\u504f\u79fb\uff0c\u5b83\u5141\u8bb8\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u5e76\u5728\u6bcf\u4e2a\u9009\u62e9\u5668\u7684\u57fa\u7840\u4e0a\u5c06\u5176\u5411\u524d\u63a8\u79fb\u3002 \u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u90fd\u53ef\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u57fa\u51c6\u4e0b\u7684\u6837\u672c\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u8981\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u524d5\u5206\u949f\u7684HTTP\u8bf7\u6c42\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8fd9\u6837\u7684\u65b9\u5f0f\u3002 http_request_total{} offset 5m \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u7684\u5173\u952e\u5b57\u5fc5\u987b\u7d27\u8ddf\u5728\u9009\u62e9\u5668{}\u540e\u9762\uff0c\u5982\u4e0b\u7684\u8868\u8fbe\u5f0f\u5206\u522b\u662f\u6b63\u786e\u548c\u9519\u8bef\u7684\u793a\u4f8b\u3002 sum(http_requests_total{method=\"GET\"} offset 5m) // \u6b63\u786e sum(http_requests_total{method=\"GET\"}) offset 5m // \u975e\u6cd5 \u8be5\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\uff0c\u6bd4\u5982\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5176\u4ee5\u6307\u6807http_requests_total 5\u5206\u949f\u524d\u7684\u65f6\u95f4\u70b9\u4e3a\u8d77\u59cb\u9ad8\uff0c\u8fd4\u56de5\u5206\u949f\u4e4b\u5185\u7684HTTP\u8bf7\u6c42\u91cf\u7684\u589e\u957f\u901f\u7387\u3002 rate(http_requests_total[5m] offset 5m) \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u901a\u8fc7\u8c03\u6574\u8ba1\u7b97\u65f6\u95f4\u4e00\u6837\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u5386\u53f2\u6570\u636e\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u4e00\u822c\u53ea\u5bf9\u8c03\u8bd5\u5355\u6761\u8bed\u53e5\u7684\u5386\u53f2\u6570\u636e\u6709\u5e2e\u52a9\u3002\u968f\u7740\u65b0\u6570\u636e\u7684\u5230\u6765\uff0c\u5386\u53f2\u6570\u636e\u4e5f\u4f1a\u4e0d\u65ad\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u5efa\u8bae\u5728Grafana\u4e2d\u76f4\u63a5\u770b\u5386\u53f2\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u3002 Prometheus\u67094\u5927\u6307\u6807\u7c7b\u578b\uff08Metrics Type\uff09\uff0c\u5206\u522b\u662fCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u548cSummary\uff08\u6458\u8981\uff09\u3002\u8fd9\u662f\u5728Prometheus\u5ba2\u6237\u7aef\uff08\u76ee\u524d\u4e3b\u8981\u6709Go\u3001Java\u3001Python\u3001Ruby\u7b49\u8bed\u8a00\u7248\u672c\uff09\u4e2d\u63d0\u4f9b\u76844\u79cd\u6838\u5fc3\u6307\u6807\u7c7b\u578b\uff0c\u4f46\u662fPrometheus\u7684\u670d\u52a1\u7aef\u5e76\u4e0d\u533a\u5206\u6307\u6807\u7c7b\u578b\uff0c\u800c\u662f\u7b80\u5355\u5730\u628a\u8fd9\u4e9b\u6307\u6807\u7edf\u4e00\u89c6\u4e3a\u65e0\u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u672a\u6765\uff0cPrometheus\u5b98\u65b9\u5e94\u8be5\u4f1a\u505a\u51fa\u6539\u53d8 \u805a\u5408\u51fd\u6570\uff1a Prometheus\u8fd8\u63d0\u4f9b\u4e86\u4e0b\u5217\u5185\u7f6e\u7684\u805a\u5408\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u4f5c\u7528\u57df\u77ac\u65f6\u5411\u91cf\u3002\u53ef\u4ee5\u5c06\u77ac\u65f6\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u3002 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u65b9\u5dee) count (\u8ba1\u6570) count_values (\u5bf9value\u8fdb\u884c\u8ba1\u6570) bottomk (\u540en\u6761\u65f6\u5e8f) topk (\u524dn\u6761\u65f6\u5e8f) quantile (\u5206\u4f4d\u6570) \u4f7f\u7528\u805a\u5408\u64cd\u4f5c\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u5176\u4e2d\u53ea\u6709 count_values , quantile , topk , bottomk \u652f\u6301\u53c2\u6570(parameter)\u3002 without\u7528\u4e8e\u4ece\u8ba1\u7b97\u7ed3\u679c\u4e2d\u79fb\u9664\u5217\u4e3e\u7684\u6807\u7b7e\uff0c\u800c\u4fdd\u7559\u5176\u5b83\u6807\u7b7e\u3002by\u5219\u6b63\u597d\u76f8\u53cd\uff0c\u7ed3\u679c\u5411\u91cf\u4e2d\u53ea\u4fdd\u7559\u5217\u51fa\u7684\u6807\u7b7e\uff0c\u5176\u4f59\u6807\u7b7e\u5219\u79fb\u9664\u3002\u901a\u8fc7without\u548cby\u53ef\u4ee5\u6309\u7167\u6837\u672c\u7684\u95ee\u9898\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u3002 \u4f8b\u5982\uff1a sum(http_requests_total) without (instance) \u7b49\u4ef7\u4e8e sum(http_requests_total) by (code,handler,job,method) \u5982\u679c\u53ea\u9700\u8981\u8ba1\u7b97\u6574\u4e2a\u5e94\u7528\u7684HTTP\u8bf7\u6c42\u603b\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a sum(http_requests_total) count_values\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u6837\u672c\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002count_values\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u552f\u4e00\u7684\u6837\u672c\u503c\u8f93\u51fa\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u6807\u7b7e\u3002 \u4f8b\u5982\uff1a count_values(\"count\", http_requests_total) topk\u548cbottomk\u5219\u7528\u4e8e\u5bf9\u6837\u672c\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u5f53\u524d\u6837\u672c\u503c\u524dn\u4f4d\uff0c\u6216\u8005\u540en\u4f4d\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u83b7\u53d6HTTP\u8bf7\u6c42\u6570\u524d5\u4f4d\u7684\u65f6\u5e8f\u6837\u672c\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a topk(5, http_requests_total) quantile\u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u6837\u672c\u6570\u636e\u503c\u7684\u5206\u5e03\u60c5\u51b5quantile(\u03c6, express)\u5176\u4e2d0 \u2264 \u03c6 \u2264 1\u3002 \u4f8b\u5982\uff0c\u5f53\u03c6\u4e3a0.5\u65f6\uff0c\u5373\u8868\u793a\u627e\u5230\u5f53\u524d\u6837\u672c\u6570\u636e\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1a quantile(0.5, http_requests_total)","title":"Prometheus\u76d1\u63a7\u67e5\u8be2\u8bed\u6cd5\u5165\u95e8"},{"location":"prometheus/prometheus/query_rules/#_1","text":"metric\u4ecb\u7ecd\uff0cPrometheus\u672c\u8d28\u4e0a\u662f\u65f6\u5e8f\u6570\u636e\u5e93\uff0cPrometheus\u4f1a\u5c06\u6240\u6709\u91c7\u96c6\u5230\u7684\u6837\u672c\u6570\u636e\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u5185\u5b58\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14\u5b9a\u65f6\u4fdd\u5b58\u5230\u786c\u76d8\u4e0a \u6570\u636e\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a \u5728Prometheus\u7684\u4e16\u754c\u91cc\u9762\uff0c\u6240\u6709\u7684\u6570\u503c\u90fd\u662f64 bit\u7684\u3002\u6bcf\u6761\u65f6\u95f4\u5e8f\u5217\u91cc\u9762\u8bb0\u5f55\u7684\u5c31\u662f64 bit Timestamp\uff08\u65f6\u95f4\u6233\uff09\u548c64 bit\u7684Sample Value\uff08\u91c7\u6837\u503c\uff09 \u5728prometheus\u6709\u4e24\u79cd\u67e5\u8be2\u65b9\u5f0f\uff0c\u67e5\u8be2\u4e00\u822c\u662f\u4e0d\u5e26\u65f6\u95f4\u7684\uff0c\u8be5\u4e24\u79cd\u65b9\u5f0f\u5982\u4e0b\uff0c \u67e5\u8be2\u4ec0\u4e48\u6570\u636e\uff0c\u53ea\u8981\u5199\u597dPromQL\uff0c\u5728Prometheus\u66b4\u9732\u76849090\u7aef\u53e3\u7684\u9875\u9762\u4e2d\u67e5\u8be2\u5373\u53ef\u3002 \u76f8\u5173\u8bed\u6cd5\uff1a","title":""},{"location":"prometheus/prometheus/query_rules/#label","text":"\u5339\u914d\u5668\u662f\u4f5c\u7528\u4e8e\u6807\u7b7e\u4e0a\u7684\uff0c\u6807\u7b7e\u5339\u914d\u5668\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0cPrometheus\u652f\u6301\u5b8c\u5168\u5339\u914d\u548c\u6b63\u5219\u5339\u914d\u4e24\u79cd\u6a21\u5f0f\u3002","title":"label\u4e0a\u7684\u5339\u914d\u5668"},{"location":"prometheus/prometheus/query_rules/#1","text":"\u76f8\u7b49\u5339\u914d\u5668\uff08Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u540c\u7684\u6807\u7b7e\u3002\u4e0b\u9762\u4ecb\u7ecd\u7684\u4f8b\u5b50\u4e2d\u5c31\u4f1a\u4f7f\u7528\u76f8\u7b49\u5339\u914d\u5668\u6309\u7167\u6761\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8fc7\u6ee4\u3002 http_requests_total{job=\"HelloWorld\",status=\"200\",method=\"POST\",handler=\"/api/comments\"} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6807\u7b7e\u4e3a\u7a7a\u6216\u8005\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528Label=\"\"\u7684\u5f62\u5f0f\u3002\u5bf9\u4e8e\u4e0d\u5b58\u5728\u7684\u6807\u7b7e\uff0c\u6bd4\u5982demo\u6807\u7b7e\uff0c\u56fe4-7\u6240\u793a\u7684go_gc_duration_seconds_count\u548c\u56fe4-8\u6240\u793a\u7684go_gc_duration_seconds_count{demo=\"\"}\u6548\u679c\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002","title":"1.\u76f8\u7b49\u5339\u914d\u5668\uff08=\uff09"},{"location":"prometheus/prometheus/query_rules/#2","text":"\u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08Negative Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\u7684\u6807\u7b7e\u3002\u5b83\u548c\u76f8\u7b49\u5339\u914d\u5668\u662f\u5b8c\u5168\u76f8\u53cd\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u60f3\u8981\u67e5\u770bjob\u5e76\u4e0d\u662fHelloWorld\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4e0d\u76f8\u7b49\u5339\u914d\u5668\u3002 http_requests_total{job!=\"HelloWorld\"}","title":"2.\u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08\uff01=\uff09"},{"location":"prometheus/prometheus/query_rules/#3","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u76f8\u5339\u914d\u7684\u6807\u7b7e\u3002Prometheus\u7684\u6b63\u5219\u8fd0\u7b97\u662f\u5f3a\u6307\u5b9a\u7684\uff0c\u6bd4\u5982\u6b63\u5219\u8868\u8fbe\u5f0fa\u53ea\u4f1a\u5339\u914d\u5230\u5b57\u7b26\u4e32a\uff0c\u800c\u5e76\u4e0d\u4f1a\u5339\u914d\u5230ab\u6216\u8005ba\u6216\u8005abc\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u8fd9\u6837\u7684\u5f3a\u6307\u5b9a\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u524d\u9762\u6216\u8005\u540e\u9762\u52a0\u4e0a\u201c. \u201d\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u8868\u793ajob\u662f\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684HTTP\u8bf7\u6c42\u603b\u6570\u3002 http_requests_total{job=~\"Hello. \"} http_requests_total\u76f4\u63a5\u7b49\u6548\u4e8e{ name =\"http_requests_total\"}\uff0c\u540e\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u548c\u524d\u8005\u4e00\u6837\u76844\u79cd\u5339\u914d\u5668\uff08=\uff0c\uff01=\uff0c=~\uff0c\uff01~\uff09\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u6848\u4f8b\u53ef\u4ee5\u8868\u793a\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684\u6307\u6807\u3002 { name =~\"Hello.*\"} \u5982\u679c\u60f3\u8981\u67e5\u770bjob\u662f\u4ee5Hello\u5f00\u5934\u7684\uff0c\u4e14\u5728\u751f\u4ea7\uff08prod\uff09\u3001\u6d4b\u8bd5\uff08test\uff09\u3001\u9884\u53d1\u5e03\uff08pre\uff09\u7b49\u73af\u5883\u4e0b\u54cd\u5e94\u7ed3\u679c\u4e0d\u662f200\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2\u3002 http_requests_total{job=~\"Hello.*\",env=~\"prod|test|pre\",code!=\"200\"} \u7531\u4e8e\u6240\u6709\u7684PromQL\u8868\u8fbe\u5f0f\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6307\u6807\u540d\u79f0\uff0c\u6216\u8005\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668\uff0c\u56e0\u6b64\u7ed3\u5408Prometheus\u5b98\u65b9\u6587\u6863\uff0c\u53ef\u4ee5\u68b3\u7406\u51fa\u5982\u4e0b\u975e\u6cd5\u793a\u4f8b\u3002 {job=~\".*\"} # \u975e\u6cd5\uff01 {job=\"\"} # \u975e\u6cd5\uff01 {job!=\"\"} # \u975e\u6cd5\uff01 \u76f8\u53cd\uff0c\u5982\u4e0b\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\u3002 {job=~\".+\"} # \u5408\u6cd5\uff01.+\u8868\u793a\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26 {job=~\". \",method=\"get\"} # \u5408\u6cd5\uff01. \u8868\u793a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 {job=\"\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d {job=~\".+\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d","title":"3.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08=~\uff09"},{"location":"prometheus/prometheus/query_rules/#4","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08Negative Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u4e0d\u5339\u914d\u7684\u6807\u7b7e\u3002\u56e0\u4e3aPromQL\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u57fa\u4e8eRE2\u7684\u8bed\u6cd5\uff0c\u4f46\u662fRE2\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\uff01~\u7684\u51fa\u73b0\u662f\u4f5c\u4e3a\u4e00\u79cd\u66ff\u4ee3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u6392\u9664\u6307\u5b9a\u6807\u7b7e\u503c\u7684\u529f\u80fd\u3002\u5728\u4e00\u4e2a\u9009\u62e9\u5668\u5f53\u4e2d\uff0c\u53ef\u4ee5\u9488\u5bf9\u540c\u4e00\u4e2a\u6807\u7b7e\u6765\u4f7f\u7528\u591a\u4e2a\u5339\u914d\u5668\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5b9e\u73b0\u67e5\u627ejob\u540d\u662fnode\u4e14\u5b89\u88c5\u5728/prometheus\u76ee\u5f55\u4e0b\uff0c\u4f46\u662f\u5e76\u4e0d\u5728/prometheus/user\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u5e76\u786e\u5b9a\u5176\u5927\u5c0f\u3002 node_filesystem_size_bytes{job=\"node\",mountpoint=~\"/prometheus/. \", mountpoint!~ \"/prometheus/user/. \"} PromQL\u91c7\u7528\u7684\u662fRE2[1]\u5f15\u64ce\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002RE2\u6765\u6e90\u4e8eGo\u8bed\u8a00\uff0c\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u4e00\u79cd\u7ebf\u6027\u65f6\u95f4\u7684\u6a21\u5f0f\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8ePromQL\u8fd9\u79cd\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u5c31\u50cf\u6211\u4eec\u524d\u6587\u63cf\u8ff0\u7684RE2\u90a3\u6837\uff0c\u5176\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff08\u5411\u524d\u65ad\u8a00\uff09\uff0c\u4e5f\u4e0d\u652f\u6301\u53cd\u5411\u5f15\u7528\uff0c\u540c\u65f6\u8fd8\u7f3a\u5931\u5f88\u591a\u9ad8\u7ea7\u7279\u6027\u3002 \u601d\u8003\u62d3\u5c55 =\u3001\uff01=\u3001=~\u3001\uff01~\u8fd94\u4e2a\u5339\u914d\u5668\u5728\u5b9e\u6218\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u5982\u679c\u9891\u7e41\u4e3a\u6807\u7b7e\u65bd\u52a0\u6b63\u5219\u5339\u914d\u5668\uff0c\u6bd4\u5982HTTP\u72b6\u6001\u7801\u67091xx\u30012xx\u30013xx\u30014xx\u30015xx\uff0c\u5728\u7edf\u8ba1\u6240\u6709\u8fd4\u56de\u503c\u662f5xx\u7684HTTP\u8bf7\u6c42\u65f6\uff0cPromQL\u8bed\u53e5\u5c31\u4f1a\u53d8\u6210http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500\"\uff0cstatus=~\"501\"\uff0cstatus=~\"502\"\uff0cstatus=~\"503\"\uff0cstatus=~\"504\"\uff0cstatus=~\"505\"\uff0cstatus=~\"506\"\u2026} \u4f46\u662f\uff0c\u6211\u4eec\u90fd\u77e5\u90535xx\u4ee3\u8868\u670d\u52a1\u5668\u9519\u8bef\uff0c\u8fd9\u4e9b\u72b6\u6001\u4ee3\u7801\u8868\u793a\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u4e86\u5185\u90e8\u9519\u8bef\u3002\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u6765\u81ea\u670d\u52a1\u5668\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u8bf7\u6c42\u3002 1\uff09500\uff1a\u670d\u52a1\u5668\u9047\u5230\u9519\u8bef\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42\uff08\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\uff09\u3002 2\uff09501\uff1a\u670d\u52a1\u5668\u4e0d\u5177\u5907\u5b8c\u6210\u8bf7\u6c42\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5f53\u670d\u52a1\u5668\u65e0\u6cd5\u8bc6\u522b\u8bf7\u6c42\u65b9\u6cd5\u65f6\u53ef\u80fd\u4f1a\u8fd4\u56de\u6b64\u4ee3\u7801\uff08\u5c1a\u672a\u5b9e\u65bd\uff09\u3002 3\uff09502\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u65e0\u6548\u54cd\u5e94\uff08\u9519\u8bef\u7f51\u5173\uff09\u3002 4\uff09503\uff1a\u670d\u52a1\u5668\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\uff08\u7531\u4e8e\u8d85\u8f7d\u6216\u505c\u673a\u7ef4\u62a4\uff09\uff0c\u901a\u5e38\u53ea\u662f\u6682\u65f6\u72b6\u6001\uff08\u670d\u52a1\u4e0d\u53ef\u7528\uff09\u3002 5\uff09504\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4f46\u662f\u6ca1\u6709\u53ca\u65f6\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff08\u7f51\u5173\u8d85\u65f6\uff09\u3002 6\uff09505\uff1a\u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u4e2d\u6240\u7528\u7684HTTP\u534f\u8bae\u7248\u672c\uff08HTTP\u7248\u672c\u4e0d\u53d7\u652f\u6301\uff09\u3002 7\uff09506\uff1a\u7531\u300a\u900f\u660e\u5185\u5bb9\u534f\u5546\u534f\u8bae\u300b\uff08RFC 2295\uff09\u6269\u5c55\u800c\u6765\uff0c\u4ee3\u8868\u670d\u52a1\u5668\u5b58\u5728\u5185\u90e8\u914d\u7f6e\u9519\u8bef\u3002 8\uff09507\uff1a\u670d\u52a1\u5668\u65e0\u6cd5\u5b58\u50a8\u5b8c\u6210\u8bf7\u6c42\u6240\u5fc5\u9700\u7684\u5185\u5bb9\u3002\u8fd9\u4e2a\u72b6\u51b5\u88ab\u8ba4\u4e3a\u662f\u4e34\u65f6\u7684\u3002 9\uff09509\uff1a\u670d\u52a1\u5668\u8fbe\u5230\u5e26\u5bbd\u9650\u5236\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b98\u65b9\u7684\u72b6\u6001\u7801\uff0c\u4f46\u662f\u4ecd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 10\uff09510\uff1a\u83b7\u53d6\u8d44\u6e90\u6240\u9700\u8981\u7684\u7b56\u7565\u5e76\u6ca1\u6709\u88ab\u6ee1\u8db3\u3002 \u4e3a\u4e86\u6d88\u9664\u8fd9\u6837\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u4f18\u5316\u3002 \u4f18\u5316\u4e00\u3000\u591a\u4e2a\u8868\u8fbe\u5f0f\u4e4b\u95f4\u4f7f\u7528\u201c|\u201d\u8fdb\u884c\u5206\u5272\uff1ahttp_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500|501|502|503|504|505|506|507|509|510\"}\u3002 \u4f18\u5316\u4e8c\u3000\u5c06\u8fd9\u4e9b\u8fd4\u56de\u503c\u5305\u88c5\u4e3a5xx\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u5bf9http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"5xx\"}\u8fdb\u884c\u4f18\u5316\u3002 \u4f18\u5316\u4e09\u3000\u5982\u679c\u8981\u9009\u62e9\u4e0d\u4ee54xx\u5f00\u5934\u7684\u6240\u6709HTTP\u72b6\u6001\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528http_requests_total{status\uff01~\"4..\"}\u3002","title":"4.\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08\uff01~\uff09"},{"location":"prometheus/prometheus/query_rules/#_2","text":"\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u8fd4\u56de\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e\u3002\u548c\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4ece\u5f53\u524d\u65f6\u95f4\u5411\u524d\u9009\u62e9\u4e86\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u7684\u6837\u672c\u3002\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u4e3b\u8981\u5728\u9009\u62e9\u5668\u672b\u5c3e\u7684\u65b9\u62ec\u53f7[]\u4e2d\uff0c\u901a\u8fc7\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668\u8fdb\u884c\u5b9a\u4e49\uff0c\u4ee5\u6307\u5b9a\u6bcf\u4e2a\u8fd4\u56de\u7684\u533a\u95f4\u5411\u91cf\u6837\u672c\u503c\u4e2d\u63d0\u53d6\u591a\u957f\u7684\u65f6\u95f4\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u8868\u793a\u6700\u8fd15\u5206\u949f\u5185\u7684\u6240\u6709HTTP\u8bf7\u6c42\u7684\u6837\u672c\u6570\u636e\uff0c\u5176\u4e2d[5m]\u5c06\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u8f6c\u53d8\u4e3a\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u3002 http_request_total{}[5m] \u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u6574\u6570\u6765\u8868\u793a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5355\u4f4d\u4e4b\u4e00\uff1a\u79d2\uff08s\uff09\u3001\u5206\u949f\uff08m\uff09\u3001\u5c0f\u65f6\uff08h\uff09\u3001\u5929\uff08d\uff09\u3001\u5468\uff08w\uff09\u3001\u5e74\uff08y\uff09\u3002\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u5fc5\u987b\u7528\u6574\u6570\u6765\u8868\u793a\u65f6\u95f4\uff0c\u6bd4\u598238 m\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f2 h 15 m\u548c1.5 h\u90fd\u662f\u9519\u8bef\u7684\u3002\u8fd9\u91cc\u7684y\u662f\u5ffd\u7565\u95f0\u5e74\u7684\uff0c\u6c38\u8fdc\u662f60\u00d760\u00d724\u00d7365\u79d2\u3002 \u6848\u4f8b\u4e00\uff1a\u8ba1\u7b972\u5206\u949f\u5185\u7cfb\u7edf\u8fdb\u7a0b\u7684CPU\u4f7f\u7528\u7387\u3002 rate(node_cpu[2m]) \u6848\u4f8b\u4e8c\uff1a\u8ba1\u7b97\u7cfb\u7edfCPU\u7684\u603b\u4f53\u4f7f\u7528\u7387\uff0c\u901a\u8fc7\u6392\u9664\u7cfb\u7edf\u95f2\u7f6e\u7684CPU\u4f7f\u7528\u7387\u5373\u53ef\u83b7\u5f97\u3002 1 - avg without(cpu) (rate(node_cpu{mode=\"idle\"}[2m])) \u6848\u4f8b\u4e09\uff1anode_cpu_seconds_total\u53ef\u4ee5\u83b7\u53d6\u5f53\u524dCPU\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4f7f\u7528avg\u805a\u5408\u67e5\u8be2\u5230\u6570\u636e\u540e\uff0c\u518d\u4f7f\u7528by\u6765\u533a\u5206\u5b9e\u4f8b\uff0c\u8fd9\u6837\u5c31\u80fd\u505a\u5230\u5206\u5b9e\u4f8b\u67e5\u8be2\u5404\u81ea\u7684\u6570\u636e\u3002 avg(irate(node_cpu_seconds_total{job=\"node_srv\"}[5m])) by (instance) \u5b9e\u6218\u62d3\u5c55 1\uff09\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u5f80\u5f80\u548c\u901f\u7387\u51fd\u6570rate\u4e00\u8d77\u4f7f\u7528\u3002\u6bd4\u5982\u5b50\u67e5\u8be2\uff0c\u4ee51\u6b21/\u5206\u949f\u7684\u901f\u7387\u91c7\u96c6\u5173\u4e8ehttp_requests_total\u6307\u6807\u5728\u8fc7\u53bb30\u5206\u949f\u5185\u7684\u6570\u636e\uff0c\u7136\u540e\u8fd4\u56de\u8fd930\u5206\u949f\u5185\u8ddd\u79bb\u5f53\u524d\u65f6\u95f4\u6700\u8fd1\u76845\u5206\u949f\u5185\u7684\u91c7\u96c6\u7ed3\u679c\uff0c\u5982\u4e0b\u6240\u793a\u3002 rate(http_requests_total[5m])[30m:1m] \u6ce8\u610f\uff0c\u4f7f\u7528\u4e0d\u5fc5\u8981\u7684\u5b50\u67e5\u8be2\u6216\u8005\u4e0d\u505c\u5730\u5d4c\u5957\u5b50\u67e5\u8be2\u5e76\u4e0d\u662f\u597d\u7684PromQL\u98ce\u683c\u3002 2\uff09\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e0d\u80fd\u76f4\u63a5\u5c55\u793a\u5728Graph\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5c55\u793a\u5728Console\u89c6\u56fe\u4e2d\u3002","title":"\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668"},{"location":"prometheus/prometheus/query_rules/#_3","text":"\u504f\u79fb\u91cf\u4fee\u6539\u5668\u53ef\u4ee5\u8ba9\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u53d1\u751f\u504f\u79fb\uff0c\u5b83\u5141\u8bb8\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u5e76\u5728\u6bcf\u4e2a\u9009\u62e9\u5668\u7684\u57fa\u7840\u4e0a\u5c06\u5176\u5411\u524d\u63a8\u79fb\u3002 \u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u90fd\u53ef\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u57fa\u51c6\u4e0b\u7684\u6837\u672c\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u8981\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u524d5\u5206\u949f\u7684HTTP\u8bf7\u6c42\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8fd9\u6837\u7684\u65b9\u5f0f\u3002 http_request_total{} offset 5m \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u7684\u5173\u952e\u5b57\u5fc5\u987b\u7d27\u8ddf\u5728\u9009\u62e9\u5668{}\u540e\u9762\uff0c\u5982\u4e0b\u7684\u8868\u8fbe\u5f0f\u5206\u522b\u662f\u6b63\u786e\u548c\u9519\u8bef\u7684\u793a\u4f8b\u3002 sum(http_requests_total{method=\"GET\"} offset 5m) // \u6b63\u786e sum(http_requests_total{method=\"GET\"}) offset 5m // \u975e\u6cd5 \u8be5\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\uff0c\u6bd4\u5982\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5176\u4ee5\u6307\u6807http_requests_total 5\u5206\u949f\u524d\u7684\u65f6\u95f4\u70b9\u4e3a\u8d77\u59cb\u9ad8\uff0c\u8fd4\u56de5\u5206\u949f\u4e4b\u5185\u7684HTTP\u8bf7\u6c42\u91cf\u7684\u589e\u957f\u901f\u7387\u3002 rate(http_requests_total[5m] offset 5m) \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u901a\u8fc7\u8c03\u6574\u8ba1\u7b97\u65f6\u95f4\u4e00\u6837\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u5386\u53f2\u6570\u636e\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u4e00\u822c\u53ea\u5bf9\u8c03\u8bd5\u5355\u6761\u8bed\u53e5\u7684\u5386\u53f2\u6570\u636e\u6709\u5e2e\u52a9\u3002\u968f\u7740\u65b0\u6570\u636e\u7684\u5230\u6765\uff0c\u5386\u53f2\u6570\u636e\u4e5f\u4f1a\u4e0d\u65ad\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u5efa\u8bae\u5728Grafana\u4e2d\u76f4\u63a5\u770b\u5386\u53f2\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u3002 Prometheus\u67094\u5927\u6307\u6807\u7c7b\u578b\uff08Metrics Type\uff09\uff0c\u5206\u522b\u662fCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u548cSummary\uff08\u6458\u8981\uff09\u3002\u8fd9\u662f\u5728Prometheus\u5ba2\u6237\u7aef\uff08\u76ee\u524d\u4e3b\u8981\u6709Go\u3001Java\u3001Python\u3001Ruby\u7b49\u8bed\u8a00\u7248\u672c\uff09\u4e2d\u63d0\u4f9b\u76844\u79cd\u6838\u5fc3\u6307\u6807\u7c7b\u578b\uff0c\u4f46\u662fPrometheus\u7684\u670d\u52a1\u7aef\u5e76\u4e0d\u533a\u5206\u6307\u6807\u7c7b\u578b\uff0c\u800c\u662f\u7b80\u5355\u5730\u628a\u8fd9\u4e9b\u6307\u6807\u7edf\u4e00\u89c6\u4e3a\u65e0\u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u672a\u6765\uff0cPrometheus\u5b98\u65b9\u5e94\u8be5\u4f1a\u505a\u51fa\u6539\u53d8","title":"\u504f\u79fb\u91cf\u4fee\u6539\u5668"},{"location":"prometheus/prometheus/query_rules/#_4","text":"Prometheus\u8fd8\u63d0\u4f9b\u4e86\u4e0b\u5217\u5185\u7f6e\u7684\u805a\u5408\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u4f5c\u7528\u57df\u77ac\u65f6\u5411\u91cf\u3002\u53ef\u4ee5\u5c06\u77ac\u65f6\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u3002 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u65b9\u5dee) count (\u8ba1\u6570) count_values (\u5bf9value\u8fdb\u884c\u8ba1\u6570) bottomk (\u540en\u6761\u65f6\u5e8f) topk (\u524dn\u6761\u65f6\u5e8f) quantile (\u5206\u4f4d\u6570) \u4f7f\u7528\u805a\u5408\u64cd\u4f5c\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u5176\u4e2d\u53ea\u6709 count_values , quantile , topk , bottomk \u652f\u6301\u53c2\u6570(parameter)\u3002 without\u7528\u4e8e\u4ece\u8ba1\u7b97\u7ed3\u679c\u4e2d\u79fb\u9664\u5217\u4e3e\u7684\u6807\u7b7e\uff0c\u800c\u4fdd\u7559\u5176\u5b83\u6807\u7b7e\u3002by\u5219\u6b63\u597d\u76f8\u53cd\uff0c\u7ed3\u679c\u5411\u91cf\u4e2d\u53ea\u4fdd\u7559\u5217\u51fa\u7684\u6807\u7b7e\uff0c\u5176\u4f59\u6807\u7b7e\u5219\u79fb\u9664\u3002\u901a\u8fc7without\u548cby\u53ef\u4ee5\u6309\u7167\u6837\u672c\u7684\u95ee\u9898\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u3002 \u4f8b\u5982\uff1a sum(http_requests_total) without (instance) \u7b49\u4ef7\u4e8e sum(http_requests_total) by (code,handler,job,method) \u5982\u679c\u53ea\u9700\u8981\u8ba1\u7b97\u6574\u4e2a\u5e94\u7528\u7684HTTP\u8bf7\u6c42\u603b\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a sum(http_requests_total) count_values\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u6837\u672c\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002count_values\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u552f\u4e00\u7684\u6837\u672c\u503c\u8f93\u51fa\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u6807\u7b7e\u3002 \u4f8b\u5982\uff1a count_values(\"count\", http_requests_total) topk\u548cbottomk\u5219\u7528\u4e8e\u5bf9\u6837\u672c\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u5f53\u524d\u6837\u672c\u503c\u524dn\u4f4d\uff0c\u6216\u8005\u540en\u4f4d\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u83b7\u53d6HTTP\u8bf7\u6c42\u6570\u524d5\u4f4d\u7684\u65f6\u5e8f\u6837\u672c\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a topk(5, http_requests_total) quantile\u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u6837\u672c\u6570\u636e\u503c\u7684\u5206\u5e03\u60c5\u51b5quantile(\u03c6, express)\u5176\u4e2d0 \u2264 \u03c6 \u2264 1\u3002 \u4f8b\u5982\uff0c\u5f53\u03c6\u4e3a0.5\u65f6\uff0c\u5373\u8868\u793a\u627e\u5230\u5f53\u524d\u6837\u672c\u6570\u636e\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1a quantile(0.5, http_requests_total)","title":"\u805a\u5408\u51fd\u6570\uff1a"},{"location":"prometheus/prometheus/query_xamples/","text":"Prometheus\u76d1\u63a7\u67e5\u8be2\u4f8b\u5b50 \u4f8b\uff1a # HELP node_procs_running Number of processes in runnable state. # TYPE node_procs_running gauge node_procs_running 4 \u8be5\u6570\u636e\u8868\u793a\u7cfb\u7edf\u4e2d\u6b63\u5728\u8fd0\u884c\u548c\u53ef\u8fd0\u884c\u72b6\u6001\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u901a\u8fc7\u9875\u9762\u67e5\u8be2\u53d1\u73b0\u662f4\uff0c\u800c\u4e14\u662fgauge\uff0c\u662f\u4e2a\u53ef\u589e\u53ef\u51cf\u7684\u503c \u5728Prometheus\u4e0a\u67e5\u8be2 \u53ef\u4ee5\u67e5\u8be2\u5230\u4e00\u4e2a\u6570\u636e\uff0c\u56e0\u4e3a\u8be5\u76d1\u63a7\u662f\u7531node_exporter\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u67e5\u5230\u4e00\u4e2a\u6570\u636e \u53d1\u73b0\u8be5\u6570\u636e\u589e\u52a0\u4e86\u4e24\u4e2a\u6807\u7b7e\uff0c\u731c\u6d4b\u662f\u56e0\u4e3aPrometheus\u914d\u7f6e\u63d0\u4f9b\u7684\u3002 \u7136\u540e\u67e5\u8be2\u8be5\u6570\u636e\u7684\u56fe\u8c31\uff1a \u4f8b\uff1a # HELP node_cpu_seconds_total Seconds the cpus spent in each mode. # TYPE node_cpu_seconds_total counter node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"} 12463.13 node_cpu_seconds_total{cpu=\"0\",mode=\"iowait\"} 2.32 node_cpu_seconds_total{cpu=\"0\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"nice\"} 0.04 node_cpu_seconds_total{cpu=\"0\",mode=\"softirq\"} 0.21 node_cpu_seconds_total{cpu=\"0\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"system\"} 6.16 node_cpu_seconds_total{cpu=\"0\",mode=\"user\"} 3.18 node_cpu_seconds_total{cpu=\"1\",mode=\"idle\"} 12458.04 node_cpu_seconds_total{cpu=\"1\",mode=\"iowait\"} 0.58 node_cpu_seconds_total{cpu=\"1\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"nice\"} 0.02 node_cpu_seconds_total{cpu=\"1\",mode=\"softirq\"} 0.37 node_cpu_seconds_total{cpu=\"1\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"system\"} 9.62 node_cpu_seconds_total{cpu=\"1\",mode=\"user\"} 1.89 CPU\u5728\u6bcf\u79cd\u72b6\u6001\u4e0b\u7684CPU\u65f6\u95f4\uff0c\u662f\u4e2acounter \u7c7b\u578b \u770b\u6765\u6807\u7b7e\u4f1a\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u81ea\u52a8\u52a0\u4e0a\u7684\u3002\u67e5\u8be2\u5176\u4e2d\u4e00\u4e2a\u503c\u76842\u5c0f\u65f6\u7684\u6570\u636e\u56fe\u8c31","title":"Prometheus\u76d1\u63a7\u67e5\u8be2\u4f8b\u5b50"},{"location":"prometheus/prometheus/query_xamples/#prometheus","text":"\u4f8b\uff1a # HELP node_procs_running Number of processes in runnable state. # TYPE node_procs_running gauge node_procs_running 4 \u8be5\u6570\u636e\u8868\u793a\u7cfb\u7edf\u4e2d\u6b63\u5728\u8fd0\u884c\u548c\u53ef\u8fd0\u884c\u72b6\u6001\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u901a\u8fc7\u9875\u9762\u67e5\u8be2\u53d1\u73b0\u662f4\uff0c\u800c\u4e14\u662fgauge\uff0c\u662f\u4e2a\u53ef\u589e\u53ef\u51cf\u7684\u503c \u5728Prometheus\u4e0a\u67e5\u8be2 \u53ef\u4ee5\u67e5\u8be2\u5230\u4e00\u4e2a\u6570\u636e\uff0c\u56e0\u4e3a\u8be5\u76d1\u63a7\u662f\u7531node_exporter\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u67e5\u5230\u4e00\u4e2a\u6570\u636e \u53d1\u73b0\u8be5\u6570\u636e\u589e\u52a0\u4e86\u4e24\u4e2a\u6807\u7b7e\uff0c\u731c\u6d4b\u662f\u56e0\u4e3aPrometheus\u914d\u7f6e\u63d0\u4f9b\u7684\u3002 \u7136\u540e\u67e5\u8be2\u8be5\u6570\u636e\u7684\u56fe\u8c31\uff1a \u4f8b\uff1a # HELP node_cpu_seconds_total Seconds the cpus spent in each mode. # TYPE node_cpu_seconds_total counter node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"} 12463.13 node_cpu_seconds_total{cpu=\"0\",mode=\"iowait\"} 2.32 node_cpu_seconds_total{cpu=\"0\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"nice\"} 0.04 node_cpu_seconds_total{cpu=\"0\",mode=\"softirq\"} 0.21 node_cpu_seconds_total{cpu=\"0\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"system\"} 6.16 node_cpu_seconds_total{cpu=\"0\",mode=\"user\"} 3.18 node_cpu_seconds_total{cpu=\"1\",mode=\"idle\"} 12458.04 node_cpu_seconds_total{cpu=\"1\",mode=\"iowait\"} 0.58 node_cpu_seconds_total{cpu=\"1\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"nice\"} 0.02 node_cpu_seconds_total{cpu=\"1\",mode=\"softirq\"} 0.37 node_cpu_seconds_total{cpu=\"1\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"system\"} 9.62 node_cpu_seconds_total{cpu=\"1\",mode=\"user\"} 1.89 CPU\u5728\u6bcf\u79cd\u72b6\u6001\u4e0b\u7684CPU\u65f6\u95f4\uff0c\u662f\u4e2acounter \u7c7b\u578b \u770b\u6765\u6807\u7b7e\u4f1a\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u81ea\u52a8\u52a0\u4e0a\u7684\u3002\u67e5\u8be2\u5176\u4e2d\u4e00\u4e2a\u503c\u76842\u5c0f\u65f6\u7684\u6570\u636e\u56fe\u8c31","title":"Prometheus\u76d1\u63a7\u67e5\u8be2\u4f8b\u5b50"},{"location":"python/csv/","text":"Python csv\u6a21\u5757 Python csv\u6a21\u5757\u4f7f\u7528\u65b9\u6cd5\u4ee3\u7801\u5b9e\u4f8b\uff0c\u590d\u5236\u7c98\u8d34\u8fd0\u884c\u5373\u53ef import csv def writeDict1(): headers = ['ID', 'NAME', 'Age', 'Height'] # \u8868\u683c\u5185\u5bb9 rows = [('1', 'LiLi', 18, 165), ('2', 'Jack', 20, 170), ('3', 'Marry', 21, 168)] with open('test1.csv', 'w', encoding='utf_8_sig') as csvfile: spamwriter = csv.writer(csvfile) spamwriter.writerow(headers) spamwriter.writerows(rows) def writeDict2(): with open('test2.csv', 'w') as csvfile: # \u521b\u5efa\u5b57\u6bb5\u540d fieldnames = ['first_name', 'last_time'] # \u521b\u5efa\u5b57\u6bb5\u5199\u5165\u5bf9\u8c61 writer = csv.DictWriter(csvfile, fieldnames=fieldnames) writer.writeheader() # \u5199\u5165\u8868\u683c\u5185\u5bb9 writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) def readDict1(): with open(\"test1.csv\", 'r', encoding='utf_8_sig') as f: f_csv = csv.reader(f) for row in f_csv: print(row) def readDict2(): with open('test2.csv', 'r') as csvfile: # \u8bfb\u53d6\u6587\u4ef6 reader = csv.DictReader(csvfile) # \u904d\u5386\u8f93\u5165\u6307\u5b9a\u5b57\u6bb5\u7684\u5185\u5bb9 for row in reader: print(row['first_name'], row['last_time']) if __name__ == '__main__': writeDict1() writeDict2() readDict1() readDict2()","title":"CSV\u6a21\u5757"},{"location":"python/csv/#python-csv","text":"Python csv\u6a21\u5757\u4f7f\u7528\u65b9\u6cd5\u4ee3\u7801\u5b9e\u4f8b\uff0c\u590d\u5236\u7c98\u8d34\u8fd0\u884c\u5373\u53ef import csv def writeDict1(): headers = ['ID', 'NAME', 'Age', 'Height'] # \u8868\u683c\u5185\u5bb9 rows = [('1', 'LiLi', 18, 165), ('2', 'Jack', 20, 170), ('3', 'Marry', 21, 168)] with open('test1.csv', 'w', encoding='utf_8_sig') as csvfile: spamwriter = csv.writer(csvfile) spamwriter.writerow(headers) spamwriter.writerows(rows) def writeDict2(): with open('test2.csv', 'w') as csvfile: # \u521b\u5efa\u5b57\u6bb5\u540d fieldnames = ['first_name', 'last_time'] # \u521b\u5efa\u5b57\u6bb5\u5199\u5165\u5bf9\u8c61 writer = csv.DictWriter(csvfile, fieldnames=fieldnames) writer.writeheader() # \u5199\u5165\u8868\u683c\u5185\u5bb9 writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) def readDict1(): with open(\"test1.csv\", 'r', encoding='utf_8_sig') as f: f_csv = csv.reader(f) for row in f_csv: print(row) def readDict2(): with open('test2.csv', 'r') as csvfile: # \u8bfb\u53d6\u6587\u4ef6 reader = csv.DictReader(csvfile) # \u904d\u5386\u8f93\u5165\u6307\u5b9a\u5b57\u6bb5\u7684\u5185\u5bb9 for row in reader: print(row['first_name'], row['last_time']) if __name__ == '__main__': writeDict1() writeDict2() readDict1() readDict2()","title":"Python csv\u6a21\u5757"},{"location":"python/k8s/","text":"Python \u4f7f\u7528K8S API from kubernetes import client, config config_file = r\"config\" config.kube_config.load_kube_config(config_file=config_file) # \u83b7\u53d6K8S \u6838\u5fc3API\u63a5\u53e3 Api_Instance = client.CoreV1Api() # \u83b7\u53d6K8S APP APIJ\u63a5\u53e3 apps_api = client.AppsV1Api() print(apps_api.list_deployment_for_all_namespaces()) \u83b7\u53d6\u6240\u6709\u7684deployment\u8be6\u60c5 config\u6587\u4ef6\u4e3aK8S\u94fe\u63a5\u6587\u4ef6config \u5b98\u65b9\u5730\u5740\uff1a https://github.com/kubernetes-client/python from kubernetes import client, config import json config_file = r\"config\" config.kube_config.load_kube_config(config_file=config_file) v1 = client.CoreV1Api() print(\"Listing pods with their IPs:\") ret = v1.list_pod_for_all_namespaces(watch=False) for i in ret.items: print(\"%s\\t%s\\t%s\" % (i.status.pod_ip, i.metadata.namespace, i.metadata.name))","title":"K8S\u6a21\u5757"},{"location":"python/mem/","text":"Python \u5185\u5b58\u5206\u6790 \u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pythonprofilers/memory_profiler \u793a\u4f8b\u4ee3\u7801 from memory_profiler import profile @profile def my_func(): print(\"hello\") if __name__ == '__main__': my_func() \u8fd0\u884c\u7ed3\u679c hello Filename: D:\\idea\\one\\test\\mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 26.6 MiB 26.6 MiB 1 @profile 5 def my_func(): 6 26.6 MiB 0.0 MiB 1 print(\"hello\") \u5185\u5b58\u5360\u7528\u4e00\u76ee\u4e86\u7136 \u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u6027\u80fd\u5de5\u5177 mprof (venv) D:\\idea\\one\\test>mprof run mem.py mprof: Sampling memory every 0.1s running new process running as a Python program... hello Filename: mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 27.3 MiB 27.3 MiB 1 @profile 5 def my_func(): 6 27.3 MiB 0.0 MiB 1 print(\"hello\")","title":"\u5185\u5b58\u6027\u80fd\u6a21\u5757"},{"location":"python/mem/#python","text":"\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pythonprofilers/memory_profiler \u793a\u4f8b\u4ee3\u7801 from memory_profiler import profile @profile def my_func(): print(\"hello\") if __name__ == '__main__': my_func() \u8fd0\u884c\u7ed3\u679c hello Filename: D:\\idea\\one\\test\\mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 26.6 MiB 26.6 MiB 1 @profile 5 def my_func(): 6 26.6 MiB 0.0 MiB 1 print(\"hello\") \u5185\u5b58\u5360\u7528\u4e00\u76ee\u4e86\u7136 \u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u6027\u80fd\u5de5\u5177 mprof (venv) D:\\idea\\one\\test>mprof run mem.py mprof: Sampling memory every 0.1s running new process running as a Python program... hello Filename: mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 27.3 MiB 27.3 MiB 1 @profile 5 def my_func(): 6 27.3 MiB 0.0 MiB 1 print(\"hello\")","title":"Python \u5185\u5b58\u5206\u6790"},{"location":"python/xlxs/","text":"Python \u751f\u6210xlsx\u8868\u683c import xlsxwriter workbook = xlsxwriter.Workbook('currency_format.xlsx') cell_format_one = workbook.add_format({'bold': True, 'font_color': 'red'}) cell_format_two = workbook.add_format({'bold': False, 'font_color': 'green'}) # cell_format_two.set_font_color('red') worksheet = workbook.add_worksheet() # \u7b2c\u4e00\u884c worksheet.write(0, 0, 'h', cell_format_one) worksheet.write(0, 1, 'e', cell_format_one) worksheet.write(0, 2, 'l', cell_format_one) worksheet.write(0, 3, 'l', cell_format_one) worksheet.write(0, 4, 'o', cell_format_one) # \u7b2c\u4e8c\u884c worksheet.write(1, 0, 'w', cell_format_two) worksheet.write(1, 1, 'o', cell_format_two) worksheet.write(1, 2, 'r', cell_format_two) worksheet.write(1, 3, 'l', cell_format_two) worksheet.write(1, 4, 'd', cell_format_two) worksheet.write(1, 5, '!', cell_format_two) workbook.close() print('end !') \u53ef\u4ee5\u628a showrow \u8bbe\u7f6e\u4e3a\u5168\u5c40\u53d8\u91cf\u6216\u8005\u65b9\u6cd5\u5185\u53d8\u91cf\uff0c\u4ee3\u8868\u603b\u884c\u6570\uff0cshow_add_row\u8c03\u7528\u4e00\u6b21\uff0c\u81ea\u52a8\u52a0\u4e00\uff0c\u8c03\u7528\u4e00\u6b21\u65b9\u6cd5\u884c\u6570\u81ea\u52a8\u52a0\u4e00 import xlsxwriter workbook = xlsxwriter.Workbook('one.xlsx') format_title = workbook.add_format({'bold': True, 'font_color': 'black', 'align': 'center'}) format_row = workbook.add_format({'bold': False, 'font_color': 'black', 'align': 'center'}) sheet = workbook.add_worksheet(\"\u8868\u683c\u8bf4\u660e\") showrow = 0 def show_add_row(sheet, list, format): # nonlocal showrow # \u6b64\u6bb5\u4ee3\u7801\u653e\u5728\u5176\u4ed6\u65b9\u6cd5\u4e2d\u7528nonlocal global showrow col = 0 for tl in list: sheet.write(showrow, col, tl, format) sheet.set_column(0, 10, 50) col = col + 1 showrow = showrow + 1 title_list = [\"1\", '2', \"3\"] word_list = [\"4\", '5', \"6\"] show_add_row(sheet, title_list, format_title) show_add_row(sheet, word_list, word_list) workbook.close()","title":"XLSX\u6a21\u5757"},{"location":"python/xlxs/#python-xlsx","text":"import xlsxwriter workbook = xlsxwriter.Workbook('currency_format.xlsx') cell_format_one = workbook.add_format({'bold': True, 'font_color': 'red'}) cell_format_two = workbook.add_format({'bold': False, 'font_color': 'green'}) # cell_format_two.set_font_color('red') worksheet = workbook.add_worksheet() # \u7b2c\u4e00\u884c worksheet.write(0, 0, 'h', cell_format_one) worksheet.write(0, 1, 'e', cell_format_one) worksheet.write(0, 2, 'l', cell_format_one) worksheet.write(0, 3, 'l', cell_format_one) worksheet.write(0, 4, 'o', cell_format_one) # \u7b2c\u4e8c\u884c worksheet.write(1, 0, 'w', cell_format_two) worksheet.write(1, 1, 'o', cell_format_two) worksheet.write(1, 2, 'r', cell_format_two) worksheet.write(1, 3, 'l', cell_format_two) worksheet.write(1, 4, 'd', cell_format_two) worksheet.write(1, 5, '!', cell_format_two) workbook.close() print('end !') \u53ef\u4ee5\u628a showrow \u8bbe\u7f6e\u4e3a\u5168\u5c40\u53d8\u91cf\u6216\u8005\u65b9\u6cd5\u5185\u53d8\u91cf\uff0c\u4ee3\u8868\u603b\u884c\u6570\uff0cshow_add_row\u8c03\u7528\u4e00\u6b21\uff0c\u81ea\u52a8\u52a0\u4e00\uff0c\u8c03\u7528\u4e00\u6b21\u65b9\u6cd5\u884c\u6570\u81ea\u52a8\u52a0\u4e00 import xlsxwriter workbook = xlsxwriter.Workbook('one.xlsx') format_title = workbook.add_format({'bold': True, 'font_color': 'black', 'align': 'center'}) format_row = workbook.add_format({'bold': False, 'font_color': 'black', 'align': 'center'}) sheet = workbook.add_worksheet(\"\u8868\u683c\u8bf4\u660e\") showrow = 0 def show_add_row(sheet, list, format): # nonlocal showrow # \u6b64\u6bb5\u4ee3\u7801\u653e\u5728\u5176\u4ed6\u65b9\u6cd5\u4e2d\u7528nonlocal global showrow col = 0 for tl in list: sheet.write(showrow, col, tl, format) sheet.set_column(0, 10, 50) col = col + 1 showrow = showrow + 1 title_list = [\"1\", '2', \"3\"] word_list = [\"4\", '5', \"6\"] show_add_row(sheet, title_list, format_title) show_add_row(sheet, word_list, word_list) workbook.close()","title":"Python \u751f\u6210xlsx\u8868\u683c"}]}