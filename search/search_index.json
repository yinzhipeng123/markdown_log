{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MarkDown_Log \u672c\u6587\u6863\u7531\u4e8eMkDocs\u8fdb\u884c\u751f\u6210 git\u5e93\u5730\u5740\uff1ahttps://github.com/yinzhipeng123/markdown_log","title":"Home"},{"location":"#markdown_log","text":"\u672c\u6587\u6863\u7531\u4e8eMkDocs\u8fdb\u884c\u751f\u6210 git\u5e93\u5730\u5740\uff1ahttps://github.com/yinzhipeng123/markdown_log","title":"MarkDown_Log"},{"location":"KubeSphere/KubeSphere/","text":"KubeSphere \u5355\u70b9\u5b89\u88c5 https://kubesphere.com.cn/docs/quick-start/all-in-one-on-linux/ all in one\uff1a \u8bbe\u7f6e4\u6838\uff0c8G\u5185\u5b58\uff0c\u592a\u5c0f\u7684\u8bdd\uff0c\u6709\u7684\u670d\u52a1\u65e0\u6cd5\u542f\u52a8\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux \u4e3b\u673a\u540d KubeSphere\u7248\u672c IP centos7 3.1.1 192.168.70.130 [root@centos7 ~]# yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset [root@centos7 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@centos7 ~]# yum list docker-ce --showduplicates | sort -r [root@centos7 ~]# yum install docker-ce-20.10.6 [root@centos7 ~]# systemctl enable --now docker [root@centos7 ~]# export KKZONE=cn [root@centos7 ~]# curl -sfL https://get-kk.kubesphere.io | VERSION=v1.1.1 sh - [root@centos7 ~]# chmod +x kk [root@centos7 ~]#./kk create cluster --with-kubernetes v1.20.4 --with-kubesphere v3.1.1 \u7136\u540e\u4f1a\u63d0\u793a\u8ba9\u5b89\u88c5\u4f9d\u8d56\uff0c\u5ffd\u7565\u5c31\u53ef\u4ee5 \u8f93\u5165yes\uff0c\u7136\u540e\u5c31\u5b8c\u6210\u4e86\u5b89\u88c5 \u542f\u7528\u591a\u96c6\u7fa4\u7ba1\u7406\u529f\u80fd https://v3-1.docs.kubesphere.io/zh/docs/multicluster-management/enable-multicluster/direct-connection/ \u542f\u52a8\u5546\u5e97 https://v3-1.docs.kubesphere.io/zh/docs/pluggable-components/app-store/ \u542f\u52a8Metrics Server\u529f\u80fd https://kubesphere.com.cn/docs/pluggable-components/metrics-server/#%E5%9C%A8%E5%AE%89%E8%A3%85%E5%90%8E%E5%90%AF%E7%94%A8-metrics-server \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f7f\u7528\u8fb9\u7f18\u8282\u70b9\u529f\u80fd\uff0c\u4e00\u5b9a\u8981\u542f\u52a8Metrics Server\u529f\u80fd\uff0c\u5426\u5219\u8fb9\u7f18\u8282\u70b9\u6ca1\u6709\u76d1\u63a7\u4fe1\u606f \u542f\u7528\u8fb9\u7f18\u8282\u70b9\u529f\u80fd \u5b98\u65b9\u6587\u6863 https://kubesphere.com.cn/docs/pluggable-components/kubeedge/#%E5%9C%A8%E5%AE%89%E8%A3%85%E5%90%8E%E5%90%AF%E7%94%A8-kubeedge \u6211\u662f\u5b89\u88c5\u540e\u542f\u7528 KubeEdge\uff0c\u5176\u4e2d\u6587\u7ae0\u4e2d \u201c\u5c06 kubeedge.cloudCore.cloudHub.advertiseAddress \u7684\u503c\u8bbe\u7f6e\u4e3a\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\u6216\u8fb9\u7f18\u8282\u70b9\u53ef\u4ee5\u8bbf\u95ee\u7684 IP \u5730\u5740\u201c \u63d0\u5230\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\uff0c\u56e0\u4e3a\u6211\u4f7f\u7528\u7684\u662fall in one\u6a21\u5f0f\uff0c\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u90a3\u4e48\u8fd9\u91cc\u6211\u586b\u5199\u7684\u5c31\u662f192.168.70.130 \u7136\u540e\u5728\u673a\u5668\u4e0a\u6267\u884c [root@centos7 ~] kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-install -o jsonpath='{.items[0].metadata.name}') -f \u7b49\u5f85\u914d\u7f6e\u66f4\u6539\u5b8c\u6210\uff0c\u51fa\u73b0\u4e0b\u9762\u8fd9\u4e2a\uff0c\u5c31\u8868\u793a\u53d8\u66f4\u5b8c\u6210 ##################################################### ### Welcome to KubeSphere! ### ##################################################### Console: http://192.168.70.130:30880 Account: admin Password: P@88w0rd NOTES\uff1a 1. After you log into the console, please check the monitoring status of service components in \"Cluster Management\". If any service is not ready, please wait patiently until all components are up and running. 2. Please change the default password after login. ##################################################### https://kubesphere.io 2021-09-01 10:35:12 ##################################################### \u5237\u65b0\u9875\u9762\uff0c\u8282\u70b9\u7ba1\u7406\u4e2d\uff0c\u51fa\u73b0\u8fb9\u7f18\u8282\u70b9 \u6dfb\u52a0\u8fb9\u7f18\u8282\u70b9 https://kubesphere.com.cn/docs/installing-on-linux/cluster-operation/add-edge-nodes/ \u65b0\u5efa\u4e00\u53f0\u673a\u5668\uff0c\u6765\u5f53\u505a\u8fb9\u7f18\u8282\u70b9\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux\uff0c\u6211\u8bbe\u7f6e\u7684\u662f4G\uff0c\u53cc\u6838\u673a\u5668 \u4e3b\u673a\u540d IP edgenode 192.168.70.140 \u673a\u5668\u51c6\u5907\u5de5\u4f5c\uff0c\u5b89\u88c5\u4f9d\u8d56 [root@edgenode ~] yum install -y yum-utils device-mapper-persistent-data lvm2 wget [root@edgenode ~] yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@edgenode ~] yum makecache fast [root@edgenode ~] yum install docker-ce-19.03.15-3.el7 docker-ce-cli-19.03.15-3.el7 -y [root@edgenode ~] systemctl enable docker && systemctl restart docker [root@edgenode ~] vi /etc/nsswitch.conf //\u4fee\u6539\u8fd9\u884c hosts: dns files mdns4_minimal [NOTFOUND=return] [root@edgenode ~] echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf [root@edgenode ~] sysctl -p | grep ip_forward \u7136\u540e\u5c31\u53ef\u4ee5\u5728KubeSphere\u9875\u9762\u4e0a\uff0c\u8282\u70b9\u7ba1\u7406--\u300b\u8fb9\u7f18\u8282\u70b9--\u300b\u6dfb\u52a0\u8282\u70b9\uff0c\u8f93\u5165\u7ed9node\u7684\u540d\u5b57\uff0cnode\u7684IP\u5730\u5740\uff08 \u6ce8\u610f\uff1a\u8fd9\u91cc\u8fd9\u4e2anode\u7684IP\u5730\u5740\uff0c\u4e0d\u8981\u662fnode\u7684\u771f\u5b9eIP\u5730\u5740\uff0c\u8fd9\u4e2aIP\u662f\u4e2a\u865a\u62dfIP\u5730\u5740\uff0c\u7c7b\u4f3cK8S\u7684clusterIP\u4e00\u6837\uff0c\u662f\u4e2a\u5047\u7684IP\uff0c\u4e0b\u9762\u7684\u56fe\u7684IP\u5730\u5740\uff0c\u4e0d\u5e94\u8be5\u662f192.168.70.140\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1.1.1.1\u6216\u80052.2.2.2\u4e4b\u7c7b\u7684 \uff09\uff0c\u7136\u540e\u590d\u5236\u4e0b\u9762\u7684\u547d\u4ee4 \u4f46\u662f\u9700\u8981\u628a\u547d\u4ee4\u4e2d\u768410000,10001,10002,10004\u4f9d\u6b21\u66f4\u6362\u4e3a30000,30001,30002,30004\uff0c\u5982\u679c\u5b89\u88c5\u5931\u8d25\uff0c\u5c31\u628a--region=zh \u6539\u6210--region=en [root@edgenode ~]# arch=$(uname -m); curl -LO https://kubeedge.pek3b.qingstor.com/bin/v1.6.2/$arch/keadm-v1.6.2-linux-$arch.tar.gz && tar xvf keadm-v1.6.2-linux-$arch.tar.gz && chmod +x keadm && ./keadm join --kubeedge-version=1.6.2 --region=zh --cloudcore-ipport=192.168.70.130:30000 --quicport 30001 --certport 30002 --tunnelport 30004 --edgenode-name edge-1 --edgenode-ip 192.168.70.140 --token 41c74c8e8f86d03b8560eb5be566c62c33eeac1865cdf3a48ad554e9626ef34e.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzA1NTAwNDZ9.mmR51Ue8rduKViXYqEuQQFyNcYol_IHQIm0K53iOQdM --with-edge-taint % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 38.5M 100 38.5M 0 0 1061k 0 0:00:37 0:00:37 --:--:-- 1034k ./keadm install MQTT service successfully. kubeedge-v1.6.2-linux-amd64.tar.gz checksum: checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content: [Run as service] start to download service file for edgecore [Run as service] success to download service file for edgecore kubeedge-v1.6.2-linux-amd64/ kubeedge-v1.6.2-linux-amd64/edge/ kubeedge-v1.6.2-linux-amd64/edge/edgecore kubeedge-v1.6.2-linux-amd64/cloud/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/csidriver kubeedge-v1.6.2-linux-amd64/cloud/admission/ kubeedge-v1.6.2-linux-amd64/cloud/admission/admission kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/ kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/cloudcore kubeedge-v1.6.2-linux-amd64/version KubeEdge edgecore is running, For logs visit: journalctl -u edgecore.service -b \u670d\u52a1\u7aef\u5237\u65b0\u9875\u9762\uff0c\u5c31\u6dfb\u52a0\u5b8c\u6210\u4e86 \u4e0a\u9762\u6dfb\u52a0\u5b8c\u540e\uff0c\u8fb9\u7f18\u8282\u70b9\u52a0\u5165\u96c6\u7fa4\u540e\uff0c\u90e8\u5206 Pod \u5728\u8c03\u5ea6\u81f3\u8be5\u8fb9\u7f18\u8282\u70b9\u4e0a\u540e\u53ef\u80fd\u4f1a\u4e00\u76f4\u5904\u4e8e Pending \u72b6\u6001\u3002\u7531\u4e8e\u90e8\u5206\u5b88\u62a4\u8fdb\u7a0b\u96c6\uff08\u4f8b\u5982\uff0cCalico\uff09\u6709\u5f3a\u5bb9\u5fcd\u5ea6\uff0c\u5728\u5f53\u524d\u7248\u672c\u4e2d (KubeSphere 3.2.1)\uff0c\u60a8\u9700\u8981\u624b\u52a8 Patch Pod \u4ee5\u9632\u6b62\u5b83\u4eec\u8c03\u5ea6\u81f3\u8be5\u8fb9\u7f18\u8282\u70b9\u3002 #!/bin/bash NodeSelectorPatchJson='{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"node-role.kubernetes.io/master\": \"\",\"node-role.kubernetes.io/worker\": \"\"}}}}}' NoShedulePatchJson='{\"spec\":{\"template\":{\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"node-role.kubernetes.io/edge\",\"operator\":\"DoesNotExist\"}]}]}}}}}}}' edgenode=\"edgenode\" if [ $1 ]; then edgenode=\"$1\" fi namespaces=($(kubectl get pods -A -o wide |egrep -i $edgenode | awk '{print $1}' )) pods=($(kubectl get pods -A -o wide |egrep -i $edgenode | awk '{print $2}' )) length=${#namespaces[@]} for((i=0;i<$length;i++)); do ns=${namespaces[$i]} pod=${pods[$i]} resources=$(kubectl -n $ns describe pod $pod | grep \"Controlled By\" |awk '{print $3}') echo \"Patching for ns:\"${namespaces[$i]}\",resources:\"$resources kubectl -n $ns patch $resources --type merge --patch \"$NoShedulePatchJson\" sleep 1 done \u5176\u5b9e\u4e0a\u9762arch=$(uname -m)\u5f00\u5934\u7684\u547d\u4ee4\uff0c\u662f\u8fde\u63a5[cloudcore]\u670d\u52a1\uff0c\u5728\u9875\u9762\u4e2d\u67e5\u770bcloudcore\u662fnodeport\u7684\u5f62\u5f0f\u63d0\u4f9b\u7684\uff0c\u6620\u5c04\u90fd\u662f30000\u540e\u7684\u7aef\u53e3\u53f7\uff0c\u6240\u4ee5\u9700\u8981\u6539\u4e0b\uff0c\u800c kubeedge.cloudCore.cloudHub.advertiseAddress \u5219\u5e94\u8be5\u662fcloudcore\u670d\u52a1\u7684IP\u5730\u5740\uff0c\u4ed6\u4eec\u662f\u4e00\u4e2aIP\u5730\u5740\uff0call-in-one\u6a21\u5f0f\u4e0b\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u5982\u679c\u5728\u516c\u7f51\u4e0b\uff0ccloudcore\u5e94\u8be5\u662fSLB\u6216\u8005\u516c\u7f51\u5730\u5740\u624d\u884c \u8fb9\u7f18\u8282\u70b9\u91cd\u7f6e \u5982\u679c\u8be5\u8fb9\u7f18\u8282\u70b9\u9700\u8981\u91cd\u7f6e\uff0c\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\u3002 ./keadm reset yum remove mosquitto rm -rf /var/lib/kubeedge /var/lib/edged /etc/kubeedge/ca /etc/kubeedge/certs rm -rf /etc/systemd/system/edgecore.service \u5220\u9664\u8fb9\u7f18\u8282\u70b9 \u5728\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c \u662f\u9875\u9762\u4e0a\u7684\u8fb9\u7f18\u8282\u70b9\u7684\u540d\u5b57 kubectl delete node <edgenode-name> \u8bbe\u7f6e\u516c\u5f00\u96c6\u7fa4\uff0c\u5728\u96c6\u7fa4\u7684 \u96c6\u7fa4\u8bbe\u7f6e \u4e2d\uff0c \u96c6\u7fa4\u53ef\u89c1\u6027 \u4e2d\uff0c \u7f16\u8f91\u53ef\u89c1\u6027 \uff0c\u62c9\u5230\u6700\u5e95\u90e8\uff0c\u6709\u4e2a \u8bbe\u7f6e\u4e3a\u516c\u5f00\u96c6\u7fa4 \u7684\u5f00\u5173\u6253\u5f00\u3002 \u521b\u5efa\u4f01\u4e1a\u7a7a\u95f4\u53ca\u76f8\u5173\u7528\u6237 https://kubesphere.com.cn/docs/quick-start/create-workspace-and-project/ \u5bfc\u5165HELM\u4ed3\u5e93 https://kubesphere.com.cn/docs/workspace-administration/app-repository/import-helm-repository/","title":"KubeSphere\u5b89\u88c5"},{"location":"KubeSphere/KubeSphere/#kubesphere","text":"https://kubesphere.com.cn/docs/quick-start/all-in-one-on-linux/ all in one\uff1a \u8bbe\u7f6e4\u6838\uff0c8G\u5185\u5b58\uff0c\u592a\u5c0f\u7684\u8bdd\uff0c\u6709\u7684\u670d\u52a1\u65e0\u6cd5\u542f\u52a8\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux \u4e3b\u673a\u540d KubeSphere\u7248\u672c IP centos7 3.1.1 192.168.70.130 [root@centos7 ~]# yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset [root@centos7 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@centos7 ~]# yum list docker-ce --showduplicates | sort -r [root@centos7 ~]# yum install docker-ce-20.10.6 [root@centos7 ~]# systemctl enable --now docker [root@centos7 ~]# export KKZONE=cn [root@centos7 ~]# curl -sfL https://get-kk.kubesphere.io | VERSION=v1.1.1 sh - [root@centos7 ~]# chmod +x kk [root@centos7 ~]#./kk create cluster --with-kubernetes v1.20.4 --with-kubesphere v3.1.1 \u7136\u540e\u4f1a\u63d0\u793a\u8ba9\u5b89\u88c5\u4f9d\u8d56\uff0c\u5ffd\u7565\u5c31\u53ef\u4ee5 \u8f93\u5165yes\uff0c\u7136\u540e\u5c31\u5b8c\u6210\u4e86\u5b89\u88c5 \u542f\u7528\u591a\u96c6\u7fa4\u7ba1\u7406\u529f\u80fd https://v3-1.docs.kubesphere.io/zh/docs/multicluster-management/enable-multicluster/direct-connection/ \u542f\u52a8\u5546\u5e97 https://v3-1.docs.kubesphere.io/zh/docs/pluggable-components/app-store/ \u542f\u52a8Metrics Server\u529f\u80fd https://kubesphere.com.cn/docs/pluggable-components/metrics-server/#%E5%9C%A8%E5%AE%89%E8%A3%85%E5%90%8E%E5%90%AF%E7%94%A8-metrics-server \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u4f7f\u7528\u8fb9\u7f18\u8282\u70b9\u529f\u80fd\uff0c\u4e00\u5b9a\u8981\u542f\u52a8Metrics Server\u529f\u80fd\uff0c\u5426\u5219\u8fb9\u7f18\u8282\u70b9\u6ca1\u6709\u76d1\u63a7\u4fe1\u606f","title":"KubeSphere \u5355\u70b9\u5b89\u88c5"},{"location":"KubeSphere/KubeSphere/#_1","text":"\u5b98\u65b9\u6587\u6863 https://kubesphere.com.cn/docs/pluggable-components/kubeedge/#%E5%9C%A8%E5%AE%89%E8%A3%85%E5%90%8E%E5%90%AF%E7%94%A8-kubeedge \u6211\u662f\u5b89\u88c5\u540e\u542f\u7528 KubeEdge\uff0c\u5176\u4e2d\u6587\u7ae0\u4e2d \u201c\u5c06 kubeedge.cloudCore.cloudHub.advertiseAddress \u7684\u503c\u8bbe\u7f6e\u4e3a\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\u6216\u8fb9\u7f18\u8282\u70b9\u53ef\u4ee5\u8bbf\u95ee\u7684 IP \u5730\u5740\u201c \u63d0\u5230\u96c6\u7fa4\u7684\u516c\u5171 IP \u5730\u5740\uff0c\u56e0\u4e3a\u6211\u4f7f\u7528\u7684\u662fall in one\u6a21\u5f0f\uff0c\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u90a3\u4e48\u8fd9\u91cc\u6211\u586b\u5199\u7684\u5c31\u662f192.168.70.130 \u7136\u540e\u5728\u673a\u5668\u4e0a\u6267\u884c [root@centos7 ~] kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-install -o jsonpath='{.items[0].metadata.name}') -f \u7b49\u5f85\u914d\u7f6e\u66f4\u6539\u5b8c\u6210\uff0c\u51fa\u73b0\u4e0b\u9762\u8fd9\u4e2a\uff0c\u5c31\u8868\u793a\u53d8\u66f4\u5b8c\u6210 ##################################################### ### Welcome to KubeSphere! ### ##################################################### Console: http://192.168.70.130:30880 Account: admin Password: P@88w0rd NOTES\uff1a 1. After you log into the console, please check the monitoring status of service components in \"Cluster Management\". If any service is not ready, please wait patiently until all components are up and running. 2. Please change the default password after login. ##################################################### https://kubesphere.io 2021-09-01 10:35:12 ##################################################### \u5237\u65b0\u9875\u9762\uff0c\u8282\u70b9\u7ba1\u7406\u4e2d\uff0c\u51fa\u73b0\u8fb9\u7f18\u8282\u70b9","title":"\u542f\u7528\u8fb9\u7f18\u8282\u70b9\u529f\u80fd"},{"location":"KubeSphere/KubeSphere/#_2","text":"https://kubesphere.com.cn/docs/installing-on-linux/cluster-operation/add-edge-nodes/ \u65b0\u5efa\u4e00\u53f0\u673a\u5668\uff0c\u6765\u5f53\u505a\u8fb9\u7f18\u8282\u70b9\uff0c\u5173\u95ed\u9632\u706b\u5899\uff0c\u5173\u95edselinux\uff0c\u6211\u8bbe\u7f6e\u7684\u662f4G\uff0c\u53cc\u6838\u673a\u5668 \u4e3b\u673a\u540d IP edgenode 192.168.70.140 \u673a\u5668\u51c6\u5907\u5de5\u4f5c\uff0c\u5b89\u88c5\u4f9d\u8d56 [root@edgenode ~] yum install -y yum-utils device-mapper-persistent-data lvm2 wget [root@edgenode ~] yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@edgenode ~] yum makecache fast [root@edgenode ~] yum install docker-ce-19.03.15-3.el7 docker-ce-cli-19.03.15-3.el7 -y [root@edgenode ~] systemctl enable docker && systemctl restart docker [root@edgenode ~] vi /etc/nsswitch.conf //\u4fee\u6539\u8fd9\u884c hosts: dns files mdns4_minimal [NOTFOUND=return] [root@edgenode ~] echo \"net.ipv4.ip_forward = 1\" >> /etc/sysctl.conf [root@edgenode ~] sysctl -p | grep ip_forward \u7136\u540e\u5c31\u53ef\u4ee5\u5728KubeSphere\u9875\u9762\u4e0a\uff0c\u8282\u70b9\u7ba1\u7406--\u300b\u8fb9\u7f18\u8282\u70b9--\u300b\u6dfb\u52a0\u8282\u70b9\uff0c\u8f93\u5165\u7ed9node\u7684\u540d\u5b57\uff0cnode\u7684IP\u5730\u5740\uff08 \u6ce8\u610f\uff1a\u8fd9\u91cc\u8fd9\u4e2anode\u7684IP\u5730\u5740\uff0c\u4e0d\u8981\u662fnode\u7684\u771f\u5b9eIP\u5730\u5740\uff0c\u8fd9\u4e2aIP\u662f\u4e2a\u865a\u62dfIP\u5730\u5740\uff0c\u7c7b\u4f3cK8S\u7684clusterIP\u4e00\u6837\uff0c\u662f\u4e2a\u5047\u7684IP\uff0c\u4e0b\u9762\u7684\u56fe\u7684IP\u5730\u5740\uff0c\u4e0d\u5e94\u8be5\u662f192.168.70.140\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a1.1.1.1\u6216\u80052.2.2.2\u4e4b\u7c7b\u7684 \uff09\uff0c\u7136\u540e\u590d\u5236\u4e0b\u9762\u7684\u547d\u4ee4 \u4f46\u662f\u9700\u8981\u628a\u547d\u4ee4\u4e2d\u768410000,10001,10002,10004\u4f9d\u6b21\u66f4\u6362\u4e3a30000,30001,30002,30004\uff0c\u5982\u679c\u5b89\u88c5\u5931\u8d25\uff0c\u5c31\u628a--region=zh \u6539\u6210--region=en [root@edgenode ~]# arch=$(uname -m); curl -LO https://kubeedge.pek3b.qingstor.com/bin/v1.6.2/$arch/keadm-v1.6.2-linux-$arch.tar.gz && tar xvf keadm-v1.6.2-linux-$arch.tar.gz && chmod +x keadm && ./keadm join --kubeedge-version=1.6.2 --region=zh --cloudcore-ipport=192.168.70.130:30000 --quicport 30001 --certport 30002 --tunnelport 30004 --edgenode-name edge-1 --edgenode-ip 192.168.70.140 --token 41c74c8e8f86d03b8560eb5be566c62c33eeac1865cdf3a48ad554e9626ef34e.eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzA1NTAwNDZ9.mmR51Ue8rduKViXYqEuQQFyNcYol_IHQIm0K53iOQdM --with-edge-taint % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 38.5M 100 38.5M 0 0 1061k 0 0:00:37 0:00:37 --:--:-- 1034k ./keadm install MQTT service successfully. kubeedge-v1.6.2-linux-amd64.tar.gz checksum: checksum_kubeedge-v1.6.2-linux-amd64.tar.gz.txt content: [Run as service] start to download service file for edgecore [Run as service] success to download service file for edgecore kubeedge-v1.6.2-linux-amd64/ kubeedge-v1.6.2-linux-amd64/edge/ kubeedge-v1.6.2-linux-amd64/edge/edgecore kubeedge-v1.6.2-linux-amd64/cloud/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/ kubeedge-v1.6.2-linux-amd64/cloud/csidriver/csidriver kubeedge-v1.6.2-linux-amd64/cloud/admission/ kubeedge-v1.6.2-linux-amd64/cloud/admission/admission kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/ kubeedge-v1.6.2-linux-amd64/cloud/cloudcore/cloudcore kubeedge-v1.6.2-linux-amd64/version KubeEdge edgecore is running, For logs visit: journalctl -u edgecore.service -b \u670d\u52a1\u7aef\u5237\u65b0\u9875\u9762\uff0c\u5c31\u6dfb\u52a0\u5b8c\u6210\u4e86 \u4e0a\u9762\u6dfb\u52a0\u5b8c\u540e\uff0c\u8fb9\u7f18\u8282\u70b9\u52a0\u5165\u96c6\u7fa4\u540e\uff0c\u90e8\u5206 Pod \u5728\u8c03\u5ea6\u81f3\u8be5\u8fb9\u7f18\u8282\u70b9\u4e0a\u540e\u53ef\u80fd\u4f1a\u4e00\u76f4\u5904\u4e8e Pending \u72b6\u6001\u3002\u7531\u4e8e\u90e8\u5206\u5b88\u62a4\u8fdb\u7a0b\u96c6\uff08\u4f8b\u5982\uff0cCalico\uff09\u6709\u5f3a\u5bb9\u5fcd\u5ea6\uff0c\u5728\u5f53\u524d\u7248\u672c\u4e2d (KubeSphere 3.2.1)\uff0c\u60a8\u9700\u8981\u624b\u52a8 Patch Pod \u4ee5\u9632\u6b62\u5b83\u4eec\u8c03\u5ea6\u81f3\u8be5\u8fb9\u7f18\u8282\u70b9\u3002 #!/bin/bash NodeSelectorPatchJson='{\"spec\":{\"template\":{\"spec\":{\"nodeSelector\":{\"node-role.kubernetes.io/master\": \"\",\"node-role.kubernetes.io/worker\": \"\"}}}}}' NoShedulePatchJson='{\"spec\":{\"template\":{\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"node-role.kubernetes.io/edge\",\"operator\":\"DoesNotExist\"}]}]}}}}}}}' edgenode=\"edgenode\" if [ $1 ]; then edgenode=\"$1\" fi namespaces=($(kubectl get pods -A -o wide |egrep -i $edgenode | awk '{print $1}' )) pods=($(kubectl get pods -A -o wide |egrep -i $edgenode | awk '{print $2}' )) length=${#namespaces[@]} for((i=0;i<$length;i++)); do ns=${namespaces[$i]} pod=${pods[$i]} resources=$(kubectl -n $ns describe pod $pod | grep \"Controlled By\" |awk '{print $3}') echo \"Patching for ns:\"${namespaces[$i]}\",resources:\"$resources kubectl -n $ns patch $resources --type merge --patch \"$NoShedulePatchJson\" sleep 1 done \u5176\u5b9e\u4e0a\u9762arch=$(uname -m)\u5f00\u5934\u7684\u547d\u4ee4\uff0c\u662f\u8fde\u63a5[cloudcore]\u670d\u52a1\uff0c\u5728\u9875\u9762\u4e2d\u67e5\u770bcloudcore\u662fnodeport\u7684\u5f62\u5f0f\u63d0\u4f9b\u7684\uff0c\u6620\u5c04\u90fd\u662f30000\u540e\u7684\u7aef\u53e3\u53f7\uff0c\u6240\u4ee5\u9700\u8981\u6539\u4e0b\uff0c\u800c kubeedge.cloudCore.cloudHub.advertiseAddress \u5219\u5e94\u8be5\u662fcloudcore\u670d\u52a1\u7684IP\u5730\u5740\uff0c\u4ed6\u4eec\u662f\u4e00\u4e2aIP\u5730\u5740\uff0call-in-one\u6a21\u5f0f\u4e0b\u53ea\u6709\u4e00\u4e2aIP\u5730\u5740\uff0c\u5982\u679c\u5728\u516c\u7f51\u4e0b\uff0ccloudcore\u5e94\u8be5\u662fSLB\u6216\u8005\u516c\u7f51\u5730\u5740\u624d\u884c","title":"\u6dfb\u52a0\u8fb9\u7f18\u8282\u70b9"},{"location":"KubeSphere/KubeSphere/#_3","text":"\u5982\u679c\u8be5\u8fb9\u7f18\u8282\u70b9\u9700\u8981\u91cd\u7f6e\uff0c\u9700\u8981\u5982\u4e0b\u64cd\u4f5c\u3002 ./keadm reset yum remove mosquitto rm -rf /var/lib/kubeedge /var/lib/edged /etc/kubeedge/ca /etc/kubeedge/certs rm -rf /etc/systemd/system/edgecore.service","title":"\u8fb9\u7f18\u8282\u70b9\u91cd\u7f6e"},{"location":"KubeSphere/KubeSphere/#_4","text":"\u5728\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u6267\u884c\u4e0b\u9762\u7684\u547d\u4ee4\uff0c \u662f\u9875\u9762\u4e0a\u7684\u8fb9\u7f18\u8282\u70b9\u7684\u540d\u5b57 kubectl delete node <edgenode-name> \u8bbe\u7f6e\u516c\u5f00\u96c6\u7fa4\uff0c\u5728\u96c6\u7fa4\u7684 \u96c6\u7fa4\u8bbe\u7f6e \u4e2d\uff0c \u96c6\u7fa4\u53ef\u89c1\u6027 \u4e2d\uff0c \u7f16\u8f91\u53ef\u89c1\u6027 \uff0c\u62c9\u5230\u6700\u5e95\u90e8\uff0c\u6709\u4e2a \u8bbe\u7f6e\u4e3a\u516c\u5f00\u96c6\u7fa4 \u7684\u5f00\u5173\u6253\u5f00\u3002 \u521b\u5efa\u4f01\u4e1a\u7a7a\u95f4\u53ca\u76f8\u5173\u7528\u6237 https://kubesphere.com.cn/docs/quick-start/create-workspace-and-project/ \u5bfc\u5165HELM\u4ed3\u5e93 https://kubesphere.com.cn/docs/workspace-administration/app-repository/import-helm-repository/","title":"\u5220\u9664\u8fb9\u7f18\u8282\u70b9"},{"location":"Linux/Cpu/LWP/","text":"LWP Linux\u7684\u7ebf\u7a0b\u5b9e\u5219\u4e3a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff0c\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff0c\u53ef\u89c1\u5176\u672c\u8d28\u4ecd\u7136\u662f\u8fdb\u7a0b\uff0c\u4e0e\u666e\u901a\u8fdb\u7a0b\u76f8\u6bd4\uff0cLWP\u4e0e\u5176\u5b83\u8fdb\u7a0b\u5171\u4eab\u6240\u6709\uff08\u6216\u5927\u90e8\u5206\uff09\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u548c\u7cfb\u7edf\u8d44\u6e90\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u521b\u5efa\u591a\u4e2aLWP\uff0c\u8fd9\u6837\u5b83\u4eec\u5171\u4eab\u5927\u90e8\u5206\u8d44\u6e90\uff1bLWP\u6709\u5b83\u81ea\u5df1\u7684\u8fdb\u7a0b\u6807\u8bc6\u7b26\uff0c\u5e76\u548c\u5176\u4ed6\u8fdb\u7a0b\u6709\u7740\u7236\u5b50\u5173\u7cfb\uff1b\u8fd9\u662f\u548c\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cfb\u7edf\u8c03\u7528vfork()\u751f\u6210\u7684\u8fdb\u7a0b\u4e00\u6837\u7684\u3002LWP\u7531\u5185\u6838\u7ba1\u7406\u5e76\u50cf\u666e\u901a\u8fdb\u7a0b\u4e00\u6837\u88ab\u8c03\u5ea6\u3002Linux\u5185\u6838\u662f\u652f\u6301LWP\u7684\u5178\u578b\u4f8b\u5b50\u3002Linux\u5185\u6838\u5728 2.0.x\u7248\u672c\u5c31\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8f7b\u91cf\u8fdb\u7a0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684clone()\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u7528\u4e0d\u540c\u7684\u53c2\u6570\u6307\u5b9a\u521b\u5efa\u8f7b\u91cf\u8fdb\u7a0b\u8fd8\u662f\u666e\u901a\u8fdb\u7a0b\uff0c\u901a\u8fc7\u53c2\u6570\u51b3\u5b9a\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u5171\u4eab\u7684\u8d44\u6e90\u79cd\u7c7b\u548c\u6570\u91cf\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u8f7b\u91cd\u4e4b\u5206\u3002\u5728\u5185\u6838\u4e2d\uff0c clone()\u8c03\u7528\u7ecf\u8fc7\u53c2\u6570\u4f20\u9012\u548c\u89e3\u91ca\u540e\u4f1a\u8c03\u7528do_fork()\uff0c\u8fd9\u4e2a\u6838\u5185\u51fd\u6570\u540c\u65f6\u4e5f\u662ffork()\u3001vfork()\u7cfb\u7edf\u8c03\u7528\u7684\u6700\u7ec8\u5b9e\u73b0\u3002 \u5728\u5927\u591a\u6570\u7cfb\u7edf\u4e2d\uff0cLWP\u4e0e\u666e\u901a\u8fdb\u7a0b\u7684\u533a\u522b\u4e5f\u5728\u4e8e\u5b83\u53ea\u6709\u4e00\u4e2a\u6700\u5c0f\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u548c\u8c03\u5ea6\u7a0b\u5e8f\u6240\u9700\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u800c\u8fd9\u4e5f\u662f\u5b83\u4e4b\u6240\u4ee5\u88ab\u79f0\u4e3a\u8f7b\u91cf\u7ea7\u7684\u539f\u56e0\u3002 \u56e0\u4e3aLWP\u4e4b\u95f4\u5171\u4eab\u5b83\u4eec\u7684\u5927\u90e8\u5206\u8d44\u6e90\uff0c\u6240\u4ee5\u5b83\u5728\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5c31\u4e0d\u9002\u7528\u4e86\uff1b\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u4f7f\u7528\u591a\u4e2a\u666e\u901a\u7684\u8fdb\u7a0b\u4e86\u3002\u4f8b\u5982\uff0c\u4e3a\u4e86\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\uff08a process can be replaced by another one\uff09\u548c\u5b9e\u73b0\u7279\u6743\u5206\u9694\uff08processes can run under other credentials and have other permissions\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u628aLWP\u770b\u6210\u662f\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u4f7f\u5f97\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u6982\u5ff5\u6df7\u6dc6\u4e86\uff0c\u6709\u4eba\u8bf4\u7cfb\u7edf\u8c03\u5ea6\u5355\u4f4d\u662f\u8fdb\u7a0b\uff0c\u53c8\u6709\u4eba\u8bf4\u662f\u7ebf\u7a0b\uff0c\u5176\u5b9e\u7cfb\u7edf\u8c03\u5ea6\u7684\u5355\u4f4d\u4e00\u76f4\u5c31\u6ca1\u6709\u6539\u53d8\uff0c\u53ea\u662f\u540e\u6765\u90e8\u5206\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u754c\u9650\u6a21\u7cca\u4e86 \u53c2\u8003\u6587\u6863\uff1a http://www.uml.org.cn/embeded/202011244.asp https://www.daimajiaoliu.com/daima/485a207729003f8 https://www.daimajiaoliu.com/daima/4795933fc9003ec https://www.modb.pro/db/15191","title":"LWP"},{"location":"Linux/Cpu/LWP/#lwp","text":"Linux\u7684\u7ebf\u7a0b\u5b9e\u5219\u4e3a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff0c\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff0c\u53ef\u89c1\u5176\u672c\u8d28\u4ecd\u7136\u662f\u8fdb\u7a0b\uff0c\u4e0e\u666e\u901a\u8fdb\u7a0b\u76f8\u6bd4\uff0cLWP\u4e0e\u5176\u5b83\u8fdb\u7a0b\u5171\u4eab\u6240\u6709\uff08\u6216\u5927\u90e8\u5206\uff09\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u548c\u7cfb\u7edf\u8d44\u6e90\uff0c\u4e00\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u521b\u5efa\u591a\u4e2aLWP\uff0c\u8fd9\u6837\u5b83\u4eec\u5171\u4eab\u5927\u90e8\u5206\u8d44\u6e90\uff1bLWP\u6709\u5b83\u81ea\u5df1\u7684\u8fdb\u7a0b\u6807\u8bc6\u7b26\uff0c\u5e76\u548c\u5176\u4ed6\u8fdb\u7a0b\u6709\u7740\u7236\u5b50\u5173\u7cfb\uff1b\u8fd9\u662f\u548c\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\u7684\u7cfb\u7edf\u8c03\u7528vfork()\u751f\u6210\u7684\u8fdb\u7a0b\u4e00\u6837\u7684\u3002LWP\u7531\u5185\u6838\u7ba1\u7406\u5e76\u50cf\u666e\u901a\u8fdb\u7a0b\u4e00\u6837\u88ab\u8c03\u5ea6\u3002Linux\u5185\u6838\u662f\u652f\u6301LWP\u7684\u5178\u578b\u4f8b\u5b50\u3002Linux\u5185\u6838\u5728 2.0.x\u7248\u672c\u5c31\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8f7b\u91cf\u8fdb\u7a0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684clone()\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u7528\u4e0d\u540c\u7684\u53c2\u6570\u6307\u5b9a\u521b\u5efa\u8f7b\u91cf\u8fdb\u7a0b\u8fd8\u662f\u666e\u901a\u8fdb\u7a0b\uff0c\u901a\u8fc7\u53c2\u6570\u51b3\u5b9a\u5b50\u8fdb\u7a0b\u548c\u7236\u8fdb\u7a0b\u5171\u4eab\u7684\u8d44\u6e90\u79cd\u7c7b\u548c\u6570\u91cf\uff0c\u8fd9\u6837\u5c31\u6709\u4e86\u8f7b\u91cd\u4e4b\u5206\u3002\u5728\u5185\u6838\u4e2d\uff0c clone()\u8c03\u7528\u7ecf\u8fc7\u53c2\u6570\u4f20\u9012\u548c\u89e3\u91ca\u540e\u4f1a\u8c03\u7528do_fork()\uff0c\u8fd9\u4e2a\u6838\u5185\u51fd\u6570\u540c\u65f6\u4e5f\u662ffork()\u3001vfork()\u7cfb\u7edf\u8c03\u7528\u7684\u6700\u7ec8\u5b9e\u73b0\u3002 \u5728\u5927\u591a\u6570\u7cfb\u7edf\u4e2d\uff0cLWP\u4e0e\u666e\u901a\u8fdb\u7a0b\u7684\u533a\u522b\u4e5f\u5728\u4e8e\u5b83\u53ea\u6709\u4e00\u4e2a\u6700\u5c0f\u7684\u6267\u884c\u4e0a\u4e0b\u6587\u548c\u8c03\u5ea6\u7a0b\u5e8f\u6240\u9700\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u800c\u8fd9\u4e5f\u662f\u5b83\u4e4b\u6240\u4ee5\u88ab\u79f0\u4e3a\u8f7b\u91cf\u7ea7\u7684\u539f\u56e0\u3002 \u56e0\u4e3aLWP\u4e4b\u95f4\u5171\u4eab\u5b83\u4eec\u7684\u5927\u90e8\u5206\u8d44\u6e90\uff0c\u6240\u4ee5\u5b83\u5728\u67d0\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5c31\u4e0d\u9002\u7528\u4e86\uff1b\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u4f7f\u7528\u591a\u4e2a\u666e\u901a\u7684\u8fdb\u7a0b\u4e86\u3002\u4f8b\u5982\uff0c\u4e3a\u4e86\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\uff08a process can be replaced by another one\uff09\u548c\u5b9e\u73b0\u7279\u6743\u5206\u9694\uff08processes can run under other credentials and have other permissions\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u628aLWP\u770b\u6210\u662f\u4e00\u4e2a\u7ebf\u7a0b\u3002\u5c31\u56e0\u4e3a\u8fd9\u4e2a\u4f7f\u5f97\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u6982\u5ff5\u6df7\u6dc6\u4e86\uff0c\u6709\u4eba\u8bf4\u7cfb\u7edf\u8c03\u5ea6\u5355\u4f4d\u662f\u8fdb\u7a0b\uff0c\u53c8\u6709\u4eba\u8bf4\u662f\u7ebf\u7a0b\uff0c\u5176\u5b9e\u7cfb\u7edf\u8c03\u5ea6\u7684\u5355\u4f4d\u4e00\u76f4\u5c31\u6ca1\u6709\u6539\u53d8\uff0c\u53ea\u662f\u540e\u6765\u90e8\u5206\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u754c\u9650\u6a21\u7cca\u4e86 \u53c2\u8003\u6587\u6863\uff1a http://www.uml.org.cn/embeded/202011244.asp https://www.daimajiaoliu.com/daima/485a207729003f8 https://www.daimajiaoliu.com/daima/4795933fc9003ec https://www.modb.pro/db/15191","title":"LWP"},{"location":"Linux/Cpu/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%A0%94%E7%A9%B6/","text":"\u7ebf\u7a0b \u7f51\u4e0a\u67e5\u627e\u7ebf\u7a0b\u7684\u8d44\u6599\uff0c\u5f88\u591a\u90fd\u662f\u8bb2\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u8bb2\u5b9e\u9645\u6848\u4f8b\uff0c\u800c\u7ebf\u7a0b\u4e5f\u662f\u5206\u5f88\u591a\u5b9e\u73b0\u65b9\u6cd5\u7684\uff0c\u5bf9\u4e8e\u7ebf\u7a0b\u5404\u79cd\u72b6\u6001\uff0c\u4e5f\u662f\u4e0d\u540c\u5b9e\u73b0\u65b9\u6cd5\u5b9e\u73b0\u7684\u7ebf\u7a0b\u5b58\u5728\u5dee\u5f02 \u6211\u5e73\u65f6\u63a5\u89e6\u6700\u591a\u7684\u5c31\u662fLinux\uff0c\u8fd9\u91cc\u53ea\u9488\u5bf9centos\u7684Linux\u7ebf\u7a0b\u505a\u9610\u8ff0 \u7ebf\u7a0b\u662f\u4ec0\u4e48 \u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u57fa\u672c\u6982\u5ff5\uff1ahttps://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B \u7ebf\u7a0b\u7684\u6807\u51c6\u662f POSIX\u7ebf\u7a0b\uff08POSIX threads\uff09\uff0c\u7b80\u79f0Pthreads\uff0c \u662f\u7ebf\u7a0b\u7684POSIX\u6807\u51c6\u3002\u8be5\u6807\u51c6\u5b9a\u4e49\u4e86\u521b\u5efa\u548c\u64cd\u7eb5\u7ebf\u7a0b\u7684\u4e00\u6574\u5957API\u3002\u5728\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\uff08Unix\u3001Linux\u3001Mac OS X\u7b49\uff09\u4e2d\uff0c\u90fd\u4f7f\u7528Pthreads\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b \u5386\u53f2 \u4e00\u5f00\u59cbLinux\u7684\u591a\u7ebf\u7a0b\u662f LinuxThreads \u8fd9\u4e2a\u5de5\u7a0b\u5e26\u5165\u5230 Linux \u7684\uff0c\u4f46\u662f\u4e0d\u7b26\u5408POSIX threads\uff0c\u540e\u6765\u51fa\u73b0\u4e86 NPTL\uff0c\u4ee3\u66ff LinuxThreads\u3002\u4e00\u76f4\u4ee5\u6765, linux\u5185\u6838\u5e76\u6ca1\u6709\u7ebf\u7a0b\u7684\u6982\u5ff5. \u6bcf\u4e00\u4e2a\u6267\u884c\u5b9e\u4f53\u90fd\u662f\u4e00\u4e2atask_struct\u7ed3\u6784, \u901a\u5e38\u79f0\u4e4b\u4e3a\u8fdb\u7a0b. \u4e5f\u5c31\u662fLWP\uff0cLinux\u5185\u6838\u5728 2.0.x\u7248\u672c\u5c31\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8f7b\u91cf\u8fdb\u7a0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684clone()\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u7528\u4e0d\u540c\u7684\u53c2\u6570\u6307\u5b9a\u521b\u5efa\u8f7b\u91cf\u8fdb\u7a0b\u8fd8\u662f\u666e\u901a\u8fdb\u7a0b\u3002\u5728\u5185\u6838\u4e2d\uff0c clone()\u8c03\u7528\u7ecf\u8fc7\u53c2\u6570\u4f20\u9012\u548c\u89e3\u91ca\u540e\u4f1a\u8c03\u7528do_fork()\uff0c\u8fd9\u4e2a\u6838\u5185\u51fd\u6570\u540c\u65f6\u4e5f\u662ffork()\u3001vfork()\u7cfb\u7edf\u8c03\u7528\u7684\u6700\u7ec8\u5b9e\u73b0\u3002\u540e\u6765\u4e3a\u4e86\u5f15\u5165\u591a\u7ebf\u7a0b\uff0cLinux2.0~2.4\u5b9e\u73b0\u7684\u662f\u4fd7\u79f0LinuxThreads\u7684\u591a\u7ebf\u7a0b\u65b9\u5f0f\uff0c\u5230\u4e862.6\uff0c\u57fa\u672c\u4e0a\u90fd\u662fNPTL\u7684\u65b9\u5f0f\u4e86 LinuxThreads : https://en.wikipedia.org/wiki/LinuxThreads NPTL : https://en.wikipedia.org/wiki/Native_POSIX_Thread_Library \u67e5\u770b \u5728\u73b0\u4ee3\u7684\u65e2\u6709 NPTL \u53c8\u6709 LinuxThreads \u7684 Linux \u53d1\u884c\u7248\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u7ebf\u7a0b\u5e93\uff1a $ getconf GNU_LIBPTHREAD_VERSION \u8f93\u51fa\u7684\u7ed3\u679c\u5982\u4e0b\uff1a NPTL 0.34 \u6216\u8005\uff1a linuxthreads-0.10 \u76f8\u5173\u8d44\u6599\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://blog.csdn.net/kwinway/article/details/80550937 \u94fe\u63a5\uff1ahttps://www.jianshu.com/p/6c507b966ad1","title":"\u7ebf\u7a0b"},{"location":"Linux/Cpu/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%A0%94%E7%A9%B6/#_1","text":"\u7f51\u4e0a\u67e5\u627e\u7ebf\u7a0b\u7684\u8d44\u6599\uff0c\u5f88\u591a\u90fd\u662f\u8bb2\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u8bb2\u5b9e\u9645\u6848\u4f8b\uff0c\u800c\u7ebf\u7a0b\u4e5f\u662f\u5206\u5f88\u591a\u5b9e\u73b0\u65b9\u6cd5\u7684\uff0c\u5bf9\u4e8e\u7ebf\u7a0b\u5404\u79cd\u72b6\u6001\uff0c\u4e5f\u662f\u4e0d\u540c\u5b9e\u73b0\u65b9\u6cd5\u5b9e\u73b0\u7684\u7ebf\u7a0b\u5b58\u5728\u5dee\u5f02 \u6211\u5e73\u65f6\u63a5\u89e6\u6700\u591a\u7684\u5c31\u662fLinux\uff0c\u8fd9\u91cc\u53ea\u9488\u5bf9centos\u7684Linux\u7ebf\u7a0b\u505a\u9610\u8ff0","title":"\u7ebf\u7a0b"},{"location":"Linux/Cpu/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%A0%94%E7%A9%B6/#_2","text":"\u7ef4\u57fa\u767e\u79d1\u4e0a\u7684\u57fa\u672c\u6982\u5ff5\uff1ahttps://zh.wikipedia.org/wiki/%E7%BA%BF%E7%A8%8B \u7ebf\u7a0b\u7684\u6807\u51c6\u662f POSIX\u7ebf\u7a0b\uff08POSIX threads\uff09\uff0c\u7b80\u79f0Pthreads\uff0c \u662f\u7ebf\u7a0b\u7684POSIX\u6807\u51c6\u3002\u8be5\u6807\u51c6\u5b9a\u4e49\u4e86\u521b\u5efa\u548c\u64cd\u7eb5\u7ebf\u7a0b\u7684\u4e00\u6574\u5957API\u3002\u5728\u7c7bUnix\u64cd\u4f5c\u7cfb\u7edf\uff08Unix\u3001Linux\u3001Mac OS X\u7b49\uff09\u4e2d\uff0c\u90fd\u4f7f\u7528Pthreads\u4f5c\u4e3a\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ebf\u7a0b","title":"\u7ebf\u7a0b\u662f\u4ec0\u4e48"},{"location":"Linux/Cpu/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%A0%94%E7%A9%B6/#_3","text":"\u4e00\u5f00\u59cbLinux\u7684\u591a\u7ebf\u7a0b\u662f LinuxThreads \u8fd9\u4e2a\u5de5\u7a0b\u5e26\u5165\u5230 Linux \u7684\uff0c\u4f46\u662f\u4e0d\u7b26\u5408POSIX threads\uff0c\u540e\u6765\u51fa\u73b0\u4e86 NPTL\uff0c\u4ee3\u66ff LinuxThreads\u3002\u4e00\u76f4\u4ee5\u6765, linux\u5185\u6838\u5e76\u6ca1\u6709\u7ebf\u7a0b\u7684\u6982\u5ff5. \u6bcf\u4e00\u4e2a\u6267\u884c\u5b9e\u4f53\u90fd\u662f\u4e00\u4e2atask_struct\u7ed3\u6784, \u901a\u5e38\u79f0\u4e4b\u4e3a\u8fdb\u7a0b. \u4e5f\u5c31\u662fLWP\uff0cLinux\u5185\u6838\u5728 2.0.x\u7248\u672c\u5c31\u5df2\u7ecf\u5b9e\u73b0\u4e86\u8f7b\u91cf\u8fdb\u7a0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u7edf\u4e00\u7684clone()\u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff0c\u7528\u4e0d\u540c\u7684\u53c2\u6570\u6307\u5b9a\u521b\u5efa\u8f7b\u91cf\u8fdb\u7a0b\u8fd8\u662f\u666e\u901a\u8fdb\u7a0b\u3002\u5728\u5185\u6838\u4e2d\uff0c clone()\u8c03\u7528\u7ecf\u8fc7\u53c2\u6570\u4f20\u9012\u548c\u89e3\u91ca\u540e\u4f1a\u8c03\u7528do_fork()\uff0c\u8fd9\u4e2a\u6838\u5185\u51fd\u6570\u540c\u65f6\u4e5f\u662ffork()\u3001vfork()\u7cfb\u7edf\u8c03\u7528\u7684\u6700\u7ec8\u5b9e\u73b0\u3002\u540e\u6765\u4e3a\u4e86\u5f15\u5165\u591a\u7ebf\u7a0b\uff0cLinux2.0~2.4\u5b9e\u73b0\u7684\u662f\u4fd7\u79f0LinuxThreads\u7684\u591a\u7ebf\u7a0b\u65b9\u5f0f\uff0c\u5230\u4e862.6\uff0c\u57fa\u672c\u4e0a\u90fd\u662fNPTL\u7684\u65b9\u5f0f\u4e86 LinuxThreads : https://en.wikipedia.org/wiki/LinuxThreads NPTL : https://en.wikipedia.org/wiki/Native_POSIX_Thread_Library","title":"\u5386\u53f2"},{"location":"Linux/Cpu/%E7%BA%BF%E7%A8%8B%E7%9A%84%E7%A0%94%E7%A9%B6/#_4","text":"\u5728\u73b0\u4ee3\u7684\u65e2\u6709 NPTL \u53c8\u6709 LinuxThreads \u7684 Linux \u53d1\u884c\u7248\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u67e5\u770b\u5f53\u524d\u4f7f\u7528\u7684\u662f\u54ea\u4e2a\u7ebf\u7a0b\u5e93\uff1a $ getconf GNU_LIBPTHREAD_VERSION \u8f93\u51fa\u7684\u7ed3\u679c\u5982\u4e0b\uff1a NPTL 0.34 \u6216\u8005\uff1a linuxthreads-0.10 \u76f8\u5173\u8d44\u6599\u94fe\u63a5\uff1a \u94fe\u63a5\uff1ahttps://blog.csdn.net/kwinway/article/details/80550937 \u94fe\u63a5\uff1ahttps://www.jianshu.com/p/6c507b966ad1","title":"\u67e5\u770b"},{"location":"api/MkDoc/","text":"\u90e8\u7f72MkDocs \u6211\u7684\u73af\u5883\u662fwindows10 \uff0c\u5b89\u88c5\u597dPython\u3001Git\u3001Pip \u6709\u7684\u4eba\u4e0d\u4f1aPython\uff0c\u8fd9\u91cc\u5199\u4e0bPython\u73af\u5883\u53caPip\u7684\u5b89\u88c5\u3002Git\u81ea\u884c\u767e\u5ea6 1\u3001\u4e0b\u8f7dpython\u5b89\u88c5\u5305 \u3000\u3000\u5728python\u5b98\u7f51\u8fdb\u884c\u4e0b\u8f7dhttps://www.python.org/downloads/ \u6211\u8fd9\u91cc\u4e0b\u8f7d\u7684\u662f2.7.9\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u6700\u65b0\u7684\uff1a \u5b89\u88c5\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e0b\u4e00\u6b65...\u5c31\u884c\u3002 2\u3001\u6dfb\u52a0Python\u7684\u7cfb\u7edf\u8def\u5f84 \u3000\u3000\u5728\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u4e2d\u7684\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u91cc\u9762\u7684path\u4e2d\uff0c\u6dfb\u52a0\u4f60\u7684python\u7684\u5b89\u88c5\u8def\u5f84\u5373\u53ef\uff0c\u5982\u6211\u7684\u5b89\u88c5\u8def\u5f84\u5982\u4e0b\uff1a 3\u3001\u68c0\u9a8c\u5b89\u88c5\u662f\u5426\u6210\u529f \u3000\u3000\u5728\u63a7\u5236\u53f0\u8f93\u5165python\uff0c\u662f\u5426\u80fd\u8fdb\u5165\u547d\u4ee4\u884c \u3000 4\u3001\u5b89\u88c5pip \u3000\u3000pip\u662f\u4e00\u4e2a\u5b89\u88c5\u548c\u7ba1\u7406 Python \u5305\u7684\u5de5\u5177,\u540e\u9762\u5b89\u88c5\u8f6f\u4ef6\u7528pip\u5b89\u88c5\u7279\u522b\u65b9\u4fbf \u3000\u3000\uff081\uff09\u4e0b\u8f7dpip\u538b\u7f29\u5305 https://pypi.org/project/pip/20.3.4/#files \u3000\u3000\u3000\u3000\u3000 \u3000\u3000\uff082\uff09\u89e3\u538b\uff0c\u5728\u63a7\u5236\u53f0\u5207\u6362\u5230pip\u7684\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u7684\u8def\u5f84\u4e2d\u8f93\u5165\"python setup.py install\",setup.py\u5c31\u662f\u5b83\u7684\u5b89\u88c5\u6587\u4ef6 \u3000\u3000 \u3000\u3000\uff083)\u6dfb\u52a0pip\u7684\u73af\u5883\u53d8\u91cf\uff0cpip\u4f1a\u88ab\u5b89\u88c5\u5728\u4f60python\u5b89\u88c5\u8def\u5f84\u4e2d\u7684Scripts\u6587\u4ef6\u5939\u4e2d \uff084)\u68c0\u9a8cpip\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u63a7\u5236\u53f0\u8f93\u5165\"pip\",\u7531\u5982\u4e0b\u8f93\u51fa\u5219\u5b89\u88c5\u6210\u529f \u5982\u679c\u5b89\u88c5\u5b8c PIP\u51fa\u73b0\u8fd9\u4e2a $-> pip Traceback (most recent call last): File \"/home/work/.jumbo/bin/pip\", line 9, in <module> load_entry_point('pip==21.1.1', 'console_scripts', 'pip')() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 552, in load_entry_point return get_distribution(dist).load_entry_point(group, name) File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2672, in load_entry_point return ep.load() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2345, in load return self.resolve() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2351, in resolve module = __import__(self.module_name, fromlist=['__name__'], level=0) File \"/home/work/.jumbo/lib/python2.7/site-packages/pip/__init__.py\", line 1, in <module> from typing import List, Optional ImportError: No module named typing \u89e3\u51b3\u65b9\u6848\uff1a > curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py > python get-pip.py > python -m pip install --upgrade \"pip < 21.0\" 5\u3001pip\u5b89\u88c5wheel \u63a7\u5236\u53f0\u8f93\u5165\uff1a pip install wheel -i https://pypi.tuna.tsinghua.edu.cn/simple Python\u53capip\u5b89\u88c5\u5b8c\u6210 cmd\u4e0b\u8f93\u5165 pip install mkdocs -i https://pypi.tuna.tsinghua.edu.cn/simple \u5728github\u4e0a\u5efa\u7acb\u7a7a\u7684\u516c\u5f00git\u5e93\uff0c\u5e76\u514b\u9686\u5230\u672c\u5730 \u4ee5\u6211\u7684\u4e3a\u4f8b D:\\git>git clone https://github.com/yinzhipeng123/markdown_log.git D:\\git>cd markdown_log D:\\git\\markdown_log>mkdocs new . INFO - Writing config file: .\\mkdocs.yml INFO - Writing initial docs: .\\docs\\index.md D:\\git\\markdown_log>mkdocs serve mkdocs serve\u4f1a\u628amakedown\u6587\u4ef6\u4ee5\u9759\u6001\u9875\u9762\u7684\u5f62\u5f0f\u5c55\u793a\u5230127.0.0.1:8000\uff0c\u53ef\u4ee5\u66f4\u6539docs\u4e0b\u7684md\u6587\u4ef6\u8fdb\u884c\u5b9e\u65f6\u66f4\u65b0 \u4fee\u6539mkdocs.yml\u4f1a\u5bf9\u7f51\u7ad9\u4e00\u4e9b\u9875\u9762\u8fdb\u884c\u8bbe\u7f6e \u4ee5\u4e0a\u8be6\u7ec6\u53c2\u8003https://www.mkdocs.org/getting-started/ \u6709\u4e2a\u9879\u76ee\u5b8c\u5168\u7528\u7684mkdocs\u8fdb\u884cAPI\u53d1\u5e03\uff0c\u9875\u9762\u5730\u5740https://siddhi-io.github.io/siddhi/ \u8be5\u9879\u76eeyml\u6587\u4ef6\u914d\u7f6ehttps://github.com/siddhi-io/siddhi/blob/master/mkdocs.yml \u53ef\u4ee5\u53c2\u8003\u5176\u914d\u7f6e GitHub Pages\u53d1\u5e03 D:\\git\\markdown_log>mkdocs build WARNING - Config value: 'pages'. Warning: The 'pages' configuration option has been deprecated and will be removed in a future release of MkDocs. Use 'nav' instead. INFO - Cleaning site directory INFO - Building documentation to directory: D:\\git\\markdown_log\\site \u7136\u540e\u526a\u5207site\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230D:\\git\\markdown_log\u4e0b \u8fd9\u91cc\u6211\u505a\u4e86\u4e2a\u811a\u672c clear_code.sh #!/usr/bin/env bash shopt -s extglob rm -rf !(mkdocs.yml|README.md|docs|site|.git|clear_code.sh) mkdocs build mv site/* ./ windows\u5b89\u88c5git\u540e\uff0c\u8fd9\u4e2a\u811a\u672c\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\uff0c\u53cc\u51fb\u5c31\u80fd\u6267\u884c\uff0c\u811a\u672c\u89e3\u91ca\uff1a\u5220\u9664\u4e0a\u6b21\u6784\u5efa\uff0c\u7136\u540e\u6784\u5efa\uff0c\u79fb\u52a8\u76ee\u5f55 \u7136\u540egit\u4e0a\u4f20\u4e0a\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main \u7136\u540e\u5728git\u5e93\u7684\u9875\u9762\u8fd9\u6837\u8bbe\u7f6e \u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\u4e86 \u7f8e\u5316MkDocs cmd\u4e2d\u6267\u884cpip pip install mkdocs-windmill \u4fee\u6539mkdocs.yml\uff0c\u6dfb\u52a0\u884ctheme: windmill\uff0c\u4f7f\u7528nav site_name: markdown_log site_url: https://yinzhipeng123.github.io/markdown_log/ nav: - MkDocs: index.md - \u6587\u7ae0\u5217\u8868: - MkDocs: api/MkDoc.md theme: windmill cmd\u4e2d\u542f\u52a8 mkdocs serve 127.0.0.1:8000\u9884\u89c8\u4e4b\u540e\u3002\u5c31\u53cc\u51fb\u6267\u884cclear_code.sh\u8fdb\u884c\u6784\u5efa\uff0c\u7136\u540egit\u56de\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main \u4e3a\u4ec0\u4e48\u8981\u5199\u535a\u5ba2 \u5f53\u6211\u8981\u56de\u7b54\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u9700\u8981\u786e\u5b9a\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6240\u6d89\u53ca\u5230\u7684\u6280\u672f\u90fd\u4e86\u7136\u4e8e\u5fc3\uff0c\u4e0d\u7136\u5199\u51fa\u6765\u7684\u4e1c\u897f\u5982\u679c\u662f\u9519\u7684\u8bdd\uff0c\u59d1\u4e14\u4e0d\u8bf4\u4e22\u4e0d\u4e22\u4eba\uff0c\u6700\u91cd\u8981\u7684\u662f\u8fd9\u6837\u4f1a\u8bef\u4eba\u5b50\u5f1f\u3002\u6240\u4ee5\u5982\u679c\u770b\u5230\u4e00\u4e2a\u95ee\u9898\u6211\u5e76\u4e0d\u662f\u975e\u5e38\u4e86\u89e3\uff0c\u6211\u4e0d\u4f1a\u7b2c\u4e00\u65f6\u95f4\u5c31\u53bb\u56de\u7b54\uff0c\u800c\u662f\u81ea\u5df1\u53bb\u7814\u7a76\u4e00\u8f6e\uff0c\u7814\u7a76\u900f\u5f7b\u4e86\uff0c\u518d\u53bb\u56de\u7b54\u95ee\u9898\u3002\u5728\u8fd9\u4e48\u4e00\u4e2a\u8fc7\u7a0b\u5f53\u4e2d\uff0c \u6211\u53c8\u5de9\u56fa\u4e86\u4ee5\u524d\u7684\u77e5\u8bc6\uff0c\u5e76\u5b66\u4e60\u5230\u4e86\u65b0\u7684\u77e5\u8bc6\uff0c\u987a\u5e26\u8fd8\u5e2e\u52a9\u5230\u63d0\u51fa\u95ee\u9898\u7684\u4eba\uff0c\u8fd9\u662f\u53cc\u8d62\u7684\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a \uff1f \u53e6\u5916\uff0c \u591a\u5199\u4e1c\u897f\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4f60\u7684\u8868\u8fbe\u80fd\u529b \u3002 \u8fd9\u6bb5\u8f6c\u81ea\u77e5\u4e4e \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/39212891/answer/80685372","title":"MkDocs"},{"location":"api/MkDoc/#mkdocs","text":"\u6211\u7684\u73af\u5883\u662fwindows10 \uff0c\u5b89\u88c5\u597dPython\u3001Git\u3001Pip \u6709\u7684\u4eba\u4e0d\u4f1aPython\uff0c\u8fd9\u91cc\u5199\u4e0bPython\u73af\u5883\u53caPip\u7684\u5b89\u88c5\u3002Git\u81ea\u884c\u767e\u5ea6 1\u3001\u4e0b\u8f7dpython\u5b89\u88c5\u5305 \u3000\u3000\u5728python\u5b98\u7f51\u8fdb\u884c\u4e0b\u8f7dhttps://www.python.org/downloads/ \u6211\u8fd9\u91cc\u4e0b\u8f7d\u7684\u662f2.7.9\u7684\uff0c\u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u6700\u65b0\u7684\uff1a \u5b89\u88c5\u6bd4\u8f83\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4e0b\u4e00\u6b65...\u5c31\u884c\u3002 2\u3001\u6dfb\u52a0Python\u7684\u7cfb\u7edf\u8def\u5f84 \u3000\u3000\u5728\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u4e2d\u7684\u201c\u7cfb\u7edf\u53d8\u91cf\u201d\u91cc\u9762\u7684path\u4e2d\uff0c\u6dfb\u52a0\u4f60\u7684python\u7684\u5b89\u88c5\u8def\u5f84\u5373\u53ef\uff0c\u5982\u6211\u7684\u5b89\u88c5\u8def\u5f84\u5982\u4e0b\uff1a 3\u3001\u68c0\u9a8c\u5b89\u88c5\u662f\u5426\u6210\u529f \u3000\u3000\u5728\u63a7\u5236\u53f0\u8f93\u5165python\uff0c\u662f\u5426\u80fd\u8fdb\u5165\u547d\u4ee4\u884c \u3000 4\u3001\u5b89\u88c5pip \u3000\u3000pip\u662f\u4e00\u4e2a\u5b89\u88c5\u548c\u7ba1\u7406 Python \u5305\u7684\u5de5\u5177,\u540e\u9762\u5b89\u88c5\u8f6f\u4ef6\u7528pip\u5b89\u88c5\u7279\u522b\u65b9\u4fbf \u3000\u3000\uff081\uff09\u4e0b\u8f7dpip\u538b\u7f29\u5305 https://pypi.org/project/pip/20.3.4/#files \u3000\u3000\u3000\u3000\u3000 \u3000\u3000\uff082\uff09\u89e3\u538b\uff0c\u5728\u63a7\u5236\u53f0\u5207\u6362\u5230pip\u7684\u89e3\u538b\u540e\u7684\u6587\u4ef6\u5939\u7684\u8def\u5f84\u4e2d\u8f93\u5165\"python setup.py install\",setup.py\u5c31\u662f\u5b83\u7684\u5b89\u88c5\u6587\u4ef6 \u3000\u3000 \u3000\u3000\uff083)\u6dfb\u52a0pip\u7684\u73af\u5883\u53d8\u91cf\uff0cpip\u4f1a\u88ab\u5b89\u88c5\u5728\u4f60python\u5b89\u88c5\u8def\u5f84\u4e2d\u7684Scripts\u6587\u4ef6\u5939\u4e2d \uff084)\u68c0\u9a8cpip\u662f\u5426\u5b89\u88c5\u6210\u529f\uff0cwindows\u63a7\u5236\u53f0\u8f93\u5165\"pip\",\u7531\u5982\u4e0b\u8f93\u51fa\u5219\u5b89\u88c5\u6210\u529f \u5982\u679c\u5b89\u88c5\u5b8c PIP\u51fa\u73b0\u8fd9\u4e2a $-> pip Traceback (most recent call last): File \"/home/work/.jumbo/bin/pip\", line 9, in <module> load_entry_point('pip==21.1.1', 'console_scripts', 'pip')() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 552, in load_entry_point return get_distribution(dist).load_entry_point(group, name) File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2672, in load_entry_point return ep.load() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2345, in load return self.resolve() File \"/home/work/.jumbo/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2351, in resolve module = __import__(self.module_name, fromlist=['__name__'], level=0) File \"/home/work/.jumbo/lib/python2.7/site-packages/pip/__init__.py\", line 1, in <module> from typing import List, Optional ImportError: No module named typing \u89e3\u51b3\u65b9\u6848\uff1a > curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py > python get-pip.py > python -m pip install --upgrade \"pip < 21.0\" 5\u3001pip\u5b89\u88c5wheel \u63a7\u5236\u53f0\u8f93\u5165\uff1a pip install wheel -i https://pypi.tuna.tsinghua.edu.cn/simple Python\u53capip\u5b89\u88c5\u5b8c\u6210 cmd\u4e0b\u8f93\u5165 pip install mkdocs -i https://pypi.tuna.tsinghua.edu.cn/simple \u5728github\u4e0a\u5efa\u7acb\u7a7a\u7684\u516c\u5f00git\u5e93\uff0c\u5e76\u514b\u9686\u5230\u672c\u5730 \u4ee5\u6211\u7684\u4e3a\u4f8b D:\\git>git clone https://github.com/yinzhipeng123/markdown_log.git D:\\git>cd markdown_log D:\\git\\markdown_log>mkdocs new . INFO - Writing config file: .\\mkdocs.yml INFO - Writing initial docs: .\\docs\\index.md D:\\git\\markdown_log>mkdocs serve mkdocs serve\u4f1a\u628amakedown\u6587\u4ef6\u4ee5\u9759\u6001\u9875\u9762\u7684\u5f62\u5f0f\u5c55\u793a\u5230127.0.0.1:8000\uff0c\u53ef\u4ee5\u66f4\u6539docs\u4e0b\u7684md\u6587\u4ef6\u8fdb\u884c\u5b9e\u65f6\u66f4\u65b0 \u4fee\u6539mkdocs.yml\u4f1a\u5bf9\u7f51\u7ad9\u4e00\u4e9b\u9875\u9762\u8fdb\u884c\u8bbe\u7f6e \u4ee5\u4e0a\u8be6\u7ec6\u53c2\u8003https://www.mkdocs.org/getting-started/ \u6709\u4e2a\u9879\u76ee\u5b8c\u5168\u7528\u7684mkdocs\u8fdb\u884cAPI\u53d1\u5e03\uff0c\u9875\u9762\u5730\u5740https://siddhi-io.github.io/siddhi/ \u8be5\u9879\u76eeyml\u6587\u4ef6\u914d\u7f6ehttps://github.com/siddhi-io/siddhi/blob/master/mkdocs.yml \u53ef\u4ee5\u53c2\u8003\u5176\u914d\u7f6e","title":"\u90e8\u7f72MkDocs"},{"location":"api/MkDoc/#github-pages","text":"D:\\git\\markdown_log>mkdocs build WARNING - Config value: 'pages'. Warning: The 'pages' configuration option has been deprecated and will be removed in a future release of MkDocs. Use 'nav' instead. INFO - Cleaning site directory INFO - Building documentation to directory: D:\\git\\markdown_log\\site \u7136\u540e\u526a\u5207site\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230D:\\git\\markdown_log\u4e0b \u8fd9\u91cc\u6211\u505a\u4e86\u4e2a\u811a\u672c clear_code.sh #!/usr/bin/env bash shopt -s extglob rm -rf !(mkdocs.yml|README.md|docs|site|.git|clear_code.sh) mkdocs build mv site/* ./ windows\u5b89\u88c5git\u540e\uff0c\u8fd9\u4e2a\u811a\u672c\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\uff0c\u53cc\u51fb\u5c31\u80fd\u6267\u884c\uff0c\u811a\u672c\u89e3\u91ca\uff1a\u5220\u9664\u4e0a\u6b21\u6784\u5efa\uff0c\u7136\u540e\u6784\u5efa\uff0c\u79fb\u52a8\u76ee\u5f55 \u7136\u540egit\u4e0a\u4f20\u4e0a\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main \u7136\u540e\u5728git\u5e93\u7684\u9875\u9762\u8fd9\u6837\u8bbe\u7f6e \u7136\u540e\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u5730\u5740\u8fdb\u884c\u8bbf\u95ee\u4e86","title":"GitHub Pages\u53d1\u5e03"},{"location":"api/MkDoc/#mkdocs_1","text":"cmd\u4e2d\u6267\u884cpip pip install mkdocs-windmill \u4fee\u6539mkdocs.yml\uff0c\u6dfb\u52a0\u884ctheme: windmill\uff0c\u4f7f\u7528nav site_name: markdown_log site_url: https://yinzhipeng123.github.io/markdown_log/ nav: - MkDocs: index.md - \u6587\u7ae0\u5217\u8868: - MkDocs: api/MkDoc.md theme: windmill cmd\u4e2d\u542f\u52a8 mkdocs serve 127.0.0.1:8000\u9884\u89c8\u4e4b\u540e\u3002\u5c31\u53cc\u51fb\u6267\u884cclear_code.sh\u8fdb\u884c\u6784\u5efa\uff0c\u7136\u540egit\u56de\u53bb git add -A git commit -m '\u4fee\u6539\u6587\u4ef6' git push origin main","title":"\u7f8e\u5316MkDocs"},{"location":"api/MkDoc/#_1","text":"\u5f53\u6211\u8981\u56de\u7b54\u4e00\u4e2a\u95ee\u9898\uff0c\u6211\u9700\u8981\u786e\u5b9a\u81ea\u5df1\u5bf9\u8fd9\u4e2a\u95ee\u9898\u6240\u6d89\u53ca\u5230\u7684\u6280\u672f\u90fd\u4e86\u7136\u4e8e\u5fc3\uff0c\u4e0d\u7136\u5199\u51fa\u6765\u7684\u4e1c\u897f\u5982\u679c\u662f\u9519\u7684\u8bdd\uff0c\u59d1\u4e14\u4e0d\u8bf4\u4e22\u4e0d\u4e22\u4eba\uff0c\u6700\u91cd\u8981\u7684\u662f\u8fd9\u6837\u4f1a\u8bef\u4eba\u5b50\u5f1f\u3002\u6240\u4ee5\u5982\u679c\u770b\u5230\u4e00\u4e2a\u95ee\u9898\u6211\u5e76\u4e0d\u662f\u975e\u5e38\u4e86\u89e3\uff0c\u6211\u4e0d\u4f1a\u7b2c\u4e00\u65f6\u95f4\u5c31\u53bb\u56de\u7b54\uff0c\u800c\u662f\u81ea\u5df1\u53bb\u7814\u7a76\u4e00\u8f6e\uff0c\u7814\u7a76\u900f\u5f7b\u4e86\uff0c\u518d\u53bb\u56de\u7b54\u95ee\u9898\u3002\u5728\u8fd9\u4e48\u4e00\u4e2a\u8fc7\u7a0b\u5f53\u4e2d\uff0c \u6211\u53c8\u5de9\u56fa\u4e86\u4ee5\u524d\u7684\u77e5\u8bc6\uff0c\u5e76\u5b66\u4e60\u5230\u4e86\u65b0\u7684\u77e5\u8bc6\uff0c\u987a\u5e26\u8fd8\u5e2e\u52a9\u5230\u63d0\u51fa\u95ee\u9898\u7684\u4eba\uff0c\u8fd9\u662f\u53cc\u8d62\u7684\uff0c\u4f55\u4e50\u800c\u4e0d\u4e3a \uff1f \u53e6\u5916\uff0c \u591a\u5199\u4e1c\u897f\uff0c\u53ef\u4ee5\u63d0\u9ad8\u4f60\u7684\u8868\u8fbe\u80fd\u529b \u3002 \u8fd9\u6bb5\u8f6c\u81ea\u77e5\u4e4e \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/39212891/answer/80685372","title":"\u4e3a\u4ec0\u4e48\u8981\u5199\u535a\u5ba2"},{"location":"api/github/","text":"github \u6bd4\u8f83\u597d\u7528\u7684\u4ee3\u7801\u5bf9\u6bd4\u65b9\u6cd5 \u9009\u62e9\u7248\u672c\u4e4b\u540e\uff0c\u70b9\u51fbcompare\u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u548c\u5176\u4ed6\u7248\u672c\u4e4b\u524d\u53d8\u52a8\u4e86\u54ea\u91cc","title":"github \u6bd4\u8f83\u597d\u7528\u7684\u4ee3\u7801\u5bf9\u6bd4\u65b9\u6cd5"},{"location":"api/github/#github","text":"\u9009\u62e9\u7248\u672c\u4e4b\u540e\uff0c\u70b9\u51fbcompare\u540e\uff0c\u53ef\u4ee5\u9009\u62e9\u548c\u5176\u4ed6\u7248\u672c\u4e4b\u524d\u53d8\u52a8\u4e86\u54ea\u91cc","title":"github \u6bd4\u8f83\u597d\u7528\u7684\u4ee3\u7801\u5bf9\u6bd4\u65b9\u6cd5"},{"location":"centos7/ens33/","text":"\u4fee\u6539\u7f51\u5361\u4e3a\u56fa\u5b9a\u5730\u5740 [root@master ~]# cat /etc/sysconfig/network-scripts/ifcfg-ens33 TYPE=\"Ethernet\" PROXY_METHOD=\"none\" BROWSER_ONLY=\"no\" BOOTPROTO=\"static\" DEFROUTE=\"yes\" IPV4_FAILURE_FATAL=\"no\" IPV6INIT=\"yes\" IPV6_AUTOCONF=\"yes\" IPV6_DEFROUTE=\"yes\" IPV6_FAILURE_FATAL=\"no\" IPV6_ADDR_GEN_MODE=\"stable-privacy\" NAME=\"ens33\" UUID=\"f52ff6ca-5e7d-4f00-b4f7-679ef47b77da\" DEVICE=\"ens33\" ONBOOT=\"yes\" IPADDR=192.168.70.131 PREFIX=24 GATEWAY=192.168.70.2 DNS1=192.168.70.2 DNS2=114.114.114.114","title":"\u4fee\u6539\u7f51\u5361"},{"location":"docker/docker-compose/","text":"docker compose \u5b89\u88c5 https://docs.docker.com/compose/install/ sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose docker-compose --version volume \u6620\u5c04 \u5b50\u7ea7\u5377\u6620\u5c04 docker-compose.yaml\u6240\u5728\u4f4d\u7f6e /root/pinpoint-docker/ \u5982\u4e0b\u914d\u7f6e\uff1a version: \"3.6\" services: pinpoint-hbase: build: context: ./pinpoint-hbase/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_HBASE_NAME}\" image: \"pinpointdocker/pinpoint-hbase:${PINPOINT_VERSION}\" networks: - pinpoint volumes: - ./hase_data:/home/pinpoint/hbase - ./zoo_data:/home/pinpoint/zookeeper \u8fd9\u6bb5 volumes: - ./hase_data:/home/pinpoint/hbase ./zoo_data:/home/pinpoint/zookeepe \u5bb9\u5668\u91cc\u9762/home/pinpoint/hbase\u6620\u5c04\u5230\u5f53\u524ddocker-compose.yaml\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684hase_data\u76ee\u5f55\u4e2d \u5bb9\u5668\u91cc\u9762/home/pinpoint/zookeeper\u6620\u5c04\u5230\u5f53\u524ddocker-compose.yaml\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684zoo_data\u76ee\u5f55\u4e2d \u9876\u7ea7\u5377 docker-compose.yaml\u6240\u5728\u4f4d\u7f6e /root/pinpoint-docker/ \u5982\u4e0b\u914d\u7f6e\uff1a version: \"3.6\" services: pinpoint-mysql: build: context: ./pinpoint-mysql/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: pinpoint-mysql restart: always image: \"pinpointdocker/pinpoint-mysql:${PINPOINT_VERSION}\" hostname: pinpoint-mysql ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} - MYSQL_USER=${MYSQL_USER} - MYSQL_PASSWORD=${MYSQL_PASSWORD} - MYSQL_DATABASE=${MYSQL_DATABASE} volumes: - mysql_data:/var/lib/mysql networks: - pinpoint //\u9876\u7ea7\u5377 volumes: data-volume: mysql_data: \u8fd9\u6bb5\uff1a volumes: - mysql_data:/var/lib/mysql networks: - pinpoint //\u9876\u7ea7\u5377 volumes: data-volume: mysql_data: \u8fd9\u6bb5\u7684\u610f\u601d\u662f\uff1a \u5bb9\u5668\u7684/var/lib/mysql \u7684\u6570\u636e\u6302\u8f7d\u5230\u5bbf\u4e3b\u673a\u7684mysql_data\u4e2d\uff0c\u9876\u7ea7\u5377\u5728\u5bbf\u4e3b\u673a\u4e2d\u6709\u9ed8\u8ba4\u4f4d\u7f6e \u901a\u8fc7\u547d\u4ee4 docker volume ls \u53ef\u4ee5\u67e5\u770b DRIVER VOLUME NAME local pinpoint-docker_data-volume local pinpoint-docker_mysql_data \u53ef\u4ee5\u901a\u8fc7 docker inspect pinpoint-docker_mysql_data \u67e5\u770b\u5177\u4f53\u4f4d\u7f6e pinpoint-docker_ \u4e3a\u8be5docker-compose.yaml\u90e8\u7f72\u6587\u4ef6\u7684\u76ee\u5f55 \u9876\u7ea7\u5377\u6620\u5c04 docker-compose.yaml\u6240\u5728\u4f4d\u7f6e /root/pinpoint-docker/ \u5982\u4e0b\u914d\u7f6e\uff1a version: \"3.6\" services: pinpoint-mysql: build: context: ./pinpoint-mysql/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: pinpoint-mysql restart: always image: \"pinpointdocker/pinpoint-mysql:${PINPOINT_VERSION}\" hostname: pinpoint-mysql ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} - MYSQL_USER=${MYSQL_USER} - MYSQL_PASSWORD=${MYSQL_PASSWORD} - MYSQL_DATABASE=${MYSQL_DATABASE} volumes: - mysql_data:/var/lib/mysql networks: - pinpoint volumes: data-volume: driver: local driver_opts: o: bind type: none device: ./data-volume mysql_data: driver: local driver_opts: o: bind type: none device: ./mysql_data \u8fd9\u6bb5\uff1a volumes: data-volume: driver: local driver_opts: o: bind type: none device: ./data-volume mysql_data: driver: local driver_opts: o: bind type: none device: ./mysql_data \u901a\u8fc7\u6b64\u65b9\u6cd5\u53ef\u4ee5\u628a\u9876\u7ea7\u5377\u6302\u8f7d\u5230\u5bbf\u4e3b\u673a\u6307\u5b9a\u76ee\u5f55\uff0c\u5bbf\u4e3b\u673a\u76ee\u5f55\u9700\u8981\u63d0\u524d\u521b\u5efa\u51fa\u6765 \u901a\u8fc7\u547d\u4ee4 docker volume ls \u53ef\u4ee5\u67e5\u770b DRIVER VOLUME NAME local pinpoint-docker_data-volume local pinpoint-docker_mysql_data [root@centos7 pinpoint-docker]# docker inspect pinpoint-docker_data-volume [ { \"CreatedAt\": \"2021-12-16T12:52:27+08:00\", \"Driver\": \"local\", \"Labels\": { \"com.docker.compose.project\": \"pinpoint-docker\", \"com.docker.compose.version\": \"1.29.2\", \"com.docker.compose.volume\": \"data-volume\" }, \"Mountpoint\": \"/var/lib/docker/volumes/pinpoint-docker_data-volume/_data\", \"Name\": \"pinpoint-docker_data-volume\", \"Options\": { \"device\": \"/root/pinpoint-docker/data-volume\", \"o\": \"bind\", \"type\": \"none\" }, \"Scope\": \"local\" } ] github\u4e0a docker-compose \u6e90\u7801\u4e2d\u5bf9 \u5377\u7684\u4ecb\u7ecd\uff0c\u4f46\u662f\u4e0d\u8be6\u7ec6\uff1ahttps://github.com/docker/docker.github.io/blob/master/compose/compose-file/compose-file-v3.md#volume-configuration-reference \u6ce8\u610f\u6bcf\u4e2adocker-compose.yaml \u4e0a\u90fd\u6709\u4e2a version \u7248\u672c\uff0c\u662f\u544a\u8bc9docker-compose \u8fd9\u4e2ayaml \u662f\u57fa\u4e8e\u54ea\u4e2a\u7248\u672c\u7684\u8bed\u6cd5\u5199\u7684 \uff0c\u5173\u4e8edocker-compose\u7684\u8bed\u6cd5\u7248\u672c\u4ecb\u7ecd\uff1ahttps://github.com/docker/docker.github.io/blob/master/compose/compose-file/compose-versioning.md","title":"docker_compose"},{"location":"docker/docker-compose/#docker-compose","text":"","title":"docker compose"},{"location":"docker/docker-compose/#_1","text":"https://docs.docker.com/compose/install/ sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose sudo chmod +x /usr/local/bin/docker-compose sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose docker-compose --version","title":"\u5b89\u88c5"},{"location":"docker/docker-compose/#volume","text":"","title":"volume \u6620\u5c04"},{"location":"docker/docker-compose/#_2","text":"docker-compose.yaml\u6240\u5728\u4f4d\u7f6e /root/pinpoint-docker/ \u5982\u4e0b\u914d\u7f6e\uff1a version: \"3.6\" services: pinpoint-hbase: build: context: ./pinpoint-hbase/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_HBASE_NAME}\" image: \"pinpointdocker/pinpoint-hbase:${PINPOINT_VERSION}\" networks: - pinpoint volumes: - ./hase_data:/home/pinpoint/hbase - ./zoo_data:/home/pinpoint/zookeeper \u8fd9\u6bb5 volumes: - ./hase_data:/home/pinpoint/hbase ./zoo_data:/home/pinpoint/zookeepe \u5bb9\u5668\u91cc\u9762/home/pinpoint/hbase\u6620\u5c04\u5230\u5f53\u524ddocker-compose.yaml\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684hase_data\u76ee\u5f55\u4e2d \u5bb9\u5668\u91cc\u9762/home/pinpoint/zookeeper\u6620\u5c04\u5230\u5f53\u524ddocker-compose.yaml\u6587\u4ef6\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684zoo_data\u76ee\u5f55\u4e2d","title":"\u5b50\u7ea7\u5377\u6620\u5c04"},{"location":"docker/docker-compose/#_3","text":"docker-compose.yaml\u6240\u5728\u4f4d\u7f6e /root/pinpoint-docker/ \u5982\u4e0b\u914d\u7f6e\uff1a version: \"3.6\" services: pinpoint-mysql: build: context: ./pinpoint-mysql/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: pinpoint-mysql restart: always image: \"pinpointdocker/pinpoint-mysql:${PINPOINT_VERSION}\" hostname: pinpoint-mysql ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} - MYSQL_USER=${MYSQL_USER} - MYSQL_PASSWORD=${MYSQL_PASSWORD} - MYSQL_DATABASE=${MYSQL_DATABASE} volumes: - mysql_data:/var/lib/mysql networks: - pinpoint //\u9876\u7ea7\u5377 volumes: data-volume: mysql_data: \u8fd9\u6bb5\uff1a volumes: - mysql_data:/var/lib/mysql networks: - pinpoint //\u9876\u7ea7\u5377 volumes: data-volume: mysql_data: \u8fd9\u6bb5\u7684\u610f\u601d\u662f\uff1a \u5bb9\u5668\u7684/var/lib/mysql \u7684\u6570\u636e\u6302\u8f7d\u5230\u5bbf\u4e3b\u673a\u7684mysql_data\u4e2d\uff0c\u9876\u7ea7\u5377\u5728\u5bbf\u4e3b\u673a\u4e2d\u6709\u9ed8\u8ba4\u4f4d\u7f6e \u901a\u8fc7\u547d\u4ee4 docker volume ls \u53ef\u4ee5\u67e5\u770b DRIVER VOLUME NAME local pinpoint-docker_data-volume local pinpoint-docker_mysql_data \u53ef\u4ee5\u901a\u8fc7 docker inspect pinpoint-docker_mysql_data \u67e5\u770b\u5177\u4f53\u4f4d\u7f6e pinpoint-docker_ \u4e3a\u8be5docker-compose.yaml\u90e8\u7f72\u6587\u4ef6\u7684\u76ee\u5f55","title":"\u9876\u7ea7\u5377"},{"location":"docker/docker-compose/#_4","text":"docker-compose.yaml\u6240\u5728\u4f4d\u7f6e /root/pinpoint-docker/ \u5982\u4e0b\u914d\u7f6e\uff1a version: \"3.6\" services: pinpoint-mysql: build: context: ./pinpoint-mysql/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: pinpoint-mysql restart: always image: \"pinpointdocker/pinpoint-mysql:${PINPOINT_VERSION}\" hostname: pinpoint-mysql ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} - MYSQL_USER=${MYSQL_USER} - MYSQL_PASSWORD=${MYSQL_PASSWORD} - MYSQL_DATABASE=${MYSQL_DATABASE} volumes: - mysql_data:/var/lib/mysql networks: - pinpoint volumes: data-volume: driver: local driver_opts: o: bind type: none device: ./data-volume mysql_data: driver: local driver_opts: o: bind type: none device: ./mysql_data \u8fd9\u6bb5\uff1a volumes: data-volume: driver: local driver_opts: o: bind type: none device: ./data-volume mysql_data: driver: local driver_opts: o: bind type: none device: ./mysql_data \u901a\u8fc7\u6b64\u65b9\u6cd5\u53ef\u4ee5\u628a\u9876\u7ea7\u5377\u6302\u8f7d\u5230\u5bbf\u4e3b\u673a\u6307\u5b9a\u76ee\u5f55\uff0c\u5bbf\u4e3b\u673a\u76ee\u5f55\u9700\u8981\u63d0\u524d\u521b\u5efa\u51fa\u6765 \u901a\u8fc7\u547d\u4ee4 docker volume ls \u53ef\u4ee5\u67e5\u770b DRIVER VOLUME NAME local pinpoint-docker_data-volume local pinpoint-docker_mysql_data [root@centos7 pinpoint-docker]# docker inspect pinpoint-docker_data-volume [ { \"CreatedAt\": \"2021-12-16T12:52:27+08:00\", \"Driver\": \"local\", \"Labels\": { \"com.docker.compose.project\": \"pinpoint-docker\", \"com.docker.compose.version\": \"1.29.2\", \"com.docker.compose.volume\": \"data-volume\" }, \"Mountpoint\": \"/var/lib/docker/volumes/pinpoint-docker_data-volume/_data\", \"Name\": \"pinpoint-docker_data-volume\", \"Options\": { \"device\": \"/root/pinpoint-docker/data-volume\", \"o\": \"bind\", \"type\": \"none\" }, \"Scope\": \"local\" } ] github\u4e0a docker-compose \u6e90\u7801\u4e2d\u5bf9 \u5377\u7684\u4ecb\u7ecd\uff0c\u4f46\u662f\u4e0d\u8be6\u7ec6\uff1ahttps://github.com/docker/docker.github.io/blob/master/compose/compose-file/compose-file-v3.md#volume-configuration-reference \u6ce8\u610f\u6bcf\u4e2adocker-compose.yaml \u4e0a\u90fd\u6709\u4e2a version \u7248\u672c\uff0c\u662f\u544a\u8bc9docker-compose \u8fd9\u4e2ayaml \u662f\u57fa\u4e8e\u54ea\u4e2a\u7248\u672c\u7684\u8bed\u6cd5\u5199\u7684 \uff0c\u5173\u4e8edocker-compose\u7684\u8bed\u6cd5\u7248\u672c\u4ecb\u7ecd\uff1ahttps://github.com/docker/docker.github.io/blob/master/compose/compose-file/compose-versioning.md","title":"\u9876\u7ea7\u5377\u6620\u5c04"},{"location":"docker/docker_Warning/","text":"\u505c\u6b62docker\u51fa\u73b0\u8b66\u544a [root@VM-0-2-centos ~]# systemctl stop docker Warning: Stopping docker.service, but it can still be activated by: docker.socket #\u89e3\u51b3\u65b9\u6cd5 [root@VM-0-2-centos ~]# systemctl stop docker.socket [root@VM-0-2-centos ~]# systemctl stop docker","title":"\u505c\u6b62docker\u51fa\u73b0\u8b66\u544a"},{"location":"docker/docker_Warning/#docker","text":"[root@VM-0-2-centos ~]# systemctl stop docker Warning: Stopping docker.service, but it can still be activated by: docker.socket #\u89e3\u51b3\u65b9\u6cd5 [root@VM-0-2-centos ~]# systemctl stop docker.socket [root@VM-0-2-centos ~]# systemctl stop docker","title":"\u505c\u6b62docker\u51fa\u73b0\u8b66\u544a"},{"location":"docker/docker_su/","text":"Docker\u5b89\u88c5 https://developer.aliyun.com/mirror/docker-ce Docker\u52a0\u901f Centos7 [root@server ~]# cat /etc/docker/daemon.json { \"registry-mirrors\": [\"https://registry.docker-cn.com\",\"http://hub-mirror.c.163.com\",\"https://docker.mirrors.ustc.edu.cn\" ] } [root@server ~] systemctl daemon-reload [root@server ~] systemctl restart docker","title":"Docker"},{"location":"docker/docker_su/#docker","text":"https://developer.aliyun.com/mirror/docker-ce","title":"Docker\u5b89\u88c5"},{"location":"docker/docker_su/#docker_1","text":"Centos7 [root@server ~]# cat /etc/docker/daemon.json { \"registry-mirrors\": [\"https://registry.docker-cn.com\",\"http://hub-mirror.c.163.com\",\"https://docker.mirrors.ustc.edu.cn\" ] } [root@server ~] systemctl daemon-reload [root@server ~] systemctl restart docker","title":"Docker\u52a0\u901f"},{"location":"docker/pinpoint_compose/","text":"pinpoint \u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pinpoint-apm/pinpoint-docker pinpoint docker-compose \u90e8\u7f72\u6587\u4ef6 https://github.com/pinpoint-apm/pinpoint-docker/blob/master/docker-compose.yml version: \"3.6\" services: pinpoint-hbase: build: context: ./pinpoint-hbase/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_HBASE_NAME}\" image: \"pinpointdocker/pinpoint-hbase:${PINPOINT_VERSION}\" networks: - pinpoint volumes: - /home/pinpoint/hbase - /home/pinpoint/zookeeper expose: # HBase Master API port - \"60000\" # HBase Master Web UI - \"16010\" # Regionserver API port - \"60020\" # HBase Regionserver web UI - \"16030\" ports: - \"60000:60000\" - \"16010:16010\" - \"60020:60020\" - \"16030:16030\" restart: always depends_on: - zoo1 pinpoint-mysql: build: context: ./pinpoint-mysql/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: pinpoint-mysql restart: always image: \"pinpointdocker/pinpoint-mysql:${PINPOINT_VERSION}\" hostname: pinpoint-mysql ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} - MYSQL_USER=${MYSQL_USER} - MYSQL_PASSWORD=${MYSQL_PASSWORD} - MYSQL_DATABASE=${MYSQL_DATABASE} volumes: - mysql_data:/var/lib/mysql networks: - pinpoint pinpoint-web: build: context: ./pinpoint-web/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_WEB_NAME}\" image: \"pinpointdocker/pinpoint-web:${PINPOINT_VERSION}\" depends_on: - pinpoint-hbase - pinpoint-mysql - zoo1 restart: always expose: - \"9997\" ports: - \"9997:9997\" - \"${SERVER_PORT:-8080}:${SERVER_PORT:-8080}\" environment: - SERVER_PORT=${SERVER_PORT} - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES},batch - PINPOINT_ZOOKEEPER_ADDRESS=${PINPOINT_ZOOKEEPER_ADDRESS} - CLUSTER_ENABLE=${CLUSTER_ENABLE} - ADMIN_PASSWORD=${ADMIN_PASSWORD} - CONFIG_SENDUSAGE=${CONFIG_SENDUSAGE} - LOGGING_LEVEL_ROOT=${WEB_LOGGING_LEVEL_ROOT} - CONFIG_SHOW_APPLICATIONSTAT=${CONFIG_SHOW_APPLICATIONSTAT} - BATCH_ENABLE=${BATCH_ENABLE} - BATCH_SERVER_IP=${BATCH_SERVER_IP} - BATCH_FLINK_SERVER=${BATCH_FLINK_SERVER} - JDBC_DRIVERCLASSNAME=${JDBC_DRIVERCLASSNAME} - JDBC_URL=${JDBC_URL} - JDBC_USERNAME=${JDBC_USERNAME} - JDBC_PASSWORD=${JDBC_PASSWORD} - ALARM_MAIL_SERVER_URL=${ALARM_MAIL_SERVER_URL} - ALARM_MAIL_SERVER_PORT=${ALARM_MAIL_SERVER_PORT} - ALARM_MAIL_SERVER_USERNAME=${ALARM_MAIL_SERVER_USERNAME} - ALARM_MAIL_SERVER_PASSWORD=${ALARM_MAIL_SERVER_PASSWORD} - ALARM_MAIL_SENDER_ADDRESS=${ALARM_MAIL_SENDER_ADDRESS} - ALARM_MAIL_TRANSPORT_PROTOCOL=${ALARM_MAIL_TRANSPORT_PROTOCOL} - ALARM_MAIL_SMTP_PORT=${ALARM_MAIL_SMTP_PORT} - ALARM_MAIL_SMTP_AUTH=${ALARM_MAIL_SMTP_AUTH} - ALARM_MAIL_SMTP_STARTTLS_ENABLE=${ALARM_MAIL_SMTP_STARTTLS_ENABLE} - ALARM_MAIL_SMTP_STARTTLS_REQUIRED=${ALARM_MAIL_SMTP_STARTTLS_REQUIRED} - ALARM_MAIL_DEBUG=${ALARM_MAIL_DEBUG} links: - \"pinpoint-mysql:pinpoint-mysql\" networks: - pinpoint pinpoint-collector: build: context: ./pinpoint-collector/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_COLLECTOR_NAME}\" image: \"pinpointdocker/pinpoint-collector:${PINPOINT_VERSION}\" depends_on: - pinpoint-hbase - zoo1 restart: always expose: - \"9991\" - \"9992\" - \"9993\" - \"9994\" - \"9995\" - \"9996\" ports: - \"${COLLECTOR_RECEIVER_GRPC_AGENT_PORT:-9991}:9991/tcp\" - \"${COLLECTOR_RECEIVER_GRPC_STAT_PORT:-9992}:9992/tcp\" - \"${COLLECTOR_RECEIVER_GRPC_SPAN_PORT:-9993}:9993/tcp\" - \"${COLLECTOR_RECEIVER_BASE_PORT:-9994}:9994\" - \"${COLLECTOR_RECEIVER_STAT_UDP_PORT:-9995}:9995/tcp\" - \"${COLLECTOR_RECEIVER_SPAN_UDP_PORT:-9996}:9996/tcp\" - \"${COLLECTOR_RECEIVER_STAT_UDP_PORT:-9995}:9995/udp\" - \"${COLLECTOR_RECEIVER_SPAN_UDP_PORT:-9996}:9996/udp\" networks: - pinpoint environment: - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES} - PINPOINT_ZOOKEEPER_ADDRESS=${PINPOINT_ZOOKEEPER_ADDRESS} - CLUSTER_ENABLE=${CLUSTER_ENABLE} - LOGGING_LEVEL_ROOT=${COLLECTOR_LOGGING_LEVEL_ROOT} - FLINK_CLUSTER_ENABLE=${FLINK_CLUSTER_ENABLE} - FLINK_CLUSTER_ZOOKEEPER_ADDRESS=${FLINK_CLUSTER_ZOOKEEPER_ADDRESS} pinpoint-quickstart: build: context: ./pinpoint-quickstart/ dockerfile: Dockerfile container_name: \"pinpoint-quickstart\" image: \"pinpointdocker/pinpoint-quickstart\" ports: - \"${APP_PORT:-8080}:8080\" volumes: - data-volume:/pinpoint-agent environment: JAVA_OPTS: \"-javaagent:/pinpoint-agent/pinpoint-bootstrap-${PINPOINT_VERSION}.jar -Dpinpoint.agentId=${AGENT_ID} -Dpinpoint.applicationName=${APP_NAME} -Dpinpoint.profiler.profiles.active=${SPRING_PROFILES}\" networks: - pinpoint depends_on: - pinpoint-agent pinpoint-agent: build: context: ./pinpoint-agent/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_AGENT_NAME}\" image: \"pinpointdocker/pinpoint-agent:${PINPOINT_VERSION}\" restart: unless-stopped networks: - pinpoint volumes: - data-volume:/pinpoint-agent environment: - SPRING_PROFILES=${SPRING_PROFILES} - COLLECTOR_IP=${COLLECTOR_IP} - PROFILER_TRANSPORT_AGENT_COLLECTOR_PORT=${PROFILER_TRANSPORT_AGENT_COLLECTOR_PORT} - PROFILER_TRANSPORT_METADATA_COLLECTOR_PORT=${PROFILER_TRANSPORT_METADATA_COLLECTOR_PORT} - PROFILER_TRANSPORT_STAT_COLLECTOR_PORT=${PROFILER_TRANSPORT_STAT_COLLECTOR_PORT} - PROFILER_TRANSPORT_SPAN_COLLECTOR_PORT=${PROFILER_TRANSPORT_SPAN_COLLECTOR_PORT} - PROFILER_SAMPLING_RATE=${PROFILER_SAMPLING_RATE} - DEBUG_LEVEL=${AGENT_DEBUG_LEVEL} - PROFILER_TRANSPORT_MODULE=${PROFILER_TRANSPORT_MODULE} depends_on: - pinpoint-collector #zookeepers zoo1: image: zookeeper:3.4 restart: always hostname: zoo1 expose: - \"2181\" - \"2888\" - \"3888\" ports: - \"2181\" environment: ZOO_MY_ID: 1 ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888 networks: - pinpoint zoo2: image: zookeeper:3.4 restart: always hostname: zoo2 expose: - \"2181\" - \"2888\" - \"3888\" ports: - \"2181\" environment: ZOO_MY_ID: 2 ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888 networks: - pinpoint zoo3: image: zookeeper:3.4 restart: always hostname: zoo3 expose: - \"2181\" - \"2888\" - \"3888\" ports: - \"2181\" environment: ZOO_MY_ID: 3 ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888 networks: - pinpoint ##flink jobmanager: build: context: pinpoint-flink dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_FLINK_NAME}-jobmanager\" image: \"pinpointdocker/pinpoint-flink:${PINPOINT_VERSION}\" expose: - \"6123\" ports: - \"${FLINK_WEB_PORT:-8081}:8081\" command: standalone-job -p 1 pinpoint-flink-job.jar -spring.profiles.active release environment: - JOB_MANAGER_RPC_ADDRESS=jobmanager - PINPOINT_ZOOKEEPER_ADDRESS=${PINPOINT_ZOOKEEPER_ADDRESS} networks: - pinpoint depends_on: - zoo1 taskmanager: build: context: pinpoint-flink dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_FLINK_NAME}-taskmanager\" image: \"pinpointdocker/pinpoint-flink:${PINPOINT_VERSION}\" expose: - \"6121\" - \"6122\" - \"19994\" ports: - \"6121:6121\" - \"6122:6122\" - \"19994:19994\" depends_on: - zoo1 - jobmanager command: taskmanager links: - \"jobmanager:jobmanager\" environment: - JOB_MANAGER_RPC_ADDRESS=jobmanager networks: - pinpoint volumes: data-volume: mysql_data: networks: pinpoint: driver: bridge docker-compose\u4f1a\u9ed8\u8ba4\u8bfb\u53d6\u540c\u7ea7\u76ee\u5f55\u7684.env PINPOINT_VERSION=2.3.2 SPRING_PROFILES=release #zookeeper information required PINPOINT_ZOOKEEPER_ADDRESS=zoo1 ### Pinpoint-Hbase PINPOINT_HBASE_NAME=pinpoint-hbase #config for hbase in external docker ### Pinpoint-mysql MYSQL_ROOT_PASSWORD=root123 MYSQL_USER=admin MYSQL_PASSWORD=admin MYSQL_DATABASE=pinpoint ### Pinpoint-Web PINPOINT_WEB_NAME=pinpoint-web SERVER_PORT=8079 WEB_LOGGING_LEVEL_ROOT=INFO CLUSTER_ENABLE=true ADMIN_PASSWORD=admin #analytics CONFIG_SENDUSAGE=true #flink server information required if used BATCH_ENABLE=false BATCH_SERVER_IP=127.0.0.1 BATCH_FLINK_SERVER=pinpoint-flink-jobmanager CONFIG_SHOW_APPLICATIONSTAT=true #mysql information required if used JDBC_DRIVERCLASSNAME=com.mysql.jdbc.Driver JDBC_URL=jdbc:mysql://pinpoint-mysql:3306/pinpoint?characterEncoding=UTF-8 JDBC_USERNAME=admin JDBC_PASSWORD=admin #mail server information required if used ALARM_MAIL_SERVER_URL=smtp.gmail.com ALARM_MAIL_SERVER_PORT=587 ALARM_MAIL_SERVER_USERNAME=username ALARM_MAIL_SERVER_PASSWORD=password ALARM_MAIL_SENDER_ADDRESS=pinpoint_operator@pinpoint.com ALARM_MAIL_TRANSPORT_PROTOCOL=smtp ALARM_MAIL_SMTP_PORT=25 ALARM_MAIL_SMTP_AUTH=false ALARM_MAIL_SMTP_STARTTLS_ENABLE=false ALARM_MAIL_SMTP_STARTTLS_REQUIRED=false ALARM_MAIL_DEBUG=false ### Pinpoint-Collector PINPOINT_COLLECTOR_NAME=pinpoint-collector CLUSTER_ENABLE=true COLLECTOR_LOGGING_LEVEL_ROOT=INFO #grpc COLLECTOR_RECEIVER_GRPC_AGENT_PORT=9991 COLLECTOR_RECEIVER_GRPC_STAT_PORT=9992 COLLECTOR_RECEIVER_GRPC_SPAN_PORT=9993 #thrift COLLECTOR_RECEIVER_BASE_PORT=9994 COLLECTOR_RECEIVER_STAT_UDP_PORT=9995 COLLECTOR_RECEIVER_SPAN_UDP_PORT=9996 FLINK_CLUSTER_ENABLE=true FLINK_CLUSTER_ZOOKEEPER_ADDRESS=zoo1 ### Pinpoint-Agent PINPOINT_AGENT_NAME=pinpoint-agent #network module(GRPC,THRIFT) PROFILER_TRANSPORT_MODULE=GRPC #collector information required COLLECTOR_IP=pinpoint-collector PROFILER_TRANSPORT_AGENT_COLLECTOR_PORT=9991 PROFILER_TRANSPORT_METADATA_COLLECTOR_PORT=9991 PROFILER_TRANSPORT_STAT_COLLECTOR_PORT=9992 PROFILER_TRANSPORT_SPAN_COLLECTOR_PORT=9993 COLLECTOR_TCP_PORT=9994 COLLECTOR_STAT_PORT=9995 COLLECTOR_SPAN_PORT=9996 # Set sampling rate. If you set it to N, 1 out of N transaction will be sampled. PROFILER_SAMPLING_RATE=1 AGENT_ID=app-in-docker APP_NAME=quickapp AGENT_DEBUG_LEVEL=INFO ### Pinpoint-flink PINPOINT_FLINK_NAME=pinpoint-flink FLINK_WEB_PORT=8081 ### Pinpoint-quickstart APP_PORT=8000 \u5de5\u7a0b\u3001\u670d\u52a1\u3001\u5bb9\u5668 Docker Compose \u5c06\u6240\u7ba1\u7406\u7684\u5bb9\u5668\u5206\u4e3a\u4e09\u5c42\uff0c\u5206\u522b\u662f\u5de5\u7a0b\uff08project\uff09\u3001\u670d\u52a1\uff08service\uff09\u3001\u5bb9\u5668\uff08container\uff09 Docker Compose \u8fd0\u884c\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff08docker-compose.yml\uff09\u7ec4\u6210\u4e00\u4e2a\u5de5\u7a0b,\u4e00\u4e2a\u5de5\u7a0b\u5305\u542b\u591a\u4e2a\u670d\u52a1\uff0c\u6bcf\u4e2a\u670d\u52a1\u4e2d\u5b9a\u4e49\u4e86\u5bb9\u5668\u8fd0\u884c\u7684\u955c\u50cf\u3001\u53c2\u6570\u3001\u4f9d\u8d56\uff0c\u4e00\u4e2a\u670d\u52a1\u53ef\u5305\u62ec\u591a\u4e2a\u5bb9\u5668\u5b9e\u4f8b Docker Compose \u5e38\u7528\u547d\u4ee4\u4e0e\u914d\u7f6e \u5e38\u89c1\u547d\u4ee4 ps \uff1a\u5217\u51fa\u6240\u6709\u8fd0\u884c\u5bb9\u5668 docker-compose ps logs \uff1a\u67e5\u770b\u670d\u52a1\u65e5\u5fd7\u8f93\u51fa docker-compose logs port \uff1a\u6253\u5370\u7ed1\u5b9a\u7684\u516c\u5171\u7aef\u53e3\uff0c\u4e0b\u9762\u547d\u4ee4\u53ef\u4ee5\u8f93\u51fa eureka \u670d\u52a1 8761 \u7aef\u53e3\u6240\u7ed1\u5b9a\u7684\u516c\u5171\u7aef\u53e3 docker-compose port eureka 8761 build \uff1a\u6784\u5efa\u6216\u8005\u91cd\u65b0\u6784\u5efa\u670d\u52a1 docker-compose build start \uff1a\u542f\u52a8\u6307\u5b9a\u670d\u52a1\u5df2\u5b58\u5728\u7684\u5bb9\u5668 docker-compose start eureka stop \uff1a\u505c\u6b62\u5df2\u8fd0\u884c\u7684\u670d\u52a1\u7684\u5bb9\u5668 docker-compose stop eureka rm \uff1a\u5220\u9664\u6307\u5b9a\u670d\u52a1\u7684\u5bb9\u5668 docker-compose rm eureka up \uff1a\u6784\u5efa\u3001\u542f\u52a8\u5bb9\u5668 docker-compose up kill \uff1a\u901a\u8fc7\u53d1\u9001 SIGKILL \u4fe1\u53f7\u6765\u505c\u6b62\u6307\u5b9a\u670d\u52a1\u7684\u5bb9\u5668 docker-compose kill eureka pull \uff1a\u4e0b\u8f7d\u670d\u52a1\u955c\u50cf scale \uff1a\u8bbe\u7f6e\u6307\u5b9a\u670d\u52a1\u8fd0\u6c14\u5bb9\u5668\u7684\u4e2a\u6570\uff0c\u4ee5 service=num \u5f62\u5f0f\u6307\u5b9a docker-compose scale user=3 movie=3 run \uff1a\u5728\u4e00\u4e2a\u670d\u52a1\u4e0a\u6267\u884c\u4e00\u4e2a\u547d\u4ee4 docker-compose run web bash docker-compose.yml \u5c5e\u6027 version \uff1a\u6307\u5b9a docker-compose.yml \u6587\u4ef6\u7684\u5199\u6cd5\u683c\u5f0f services \uff1a\u591a\u4e2a\u5bb9\u5668\u96c6\u5408 build \uff1a\u914d\u7f6e\u6784\u5efa\u65f6\uff0cCompose \u4f1a\u5229\u7528\u5b83\u81ea\u52a8\u6784\u5efa\u955c\u50cf\uff0c\u8be5\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7528\u4e8e\u6307\u5b9a Dockerfile \u53c2\u6570 build: ./dir --------------- build: context: ./dir dockerfile: Dockerfile args: buildno: 1 command \uff1a\u8986\u76d6\u5bb9\u5668\u542f\u52a8\u540e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4 command: bundle exec thin -p 3000 ---------------------------------- command: [bundle,exec,thin,-p,3000] dns \uff1a\u914d\u7f6e dns \u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u5217\u8868 dns: 8.8.8.8 ------------ dns: - 8.8.8.8 - 9.9.9.9 dns_search \uff1a\u914d\u7f6e DNS \u641c\u7d22\u57df\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u5217\u8868 dns_search: example.com ------------------------ dns_search: - dc1.example.com - dc2.example.com environment \uff1a\u73af\u5883\u53d8\u91cf\u914d\u7f6e\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u6216\u5b57\u5178\u4e24\u79cd\u65b9\u5f0f environment: RACK_ENV: development SHOW: 'ture' ------------------------- environment: - RACK_ENV=development - SHOW=ture env_file \uff1a\u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\u6216\u8def\u5f84\u5217\u8868\uff0c\u5176\u4f18\u5148\u7ea7\u4f4e\u4e8e environment \u6307\u5b9a\u7684\u73af\u5883\u53d8\u91cf env_file: .env --------------- env_file: - ./common.env expose \uff1a\u66b4\u9732\u7aef\u53e3\uff0c\u53ea\u5c06\u7aef\u53e3\u66b4\u9732\u7ed9\u8fde\u63a5\u7684\u670d\u52a1\uff0c\u800c\u4e0d\u66b4\u9732\u7ed9\u4e3b\u673a expose: - \"3000\" - \"8000\" image \uff1a\u6307\u5b9a\u670d\u52a1\u6240\u4f7f\u7528\u7684\u955c\u50cf image: java network_mode \uff1a\u8bbe\u7f6e\u7f51\u7edc\u6a21\u5f0f network_mode: \"bridge\" network_mode: \"host\" network_mode: \"none\" network_mode: \"service:[service name]\" network_mode: \"container:[container name/id]\" ports \uff1a\u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\u5b9a\u4e49\uff0c\u548c expose \u5bf9\u5e94 ports: # \u66b4\u9732\u7aef\u53e3\u4fe1\u606f - \"\u5bbf\u4e3b\u673a\u7aef\u53e3:\u5bb9\u5668\u66b4\u9732\u7aef\u53e3\" - \"8763:8763\" - \"8763:8763\" links \uff1a\u5c06\u6307\u5b9a\u5bb9\u5668\u8fde\u63a5\u5230\u5f53\u524d\u8fde\u63a5\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u522b\u540d\uff0c\u907f\u514dip\u65b9\u5f0f\u5bfc\u81f4\u7684\u5bb9\u5668\u91cd\u542f\u52a8\u6001\u6539\u53d8\u7684\u65e0\u6cd5\u8fde\u63a5\u60c5\u51b5 links: # \u6307\u5b9a\u670d\u52a1\u540d\u79f0:\u522b\u540d - docker-compose-eureka-server:compose-eureka volumes \uff1a\u5377\u6302\u8f7d\u8def\u5f84 volumes: - /lib - /var logs \uff1a\u65e5\u5fd7\u8f93\u51fa\u4fe1\u606f --no-color \u5355\u8272\u8f93\u51fa\uff0c\u4e0d\u663e\u793a\u5176\u4ed6\u989c. -f, --follow \u8ddf\u8e2a\u65e5\u5fd7\u8f93\u51fa\uff0c\u5c31\u662f\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u65e5\u5fd7 -t, --timestamps \u663e\u793a\u65f6\u95f4\u6233 --tail \u4ece\u65e5\u5fd7\u7684\u7ed3\u5c3e\u663e\u793a\uff0c--tail=200 Docker Compose \u5176\u5b83 \u66f4\u65b0\u5bb9\u5668 \u5f53\u670d\u52a1\u7684\u914d\u7f6e\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u53ef\u4f7f\u7528 docker-compose up \u547d\u4ee4\u66f4\u65b0\u914d\u7f6e \u6b64\u65f6\uff0cCompose \u4f1a\u5220\u9664\u65e7\u5bb9\u5668\u5e76\u521b\u5efa\u65b0\u5bb9\u5668\uff0c\u65b0\u5bb9\u5668\u4f1a\u4ee5\u4e0d\u540c\u7684 IP \u5730\u5740\u52a0\u5165\u7f51\u7edc\uff0c\u540d\u79f0\u4fdd\u6301\u4e0d\u53d8\uff0c\u4efb\u4f55\u6307\u5411\u65e7\u5bb9\u8d77\u7684\u8fde\u63a5\u90fd\u4f1a\u88ab\u5173\u95ed\uff0c\u91cd\u65b0\u627e\u5230\u65b0\u5bb9\u5668\u5e76\u8fde\u63a5\u4e0a\u53bb links \u670d\u52a1\u4e4b\u95f4\u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u540d\u79f0\u76f8\u4e92\u8bbf\u95ee\uff0clinks \u5141\u8bb8\u5b9a\u4e49\u4e00\u4e2a\u522b\u540d\uff0c\u4ece\u800c\u4f7f\u7528\u8be5\u522b\u540d\u8bbf\u95ee\u5176\u5b83\u670d\u52a1 version: '2' services: web: build: . links: - \"db:database\" db: image: postgres \u8fd9\u6837 Web \u670d\u52a1\u5c31\u53ef\u4ee5\u4f7f\u7528 db \u6216 database \u4f5c\u4e3a hostname \u8bbf\u95ee db \u670d\u52a1\u4e86 restart \u91cd\u542f\u7b56\u7565 always \u2013 \u4e0d\u7ba1\u9000\u51fa\u72b6\u6001\u7801\u662f\u4ec0\u4e48\u59cb\u7ec8\u91cd\u542f\u5bb9\u5668\u3002\u5f53\u6307\u5b9aalways\u65f6\uff0cdocker daemon\u5c06\u65e0\u9650\u6b21\u6570\u5730\u91cd\u542f\u5bb9\u5668\u3002\u5bb9\u5668\u4e5f\u4f1a\u5728daemon\u542f\u52a8\u65f6\u5c1d\u8bd5\u91cd\u542f\uff0c\u4e0d\u7ba1\u5bb9\u5668\u5f53\u65f6\u7684\u72b6\u6001\u5982\u4f55\u3002 no \u2013 \u5bb9\u5668\u9000\u51fa\u65f6\u4e0d\u8981\u81ea\u52a8\u91cd\u542f\u3002\u8fd9\u4e2a\u662f\u9ed8\u8ba4\u503c\u3002 on-failure[:max-retries] \u2013 \u53ea\u5728\u5bb9\u5668\u4ee5\u975e0\u72b6\u6001\u7801\u9000\u51fa\u65f6\u91cd\u542f\u3002\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u9000\u51fadocker daemon\u5c1d\u8bd5\u91cd\u542f\u5bb9\u5668\u7684\u6b21\u6570\u3002 unless-stopped - \u4e0d\u7ba1\u9000\u51fa\u72b6\u6001\u7801\u662f\u4ec0\u4e48\u59cb\u7ec8\u91cd\u542f\u5bb9\u5668\uff0c\u4e0d\u8fc7\u5f53daemon\u542f\u52a8\u65f6\uff0c\u5982\u679c\u5bb9\u5668\u4e4b\u524d\u5df2\u7ecf\u4e3a\u505c\u6b62\u72b6\u6001\uff0c\u4e0d\u8981\u5c1d\u8bd5\u542f\u52a8\u5b83\u3002 depends_on \u5728\u4f7f\u7528 Compose \u65f6\uff0c\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u5c11\u6253\u542f\u52a8\u547d\u4ee4\uff0c\u4f46\u662f\u4e00\u822c\u9879\u76ee\u5bb9\u5668\u542f\u52a8\u7684\u987a\u5e8f\u662f\u6709\u8981\u6c42\u7684\uff0c\u5982\u679c\u76f4\u63a5\u4ece\u4e0a\u5230\u4e0b\u542f\u52a8\u5bb9\u5668\uff0c\u5fc5\u7136\u4f1a\u56e0\u4e3a\u5bb9\u5668\u4f9d\u8d56\u95ee\u9898\u800c\u542f\u52a8\u5931\u8d25\u3002 \u4f8b\u5982\u5728\u6ca1\u542f\u52a8\u6570\u636e\u5e93\u5bb9\u5668\u7684\u65f6\u5019\u542f\u52a8\u4e86\u5e94\u7528\u5bb9\u5668\uff0c\u8fd9\u65f6\u5019\u5e94\u7528\u5bb9\u5668\u4f1a\u56e0\u4e3a\u627e\u4e0d\u5230\u6570\u636e\u5e93\u800c\u9000\u51fa\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u6807\u7b7e\uff0c\u5c31\u662f depends_on\uff0c\u8fd9\u4e2a\u6807\u7b7e\u89e3\u51b3\u4e86\u5bb9\u5668\u7684\u4f9d\u8d56\u3001\u542f\u52a8\u5148\u540e\u7684\u95ee\u9898\u3002 \u4f8b\u5982\u4e0b\u9762\u5bb9\u5668\u4f1a\u5148\u542f\u52a8 redis \u548c db \u4e24\u4e2a\u670d\u52a1\uff0c\u6700\u540e\u624d\u542f\u52a8 web \u670d\u52a1\uff1a version: '2' services: web: build: . depends_on: - db - redis redis: image: redis db: image: postgres \u6ce8\u610f\u7684\u662f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 docker-compose up web \u8fd9\u6837\u7684\u65b9\u5f0f\u542f\u52a8 web \u670d\u52a1\u65f6\uff0c\u4e5f\u4f1a\u542f\u52a8 redis \u548c db \u4e24\u4e2a\u670d\u52a1\uff0c\u56e0\u4e3a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4f9d\u8d56\u5173\u7cfb\u3002 https://juejin.cn/post/6844903976534540296 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCompose\u4f1a\u4e3a\u6211\u4eec\u7684\u5e94\u7528\u521b\u5efa\u4e00\u4e2a\u7f51\u7edc\uff0c\u670d\u52a1\u7684\u6bcf\u4e2a\u5bb9\u5668\u90fd\u4f1a\u52a0\u5165\u8be5\u7f51\u7edc\u4e2d\u3002\u8fd9\u6837\uff0c\u5bb9\u5668\u5c31\u53ef\u88ab\u8be5\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u8bbf\u95ee\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u8be5\u5bb9\u5668\u8fd8\u80fd\u4ee5\u670d\u52a1\u540d\u79f0\u4f5c\u4e3ahostname\u88ab\u5176\u4ed6\u5bb9\u5668\u8bbf\u95ee\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u7f51\u7edc\u540d\u79f0\u57fa\u4e8eCompose\u7684\u5de5\u7a0b\u540d\u79f0\uff0c\u800c\u9879\u76ee\u540d\u79f0\u57fa\u4e8edocker-compose.yml\u6240\u5728\u76ee\u5f55\u7684\u540d\u79f0\u3002\u5982\u9700\u4fee\u6539\u5de5\u7a0b\u540d\u79f0\uff0c\u53ef\u4f7f\u7528--project-name\u6807\u8bc6\u6216COMPOSE_PORJECT_NAME\u73af\u5883\u53d8\u91cf\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5728\u540d\u4e3amyapp\u7684\u76ee\u5f55\u4e2d\uff0c\u5e76\u4e14docker-compose.yml\u5982\u4e0b\u6240\u793a\uff1a version: '2' services: web: build: . ports: - \"8000:8000\" db: image: postgres \u590d\u5236\u4ee3\u7801 \u5f53\u6211\u4eec\u8fd0\u884cdocker-compose up\u65f6\uff0c\u5c06\u4f1a\u6267\u884c\u4ee5\u4e0b\u51e0\u6b65\uff1a \u521b\u5efa\u4e00\u4e2a\u540d\u4e3amyapp_default\u7684\u7f51\u7edc\uff1b \u4f7f\u7528web\u670d\u52a1\u7684\u914d\u7f6e\u521b\u5efa\u5bb9\u5668\uff0c\u5b83\u4ee5\u201cweb\u201d\u8fd9\u4e2a\u540d\u79f0\u52a0\u5165\u7f51\u7edcmyapp_default\uff1b \u4f7f\u7528db\u670d\u52a1\u7684\u914d\u7f6e\u521b\u5efa\u5bb9\u5668\uff0c\u5b83\u4ee5\u201cdb\u201d\u8fd9\u4e2a\u540d\u79f0\u52a0\u5165\u7f51\u7edcmyapp_default\u3002 \u5bb9\u5668\u95f4\u53ef\u4f7f\u7528\u670d\u52a1\u540d\u79f0\uff08web\u6216db\uff09\u4f5c\u4e3ahostname\u76f8\u4e92\u8bbf\u95ee\u3002\u4f8b\u5982\uff0cweb\u8fd9\u4e2a\u670d\u52a1\u53ef\u4f7f\u7528 postgres://db:5432 \u8bbf\u95eedb\u5bb9\u5668\u3002 \u66f4\u65b0\u5bb9\u5668 \u5f53\u670d\u52a1\u7684\u914d\u7f6e\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u53ef\u4f7f\u7528docker-compose up\u547d\u4ee4\u66f4\u65b0\u914d\u7f6e\u3002 \u6b64\u65f6\uff0cCompose\u4f1a\u5220\u9664\u65e7\u5bb9\u5668\u5e76\u521b\u5efa\u65b0\u5bb9\u5668\u3002\u65b0\u5bb9\u5668\u4f1a\u4ee5\u4e0d\u540c\u7684IP\u5730\u5740\u52a0\u5165\u7f51\u7edc\uff0c\u540d\u79f0\u4fdd\u6301\u4e0d\u53d8\u3002\u4efb\u4f55\u6307\u5411\u65e7\u5bb9\u5668\u7684\u8fde\u63a5\u90fd\u4f1a\u88ab\u5173\u95ed\uff0c\u5bb9\u5668\u4f1a\u91cd\u65b0\u627e\u5230\u65b0\u5bb9\u5668\u5e76\u8fde\u63a5\u4e0a\u53bb\u3002 links \u524d\u6587\u8bb2\u8fc7\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u4e4b\u95f4\u53ef\u4f7f\u7528\u670d\u52a1\u540d\u79f0\u76f8\u4e92\u8bbf\u95ee\u3002links\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u522b\u540d\uff0c\u4ece\u800c\u4f7f\u7528\u8be5\u522b\u540d\u8bbf\u95ee\u5176\u4ed6\u670d\u52a1\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a version: '2' services: web: build: . links: - \"db:database\" db: image: postgres \u590d\u5236\u4ee3\u7801 \u8fd9\u6837web\u670d\u52a1\u5c31\u53ef\u4f7f\u7528db\u6216database\u4f5c\u4e3ahostname\u8bbf\u95eedb\u670d\u52a1\u4e86\u3002 \u6307\u5b9a\u81ea\u5b9a\u4e49\u7f51\u7edc \u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u9ed8\u8ba4\u7684\u7f51\u7edc\u914d\u7f6e\u6ee1\u8db3\u4e0d\u4e86\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4f7f\u7528networks\u547d\u4ee4\u81ea\u5b9a\u4e49\u7f51\u7edc\u3002networks\u547d\u4ee4\u5141\u8bb8\u6211\u4eec\u521b\u5efa\u66f4\u52a0\u590d\u6742\u7684\u7f51\u7edc\u62d3\u6251\u5e76\u6307\u5b9a\u81ea\u5b9a\u4e49\u7f51\u7edc\u9a71\u52a8\u548c\u9009\u9879\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u53ef\u4f7f\u7528networks\u5c06\u670d\u52a1\u8fde\u63a5\u5230\u4e0d\u662f\u7531Compose\u7ba1\u7406\u7684\u3001\u5916\u90e8\u521b\u5efa\u7684\u7f51\u7edc\u3002 \u5982\u4e0b\uff0c\u6211\u4eec\u5728\u5176\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7f51\u7edc\u3002 version: '2' services: proxy: build: ./proxy networks: - front app: build: ./app networks: - front - back db: image: postgres networks: - back networks: front: # Use a custom driver driver: custom-driver-1 back: # Use a custom driver which takes special options driver: custom-driver-2 driver_opts: foo: \"1\" bar: \"2\" \u590d\u5236\u4ee3\u7801 \u5176\u4e2d\uff0cproxy\u670d\u52a1\u4e0edb\u670d\u52a1\u9694\u79bb\uff0c\u4e24\u8005\u5206\u522b\u4f7f\u7528\u81ea\u5df1\u7684\u7f51\u7edc\uff1bapp\u670d\u52a1\u53ef\u4e0e\u4e24\u8005\u901a\u4fe1\u3002 \u7531\u672c\u4f8b\u4e0d\u96be\u53d1\u73b0\uff0c\u4f7f\u7528networks\u547d\u4ee4\uff0c\u5373\u53ef\u65b9\u4fbf\u5b9e\u73b0\u670d\u52a1\u95f4\u7684\u7f51\u7edc\u9694\u79bb\u4e0e\u8fde\u63a5\u3002 \u914d\u7f6e\u9ed8\u8ba4\u7f51\u7edc \u9664\u81ea\u5b9a\u4e49\u7f51\u7edc\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4e3a\u9ed8\u8ba4\u7f51\u7edc\u81ea\u5b9a\u4e49\u914d\u7f6e\u3002 version: '2' services: web: build: . ports: - \"8000:8000\" db: image: postgres networks: default: # Use a custom driver driver: custom-driver-1 \u590d\u5236\u4ee3\u7801 \u8fd9\u6837\uff0c\u5c31\u53ef\u4e3a\u8be5\u5e94\u7528\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc\u9a71\u52a8\u3002 \u4f7f\u7528\u5df2\u5b58\u5728\u7684\u7f51\u7edc \u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u521b\u5efa\u65b0\u7684\u7f51\u7edc\uff0c\u800c\u53ea\u9700\u52a0\u5165\u5df2\u5b58\u5728\u7684\u7f51\u7edc\uff0c\u6b64\u65f6\u53ef\u4f7f\u7528external\u9009\u9879\u3002\u793a\u4f8b\uff1a networks: default: external: name: my-pre-existing-network\u590d\u5236\u4ee3\u7801 Docker Compose \u94fe\u63a5\u5916\u90e8\u5bb9\u5668\u7684\u51e0\u79cd\u65b9\u5f0f \u5728Docker\u4e2d\uff0c\u5bb9\u5668\u4e4b\u95f4\u7684\u94fe\u63a5\u662f\u4e00\u79cd\u5f88\u5e38\u89c1\u7684\u64cd\u4f5c\uff1a\u5b83\u63d0\u4f9b\u4e86\u8bbf\u95ee\u5176\u4e2d\u7684\u67d0\u4e2a\u5bb9\u5668\u7684\u7f51\u7edc\u670d\u52a1\u800c\u4e0d\u9700\u8981\u5c06\u6240\u9700\u7684\u7aef\u53e3\u66b4\u9732\u7ed9Docker Host\u4e3b\u673a\u7684\u529f\u80fd\u3002Docker Compose\u4e2d\u5bf9\u8be5\u7279\u6027\u7684\u652f\u6301\u540c\u6837\u662f\u5f88\u65b9\u4fbf\u7684\u3002\u7136\u800c\uff0c\u5982\u679c\u9700\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u6ca1\u6709\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a docker-compose.yml \u4e2d\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u7a0d\u5fae\u9ebb\u70e6\u590d\u6742\u4e86\u70b9\u3002 \u5728\u4e0d\u4f7f\u7528Docker Compose\u7684\u65f6\u5019\uff0c\u5c06\u4e24\u4e2a\u5bb9\u5668\u94fe\u63a5\u8d77\u6765\u4f7f\u7528 \u2014link \u53c2\u6570\uff0c\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u7b80\u5355\uff0c\u4ee5 nginx \u955c\u50cf\u4e3a\u4f8b\u5b50\uff1a docker run --rm --name test1 -d nginx #\u5f00\u542f\u4e00\u4e2a\u5b9e\u4f8btest1 docker run --rm --name test2 --link test1 -d nginx #\u5f00\u542f\u4e00\u4e2a\u5b9e\u4f8btest2\u5e76\u4e0etest1\u5efa\u7acb\u94fe\u63a5 \u590d\u5236\u4ee3\u7801 \u8fd9\u6837\uff0c test2 \u4e0e test1 \u4fbf\u5efa\u7acb\u4e86\u94fe\u63a5\uff0c\u5c31\u53ef\u4ee5\u5728 test2 \u4e2d\u4f7f\u7528\u8bbf\u95ee test1 \u4e2d\u7684\u670d\u52a1\u4e86\u3002 \u5982\u679c\u4f7f\u7528Docker Compose\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e8b\u60c5\u5c31\u66f4\u7b80\u5355\u4e86\uff0c\u8fd8\u662f\u4ee5\u4e0a\u9762\u7684 nginx \u955c\u50cf\u4e3a\u4f8b\u5b50\uff0c\u7f16\u8f91 docker-compose.yml \u6587\u4ef6\u4e3a\uff1a version: \"3\" services: test2: image: nginx depends_on: - test1 links: - test1 test1: image: nginx \u590d\u5236\u4ee3\u7801 \u6700\u7ec8\u6548\u679c\u4e0e\u4f7f\u7528\u666e\u901a\u7684Docker\u547d\u4ee4 docker run xxxx \u5efa\u7acb\u7684\u94fe\u63a5\u5e76\u65e0\u533a\u522b\u3002\u8fd9\u53ea\u662f\u4e00\u79cd\u6700\u4e3a\u7406\u60f3\u7684\u60c5\u51b5\u3002 \u5982\u679c\u5bb9\u5668\u6ca1\u6709\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a docker-compose.yml \u6587\u4ef6\u4e2d\uff0c\u5e94\u8be5\u5982\u4f55\u94fe\u63a5\u5b83\u4eec\u5462\uff1f \u53c8\u5982\u679c\u5b9a\u4e49\u5728 docker-compose.yml \u6587\u4ef6\u4e2d\u7684\u5bb9\u5668\u9700\u8981\u4e0e docker run xxx \u542f\u52a8\u7684\u5bb9\u5668\u94fe\u63a5\uff0c\u9700\u8981\u5982\u4f55\u5904\u7406\uff1f \u9488\u5bf9\u8fd9\u4e24\u79cd\u5178\u578b\u7684\u60c5\u51b5\uff0c\u4e0b\u9762\u7ed9\u51fa\u6211\u4e2a\u4eba\u6d4b\u8bd5\u53ef\u884c\u7684\u529e\u6cd5\uff1a \u65b9\u5f0f\u4e00\uff1a\u8ba9\u9700\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u540c\u5c5e\u4e00\u4e2a\u5916\u90e8\u7f51\u7edc \u6211\u4eec\u8fd8\u662f\u4f7f\u7528nginx\u955c\u50cf\u6765\u6a21\u62df\u8fd9\u6837\u7684\u4e00\u4e2a\u60c5\u666f\uff1a\u5047\u8bbe\u6211\u4eec\u9700\u8981\u5c06\u4e24\u4e2a\u4f7f\u7528Docker Compose\u7ba1\u7406\u7684nignx\u5bb9\u5668\uff08 test1 \u548c test2 \uff09\u94fe\u63a5\u8d77\u6765\uff0c\u4f7f\u5f97 test2 \u80fd\u591f\u8bbf\u95ee test1 \u4e2d\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u8fd9\u91cc\u6211\u4eec\u4ee5\u80fdping\u901a\u4e3a\u51c6\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u5bb9\u5668 test1 \u7684 docker-compose.yml \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a version: \"3\" services: test2: image: nginx container_name: test1 networks: - default - app_net networks: app_net: external: true \u590d\u5236\u4ee3\u7801 \u5bb9\u5668 test2 \u5185\u5bb9\u4e0e test1 \u57fa\u672c\u4e00\u6837\uff0c\u53ea\u662f\u591a\u4e86\u4e00\u4e2a external_links ,\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff1a \u6700\u8fd1\u53d1\u5e03\u7684Docker\u7248\u672c\u5df2\u7ecf\u4e0d\u9700\u8981\u4f7f\u7528external_links\u6765\u94fe\u63a5\u5bb9\u5668\uff0c\u5bb9\u5668\u7684DNS\u670d\u52a1\u53ef\u4ee5\u6b63\u786e\u7684\u4f5c\u51fa\u5224\u65ad \uff0c\u56e0\u6b64\u5982\u679c\u4f60\u4f60\u9700\u8981\u517c\u5bb9\u8f83\u8001\u7248\u672c\u7684Docker\u7684\u8bdd\uff0c\u90a3\u4e48\u5bb9\u5668 test2 \u7684 docker-compose.yml \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a version: \"3\" services: test2: image: nginx networks: - default - app_net external_links: - test1 container_name: test2 networks: app_net: external: true\u590d\u5236\u4ee3\u7801 \u5426\u5219\u7684\u8bdd\uff0c test2 \u7684 docker-compose.yml \u548c test1 \u7684\u5b9a\u4e49\u5b8c\u5168\u4e00\u81f4\uff0c\u4e0d\u9700\u8981\u989d\u5916\u591a\u6307\u5b9a\u4e00\u4e2a external_links \u3002\u76f8\u5173\u7684\u95ee\u9898\u8bf7\u53c2\u89c1stackoverflow\u4e0a\u7684\u76f8\u5173\u95ee\u9898\uff1a docker-compose + external container \u6b63\u5982\u4f60\u770b\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u91cc\u4e24\u4e2a\u5bb9\u5668\u7684\u5b9a\u4e49\u91cc\u90fd\u4f7f\u7528\u4e86\u540c\u4e00\u4e2a\u5916\u90e8\u7f51\u7edc app_net ,\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u542f\u52a8\u8fd9\u4e24\u4e2a\u5bb9\u5668\u4e4b\u524d\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u518d\u521b\u5efa\u5916\u90e8\u7f51\u7edc\uff1a docker network create app_net\u590d\u5236\u4ee3\u7801 \u4e4b\u540e\uff0c\u901a\u8fc7 docker-compose up -d \u547d\u4ee4\u542f\u52a8\u8fd9\u4e24\u4e2a\u5bb9\u5668\uff0c\u7136\u540e\u6267\u884c docker exec -it test2 ping test1 ,\u4f60\u5c06\u4f1a\u770b\u5230\u5982\u4e0b\u7684\u8f93\u51fa\uff1a docker exec -it test2 ping test1 PING test1 (172.18.0.2): 56 data bytes 64 bytes from 172.18.0.2: icmp_seq=0 ttl=64 time=0.091 ms 64 bytes from 172.18.0.2: icmp_seq=1 ttl=64 time=0.146 ms 64 bytes from 172.18.0.2: icmp_seq=2 ttl=64 time=0.150 ms 64 bytes from 172.18.0.2: icmp_seq=3 ttl=64 time=0.145 ms 64 bytes from 172.18.0.2: icmp_seq=4 ttl=64 time=0.126 ms 64 bytes from 172.18.0.2: icmp_seq=5 ttl=64 time=0.147 ms \u590d\u5236\u4ee3\u7801 \u8bc1\u660e\u8fd9\u4e24\u4e2a\u5bb9\u5668\u662f\u6210\u529f\u94fe\u63a5\u4e86\uff0c\u53cd\u8fc7\u6765\u5728 test1 \u4e2dping test2 \u4e5f\u662f\u80fd\u591f\u6b63\u5e38ping\u901a\u7684\u3002 \u5982\u679c\u6211\u4eec\u901a\u8fc7 docker run --rm --name test3 -d nginx \u8fd9\u79cd\u65b9\u5f0f\u6765\u5148\u542f\u52a8\u4e86\u4e00\u4e2a\u5bb9\u5668( test3 )\u5e76\u4e14\u6ca1\u6709\u6307\u5b9a\u5b83\u6240\u5c5e\u7684\u5916\u90e8\u7f51\u7edc\uff0c\u800c\u9700\u8981\u5c06\u5176\u4e0e test1 \u6216\u8005 test2 \u94fe\u63a5\u7684\u8bdd\uff0c\u8fd9\u4e2a\u65f6\u5019\u624b\u52a8\u94fe\u63a5\u5916\u90e8\u7f51\u7edc\u5373\u53ef\uff1a docker network connect app_net test3\u590d\u5236\u4ee3\u7801 \u8fd9\u6837\uff0c\u4e09\u4e2a\u5bb9\u5668\u90fd\u53ef\u4ee5\u76f8\u4e92\u8bbf\u95ee\u4e86\u3002 \u65b9\u5f0f\u4e8c\uff1a\u66f4\u6539\u9700\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u7684\u7f51\u7edc\u6a21\u5f0f \u901a\u8fc7\u66f4\u6539\u4f60\u60f3\u8981\u76f8\u4e92\u94fe\u63a5\u7684\u5bb9\u5668\u7684\u7f51\u7edc\u6a21\u5f0f\u4e3a bridge ,\u5e76\u6307\u5b9a\u9700\u8981\u94fe\u63a5\u7684\u5916\u90e8\u5bb9\u5668\uff08 external_links )\u5373\u53ef\u3002\u4e0e\u540c\u5c5e\u5916\u90e8\u7f51\u7edc\u7684\u5bb9\u5668\u53ef\u4ee5\u76f8\u4e92\u8bbf\u95ee\u7684\u94fe\u63a5\u65b9\u5f0f\u4e00\u4e0d\u540c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u8bbf\u95ee\u662f\u5355\u5411\u7684\u3002 \u8fd8\u662f\u4ee5nginx\u5bb9\u5668\u955c\u50cf\u4e3a\u4f8b\u5b50\uff0c\u5982\u679c\u5bb9\u5668\u5b9e\u4f8b nginx1 \u9700\u8981\u8bbf\u95ee\u5bb9\u5668\u5b9e\u4f8b nginx2 \uff0c\u90a3\u4e48 nginx2 \u7684 doker-compose.yml \u5b9a\u4e49\u4e3a\uff1a version: \"3\" services: nginx2: image: nginx container_name: nginx2 network_mode: bridge \u590d\u5236\u4ee3\u7801 \u4e0e\u5176\u5bf9\u5e94\u7684\uff0c nginx1 \u7684 docker-compose.yml \u5b9a\u4e49\u4e3a\uff1a version: \"3\" services: nginx1: image: nginx external_links: - nginx2 container_name: nginx1 network_mode: bridge \u590d\u5236\u4ee3\u7801 \u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u91cc\u7684 external_links \u662f\u4e0d\u80fd\u7701\u7565\u7684\uff0c\u800c\u4e14 nginx1 \u7684\u542f\u52a8\u5fc5\u987b\u8981\u5728 nginx2 \u4e4b\u540e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u62a5\u627e\u4e0d\u5230\u5bb9\u5668 nginx2 \u7684\u9519\u8bef\u3002 \u63a5\u7740\u6211\u4eec\u4f7f\u7528ping\u6765\u6d4b\u8bd5\u4e0b\u8fde\u901a\u6027\uff1a $ docker exec -it nginx1 ping nginx2 # nginx1 to nginx2 PING nginx2 (172.17.0.4): 56 data bytes 64 bytes from 172.17.0.4: icmp_seq=0 ttl=64 time=0.141 ms 64 bytes from 172.17.0.4: icmp_seq=1 ttl=64 time=0.139 ms 64 bytes from 172.17.0.4: icmp_seq=2 ttl=64 time=0.145 ms $ docker exec -it nginx2 ping nginx1 #nginx2 to nginx1 ping: unknown host\u590d\u5236\u4ee3\u7801 \u4ee5\u4e0a\u4e5f\u80fd\u5145\u5206\u8bc1\u660e\u8fd9\u79cd\u65b9\u5f0f\u662f\u5c5e\u4e8e\u5355\u5411\u8054\u901a\u7684\u3002 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u7075\u6d3b\u7684\u9009\u62e9\u8fd9\u4e24\u79cd\u94fe\u63a5\u65b9\u5f0f\uff0c\u5982\u679c\u60f3\u5077\u61d2\u7684\u8bdd\uff0c\u5927\u53ef\u9009\u62e9\u7b2c\u4e8c\u79cd\u3002\u4e0d\u8fc7\u6211\u66f4\u63a8\u8350\u7b2c\u4e00\u79cd\uff0c\u4e0d\u96be\u770b\u51fa\u65e0\u8bba\u662f\u8054\u901a\u6027\u8fd8\u662f\u7075\u6d3b\u6027\uff0c\u8f83\u4e3a\u66f4\u6539\u7f51\u7edc\u6a21\u5f0f\u7684\u7b2c\u4e8c\u79cd\u90fd\u66f4\u4e3a\u53cb\u597d\u3002 \u9644docker-compose.yml\u6587\u4ef6\u8be6\u89e3 Compose\u548cDocker\u517c\u5bb9\u6027\uff1a Compose \u6587\u4ef6\u683c\u5f0f\u67093\u4e2a\u7248\u672c,\u5206\u522b\u4e3a1, 2.x \u548c 3.x \u76ee\u524d\u4e3b\u6d41\u7684\u4e3a 3.x \u5176\u652f\u6301 docker 1.13.0 \u53ca\u5176\u4ee5\u4e0a\u7684\u7248\u672c \u5e38\u7528\u53c2\u6570\uff1a version # \u6307\u5b9a compose \u6587\u4ef6\u7684\u7248\u672c services # \u5b9a\u4e49\u6240\u6709\u7684 service \u4fe1\u606f, services \u4e0b\u9762\u7684\u7b2c\u4e00\u7ea7\u522b\u7684 key \u65e2\u662f\u4e00\u4e2a service \u7684\u540d\u79f0 build # \u6307\u5b9a\u5305\u542b\u6784\u5efa\u4e0a\u4e0b\u6587\u7684\u8def\u5f84, \u6216\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5177\u6709 context \u548c\u6307\u5b9a\u7684 dockerfile \u6587\u4ef6\u4ee5\u53ca args \u53c2\u6570\u503c context # context: \u6307\u5b9a Dockerfile \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84 dockerfile # dockerfile: \u6307\u5b9a context \u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u9762\u7684 Dockerfile \u7684\u540d\u79f0(\u9ed8\u8ba4\u4e3a Dockerfile) args # args: Dockerfile \u5728 build \u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u53c2\u6570 (\u7b49\u540c\u4e8e docker container build --build-arg \u7684\u4f5c\u7528) cache_from # v3.2\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u6307\u5b9a\u7f13\u5b58\u7684\u955c\u50cf\u5217\u8868 (\u7b49\u540c\u4e8e docker container build --cache_from \u7684\u4f5c\u7528) labels # v3.3\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u8bbe\u7f6e\u955c\u50cf\u7684\u5143\u6570\u636e (\u7b49\u540c\u4e8e docker container build --labels \u7684\u4f5c\u7528) shm_size # v3.5\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u8bbe\u7f6e\u5bb9\u5668 /dev/shm \u5206\u533a\u7684\u5927\u5c0f (\u7b49\u540c\u4e8e docker container build --shm-size \u7684\u4f5c\u7528) command # \u8986\u76d6\u5bb9\u5668\u542f\u52a8\u540e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4, \u652f\u6301 shell \u683c\u5f0f\u548c [] \u683c\u5f0f configs # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 cgroup_parent # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 container_name # \u6307\u5b9a\u5bb9\u5668\u7684\u540d\u79f0 (\u7b49\u540c\u4e8e docker run --name \u7684\u4f5c\u7528) credential_spec # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 deploy # v3 \u7248\u672c\u4ee5\u4e0a, \u6307\u5b9a\u4e0e\u90e8\u7f72\u548c\u8fd0\u884c\u670d\u52a1\u76f8\u5173\u7684\u914d\u7f6e, deploy \u90e8\u5206\u662f docker stack \u4f7f\u7528\u7684, docker stack \u4f9d\u8d56 docker swarm endpoint_mode # v3.3 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u529f\u80fd, \u6307\u5b9a\u670d\u52a1\u66b4\u9732\u7684\u65b9\u5f0f vip # Docker \u4e3a\u8be5\u670d\u52a1\u5206\u914d\u4e86\u4e00\u4e2a\u865a\u62df IP(VIP), \u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u8bbf\u95ee\u670d\u52a1\u7684\u5730\u5740 dnsrr # DNS\u8f6e\u8be2, Docker \u4e3a\u8be5\u670d\u52a1\u8bbe\u7f6e DNS \u6761\u76ee, \u4f7f\u5f97\u670d\u52a1\u540d\u79f0\u7684 DNS \u67e5\u8be2\u8fd4\u56de\u4e00\u4e2a IP \u5730\u5740\u5217\u8868, \u5ba2\u6237\u7aef\u76f4\u63a5\u8bbf\u95ee\u5176\u4e2d\u7684\u4e00\u4e2a\u5730\u5740 labels # \u6307\u5b9a\u670d\u52a1\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u4ec5\u5728\u670d\u52a1\u4e0a\u8bbe\u7f6e mode # \u6307\u5b9a deploy \u7684\u6a21\u5f0f global # \u6bcf\u4e2a\u96c6\u7fa4\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5bb9\u5668 replicated # \u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u96c6\u7fa4\u4e2d\u5bb9\u5668\u7684\u6570\u91cf(\u9ed8\u8ba4) placement # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 replicas # deploy \u7684 mode \u4e3a replicated \u65f6, \u6307\u5b9a\u5bb9\u5668\u526f\u672c\u7684\u6570\u91cf resources # \u8d44\u6e90\u9650\u5236 limits # \u8bbe\u7f6e\u5bb9\u5668\u7684\u8d44\u6e90\u9650\u5236 cpus: \"0.5\" # \u8bbe\u7f6e\u8be5\u5bb9\u5668\u6700\u591a\u53ea\u80fd\u4f7f\u7528 50% \u7684 CPU memory: 50M # \u8bbe\u7f6e\u8be5\u5bb9\u5668\u6700\u591a\u53ea\u80fd\u4f7f\u7528 50M \u7684\u5185\u5b58\u7a7a\u95f4 reservations # \u8bbe\u7f6e\u4e3a\u5bb9\u5668\u9884\u7559\u7684\u7cfb\u7edf\u8d44\u6e90(\u968f\u65f6\u53ef\u7528) cpus: \"0.2\" # \u4e3a\u8be5\u5bb9\u5668\u4fdd\u7559 20% \u7684 CPU memory: 20M # \u4e3a\u8be5\u5bb9\u5668\u4fdd\u7559 20M \u7684\u5185\u5b58\u7a7a\u95f4 restart_policy # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565, \u7528\u4e8e\u4ee3\u66ff restart \u53c2\u6570 condition # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565(\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570) none # \u4e0d\u5c1d\u8bd5\u91cd\u542f on-failure # \u53ea\u6709\u5f53\u5bb9\u5668\u5185\u90e8\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u95ee\u9898\u624d\u4f1a\u91cd\u542f any # \u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u5c1d\u8bd5\u91cd\u542f(\u9ed8\u8ba4) delay # \u5c1d\u8bd5\u91cd\u542f\u7684\u95f4\u9694\u65f6\u95f4(\u9ed8\u8ba4\u4e3a 0s) max_attempts # \u5c1d\u8bd5\u91cd\u542f\u6b21\u6570(\u9ed8\u8ba4\u4e00\u76f4\u5c1d\u8bd5\u91cd\u542f) window # \u68c0\u67e5\u91cd\u542f\u662f\u5426\u6210\u529f\u4e4b\u524d\u7684\u7b49\u5f85\u65f6\u95f4(\u5373\u5982\u679c\u5bb9\u5668\u542f\u52a8\u4e86, \u9694\u591a\u5c11\u79d2\u4e4b\u540e\u53bb\u68c0\u6d4b\u5bb9\u5668\u662f\u5426\u6b63\u5e38, \u9ed8\u8ba4 0s) update_config # \u7528\u4e8e\u914d\u7f6e\u6eda\u52a8\u66f4\u65b0\u914d\u7f6e parallelism # \u4e00\u6b21\u6027\u66f4\u65b0\u7684\u5bb9\u5668\u6570\u91cf delay # \u66f4\u65b0\u4e00\u7ec4\u5bb9\u5668\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4 failure_action # \u5b9a\u4e49\u66f4\u65b0\u5931\u8d25\u7684\u7b56\u7565 continue # \u7ee7\u7eed\u66f4\u65b0 rollback # \u56de\u6eda\u66f4\u65b0 pause # \u6682\u505c\u66f4\u65b0(\u9ed8\u8ba4) monitor # \u6bcf\u6b21\u66f4\u65b0\u540e\u7684\u6301\u7eed\u65f6\u95f4\u4ee5\u76d1\u89c6\u66f4\u65b0\u662f\u5426\u5931\u8d25(\u5355\u4f4d: ns|us|ms|s|m|h) (\u9ed8\u8ba4\u4e3a0) max_failure_ratio # \u56de\u6eda\u671f\u95f4\u5bb9\u5fcd\u7684\u5931\u8d25\u7387(\u9ed8\u8ba4\u503c\u4e3a0) order # v3.4 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u56de\u6eda\u671f\u95f4\u7684\u64cd\u4f5c\u987a\u5e8f stop-first #\u65e7\u4efb\u52a1\u5728\u542f\u52a8\u65b0\u4efb\u52a1\u4e4b\u524d\u505c\u6b62(\u9ed8\u8ba4) start-first #\u9996\u5148\u542f\u52a8\u65b0\u4efb\u52a1, \u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u65f6\u91cd\u53e0 rollback_config # v3.7 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u7528\u4e8e\u5b9a\u4e49\u5728 update_config \u66f4\u65b0\u5931\u8d25\u7684\u56de\u6eda\u7b56\u7565 parallelism # \u4e00\u6b21\u56de\u6eda\u7684\u5bb9\u5668\u6570, \u5982\u679c\u8bbe\u7f6e\u4e3a0, \u5219\u6240\u6709\u5bb9\u5668\u540c\u65f6\u56de\u6eda delay # \u6bcf\u4e2a\u7ec4\u56de\u6eda\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694(\u9ed8\u8ba4\u4e3a0) failure_action # \u5b9a\u4e49\u56de\u6eda\u5931\u8d25\u7684\u7b56\u7565 continue # \u7ee7\u7eed\u56de\u6eda pause # \u6682\u505c\u56de\u6eda monitor # \u6bcf\u6b21\u56de\u6eda\u4efb\u52a1\u540e\u7684\u6301\u7eed\u65f6\u95f4\u4ee5\u76d1\u89c6\u5931\u8d25(\u5355\u4f4d: ns|us|ms|s|m|h) (\u9ed8\u8ba4\u4e3a0) max_failure_ratio # \u56de\u6eda\u671f\u95f4\u5bb9\u5fcd\u7684\u5931\u8d25\u7387(\u9ed8\u8ba4\u503c0) order # \u56de\u6eda\u671f\u95f4\u7684\u64cd\u4f5c\u987a\u5e8f stop-first # \u65e7\u4efb\u52a1\u5728\u542f\u52a8\u65b0\u4efb\u52a1\u4e4b\u524d\u505c\u6b62(\u9ed8\u8ba4) start-first # \u9996\u5148\u542f\u52a8\u65b0\u4efb\u52a1, \u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u65f6\u91cd\u53e0 \u6ce8\u610f\uff1a \u652f\u6301 docker-compose up \u548c docker-compose run \u4f46\u4e0d\u652f\u6301 docker stack deploy \u7684\u5b50\u9009\u9879 security_opt container_name devices tmpfs stop_signal links cgroup_parent network_mode external_links restart build userns_mode sysctls devices # \u6307\u5b9a\u8bbe\u5907\u6620\u5c04\u5217\u8868 (\u7b49\u540c\u4e8e docker run --device \u7684\u4f5c\u7528) depends_on # \u5b9a\u4e49\u5bb9\u5668\u542f\u52a8\u987a\u5e8f (\u6b64\u9009\u9879\u89e3\u51b3\u4e86\u5bb9\u5668\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c \u6b64\u9009\u9879\u5728 v3 \u7248\u672c\u4e2d \u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) \u793a\u4f8b\uff1a docker-compose up \u4ee5\u4f9d\u8d56\u987a\u5e8f\u542f\u52a8\u670d\u52a1\uff0c\u4e0b\u9762\u4f8b\u5b50\u4e2d redis \u548c db \u670d\u52a1\u5728 web \u542f\u52a8\u524d\u542f\u52a8 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 docker-compose up web \u8fd9\u6837\u7684\u65b9\u5f0f\u542f\u52a8 web \u670d\u52a1\u65f6\uff0c\u4e5f\u4f1a\u542f\u52a8 redis \u548c db \u4e24\u4e2a\u670d\u52a1\uff0c\u56e0\u4e3a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4f9d\u8d56\u5173\u7cfb version: '3' services: web: build: . depends_on: - db - redis redis: image: redis db: image: postgres dns # \u8bbe\u7f6e DNS \u5730\u5740(\u7b49\u540c\u4e8e docker run --dns \u7684\u4f5c\u7528) dns_search # \u8bbe\u7f6e DNS \u641c\u7d22\u57df(\u7b49\u540c\u4e8e docker run --dns-search \u7684\u4f5c\u7528) tmpfs # v2 \u7248\u672c\u4ee5\u4e0a, \u6302\u8f7d\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d, \u4f5c\u4e3a\u5bb9\u5668\u7684\u4e34\u65f6\u6587\u4ef6\u7cfb\u7edf(\u7b49\u540c\u4e8e docker run --tmpfs \u7684\u4f5c\u7528, \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) entrypoint # \u8986\u76d6\u5bb9\u5668\u7684\u9ed8\u8ba4 entrypoint \u6307\u4ee4 (\u7b49\u540c\u4e8e docker run --entrypoint \u7684\u4f5c\u7528) env_file # \u4ece\u6307\u5b9a\u6587\u4ef6\u4e2d\u8bfb\u53d6\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5bb9\u5668\u4e2d\u7684\u73af\u5883\u53d8\u91cf, \u53ef\u4ee5\u662f\u5355\u4e2a\u503c\u6216\u8005\u4e00\u4e2a\u6587\u4ef6\u5217\u8868, \u5982\u679c\u591a\u4e2a\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u91cd\u540d\u5219\u540e\u9762\u7684\u53d8\u91cf\u8986\u76d6\u524d\u9762\u7684\u53d8\u91cf, environment \u7684\u503c\u8986\u76d6 env_file \u7684\u503c \u6587\u4ef6\u683c\u5f0f\uff1a RACK_ENV=development environment # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c environment \u7684\u503c\u53ef\u4ee5\u8986\u76d6 env_file \u7684\u503c (\u7b49\u540c\u4e8e docker run --env \u7684\u4f5c\u7528) expose # \u66b4\u9732\u7aef\u53e3, \u4f46\u662f\u4e0d\u80fd\u548c\u5bbf\u4e3b\u673a\u5efa\u7acb\u6620\u5c04\u5173\u7cfb, \u7c7b\u4f3c\u4e8e Dockerfile \u7684 EXPOSE \u6307\u4ee4 external_links # \u8fde\u63a5\u4e0d\u5728 docker-compose.yml \u4e2d\u5b9a\u4e49\u7684\u5bb9\u5668\u6216\u8005\u4e0d\u5728 compose \u7ba1\u7406\u7684\u5bb9\u5668(docker run \u542f\u52a8\u7684\u5bb9\u5668, \u5728 v3 \u7248\u672c\u4e2d\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) extra_hosts # \u6dfb\u52a0 host \u8bb0\u5f55\u5230\u5bb9\u5668\u4e2d\u7684 /etc/hosts \u4e2d (\u7b49\u540c\u4e8e docker run --add-host \u7684\u4f5c\u7528) healthcheck # v2.1 \u4ee5\u4e0a\u7248\u672c, \u5b9a\u4e49\u5bb9\u5668\u5065\u5eb7\u72b6\u6001\u68c0\u67e5, \u7c7b\u4f3c\u4e8e Dockerfile \u7684 HEALTHCHECK \u6307\u4ee4 test # \u68c0\u67e5\u5bb9\u5668\u68c0\u67e5\u72b6\u6001\u7684\u547d\u4ee4, \u8be5\u9009\u9879\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u8005\u5217\u8868, \u7b2c\u4e00\u9879\u5fc5\u987b\u662f NONE, CMD \u6216 CMD-SHELL, \u5982\u679c\u5176\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5219\u76f8\u5f53\u4e8e CMD-SHELL \u52a0\u8be5\u5b57\u7b26\u4e32 NONE # \u7981\u7528\u5bb9\u5668\u7684\u5065\u5eb7\u72b6\u6001\u68c0\u6d4b CMD # test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"] CMD-SHELL # test: [\"CMD-SHELL\", \"curl -f http://localhost || exit 1\"] \u6216\u8005\u3000test: curl -f https://localhost || exit 1 interval: 1m30s # \u6bcf\u6b21\u68c0\u67e5\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4 timeout: 10s # \u8fd0\u884c\u547d\u4ee4\u7684\u8d85\u65f6\u65f6\u95f4 retries: 3 # \u91cd\u8bd5\u6b21\u6570 start_period: 40s # v3.4 \u4ee5\u4e0a\u65b0\u589e\u7684\u9009\u9879, \u5b9a\u4e49\u5bb9\u5668\u542f\u52a8\u65f6\u95f4\u95f4\u9694 disable: true # true \u6216 false, \u8868\u793a\u662f\u5426\u7981\u7528\u5065\u5eb7\u72b6\u6001\u68c0\u6d4b\u548c\u3000test: NONE \u76f8\u540c image # \u6307\u5b9a docker \u955c\u50cf, \u53ef\u4ee5\u662f\u8fdc\u7a0b\u4ed3\u5e93\u955c\u50cf\u3001\u672c\u5730\u955c\u50cf init # v3.7 \u4e2d\u65b0\u589e\u7684\u53c2\u6570, true \u6216 false \u8868\u793a\u662f\u5426\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u4e00\u4e2a init, \u5b83\u63a5\u6536\u4fe1\u53f7\u5e76\u4f20\u9012\u7ed9\u8fdb\u7a0b isolation # \u9694\u79bb\u5bb9\u5668\u6280\u672f, \u5728 Linux \u4e2d\u4ec5\u652f\u6301 default \u503c labels # \u4f7f\u7528 Docker \u6807\u7b7e\u5c06\u5143\u6570\u636e\u6dfb\u52a0\u5230\u5bb9\u5668, \u4e0e Dockerfile \u4e2d\u7684 LABELS \u7c7b\u4f3c links # \u94fe\u63a5\u5230\u5176\u5b83\u670d\u52a1\u4e2d\u7684\u5bb9\u5668, \u8be5\u9009\u9879\u662f docker \u5386\u53f2\u9057\u7559\u7684\u9009\u9879, \u76ee\u524d\u5df2\u88ab\u7528\u6237\u81ea\u5b9a\u4e49\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u53d6\u4ee3, \u6700\u7ec8\u6709\u53ef\u80fd\u88ab\u5e9f\u5f03 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) logging # \u8bbe\u7f6e\u5bb9\u5668\u65e5\u5fd7\u670d\u52a1 driver # \u6307\u5b9a\u65e5\u5fd7\u8bb0\u5f55\u9a71\u52a8\u7a0b\u5e8f, \u9ed8\u8ba4 json-file (\u7b49\u540c\u4e8e docker run --log-driver \u7684\u4f5c\u7528) options # \u6307\u5b9a\u65e5\u5fd7\u7684\u76f8\u5173\u53c2\u6570 (\u7b49\u540c\u4e8e docker run --log-opt \u7684\u4f5c\u7528) max-size # \u8bbe\u7f6e\u5355\u4e2a\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f, \u5f53\u5230\u8fbe\u8fd9\u4e2a\u503c\u540e\u4f1a\u8fdb\u884c\u65e5\u5fd7\u6eda\u52a8\u64cd\u4f5c max-file # \u65e5\u5fd7\u6587\u4ef6\u4fdd\u7559\u7684\u6570\u91cf network_mode # \u6307\u5b9a\u7f51\u7edc\u6a21\u5f0f (\u7b49\u540c\u4e8e docker run --net \u7684\u4f5c\u7528, \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) networks # \u5c06\u5bb9\u5668\u52a0\u5165\u6307\u5b9a\u7f51\u7edc (\u7b49\u540c\u4e8e docker network connect \u7684\u4f5c\u7528), networks \u53ef\u4ee5\u4f4d\u4e8e compose \u6587\u4ef6\u9876\u7ea7\u952e\u548c services \u952e\u7684\u4e8c\u7ea7\u952e aliases # \u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u540d\u79f0\u6216\u522b\u540d\u8fde\u63a5\u5230\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u7684\u5bb9\u5668 ipv4_address # IP V4 \u683c\u5f0f ipv6_address # IP V6 \u683c\u5f0f \u793a\u4f8b: version: '3.7' services: test: image: nginx:1.14-alpine container_name: mynginx command: ifconfig networks: app_net: # \u8c03\u7528\u4e0b\u9762 networks \u5b9a\u4e49\u7684 app_net \u7f51\u7edc ipv4_address: 172.16.238.10 networks: app_net: driver: bridge ipam: driver: default config: - subnet: 172.16.238.0/24 pid: 'host' # \u5171\u4eab\u5bbf\u4e3b\u673a\u7684 \u8fdb\u7a0b\u7a7a\u95f4(PID) ports # \u5efa\u7acb\u5bbf\u4e3b\u673a\u548c\u5bb9\u5668\u4e4b\u95f4\u7684\u7aef\u53e3\u6620\u5c04\u5173\u7cfb, ports \u652f\u6301\u4e24\u79cd\u8bed\u6cd5\u683c\u5f0f SHORT \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b: - \"3000\" # \u66b4\u9732\u5bb9\u5668\u7684 3000 \u7aef\u53e3, \u5bbf\u4e3b\u673a\u7684\u7aef\u53e3\u7531 docker \u968f\u673a\u6620\u5c04\u4e00\u4e2a\u6ca1\u6709\u88ab\u5360\u7528\u7684\u7aef\u53e3 - \"3000-3005\" # \u66b4\u9732\u5bb9\u5668\u7684 3000 \u5230 3005 \u7aef\u53e3, \u5bbf\u4e3b\u673a\u7684\u7aef\u53e3\u7531 docker \u968f\u673a\u6620\u5c04\u6ca1\u6709\u88ab\u5360\u7528\u7684\u7aef\u53e3 - \"8000:8000\" # \u5bb9\u5668\u7684 8000 \u7aef\u53e3\u548c\u5bbf\u4e3b\u673a\u7684 8000 \u7aef\u53e3\u5efa\u7acb\u6620\u5c04\u5173\u7cfb - \"9090-9091:8080-8081\" - \"127.0.0.1:8001:8001\" # \u6307\u5b9a\u6620\u5c04\u5bbf\u4e3b\u673a\u7684\u6307\u5b9a\u5730\u5740\u7684 - \"127.0.0.1:5000-5010:5000-5010\" - \"6060:6060/udp\" # \u6307\u5b9a\u534f\u8bae LONG \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:(v3.2 \u65b0\u589e\u7684\u8bed\u6cd5\u683c\u5f0f) ports: - target: 80 # \u5bb9\u5668\u7aef\u53e3 published: 8080 # \u5bbf\u4e3b\u673a\u7aef\u53e3 protocol: tcp # \u534f\u8bae\u7c7b\u578b mode: host # host \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53d1\u5e03\u4e3b\u673a\u7aef\u53e3, ingress \u5bf9\u4e8e\u7fa4\u6a21\u5f0f\u7aef\u53e3\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861 secrets # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 security_opt # \u4e3a\u6bcf\u4e2a\u5bb9\u5668\u8986\u76d6\u9ed8\u8ba4\u7684\u6807\u7b7e (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) stop_grace_period # \u6307\u5b9a\u5728\u53d1\u9001\u4e86 SIGTERM \u4fe1\u53f7\u4e4b\u540e, \u5bb9\u5668\u7b49\u5f85\u591a\u5c11\u79d2\u4e4b\u540e\u9000\u51fa(\u9ed8\u8ba4 10s) stop_signal # \u6307\u5b9a\u505c\u6b62\u5bb9\u5668\u53d1\u9001\u7684\u4fe1\u53f7 (\u9ed8\u8ba4\u4e3a SIGTERM \u76f8\u5f53\u4e8e kill PID; SIGKILL \u76f8\u5f53\u4e8e kill -9 PID; \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) sysctls # \u8bbe\u7f6e\u5bb9\u5668\u4e2d\u7684\u5185\u6838\u53c2\u6570 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) ulimits # \u8bbe\u7f6e\u5bb9\u5668\u7684 limit userns_mode # \u5982\u679cDocker\u5b88\u62a4\u7a0b\u5e8f\u914d\u7f6e\u4e86\u7528\u6237\u540d\u79f0\u7a7a\u95f4, \u5219\u7981\u7528\u6b64\u670d\u52a1\u7684\u7528\u6237\u540d\u79f0\u7a7a\u95f4 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) volumes # \u5b9a\u4e49\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u7684\u5377\u6620\u5c04\u5173\u7cfb, \u5176\u548c networks \u4e00\u6837\u53ef\u4ee5\u4f4d\u4e8e services \u952e\u7684\u4e8c\u7ea7\u952e\u548c compose \u9876\u7ea7\u952e, \u5982\u679c\u9700\u8981\u8de8\u670d\u52a1\u95f4\u4f7f\u7528\u5219\u5728\u9876\u7ea7\u952e\u5b9a\u4e49, \u5728 services \u4e2d\u5f15\u7528 SHORT \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b: volumes: - /var/lib/mysql # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a\u7684\u4e00\u4e2a\u968f\u673a\u76ee\u5f55\u4e2d - /opt/data:/var/lib/mysql # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a\u7684 /opt/data - ./cache:/tmp/cache # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a compose \u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e - ~/configs:/etc/configs/:ro # \u6620\u5c04\u5bb9\u5668\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d\u53bb, \u6743\u9650\u53ea\u8bfb - datavolume:/var/lib/mysql # datavolume \u4e3a volumes \u9876\u7ea7\u952e\u5b9a\u4e49\u7684\u76ee\u5f55, \u5728\u6b64\u5904\u76f4\u63a5\u8c03\u7528 LONG \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:(v3.2 \u65b0\u589e\u7684\u8bed\u6cd5\u683c\u5f0f) version: \"3.2\" services: web: image: nginx:alpine ports: - \"80:80\" volumes: - type: volume # mount \u7684\u7c7b\u578b, \u5fc5\u987b\u662f bind\u3001volume \u6216 tmpfs source: mydata # \u5bbf\u4e3b\u673a\u76ee\u5f55 target: /data # \u5bb9\u5668\u76ee\u5f55 volume: # \u914d\u7f6e\u989d\u5916\u7684\u9009\u9879, \u5176 key \u5fc5\u987b\u548c type \u7684\u503c\u76f8\u540c nocopy: true # volume \u989d\u5916\u7684\u9009\u9879, \u5728\u521b\u5efa\u5377\u65f6\u7981\u7528\u4ece\u5bb9\u5668\u590d\u5236\u6570\u636e - type: bind # volume \u6a21\u5f0f\u53ea\u6307\u5b9a\u5bb9\u5668\u8def\u5f84\u5373\u53ef, \u5bbf\u4e3b\u673a\u8def\u5f84\u968f\u673a\u751f\u6210; bind \u9700\u8981\u6307\u5b9a\u5bb9\u5668\u548c\u6570\u636e\u673a\u7684\u6620\u5c04\u8def\u5f84 source: ./static target: /opt/app/static read_only: true # \u8bbe\u7f6e\u6587\u4ef6\u7cfb\u7edf\u4e3a\u53ea\u8bfb\u6587\u4ef6\u7cfb\u7edf volumes: mydata: # \u5b9a\u4e49\u5728 volume, \u53ef\u5728\u6240\u6709\u670d\u52a1\u4e2d\u8c03\u7528 restart # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565(\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879, \u5728 swarm \u4f7f\u7528 restart_policy \u4ee3\u66ff restart) no # \u7981\u6b62\u81ea\u52a8\u91cd\u542f\u5bb9\u5668(\u9ed8\u8ba4) always # \u65e0\u8bba\u5982\u4f55\u5bb9\u5668\u90fd\u4f1a\u91cd\u542f on-failure # \u5f53\u51fa\u73b0 on-failure \u62a5\u9519\u65f6, \u5bb9\u5668\u91cd\u65b0\u542f\u52a8 \u5176\u4ed6\u9009\u9879\uff1a domainname, hostname, ipc, mac_address, privileged, read_only, shm_size, stdin_open, tty, user, working_dir \u4e0a\u9762\u8fd9\u4e9b\u9009\u9879\u90fd\u53ea\u63a5\u53d7\u5355\u4e2a\u503c\u548c docker run \u7684\u5bf9\u5e94\u53c2\u6570\u7c7b\u4f3c \u5bf9\u4e8e\u503c\u4e3a\u65f6\u95f4\u7684\u53ef\u63a5\u53d7\u7684\u503c\uff1a 2.5s 10s 1m30s 2h32m 5h34m56s \u65f6\u95f4\u5355\u4f4d: us, ms, s, m\uff0c h \u5bf9\u4e8e\u503c\u4e3a\u5927\u5c0f\u7684\u53ef\u63a5\u53d7\u7684\u503c\uff1a 2b 1024kb 2048k 300m 1gb \u5355\u4f4d: b, k, m, g \u6216\u8005 kb, mb, gb networks # \u5b9a\u4e49 networks \u4fe1\u606f driver # \u6307\u5b9a\u7f51\u7edc\u6a21\u5f0f, \u5927\u591a\u6570\u60c5\u51b5\u4e0b, \u5b83 bridge \u4e8e\u5355\u4e2a\u4e3b\u673a\u548c overlay Swarm \u4e0a bridge # Docker \u9ed8\u8ba4\u4f7f\u7528 bridge \u8fde\u63a5\u5355\u4e2a\u4e3b\u673a\u4e0a\u7684\u7f51\u7edc overlay # overlay \u9a71\u52a8\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u8de8\u591a\u4e2a\u8282\u70b9\u547d\u540d\u7684\u7f51\u7edc host # \u5171\u4eab\u4e3b\u673a\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4(\u7b49\u540c\u4e8e docker run --net=host) none # \u7b49\u540c\u4e8e docker run --net=none driver_opts # v3.2\u4ee5\u4e0a\u7248\u672c, \u4f20\u9012\u7ed9\u9a71\u52a8\u7a0b\u5e8f\u7684\u53c2\u6570, \u8fd9\u4e9b\u53c2\u6570\u53d6\u51b3\u4e8e\u9a71\u52a8\u7a0b\u5e8f attachable # driver \u4e3a overlay \u65f6\u4f7f\u7528, \u5982\u679c\u8bbe\u7f6e\u4e3a true \u5219\u9664\u4e86\u670d\u52a1\u4e4b\u5916\uff0c\u72ec\u7acb\u5bb9\u5668\u4e5f\u53ef\u4ee5\u9644\u52a0\u5230\u8be5\u7f51\u7edc; \u5982\u679c\u72ec\u7acb\u5bb9\u5668\u8fde\u63a5\u5230\u8be5\u7f51\u7edc\uff0c\u5219\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6 Docker \u5b88\u62a4\u8fdb\u7a0b\u8fde\u63a5\u5230\u7684\u8be5\u7f51\u7edc\u7684\u670d\u52a1\u548c\u72ec\u7acb\u5bb9\u5668\u8fdb\u884c\u901a\u4fe1 ipam # \u81ea\u5b9a\u4e49 IPAM \u914d\u7f6e. \u8fd9\u662f\u4e00\u4e2a\u5177\u6709\u591a\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61, \u6bcf\u4e2a\u5c5e\u6027\u90fd\u662f\u53ef\u9009\u7684 driver # IPAM \u9a71\u52a8\u7a0b\u5e8f, bridge \u6216\u8005 default config # \u914d\u7f6e\u9879 subnet # CIDR\u683c\u5f0f\u7684\u5b50\u7f51\uff0c\u8868\u793a\u8be5\u7f51\u7edc\u7684\u7f51\u6bb5 external # \u5916\u90e8\u7f51\u7edc, \u5982\u679c\u8bbe\u7f6e\u4e3a true \u5219 docker-compose up \u4e0d\u4f1a\u5c1d\u8bd5\u521b\u5efa\u5b83, \u5982\u679c\u5b83\u4e0d\u5b58\u5728\u5219\u5f15\u53d1\u9519\u8bef name # v3.5 \u4ee5\u4e0a\u7248\u672c, \u4e3a\u6b64\u7f51\u7edc\u8bbe\u7f6e\u540d\u79f0 \u6587\u4ef6\u683c\u5f0f\u793a\u4f8b\uff1a version: \"3\" services: redis: image: redis:alpine ports: - \"6379\" networks: - frontend deploy: replicas: 2 update_config: parallelism: 2 delay: 10s restart_policy: condition: on-failure db: image: postgres:9.4 volumes: - db-data:/var/lib/postgresql/data networks: - backend deploy: placement: constraints: [node.role == manager]\u590d\u5236\u4ee3\u7801","title":"pinpoint"},{"location":"docker/pinpoint_compose/#pinpoint","text":"\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pinpoint-apm/pinpoint-docker pinpoint docker-compose \u90e8\u7f72\u6587\u4ef6 https://github.com/pinpoint-apm/pinpoint-docker/blob/master/docker-compose.yml version: \"3.6\" services: pinpoint-hbase: build: context: ./pinpoint-hbase/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_HBASE_NAME}\" image: \"pinpointdocker/pinpoint-hbase:${PINPOINT_VERSION}\" networks: - pinpoint volumes: - /home/pinpoint/hbase - /home/pinpoint/zookeeper expose: # HBase Master API port - \"60000\" # HBase Master Web UI - \"16010\" # Regionserver API port - \"60020\" # HBase Regionserver web UI - \"16030\" ports: - \"60000:60000\" - \"16010:16010\" - \"60020:60020\" - \"16030:16030\" restart: always depends_on: - zoo1 pinpoint-mysql: build: context: ./pinpoint-mysql/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: pinpoint-mysql restart: always image: \"pinpointdocker/pinpoint-mysql:${PINPOINT_VERSION}\" hostname: pinpoint-mysql ports: - \"3306:3306\" environment: - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD} - MYSQL_USER=${MYSQL_USER} - MYSQL_PASSWORD=${MYSQL_PASSWORD} - MYSQL_DATABASE=${MYSQL_DATABASE} volumes: - mysql_data:/var/lib/mysql networks: - pinpoint pinpoint-web: build: context: ./pinpoint-web/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_WEB_NAME}\" image: \"pinpointdocker/pinpoint-web:${PINPOINT_VERSION}\" depends_on: - pinpoint-hbase - pinpoint-mysql - zoo1 restart: always expose: - \"9997\" ports: - \"9997:9997\" - \"${SERVER_PORT:-8080}:${SERVER_PORT:-8080}\" environment: - SERVER_PORT=${SERVER_PORT} - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES},batch - PINPOINT_ZOOKEEPER_ADDRESS=${PINPOINT_ZOOKEEPER_ADDRESS} - CLUSTER_ENABLE=${CLUSTER_ENABLE} - ADMIN_PASSWORD=${ADMIN_PASSWORD} - CONFIG_SENDUSAGE=${CONFIG_SENDUSAGE} - LOGGING_LEVEL_ROOT=${WEB_LOGGING_LEVEL_ROOT} - CONFIG_SHOW_APPLICATIONSTAT=${CONFIG_SHOW_APPLICATIONSTAT} - BATCH_ENABLE=${BATCH_ENABLE} - BATCH_SERVER_IP=${BATCH_SERVER_IP} - BATCH_FLINK_SERVER=${BATCH_FLINK_SERVER} - JDBC_DRIVERCLASSNAME=${JDBC_DRIVERCLASSNAME} - JDBC_URL=${JDBC_URL} - JDBC_USERNAME=${JDBC_USERNAME} - JDBC_PASSWORD=${JDBC_PASSWORD} - ALARM_MAIL_SERVER_URL=${ALARM_MAIL_SERVER_URL} - ALARM_MAIL_SERVER_PORT=${ALARM_MAIL_SERVER_PORT} - ALARM_MAIL_SERVER_USERNAME=${ALARM_MAIL_SERVER_USERNAME} - ALARM_MAIL_SERVER_PASSWORD=${ALARM_MAIL_SERVER_PASSWORD} - ALARM_MAIL_SENDER_ADDRESS=${ALARM_MAIL_SENDER_ADDRESS} - ALARM_MAIL_TRANSPORT_PROTOCOL=${ALARM_MAIL_TRANSPORT_PROTOCOL} - ALARM_MAIL_SMTP_PORT=${ALARM_MAIL_SMTP_PORT} - ALARM_MAIL_SMTP_AUTH=${ALARM_MAIL_SMTP_AUTH} - ALARM_MAIL_SMTP_STARTTLS_ENABLE=${ALARM_MAIL_SMTP_STARTTLS_ENABLE} - ALARM_MAIL_SMTP_STARTTLS_REQUIRED=${ALARM_MAIL_SMTP_STARTTLS_REQUIRED} - ALARM_MAIL_DEBUG=${ALARM_MAIL_DEBUG} links: - \"pinpoint-mysql:pinpoint-mysql\" networks: - pinpoint pinpoint-collector: build: context: ./pinpoint-collector/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_COLLECTOR_NAME}\" image: \"pinpointdocker/pinpoint-collector:${PINPOINT_VERSION}\" depends_on: - pinpoint-hbase - zoo1 restart: always expose: - \"9991\" - \"9992\" - \"9993\" - \"9994\" - \"9995\" - \"9996\" ports: - \"${COLLECTOR_RECEIVER_GRPC_AGENT_PORT:-9991}:9991/tcp\" - \"${COLLECTOR_RECEIVER_GRPC_STAT_PORT:-9992}:9992/tcp\" - \"${COLLECTOR_RECEIVER_GRPC_SPAN_PORT:-9993}:9993/tcp\" - \"${COLLECTOR_RECEIVER_BASE_PORT:-9994}:9994\" - \"${COLLECTOR_RECEIVER_STAT_UDP_PORT:-9995}:9995/tcp\" - \"${COLLECTOR_RECEIVER_SPAN_UDP_PORT:-9996}:9996/tcp\" - \"${COLLECTOR_RECEIVER_STAT_UDP_PORT:-9995}:9995/udp\" - \"${COLLECTOR_RECEIVER_SPAN_UDP_PORT:-9996}:9996/udp\" networks: - pinpoint environment: - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES} - PINPOINT_ZOOKEEPER_ADDRESS=${PINPOINT_ZOOKEEPER_ADDRESS} - CLUSTER_ENABLE=${CLUSTER_ENABLE} - LOGGING_LEVEL_ROOT=${COLLECTOR_LOGGING_LEVEL_ROOT} - FLINK_CLUSTER_ENABLE=${FLINK_CLUSTER_ENABLE} - FLINK_CLUSTER_ZOOKEEPER_ADDRESS=${FLINK_CLUSTER_ZOOKEEPER_ADDRESS} pinpoint-quickstart: build: context: ./pinpoint-quickstart/ dockerfile: Dockerfile container_name: \"pinpoint-quickstart\" image: \"pinpointdocker/pinpoint-quickstart\" ports: - \"${APP_PORT:-8080}:8080\" volumes: - data-volume:/pinpoint-agent environment: JAVA_OPTS: \"-javaagent:/pinpoint-agent/pinpoint-bootstrap-${PINPOINT_VERSION}.jar -Dpinpoint.agentId=${AGENT_ID} -Dpinpoint.applicationName=${APP_NAME} -Dpinpoint.profiler.profiles.active=${SPRING_PROFILES}\" networks: - pinpoint depends_on: - pinpoint-agent pinpoint-agent: build: context: ./pinpoint-agent/ dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_AGENT_NAME}\" image: \"pinpointdocker/pinpoint-agent:${PINPOINT_VERSION}\" restart: unless-stopped networks: - pinpoint volumes: - data-volume:/pinpoint-agent environment: - SPRING_PROFILES=${SPRING_PROFILES} - COLLECTOR_IP=${COLLECTOR_IP} - PROFILER_TRANSPORT_AGENT_COLLECTOR_PORT=${PROFILER_TRANSPORT_AGENT_COLLECTOR_PORT} - PROFILER_TRANSPORT_METADATA_COLLECTOR_PORT=${PROFILER_TRANSPORT_METADATA_COLLECTOR_PORT} - PROFILER_TRANSPORT_STAT_COLLECTOR_PORT=${PROFILER_TRANSPORT_STAT_COLLECTOR_PORT} - PROFILER_TRANSPORT_SPAN_COLLECTOR_PORT=${PROFILER_TRANSPORT_SPAN_COLLECTOR_PORT} - PROFILER_SAMPLING_RATE=${PROFILER_SAMPLING_RATE} - DEBUG_LEVEL=${AGENT_DEBUG_LEVEL} - PROFILER_TRANSPORT_MODULE=${PROFILER_TRANSPORT_MODULE} depends_on: - pinpoint-collector #zookeepers zoo1: image: zookeeper:3.4 restart: always hostname: zoo1 expose: - \"2181\" - \"2888\" - \"3888\" ports: - \"2181\" environment: ZOO_MY_ID: 1 ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888 networks: - pinpoint zoo2: image: zookeeper:3.4 restart: always hostname: zoo2 expose: - \"2181\" - \"2888\" - \"3888\" ports: - \"2181\" environment: ZOO_MY_ID: 2 ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888 networks: - pinpoint zoo3: image: zookeeper:3.4 restart: always hostname: zoo3 expose: - \"2181\" - \"2888\" - \"3888\" ports: - \"2181\" environment: ZOO_MY_ID: 3 ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888 networks: - pinpoint ##flink jobmanager: build: context: pinpoint-flink dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_FLINK_NAME}-jobmanager\" image: \"pinpointdocker/pinpoint-flink:${PINPOINT_VERSION}\" expose: - \"6123\" ports: - \"${FLINK_WEB_PORT:-8081}:8081\" command: standalone-job -p 1 pinpoint-flink-job.jar -spring.profiles.active release environment: - JOB_MANAGER_RPC_ADDRESS=jobmanager - PINPOINT_ZOOKEEPER_ADDRESS=${PINPOINT_ZOOKEEPER_ADDRESS} networks: - pinpoint depends_on: - zoo1 taskmanager: build: context: pinpoint-flink dockerfile: Dockerfile args: - PINPOINT_VERSION=${PINPOINT_VERSION} container_name: \"${PINPOINT_FLINK_NAME}-taskmanager\" image: \"pinpointdocker/pinpoint-flink:${PINPOINT_VERSION}\" expose: - \"6121\" - \"6122\" - \"19994\" ports: - \"6121:6121\" - \"6122:6122\" - \"19994:19994\" depends_on: - zoo1 - jobmanager command: taskmanager links: - \"jobmanager:jobmanager\" environment: - JOB_MANAGER_RPC_ADDRESS=jobmanager networks: - pinpoint volumes: data-volume: mysql_data: networks: pinpoint: driver: bridge docker-compose\u4f1a\u9ed8\u8ba4\u8bfb\u53d6\u540c\u7ea7\u76ee\u5f55\u7684.env PINPOINT_VERSION=2.3.2 SPRING_PROFILES=release #zookeeper information required PINPOINT_ZOOKEEPER_ADDRESS=zoo1 ### Pinpoint-Hbase PINPOINT_HBASE_NAME=pinpoint-hbase #config for hbase in external docker ### Pinpoint-mysql MYSQL_ROOT_PASSWORD=root123 MYSQL_USER=admin MYSQL_PASSWORD=admin MYSQL_DATABASE=pinpoint ### Pinpoint-Web PINPOINT_WEB_NAME=pinpoint-web SERVER_PORT=8079 WEB_LOGGING_LEVEL_ROOT=INFO CLUSTER_ENABLE=true ADMIN_PASSWORD=admin #analytics CONFIG_SENDUSAGE=true #flink server information required if used BATCH_ENABLE=false BATCH_SERVER_IP=127.0.0.1 BATCH_FLINK_SERVER=pinpoint-flink-jobmanager CONFIG_SHOW_APPLICATIONSTAT=true #mysql information required if used JDBC_DRIVERCLASSNAME=com.mysql.jdbc.Driver JDBC_URL=jdbc:mysql://pinpoint-mysql:3306/pinpoint?characterEncoding=UTF-8 JDBC_USERNAME=admin JDBC_PASSWORD=admin #mail server information required if used ALARM_MAIL_SERVER_URL=smtp.gmail.com ALARM_MAIL_SERVER_PORT=587 ALARM_MAIL_SERVER_USERNAME=username ALARM_MAIL_SERVER_PASSWORD=password ALARM_MAIL_SENDER_ADDRESS=pinpoint_operator@pinpoint.com ALARM_MAIL_TRANSPORT_PROTOCOL=smtp ALARM_MAIL_SMTP_PORT=25 ALARM_MAIL_SMTP_AUTH=false ALARM_MAIL_SMTP_STARTTLS_ENABLE=false ALARM_MAIL_SMTP_STARTTLS_REQUIRED=false ALARM_MAIL_DEBUG=false ### Pinpoint-Collector PINPOINT_COLLECTOR_NAME=pinpoint-collector CLUSTER_ENABLE=true COLLECTOR_LOGGING_LEVEL_ROOT=INFO #grpc COLLECTOR_RECEIVER_GRPC_AGENT_PORT=9991 COLLECTOR_RECEIVER_GRPC_STAT_PORT=9992 COLLECTOR_RECEIVER_GRPC_SPAN_PORT=9993 #thrift COLLECTOR_RECEIVER_BASE_PORT=9994 COLLECTOR_RECEIVER_STAT_UDP_PORT=9995 COLLECTOR_RECEIVER_SPAN_UDP_PORT=9996 FLINK_CLUSTER_ENABLE=true FLINK_CLUSTER_ZOOKEEPER_ADDRESS=zoo1 ### Pinpoint-Agent PINPOINT_AGENT_NAME=pinpoint-agent #network module(GRPC,THRIFT) PROFILER_TRANSPORT_MODULE=GRPC #collector information required COLLECTOR_IP=pinpoint-collector PROFILER_TRANSPORT_AGENT_COLLECTOR_PORT=9991 PROFILER_TRANSPORT_METADATA_COLLECTOR_PORT=9991 PROFILER_TRANSPORT_STAT_COLLECTOR_PORT=9992 PROFILER_TRANSPORT_SPAN_COLLECTOR_PORT=9993 COLLECTOR_TCP_PORT=9994 COLLECTOR_STAT_PORT=9995 COLLECTOR_SPAN_PORT=9996 # Set sampling rate. If you set it to N, 1 out of N transaction will be sampled. PROFILER_SAMPLING_RATE=1 AGENT_ID=app-in-docker APP_NAME=quickapp AGENT_DEBUG_LEVEL=INFO ### Pinpoint-flink PINPOINT_FLINK_NAME=pinpoint-flink FLINK_WEB_PORT=8081 ### Pinpoint-quickstart APP_PORT=8000","title":"pinpoint"},{"location":"docker/pinpoint_compose/#_1","text":"Docker Compose \u5c06\u6240\u7ba1\u7406\u7684\u5bb9\u5668\u5206\u4e3a\u4e09\u5c42\uff0c\u5206\u522b\u662f\u5de5\u7a0b\uff08project\uff09\u3001\u670d\u52a1\uff08service\uff09\u3001\u5bb9\u5668\uff08container\uff09 Docker Compose \u8fd0\u884c\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff08docker-compose.yml\uff09\u7ec4\u6210\u4e00\u4e2a\u5de5\u7a0b,\u4e00\u4e2a\u5de5\u7a0b\u5305\u542b\u591a\u4e2a\u670d\u52a1\uff0c\u6bcf\u4e2a\u670d\u52a1\u4e2d\u5b9a\u4e49\u4e86\u5bb9\u5668\u8fd0\u884c\u7684\u955c\u50cf\u3001\u53c2\u6570\u3001\u4f9d\u8d56\uff0c\u4e00\u4e2a\u670d\u52a1\u53ef\u5305\u62ec\u591a\u4e2a\u5bb9\u5668\u5b9e\u4f8b","title":"\u5de5\u7a0b\u3001\u670d\u52a1\u3001\u5bb9\u5668"},{"location":"docker/pinpoint_compose/#docker-compose","text":"","title":"Docker Compose \u5e38\u7528\u547d\u4ee4\u4e0e\u914d\u7f6e"},{"location":"docker/pinpoint_compose/#_2","text":"ps \uff1a\u5217\u51fa\u6240\u6709\u8fd0\u884c\u5bb9\u5668 docker-compose ps logs \uff1a\u67e5\u770b\u670d\u52a1\u65e5\u5fd7\u8f93\u51fa docker-compose logs port \uff1a\u6253\u5370\u7ed1\u5b9a\u7684\u516c\u5171\u7aef\u53e3\uff0c\u4e0b\u9762\u547d\u4ee4\u53ef\u4ee5\u8f93\u51fa eureka \u670d\u52a1 8761 \u7aef\u53e3\u6240\u7ed1\u5b9a\u7684\u516c\u5171\u7aef\u53e3 docker-compose port eureka 8761 build \uff1a\u6784\u5efa\u6216\u8005\u91cd\u65b0\u6784\u5efa\u670d\u52a1 docker-compose build start \uff1a\u542f\u52a8\u6307\u5b9a\u670d\u52a1\u5df2\u5b58\u5728\u7684\u5bb9\u5668 docker-compose start eureka stop \uff1a\u505c\u6b62\u5df2\u8fd0\u884c\u7684\u670d\u52a1\u7684\u5bb9\u5668 docker-compose stop eureka rm \uff1a\u5220\u9664\u6307\u5b9a\u670d\u52a1\u7684\u5bb9\u5668 docker-compose rm eureka up \uff1a\u6784\u5efa\u3001\u542f\u52a8\u5bb9\u5668 docker-compose up kill \uff1a\u901a\u8fc7\u53d1\u9001 SIGKILL \u4fe1\u53f7\u6765\u505c\u6b62\u6307\u5b9a\u670d\u52a1\u7684\u5bb9\u5668 docker-compose kill eureka pull \uff1a\u4e0b\u8f7d\u670d\u52a1\u955c\u50cf scale \uff1a\u8bbe\u7f6e\u6307\u5b9a\u670d\u52a1\u8fd0\u6c14\u5bb9\u5668\u7684\u4e2a\u6570\uff0c\u4ee5 service=num \u5f62\u5f0f\u6307\u5b9a docker-compose scale user=3 movie=3 run \uff1a\u5728\u4e00\u4e2a\u670d\u52a1\u4e0a\u6267\u884c\u4e00\u4e2a\u547d\u4ee4 docker-compose run web bash","title":"\u5e38\u89c1\u547d\u4ee4"},{"location":"docker/pinpoint_compose/#docker-composeyml","text":"version \uff1a\u6307\u5b9a docker-compose.yml \u6587\u4ef6\u7684\u5199\u6cd5\u683c\u5f0f services \uff1a\u591a\u4e2a\u5bb9\u5668\u96c6\u5408 build \uff1a\u914d\u7f6e\u6784\u5efa\u65f6\uff0cCompose \u4f1a\u5229\u7528\u5b83\u81ea\u52a8\u6784\u5efa\u955c\u50cf\uff0c\u8be5\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7528\u4e8e\u6307\u5b9a Dockerfile \u53c2\u6570 build: ./dir --------------- build: context: ./dir dockerfile: Dockerfile args: buildno: 1 command \uff1a\u8986\u76d6\u5bb9\u5668\u542f\u52a8\u540e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4 command: bundle exec thin -p 3000 ---------------------------------- command: [bundle,exec,thin,-p,3000] dns \uff1a\u914d\u7f6e dns \u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u5217\u8868 dns: 8.8.8.8 ------------ dns: - 8.8.8.8 - 9.9.9.9 dns_search \uff1a\u914d\u7f6e DNS \u641c\u7d22\u57df\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u5217\u8868 dns_search: example.com ------------------------ dns_search: - dc1.example.com - dc2.example.com environment \uff1a\u73af\u5883\u53d8\u91cf\u914d\u7f6e\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u6216\u5b57\u5178\u4e24\u79cd\u65b9\u5f0f environment: RACK_ENV: development SHOW: 'ture' ------------------------- environment: - RACK_ENV=development - SHOW=ture env_file \uff1a\u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6587\u4ef6\u8def\u5f84\u6216\u8def\u5f84\u5217\u8868\uff0c\u5176\u4f18\u5148\u7ea7\u4f4e\u4e8e environment \u6307\u5b9a\u7684\u73af\u5883\u53d8\u91cf env_file: .env --------------- env_file: - ./common.env expose \uff1a\u66b4\u9732\u7aef\u53e3\uff0c\u53ea\u5c06\u7aef\u53e3\u66b4\u9732\u7ed9\u8fde\u63a5\u7684\u670d\u52a1\uff0c\u800c\u4e0d\u66b4\u9732\u7ed9\u4e3b\u673a expose: - \"3000\" - \"8000\" image \uff1a\u6307\u5b9a\u670d\u52a1\u6240\u4f7f\u7528\u7684\u955c\u50cf image: java network_mode \uff1a\u8bbe\u7f6e\u7f51\u7edc\u6a21\u5f0f network_mode: \"bridge\" network_mode: \"host\" network_mode: \"none\" network_mode: \"service:[service name]\" network_mode: \"container:[container name/id]\" ports \uff1a\u5bf9\u5916\u66b4\u9732\u7684\u7aef\u53e3\u5b9a\u4e49\uff0c\u548c expose \u5bf9\u5e94 ports: # \u66b4\u9732\u7aef\u53e3\u4fe1\u606f - \"\u5bbf\u4e3b\u673a\u7aef\u53e3:\u5bb9\u5668\u66b4\u9732\u7aef\u53e3\" - \"8763:8763\" - \"8763:8763\" links \uff1a\u5c06\u6307\u5b9a\u5bb9\u5668\u8fde\u63a5\u5230\u5f53\u524d\u8fde\u63a5\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u522b\u540d\uff0c\u907f\u514dip\u65b9\u5f0f\u5bfc\u81f4\u7684\u5bb9\u5668\u91cd\u542f\u52a8\u6001\u6539\u53d8\u7684\u65e0\u6cd5\u8fde\u63a5\u60c5\u51b5 links: # \u6307\u5b9a\u670d\u52a1\u540d\u79f0:\u522b\u540d - docker-compose-eureka-server:compose-eureka volumes \uff1a\u5377\u6302\u8f7d\u8def\u5f84 volumes: - /lib - /var logs \uff1a\u65e5\u5fd7\u8f93\u51fa\u4fe1\u606f --no-color \u5355\u8272\u8f93\u51fa\uff0c\u4e0d\u663e\u793a\u5176\u4ed6\u989c. -f, --follow \u8ddf\u8e2a\u65e5\u5fd7\u8f93\u51fa\uff0c\u5c31\u662f\u53ef\u4ee5\u5b9e\u65f6\u67e5\u770b\u65e5\u5fd7 -t, --timestamps \u663e\u793a\u65f6\u95f4\u6233 --tail \u4ece\u65e5\u5fd7\u7684\u7ed3\u5c3e\u663e\u793a\uff0c--tail=200","title":"docker-compose.yml \u5c5e\u6027"},{"location":"docker/pinpoint_compose/#docker-compose_1","text":"","title":"Docker Compose \u5176\u5b83"},{"location":"docker/pinpoint_compose/#_3","text":"\u5f53\u670d\u52a1\u7684\u914d\u7f6e\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u53ef\u4f7f\u7528 docker-compose up \u547d\u4ee4\u66f4\u65b0\u914d\u7f6e \u6b64\u65f6\uff0cCompose \u4f1a\u5220\u9664\u65e7\u5bb9\u5668\u5e76\u521b\u5efa\u65b0\u5bb9\u5668\uff0c\u65b0\u5bb9\u5668\u4f1a\u4ee5\u4e0d\u540c\u7684 IP \u5730\u5740\u52a0\u5165\u7f51\u7edc\uff0c\u540d\u79f0\u4fdd\u6301\u4e0d\u53d8\uff0c\u4efb\u4f55\u6307\u5411\u65e7\u5bb9\u8d77\u7684\u8fde\u63a5\u90fd\u4f1a\u88ab\u5173\u95ed\uff0c\u91cd\u65b0\u627e\u5230\u65b0\u5bb9\u5668\u5e76\u8fde\u63a5\u4e0a\u53bb","title":"\u66f4\u65b0\u5bb9\u5668"},{"location":"docker/pinpoint_compose/#links","text":"\u670d\u52a1\u4e4b\u95f4\u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u540d\u79f0\u76f8\u4e92\u8bbf\u95ee\uff0clinks \u5141\u8bb8\u5b9a\u4e49\u4e00\u4e2a\u522b\u540d\uff0c\u4ece\u800c\u4f7f\u7528\u8be5\u522b\u540d\u8bbf\u95ee\u5176\u5b83\u670d\u52a1 version: '2' services: web: build: . links: - \"db:database\" db: image: postgres \u8fd9\u6837 Web \u670d\u52a1\u5c31\u53ef\u4ee5\u4f7f\u7528 db \u6216 database \u4f5c\u4e3a hostname \u8bbf\u95ee db \u670d\u52a1\u4e86","title":"links"},{"location":"docker/pinpoint_compose/#restart","text":"\u91cd\u542f\u7b56\u7565 always \u2013 \u4e0d\u7ba1\u9000\u51fa\u72b6\u6001\u7801\u662f\u4ec0\u4e48\u59cb\u7ec8\u91cd\u542f\u5bb9\u5668\u3002\u5f53\u6307\u5b9aalways\u65f6\uff0cdocker daemon\u5c06\u65e0\u9650\u6b21\u6570\u5730\u91cd\u542f\u5bb9\u5668\u3002\u5bb9\u5668\u4e5f\u4f1a\u5728daemon\u542f\u52a8\u65f6\u5c1d\u8bd5\u91cd\u542f\uff0c\u4e0d\u7ba1\u5bb9\u5668\u5f53\u65f6\u7684\u72b6\u6001\u5982\u4f55\u3002 no \u2013 \u5bb9\u5668\u9000\u51fa\u65f6\u4e0d\u8981\u81ea\u52a8\u91cd\u542f\u3002\u8fd9\u4e2a\u662f\u9ed8\u8ba4\u503c\u3002 on-failure[:max-retries] \u2013 \u53ea\u5728\u5bb9\u5668\u4ee5\u975e0\u72b6\u6001\u7801\u9000\u51fa\u65f6\u91cd\u542f\u3002\u53ef\u9009\u7684\uff0c\u53ef\u4ee5\u9000\u51fadocker daemon\u5c1d\u8bd5\u91cd\u542f\u5bb9\u5668\u7684\u6b21\u6570\u3002 unless-stopped - \u4e0d\u7ba1\u9000\u51fa\u72b6\u6001\u7801\u662f\u4ec0\u4e48\u59cb\u7ec8\u91cd\u542f\u5bb9\u5668\uff0c\u4e0d\u8fc7\u5f53daemon\u542f\u52a8\u65f6\uff0c\u5982\u679c\u5bb9\u5668\u4e4b\u524d\u5df2\u7ecf\u4e3a\u505c\u6b62\u72b6\u6001\uff0c\u4e0d\u8981\u5c1d\u8bd5\u542f\u52a8\u5b83\u3002","title":"restart"},{"location":"docker/pinpoint_compose/#depends_on","text":"\u5728\u4f7f\u7528 Compose \u65f6\uff0c\u6700\u5927\u7684\u597d\u5904\u5c31\u662f\u5c11\u6253\u542f\u52a8\u547d\u4ee4\uff0c\u4f46\u662f\u4e00\u822c\u9879\u76ee\u5bb9\u5668\u542f\u52a8\u7684\u987a\u5e8f\u662f\u6709\u8981\u6c42\u7684\uff0c\u5982\u679c\u76f4\u63a5\u4ece\u4e0a\u5230\u4e0b\u542f\u52a8\u5bb9\u5668\uff0c\u5fc5\u7136\u4f1a\u56e0\u4e3a\u5bb9\u5668\u4f9d\u8d56\u95ee\u9898\u800c\u542f\u52a8\u5931\u8d25\u3002 \u4f8b\u5982\u5728\u6ca1\u542f\u52a8\u6570\u636e\u5e93\u5bb9\u5668\u7684\u65f6\u5019\u542f\u52a8\u4e86\u5e94\u7528\u5bb9\u5668\uff0c\u8fd9\u65f6\u5019\u5e94\u7528\u5bb9\u5668\u4f1a\u56e0\u4e3a\u627e\u4e0d\u5230\u6570\u636e\u5e93\u800c\u9000\u51fa\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u6807\u7b7e\uff0c\u5c31\u662f depends_on\uff0c\u8fd9\u4e2a\u6807\u7b7e\u89e3\u51b3\u4e86\u5bb9\u5668\u7684\u4f9d\u8d56\u3001\u542f\u52a8\u5148\u540e\u7684\u95ee\u9898\u3002 \u4f8b\u5982\u4e0b\u9762\u5bb9\u5668\u4f1a\u5148\u542f\u52a8 redis \u548c db \u4e24\u4e2a\u670d\u52a1\uff0c\u6700\u540e\u624d\u542f\u52a8 web \u670d\u52a1\uff1a version: '2' services: web: build: . depends_on: - db - redis redis: image: redis db: image: postgres \u6ce8\u610f\u7684\u662f\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 docker-compose up web \u8fd9\u6837\u7684\u65b9\u5f0f\u542f\u52a8 web \u670d\u52a1\u65f6\uff0c\u4e5f\u4f1a\u542f\u52a8 redis \u548c db \u4e24\u4e2a\u670d\u52a1\uff0c\u56e0\u4e3a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4f9d\u8d56\u5173\u7cfb\u3002 https://juejin.cn/post/6844903976534540296 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cCompose\u4f1a\u4e3a\u6211\u4eec\u7684\u5e94\u7528\u521b\u5efa\u4e00\u4e2a\u7f51\u7edc\uff0c\u670d\u52a1\u7684\u6bcf\u4e2a\u5bb9\u5668\u90fd\u4f1a\u52a0\u5165\u8be5\u7f51\u7edc\u4e2d\u3002\u8fd9\u6837\uff0c\u5bb9\u5668\u5c31\u53ef\u88ab\u8be5\u7f51\u7edc\u4e2d\u7684\u5176\u4ed6\u5bb9\u5668\u8bbf\u95ee\uff0c\u4e0d\u4ec5\u5982\u6b64\uff0c\u8be5\u5bb9\u5668\u8fd8\u80fd\u4ee5\u670d\u52a1\u540d\u79f0\u4f5c\u4e3ahostname\u88ab\u5176\u4ed6\u5bb9\u5668\u8bbf\u95ee\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u7f51\u7edc\u540d\u79f0\u57fa\u4e8eCompose\u7684\u5de5\u7a0b\u540d\u79f0\uff0c\u800c\u9879\u76ee\u540d\u79f0\u57fa\u4e8edocker-compose.yml\u6240\u5728\u76ee\u5f55\u7684\u540d\u79f0\u3002\u5982\u9700\u4fee\u6539\u5de5\u7a0b\u540d\u79f0\uff0c\u53ef\u4f7f\u7528--project-name\u6807\u8bc6\u6216COMPOSE_PORJECT_NAME\u73af\u5883\u53d8\u91cf\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u5982\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5728\u540d\u4e3amyapp\u7684\u76ee\u5f55\u4e2d\uff0c\u5e76\u4e14docker-compose.yml\u5982\u4e0b\u6240\u793a\uff1a version: '2' services: web: build: . ports: - \"8000:8000\" db: image: postgres \u590d\u5236\u4ee3\u7801 \u5f53\u6211\u4eec\u8fd0\u884cdocker-compose up\u65f6\uff0c\u5c06\u4f1a\u6267\u884c\u4ee5\u4e0b\u51e0\u6b65\uff1a \u521b\u5efa\u4e00\u4e2a\u540d\u4e3amyapp_default\u7684\u7f51\u7edc\uff1b \u4f7f\u7528web\u670d\u52a1\u7684\u914d\u7f6e\u521b\u5efa\u5bb9\u5668\uff0c\u5b83\u4ee5\u201cweb\u201d\u8fd9\u4e2a\u540d\u79f0\u52a0\u5165\u7f51\u7edcmyapp_default\uff1b \u4f7f\u7528db\u670d\u52a1\u7684\u914d\u7f6e\u521b\u5efa\u5bb9\u5668\uff0c\u5b83\u4ee5\u201cdb\u201d\u8fd9\u4e2a\u540d\u79f0\u52a0\u5165\u7f51\u7edcmyapp_default\u3002 \u5bb9\u5668\u95f4\u53ef\u4f7f\u7528\u670d\u52a1\u540d\u79f0\uff08web\u6216db\uff09\u4f5c\u4e3ahostname\u76f8\u4e92\u8bbf\u95ee\u3002\u4f8b\u5982\uff0cweb\u8fd9\u4e2a\u670d\u52a1\u53ef\u4f7f\u7528 postgres://db:5432 \u8bbf\u95eedb\u5bb9\u5668\u3002","title":"depends_on"},{"location":"docker/pinpoint_compose/#_4","text":"\u5f53\u670d\u52a1\u7684\u914d\u7f6e\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u53ef\u4f7f\u7528docker-compose up\u547d\u4ee4\u66f4\u65b0\u914d\u7f6e\u3002 \u6b64\u65f6\uff0cCompose\u4f1a\u5220\u9664\u65e7\u5bb9\u5668\u5e76\u521b\u5efa\u65b0\u5bb9\u5668\u3002\u65b0\u5bb9\u5668\u4f1a\u4ee5\u4e0d\u540c\u7684IP\u5730\u5740\u52a0\u5165\u7f51\u7edc\uff0c\u540d\u79f0\u4fdd\u6301\u4e0d\u53d8\u3002\u4efb\u4f55\u6307\u5411\u65e7\u5bb9\u5668\u7684\u8fde\u63a5\u90fd\u4f1a\u88ab\u5173\u95ed\uff0c\u5bb9\u5668\u4f1a\u91cd\u65b0\u627e\u5230\u65b0\u5bb9\u5668\u5e76\u8fde\u63a5\u4e0a\u53bb\u3002","title":"\u66f4\u65b0\u5bb9\u5668"},{"location":"docker/pinpoint_compose/#links_1","text":"\u524d\u6587\u8bb2\u8fc7\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u670d\u52a1\u4e4b\u95f4\u53ef\u4f7f\u7528\u670d\u52a1\u540d\u79f0\u76f8\u4e92\u8bbf\u95ee\u3002links\u5141\u8bb8\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u522b\u540d\uff0c\u4ece\u800c\u4f7f\u7528\u8be5\u522b\u540d\u8bbf\u95ee\u5176\u4ed6\u670d\u52a1\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff1a version: '2' services: web: build: . links: - \"db:database\" db: image: postgres \u590d\u5236\u4ee3\u7801 \u8fd9\u6837web\u670d\u52a1\u5c31\u53ef\u4f7f\u7528db\u6216database\u4f5c\u4e3ahostname\u8bbf\u95eedb\u670d\u52a1\u4e86\u3002","title":"links"},{"location":"docker/pinpoint_compose/#_5","text":"\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u9ed8\u8ba4\u7684\u7f51\u7edc\u914d\u7f6e\u6ee1\u8db3\u4e0d\u4e86\u6211\u4eec\u7684\u9700\u6c42\uff0c\u6b64\u65f6\u6211\u4eec\u53ef\u4f7f\u7528networks\u547d\u4ee4\u81ea\u5b9a\u4e49\u7f51\u7edc\u3002networks\u547d\u4ee4\u5141\u8bb8\u6211\u4eec\u521b\u5efa\u66f4\u52a0\u590d\u6742\u7684\u7f51\u7edc\u62d3\u6251\u5e76\u6307\u5b9a\u81ea\u5b9a\u4e49\u7f51\u7edc\u9a71\u52a8\u548c\u9009\u9879\u3002\u4e0d\u4ec5\u5982\u6b64\uff0c\u6211\u4eec\u8fd8\u53ef\u4f7f\u7528networks\u5c06\u670d\u52a1\u8fde\u63a5\u5230\u4e0d\u662f\u7531Compose\u7ba1\u7406\u7684\u3001\u5916\u90e8\u521b\u5efa\u7684\u7f51\u7edc\u3002 \u5982\u4e0b\uff0c\u6211\u4eec\u5728\u5176\u4e2d\u5b9a\u4e49\u4e86\u4e24\u4e2a\u81ea\u5b9a\u4e49\u7f51\u7edc\u3002 version: '2' services: proxy: build: ./proxy networks: - front app: build: ./app networks: - front - back db: image: postgres networks: - back networks: front: # Use a custom driver driver: custom-driver-1 back: # Use a custom driver which takes special options driver: custom-driver-2 driver_opts: foo: \"1\" bar: \"2\" \u590d\u5236\u4ee3\u7801 \u5176\u4e2d\uff0cproxy\u670d\u52a1\u4e0edb\u670d\u52a1\u9694\u79bb\uff0c\u4e24\u8005\u5206\u522b\u4f7f\u7528\u81ea\u5df1\u7684\u7f51\u7edc\uff1bapp\u670d\u52a1\u53ef\u4e0e\u4e24\u8005\u901a\u4fe1\u3002 \u7531\u672c\u4f8b\u4e0d\u96be\u53d1\u73b0\uff0c\u4f7f\u7528networks\u547d\u4ee4\uff0c\u5373\u53ef\u65b9\u4fbf\u5b9e\u73b0\u670d\u52a1\u95f4\u7684\u7f51\u7edc\u9694\u79bb\u4e0e\u8fde\u63a5\u3002","title":"\u6307\u5b9a\u81ea\u5b9a\u4e49\u7f51\u7edc"},{"location":"docker/pinpoint_compose/#_6","text":"\u9664\u81ea\u5b9a\u4e49\u7f51\u7edc\u5916\uff0c\u6211\u4eec\u4e5f\u53ef\u4e3a\u9ed8\u8ba4\u7f51\u7edc\u81ea\u5b9a\u4e49\u914d\u7f6e\u3002 version: '2' services: web: build: . ports: - \"8000:8000\" db: image: postgres networks: default: # Use a custom driver driver: custom-driver-1 \u590d\u5236\u4ee3\u7801 \u8fd9\u6837\uff0c\u5c31\u53ef\u4e3a\u8be5\u5e94\u7528\u6307\u5b9a\u81ea\u5b9a\u4e49\u7684\u7f51\u7edc\u9a71\u52a8\u3002","title":"\u914d\u7f6e\u9ed8\u8ba4\u7f51\u7edc"},{"location":"docker/pinpoint_compose/#_7","text":"\u4e00\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u521b\u5efa\u65b0\u7684\u7f51\u7edc\uff0c\u800c\u53ea\u9700\u52a0\u5165\u5df2\u5b58\u5728\u7684\u7f51\u7edc\uff0c\u6b64\u65f6\u53ef\u4f7f\u7528external\u9009\u9879\u3002\u793a\u4f8b\uff1a networks: default: external: name: my-pre-existing-network\u590d\u5236\u4ee3\u7801","title":"\u4f7f\u7528\u5df2\u5b58\u5728\u7684\u7f51\u7edc"},{"location":"docker/pinpoint_compose/#docker-compose_2","text":"\u5728Docker\u4e2d\uff0c\u5bb9\u5668\u4e4b\u95f4\u7684\u94fe\u63a5\u662f\u4e00\u79cd\u5f88\u5e38\u89c1\u7684\u64cd\u4f5c\uff1a\u5b83\u63d0\u4f9b\u4e86\u8bbf\u95ee\u5176\u4e2d\u7684\u67d0\u4e2a\u5bb9\u5668\u7684\u7f51\u7edc\u670d\u52a1\u800c\u4e0d\u9700\u8981\u5c06\u6240\u9700\u7684\u7aef\u53e3\u66b4\u9732\u7ed9Docker Host\u4e3b\u673a\u7684\u529f\u80fd\u3002Docker Compose\u4e2d\u5bf9\u8be5\u7279\u6027\u7684\u652f\u6301\u540c\u6837\u662f\u5f88\u65b9\u4fbf\u7684\u3002\u7136\u800c\uff0c\u5982\u679c\u9700\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u6ca1\u6709\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a docker-compose.yml \u4e2d\u7684\u65f6\u5019\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u7a0d\u5fae\u9ebb\u70e6\u590d\u6742\u4e86\u70b9\u3002 \u5728\u4e0d\u4f7f\u7528Docker Compose\u7684\u65f6\u5019\uff0c\u5c06\u4e24\u4e2a\u5bb9\u5668\u94fe\u63a5\u8d77\u6765\u4f7f\u7528 \u2014link \u53c2\u6570\uff0c\u76f8\u5bf9\u6765\u8bf4\u6bd4\u8f83\u7b80\u5355\uff0c\u4ee5 nginx \u955c\u50cf\u4e3a\u4f8b\u5b50\uff1a docker run --rm --name test1 -d nginx #\u5f00\u542f\u4e00\u4e2a\u5b9e\u4f8btest1 docker run --rm --name test2 --link test1 -d nginx #\u5f00\u542f\u4e00\u4e2a\u5b9e\u4f8btest2\u5e76\u4e0etest1\u5efa\u7acb\u94fe\u63a5 \u590d\u5236\u4ee3\u7801 \u8fd9\u6837\uff0c test2 \u4e0e test1 \u4fbf\u5efa\u7acb\u4e86\u94fe\u63a5\uff0c\u5c31\u53ef\u4ee5\u5728 test2 \u4e2d\u4f7f\u7528\u8bbf\u95ee test1 \u4e2d\u7684\u670d\u52a1\u4e86\u3002 \u5982\u679c\u4f7f\u7528Docker Compose\uff0c\u90a3\u4e48\u8fd9\u4e2a\u4e8b\u60c5\u5c31\u66f4\u7b80\u5355\u4e86\uff0c\u8fd8\u662f\u4ee5\u4e0a\u9762\u7684 nginx \u955c\u50cf\u4e3a\u4f8b\u5b50\uff0c\u7f16\u8f91 docker-compose.yml \u6587\u4ef6\u4e3a\uff1a version: \"3\" services: test2: image: nginx depends_on: - test1 links: - test1 test1: image: nginx \u590d\u5236\u4ee3\u7801 \u6700\u7ec8\u6548\u679c\u4e0e\u4f7f\u7528\u666e\u901a\u7684Docker\u547d\u4ee4 docker run xxxx \u5efa\u7acb\u7684\u94fe\u63a5\u5e76\u65e0\u533a\u522b\u3002\u8fd9\u53ea\u662f\u4e00\u79cd\u6700\u4e3a\u7406\u60f3\u7684\u60c5\u51b5\u3002 \u5982\u679c\u5bb9\u5668\u6ca1\u6709\u5b9a\u4e49\u5728\u540c\u4e00\u4e2a docker-compose.yml \u6587\u4ef6\u4e2d\uff0c\u5e94\u8be5\u5982\u4f55\u94fe\u63a5\u5b83\u4eec\u5462\uff1f \u53c8\u5982\u679c\u5b9a\u4e49\u5728 docker-compose.yml \u6587\u4ef6\u4e2d\u7684\u5bb9\u5668\u9700\u8981\u4e0e docker run xxx \u542f\u52a8\u7684\u5bb9\u5668\u94fe\u63a5\uff0c\u9700\u8981\u5982\u4f55\u5904\u7406\uff1f \u9488\u5bf9\u8fd9\u4e24\u79cd\u5178\u578b\u7684\u60c5\u51b5\uff0c\u4e0b\u9762\u7ed9\u51fa\u6211\u4e2a\u4eba\u6d4b\u8bd5\u53ef\u884c\u7684\u529e\u6cd5\uff1a","title":"Docker Compose \u94fe\u63a5\u5916\u90e8\u5bb9\u5668\u7684\u51e0\u79cd\u65b9\u5f0f"},{"location":"docker/pinpoint_compose/#_8","text":"\u6211\u4eec\u8fd8\u662f\u4f7f\u7528nginx\u955c\u50cf\u6765\u6a21\u62df\u8fd9\u6837\u7684\u4e00\u4e2a\u60c5\u666f\uff1a\u5047\u8bbe\u6211\u4eec\u9700\u8981\u5c06\u4e24\u4e2a\u4f7f\u7528Docker Compose\u7ba1\u7406\u7684nignx\u5bb9\u5668\uff08 test1 \u548c test2 \uff09\u94fe\u63a5\u8d77\u6765\uff0c\u4f7f\u5f97 test2 \u80fd\u591f\u8bbf\u95ee test1 \u4e2d\u63d0\u4f9b\u7684\u670d\u52a1\uff0c\u8fd9\u91cc\u6211\u4eec\u4ee5\u80fdping\u901a\u4e3a\u51c6\u3002 \u9996\u5148\uff0c\u6211\u4eec\u5b9a\u4e49\u5bb9\u5668 test1 \u7684 docker-compose.yml \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a version: \"3\" services: test2: image: nginx container_name: test1 networks: - default - app_net networks: app_net: external: true \u590d\u5236\u4ee3\u7801 \u5bb9\u5668 test2 \u5185\u5bb9\u4e0e test1 \u57fa\u672c\u4e00\u6837\uff0c\u53ea\u662f\u591a\u4e86\u4e00\u4e2a external_links ,\u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff1a \u6700\u8fd1\u53d1\u5e03\u7684Docker\u7248\u672c\u5df2\u7ecf\u4e0d\u9700\u8981\u4f7f\u7528external_links\u6765\u94fe\u63a5\u5bb9\u5668\uff0c\u5bb9\u5668\u7684DNS\u670d\u52a1\u53ef\u4ee5\u6b63\u786e\u7684\u4f5c\u51fa\u5224\u65ad \uff0c\u56e0\u6b64\u5982\u679c\u4f60\u4f60\u9700\u8981\u517c\u5bb9\u8f83\u8001\u7248\u672c\u7684Docker\u7684\u8bdd\uff0c\u90a3\u4e48\u5bb9\u5668 test2 \u7684 docker-compose.yml \u6587\u4ef6\u5185\u5bb9\u4e3a\uff1a version: \"3\" services: test2: image: nginx networks: - default - app_net external_links: - test1 container_name: test2 networks: app_net: external: true\u590d\u5236\u4ee3\u7801 \u5426\u5219\u7684\u8bdd\uff0c test2 \u7684 docker-compose.yml \u548c test1 \u7684\u5b9a\u4e49\u5b8c\u5168\u4e00\u81f4\uff0c\u4e0d\u9700\u8981\u989d\u5916\u591a\u6307\u5b9a\u4e00\u4e2a external_links \u3002\u76f8\u5173\u7684\u95ee\u9898\u8bf7\u53c2\u89c1stackoverflow\u4e0a\u7684\u76f8\u5173\u95ee\u9898\uff1a docker-compose + external container \u6b63\u5982\u4f60\u770b\u5230\u7684\u90a3\u6837\uff0c\u8fd9\u91cc\u4e24\u4e2a\u5bb9\u5668\u7684\u5b9a\u4e49\u91cc\u90fd\u4f7f\u7528\u4e86\u540c\u4e00\u4e2a\u5916\u90e8\u7f51\u7edc app_net ,\u56e0\u6b64\uff0c\u6211\u4eec\u9700\u8981\u5728\u542f\u52a8\u8fd9\u4e24\u4e2a\u5bb9\u5668\u4e4b\u524d\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u518d\u521b\u5efa\u5916\u90e8\u7f51\u7edc\uff1a docker network create app_net\u590d\u5236\u4ee3\u7801 \u4e4b\u540e\uff0c\u901a\u8fc7 docker-compose up -d \u547d\u4ee4\u542f\u52a8\u8fd9\u4e24\u4e2a\u5bb9\u5668\uff0c\u7136\u540e\u6267\u884c docker exec -it test2 ping test1 ,\u4f60\u5c06\u4f1a\u770b\u5230\u5982\u4e0b\u7684\u8f93\u51fa\uff1a docker exec -it test2 ping test1 PING test1 (172.18.0.2): 56 data bytes 64 bytes from 172.18.0.2: icmp_seq=0 ttl=64 time=0.091 ms 64 bytes from 172.18.0.2: icmp_seq=1 ttl=64 time=0.146 ms 64 bytes from 172.18.0.2: icmp_seq=2 ttl=64 time=0.150 ms 64 bytes from 172.18.0.2: icmp_seq=3 ttl=64 time=0.145 ms 64 bytes from 172.18.0.2: icmp_seq=4 ttl=64 time=0.126 ms 64 bytes from 172.18.0.2: icmp_seq=5 ttl=64 time=0.147 ms \u590d\u5236\u4ee3\u7801 \u8bc1\u660e\u8fd9\u4e24\u4e2a\u5bb9\u5668\u662f\u6210\u529f\u94fe\u63a5\u4e86\uff0c\u53cd\u8fc7\u6765\u5728 test1 \u4e2dping test2 \u4e5f\u662f\u80fd\u591f\u6b63\u5e38ping\u901a\u7684\u3002 \u5982\u679c\u6211\u4eec\u901a\u8fc7 docker run --rm --name test3 -d nginx \u8fd9\u79cd\u65b9\u5f0f\u6765\u5148\u542f\u52a8\u4e86\u4e00\u4e2a\u5bb9\u5668( test3 )\u5e76\u4e14\u6ca1\u6709\u6307\u5b9a\u5b83\u6240\u5c5e\u7684\u5916\u90e8\u7f51\u7edc\uff0c\u800c\u9700\u8981\u5c06\u5176\u4e0e test1 \u6216\u8005 test2 \u94fe\u63a5\u7684\u8bdd\uff0c\u8fd9\u4e2a\u65f6\u5019\u624b\u52a8\u94fe\u63a5\u5916\u90e8\u7f51\u7edc\u5373\u53ef\uff1a docker network connect app_net test3\u590d\u5236\u4ee3\u7801 \u8fd9\u6837\uff0c\u4e09\u4e2a\u5bb9\u5668\u90fd\u53ef\u4ee5\u76f8\u4e92\u8bbf\u95ee\u4e86\u3002","title":"\u65b9\u5f0f\u4e00\uff1a\u8ba9\u9700\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u540c\u5c5e\u4e00\u4e2a\u5916\u90e8\u7f51\u7edc"},{"location":"docker/pinpoint_compose/#_9","text":"\u901a\u8fc7\u66f4\u6539\u4f60\u60f3\u8981\u76f8\u4e92\u94fe\u63a5\u7684\u5bb9\u5668\u7684\u7f51\u7edc\u6a21\u5f0f\u4e3a bridge ,\u5e76\u6307\u5b9a\u9700\u8981\u94fe\u63a5\u7684\u5916\u90e8\u5bb9\u5668\uff08 external_links )\u5373\u53ef\u3002\u4e0e\u540c\u5c5e\u5916\u90e8\u7f51\u7edc\u7684\u5bb9\u5668\u53ef\u4ee5\u76f8\u4e92\u8bbf\u95ee\u7684\u94fe\u63a5\u65b9\u5f0f\u4e00\u4e0d\u540c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u7684\u8bbf\u95ee\u662f\u5355\u5411\u7684\u3002 \u8fd8\u662f\u4ee5nginx\u5bb9\u5668\u955c\u50cf\u4e3a\u4f8b\u5b50\uff0c\u5982\u679c\u5bb9\u5668\u5b9e\u4f8b nginx1 \u9700\u8981\u8bbf\u95ee\u5bb9\u5668\u5b9e\u4f8b nginx2 \uff0c\u90a3\u4e48 nginx2 \u7684 doker-compose.yml \u5b9a\u4e49\u4e3a\uff1a version: \"3\" services: nginx2: image: nginx container_name: nginx2 network_mode: bridge \u590d\u5236\u4ee3\u7801 \u4e0e\u5176\u5bf9\u5e94\u7684\uff0c nginx1 \u7684 docker-compose.yml \u5b9a\u4e49\u4e3a\uff1a version: \"3\" services: nginx1: image: nginx external_links: - nginx2 container_name: nginx1 network_mode: bridge \u590d\u5236\u4ee3\u7801 \u9700\u8981\u7279\u522b\u8bf4\u660e\u7684\u662f\uff0c\u8fd9\u91cc\u7684 external_links \u662f\u4e0d\u80fd\u7701\u7565\u7684\uff0c\u800c\u4e14 nginx1 \u7684\u542f\u52a8\u5fc5\u987b\u8981\u5728 nginx2 \u4e4b\u540e\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u62a5\u627e\u4e0d\u5230\u5bb9\u5668 nginx2 \u7684\u9519\u8bef\u3002 \u63a5\u7740\u6211\u4eec\u4f7f\u7528ping\u6765\u6d4b\u8bd5\u4e0b\u8fde\u901a\u6027\uff1a $ docker exec -it nginx1 ping nginx2 # nginx1 to nginx2 PING nginx2 (172.17.0.4): 56 data bytes 64 bytes from 172.17.0.4: icmp_seq=0 ttl=64 time=0.141 ms 64 bytes from 172.17.0.4: icmp_seq=1 ttl=64 time=0.139 ms 64 bytes from 172.17.0.4: icmp_seq=2 ttl=64 time=0.145 ms $ docker exec -it nginx2 ping nginx1 #nginx2 to nginx1 ping: unknown host\u590d\u5236\u4ee3\u7801 \u4ee5\u4e0a\u4e5f\u80fd\u5145\u5206\u8bc1\u660e\u8fd9\u79cd\u65b9\u5f0f\u662f\u5c5e\u4e8e\u5355\u5411\u8054\u901a\u7684\u3002 \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\u6839\u636e\u81ea\u5df1\u7684\u9700\u8981\u7075\u6d3b\u7684\u9009\u62e9\u8fd9\u4e24\u79cd\u94fe\u63a5\u65b9\u5f0f\uff0c\u5982\u679c\u60f3\u5077\u61d2\u7684\u8bdd\uff0c\u5927\u53ef\u9009\u62e9\u7b2c\u4e8c\u79cd\u3002\u4e0d\u8fc7\u6211\u66f4\u63a8\u8350\u7b2c\u4e00\u79cd\uff0c\u4e0d\u96be\u770b\u51fa\u65e0\u8bba\u662f\u8054\u901a\u6027\u8fd8\u662f\u7075\u6d3b\u6027\uff0c\u8f83\u4e3a\u66f4\u6539\u7f51\u7edc\u6a21\u5f0f\u7684\u7b2c\u4e8c\u79cd\u90fd\u66f4\u4e3a\u53cb\u597d\u3002 \u9644docker-compose.yml\u6587\u4ef6\u8be6\u89e3 Compose\u548cDocker\u517c\u5bb9\u6027\uff1a Compose \u6587\u4ef6\u683c\u5f0f\u67093\u4e2a\u7248\u672c,\u5206\u522b\u4e3a1, 2.x \u548c 3.x \u76ee\u524d\u4e3b\u6d41\u7684\u4e3a 3.x \u5176\u652f\u6301 docker 1.13.0 \u53ca\u5176\u4ee5\u4e0a\u7684\u7248\u672c \u5e38\u7528\u53c2\u6570\uff1a version # \u6307\u5b9a compose \u6587\u4ef6\u7684\u7248\u672c services # \u5b9a\u4e49\u6240\u6709\u7684 service \u4fe1\u606f, services \u4e0b\u9762\u7684\u7b2c\u4e00\u7ea7\u522b\u7684 key \u65e2\u662f\u4e00\u4e2a service \u7684\u540d\u79f0 build # \u6307\u5b9a\u5305\u542b\u6784\u5efa\u4e0a\u4e0b\u6587\u7684\u8def\u5f84, \u6216\u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u5177\u6709 context \u548c\u6307\u5b9a\u7684 dockerfile \u6587\u4ef6\u4ee5\u53ca args \u53c2\u6570\u503c context # context: \u6307\u5b9a Dockerfile \u6587\u4ef6\u6240\u5728\u7684\u8def\u5f84 dockerfile # dockerfile: \u6307\u5b9a context \u6307\u5b9a\u7684\u76ee\u5f55\u4e0b\u9762\u7684 Dockerfile \u7684\u540d\u79f0(\u9ed8\u8ba4\u4e3a Dockerfile) args # args: Dockerfile \u5728 build \u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u53c2\u6570 (\u7b49\u540c\u4e8e docker container build --build-arg \u7684\u4f5c\u7528) cache_from # v3.2\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u6307\u5b9a\u7f13\u5b58\u7684\u955c\u50cf\u5217\u8868 (\u7b49\u540c\u4e8e docker container build --cache_from \u7684\u4f5c\u7528) labels # v3.3\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u8bbe\u7f6e\u955c\u50cf\u7684\u5143\u6570\u636e (\u7b49\u540c\u4e8e docker container build --labels \u7684\u4f5c\u7528) shm_size # v3.5\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u8bbe\u7f6e\u5bb9\u5668 /dev/shm \u5206\u533a\u7684\u5927\u5c0f (\u7b49\u540c\u4e8e docker container build --shm-size \u7684\u4f5c\u7528) command # \u8986\u76d6\u5bb9\u5668\u542f\u52a8\u540e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4, \u652f\u6301 shell \u683c\u5f0f\u548c [] \u683c\u5f0f configs # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 cgroup_parent # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 container_name # \u6307\u5b9a\u5bb9\u5668\u7684\u540d\u79f0 (\u7b49\u540c\u4e8e docker run --name \u7684\u4f5c\u7528) credential_spec # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 deploy # v3 \u7248\u672c\u4ee5\u4e0a, \u6307\u5b9a\u4e0e\u90e8\u7f72\u548c\u8fd0\u884c\u670d\u52a1\u76f8\u5173\u7684\u914d\u7f6e, deploy \u90e8\u5206\u662f docker stack \u4f7f\u7528\u7684, docker stack \u4f9d\u8d56 docker swarm endpoint_mode # v3.3 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u529f\u80fd, \u6307\u5b9a\u670d\u52a1\u66b4\u9732\u7684\u65b9\u5f0f vip # Docker \u4e3a\u8be5\u670d\u52a1\u5206\u914d\u4e86\u4e00\u4e2a\u865a\u62df IP(VIP), \u4f5c\u4e3a\u5ba2\u6237\u7aef\u7684\u8bbf\u95ee\u670d\u52a1\u7684\u5730\u5740 dnsrr # DNS\u8f6e\u8be2, Docker \u4e3a\u8be5\u670d\u52a1\u8bbe\u7f6e DNS \u6761\u76ee, \u4f7f\u5f97\u670d\u52a1\u540d\u79f0\u7684 DNS \u67e5\u8be2\u8fd4\u56de\u4e00\u4e2a IP \u5730\u5740\u5217\u8868, \u5ba2\u6237\u7aef\u76f4\u63a5\u8bbf\u95ee\u5176\u4e2d\u7684\u4e00\u4e2a\u5730\u5740 labels # \u6307\u5b9a\u670d\u52a1\u7684\u6807\u7b7e\uff0c\u8fd9\u4e9b\u6807\u7b7e\u4ec5\u5728\u670d\u52a1\u4e0a\u8bbe\u7f6e mode # \u6307\u5b9a deploy \u7684\u6a21\u5f0f global # \u6bcf\u4e2a\u96c6\u7fa4\u8282\u70b9\u90fd\u53ea\u6709\u4e00\u4e2a\u5bb9\u5668 replicated # \u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u96c6\u7fa4\u4e2d\u5bb9\u5668\u7684\u6570\u91cf(\u9ed8\u8ba4) placement # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 replicas # deploy \u7684 mode \u4e3a replicated \u65f6, \u6307\u5b9a\u5bb9\u5668\u526f\u672c\u7684\u6570\u91cf resources # \u8d44\u6e90\u9650\u5236 limits # \u8bbe\u7f6e\u5bb9\u5668\u7684\u8d44\u6e90\u9650\u5236 cpus: \"0.5\" # \u8bbe\u7f6e\u8be5\u5bb9\u5668\u6700\u591a\u53ea\u80fd\u4f7f\u7528 50% \u7684 CPU memory: 50M # \u8bbe\u7f6e\u8be5\u5bb9\u5668\u6700\u591a\u53ea\u80fd\u4f7f\u7528 50M \u7684\u5185\u5b58\u7a7a\u95f4 reservations # \u8bbe\u7f6e\u4e3a\u5bb9\u5668\u9884\u7559\u7684\u7cfb\u7edf\u8d44\u6e90(\u968f\u65f6\u53ef\u7528) cpus: \"0.2\" # \u4e3a\u8be5\u5bb9\u5668\u4fdd\u7559 20% \u7684 CPU memory: 20M # \u4e3a\u8be5\u5bb9\u5668\u4fdd\u7559 20M \u7684\u5185\u5b58\u7a7a\u95f4 restart_policy # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565, \u7528\u4e8e\u4ee3\u66ff restart \u53c2\u6570 condition # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565(\u63a5\u53d7\u4e09\u4e2a\u53c2\u6570) none # \u4e0d\u5c1d\u8bd5\u91cd\u542f on-failure # \u53ea\u6709\u5f53\u5bb9\u5668\u5185\u90e8\u5e94\u7528\u7a0b\u5e8f\u51fa\u73b0\u95ee\u9898\u624d\u4f1a\u91cd\u542f any # \u65e0\u8bba\u5982\u4f55\u90fd\u4f1a\u5c1d\u8bd5\u91cd\u542f(\u9ed8\u8ba4) delay # \u5c1d\u8bd5\u91cd\u542f\u7684\u95f4\u9694\u65f6\u95f4(\u9ed8\u8ba4\u4e3a 0s) max_attempts # \u5c1d\u8bd5\u91cd\u542f\u6b21\u6570(\u9ed8\u8ba4\u4e00\u76f4\u5c1d\u8bd5\u91cd\u542f) window # \u68c0\u67e5\u91cd\u542f\u662f\u5426\u6210\u529f\u4e4b\u524d\u7684\u7b49\u5f85\u65f6\u95f4(\u5373\u5982\u679c\u5bb9\u5668\u542f\u52a8\u4e86, \u9694\u591a\u5c11\u79d2\u4e4b\u540e\u53bb\u68c0\u6d4b\u5bb9\u5668\u662f\u5426\u6b63\u5e38, \u9ed8\u8ba4 0s) update_config # \u7528\u4e8e\u914d\u7f6e\u6eda\u52a8\u66f4\u65b0\u914d\u7f6e parallelism # \u4e00\u6b21\u6027\u66f4\u65b0\u7684\u5bb9\u5668\u6570\u91cf delay # \u66f4\u65b0\u4e00\u7ec4\u5bb9\u5668\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4 failure_action # \u5b9a\u4e49\u66f4\u65b0\u5931\u8d25\u7684\u7b56\u7565 continue # \u7ee7\u7eed\u66f4\u65b0 rollback # \u56de\u6eda\u66f4\u65b0 pause # \u6682\u505c\u66f4\u65b0(\u9ed8\u8ba4) monitor # \u6bcf\u6b21\u66f4\u65b0\u540e\u7684\u6301\u7eed\u65f6\u95f4\u4ee5\u76d1\u89c6\u66f4\u65b0\u662f\u5426\u5931\u8d25(\u5355\u4f4d: ns|us|ms|s|m|h) (\u9ed8\u8ba4\u4e3a0) max_failure_ratio # \u56de\u6eda\u671f\u95f4\u5bb9\u5fcd\u7684\u5931\u8d25\u7387(\u9ed8\u8ba4\u503c\u4e3a0) order # v3.4 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u56de\u6eda\u671f\u95f4\u7684\u64cd\u4f5c\u987a\u5e8f stop-first #\u65e7\u4efb\u52a1\u5728\u542f\u52a8\u65b0\u4efb\u52a1\u4e4b\u524d\u505c\u6b62(\u9ed8\u8ba4) start-first #\u9996\u5148\u542f\u52a8\u65b0\u4efb\u52a1, \u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u65f6\u91cd\u53e0 rollback_config # v3.7 \u7248\u672c\u4e2d\u65b0\u589e\u7684\u53c2\u6570, \u7528\u4e8e\u5b9a\u4e49\u5728 update_config \u66f4\u65b0\u5931\u8d25\u7684\u56de\u6eda\u7b56\u7565 parallelism # \u4e00\u6b21\u56de\u6eda\u7684\u5bb9\u5668\u6570, \u5982\u679c\u8bbe\u7f6e\u4e3a0, \u5219\u6240\u6709\u5bb9\u5668\u540c\u65f6\u56de\u6eda delay # \u6bcf\u4e2a\u7ec4\u56de\u6eda\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694(\u9ed8\u8ba4\u4e3a0) failure_action # \u5b9a\u4e49\u56de\u6eda\u5931\u8d25\u7684\u7b56\u7565 continue # \u7ee7\u7eed\u56de\u6eda pause # \u6682\u505c\u56de\u6eda monitor # \u6bcf\u6b21\u56de\u6eda\u4efb\u52a1\u540e\u7684\u6301\u7eed\u65f6\u95f4\u4ee5\u76d1\u89c6\u5931\u8d25(\u5355\u4f4d: ns|us|ms|s|m|h) (\u9ed8\u8ba4\u4e3a0) max_failure_ratio # \u56de\u6eda\u671f\u95f4\u5bb9\u5fcd\u7684\u5931\u8d25\u7387(\u9ed8\u8ba4\u503c0) order # \u56de\u6eda\u671f\u95f4\u7684\u64cd\u4f5c\u987a\u5e8f stop-first # \u65e7\u4efb\u52a1\u5728\u542f\u52a8\u65b0\u4efb\u52a1\u4e4b\u524d\u505c\u6b62(\u9ed8\u8ba4) start-first # \u9996\u5148\u542f\u52a8\u65b0\u4efb\u52a1, \u5e76\u4e14\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u65f6\u91cd\u53e0 \u6ce8\u610f\uff1a \u652f\u6301 docker-compose up \u548c docker-compose run \u4f46\u4e0d\u652f\u6301 docker stack deploy \u7684\u5b50\u9009\u9879 security_opt container_name devices tmpfs stop_signal links cgroup_parent network_mode external_links restart build userns_mode sysctls devices # \u6307\u5b9a\u8bbe\u5907\u6620\u5c04\u5217\u8868 (\u7b49\u540c\u4e8e docker run --device \u7684\u4f5c\u7528) depends_on # \u5b9a\u4e49\u5bb9\u5668\u542f\u52a8\u987a\u5e8f (\u6b64\u9009\u9879\u89e3\u51b3\u4e86\u5bb9\u5668\u4e4b\u95f4\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c \u6b64\u9009\u9879\u5728 v3 \u7248\u672c\u4e2d \u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) \u793a\u4f8b\uff1a docker-compose up \u4ee5\u4f9d\u8d56\u987a\u5e8f\u542f\u52a8\u670d\u52a1\uff0c\u4e0b\u9762\u4f8b\u5b50\u4e2d redis \u548c db \u670d\u52a1\u5728 web \u542f\u52a8\u524d\u542f\u52a8 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528 docker-compose up web \u8fd9\u6837\u7684\u65b9\u5f0f\u542f\u52a8 web \u670d\u52a1\u65f6\uff0c\u4e5f\u4f1a\u542f\u52a8 redis \u548c db \u4e24\u4e2a\u670d\u52a1\uff0c\u56e0\u4e3a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u4f9d\u8d56\u5173\u7cfb version: '3' services: web: build: . depends_on: - db - redis redis: image: redis db: image: postgres dns # \u8bbe\u7f6e DNS \u5730\u5740(\u7b49\u540c\u4e8e docker run --dns \u7684\u4f5c\u7528) dns_search # \u8bbe\u7f6e DNS \u641c\u7d22\u57df(\u7b49\u540c\u4e8e docker run --dns-search \u7684\u4f5c\u7528) tmpfs # v2 \u7248\u672c\u4ee5\u4e0a, \u6302\u8f7d\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d, \u4f5c\u4e3a\u5bb9\u5668\u7684\u4e34\u65f6\u6587\u4ef6\u7cfb\u7edf(\u7b49\u540c\u4e8e docker run --tmpfs \u7684\u4f5c\u7528, \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) entrypoint # \u8986\u76d6\u5bb9\u5668\u7684\u9ed8\u8ba4 entrypoint \u6307\u4ee4 (\u7b49\u540c\u4e8e docker run --entrypoint \u7684\u4f5c\u7528) env_file # \u4ece\u6307\u5b9a\u6587\u4ef6\u4e2d\u8bfb\u53d6\u53d8\u91cf\u8bbe\u7f6e\u4e3a\u5bb9\u5668\u4e2d\u7684\u73af\u5883\u53d8\u91cf, \u53ef\u4ee5\u662f\u5355\u4e2a\u503c\u6216\u8005\u4e00\u4e2a\u6587\u4ef6\u5217\u8868, \u5982\u679c\u591a\u4e2a\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u91cd\u540d\u5219\u540e\u9762\u7684\u53d8\u91cf\u8986\u76d6\u524d\u9762\u7684\u53d8\u91cf, environment \u7684\u503c\u8986\u76d6 env_file \u7684\u503c \u6587\u4ef6\u683c\u5f0f\uff1a RACK_ENV=development environment # \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c environment \u7684\u503c\u53ef\u4ee5\u8986\u76d6 env_file \u7684\u503c (\u7b49\u540c\u4e8e docker run --env \u7684\u4f5c\u7528) expose # \u66b4\u9732\u7aef\u53e3, \u4f46\u662f\u4e0d\u80fd\u548c\u5bbf\u4e3b\u673a\u5efa\u7acb\u6620\u5c04\u5173\u7cfb, \u7c7b\u4f3c\u4e8e Dockerfile \u7684 EXPOSE \u6307\u4ee4 external_links # \u8fde\u63a5\u4e0d\u5728 docker-compose.yml \u4e2d\u5b9a\u4e49\u7684\u5bb9\u5668\u6216\u8005\u4e0d\u5728 compose \u7ba1\u7406\u7684\u5bb9\u5668(docker run \u542f\u52a8\u7684\u5bb9\u5668, \u5728 v3 \u7248\u672c\u4e2d\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) extra_hosts # \u6dfb\u52a0 host \u8bb0\u5f55\u5230\u5bb9\u5668\u4e2d\u7684 /etc/hosts \u4e2d (\u7b49\u540c\u4e8e docker run --add-host \u7684\u4f5c\u7528) healthcheck # v2.1 \u4ee5\u4e0a\u7248\u672c, \u5b9a\u4e49\u5bb9\u5668\u5065\u5eb7\u72b6\u6001\u68c0\u67e5, \u7c7b\u4f3c\u4e8e Dockerfile \u7684 HEALTHCHECK \u6307\u4ee4 test # \u68c0\u67e5\u5bb9\u5668\u68c0\u67e5\u72b6\u6001\u7684\u547d\u4ee4, \u8be5\u9009\u9879\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u6216\u8005\u5217\u8868, \u7b2c\u4e00\u9879\u5fc5\u987b\u662f NONE, CMD \u6216 CMD-SHELL, \u5982\u679c\u5176\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\u5219\u76f8\u5f53\u4e8e CMD-SHELL \u52a0\u8be5\u5b57\u7b26\u4e32 NONE # \u7981\u7528\u5bb9\u5668\u7684\u5065\u5eb7\u72b6\u6001\u68c0\u6d4b CMD # test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"] CMD-SHELL # test: [\"CMD-SHELL\", \"curl -f http://localhost || exit 1\"] \u6216\u8005\u3000test: curl -f https://localhost || exit 1 interval: 1m30s # \u6bcf\u6b21\u68c0\u67e5\u4e4b\u95f4\u7684\u95f4\u9694\u65f6\u95f4 timeout: 10s # \u8fd0\u884c\u547d\u4ee4\u7684\u8d85\u65f6\u65f6\u95f4 retries: 3 # \u91cd\u8bd5\u6b21\u6570 start_period: 40s # v3.4 \u4ee5\u4e0a\u65b0\u589e\u7684\u9009\u9879, \u5b9a\u4e49\u5bb9\u5668\u542f\u52a8\u65f6\u95f4\u95f4\u9694 disable: true # true \u6216 false, \u8868\u793a\u662f\u5426\u7981\u7528\u5065\u5eb7\u72b6\u6001\u68c0\u6d4b\u548c\u3000test: NONE \u76f8\u540c image # \u6307\u5b9a docker \u955c\u50cf, \u53ef\u4ee5\u662f\u8fdc\u7a0b\u4ed3\u5e93\u955c\u50cf\u3001\u672c\u5730\u955c\u50cf init # v3.7 \u4e2d\u65b0\u589e\u7684\u53c2\u6570, true \u6216 false \u8868\u793a\u662f\u5426\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u4e00\u4e2a init, \u5b83\u63a5\u6536\u4fe1\u53f7\u5e76\u4f20\u9012\u7ed9\u8fdb\u7a0b isolation # \u9694\u79bb\u5bb9\u5668\u6280\u672f, \u5728 Linux \u4e2d\u4ec5\u652f\u6301 default \u503c labels # \u4f7f\u7528 Docker \u6807\u7b7e\u5c06\u5143\u6570\u636e\u6dfb\u52a0\u5230\u5bb9\u5668, \u4e0e Dockerfile \u4e2d\u7684 LABELS \u7c7b\u4f3c links # \u94fe\u63a5\u5230\u5176\u5b83\u670d\u52a1\u4e2d\u7684\u5bb9\u5668, \u8be5\u9009\u9879\u662f docker \u5386\u53f2\u9057\u7559\u7684\u9009\u9879, \u76ee\u524d\u5df2\u88ab\u7528\u6237\u81ea\u5b9a\u4e49\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4\u53d6\u4ee3, \u6700\u7ec8\u6709\u53ef\u80fd\u88ab\u5e9f\u5f03 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) logging # \u8bbe\u7f6e\u5bb9\u5668\u65e5\u5fd7\u670d\u52a1 driver # \u6307\u5b9a\u65e5\u5fd7\u8bb0\u5f55\u9a71\u52a8\u7a0b\u5e8f, \u9ed8\u8ba4 json-file (\u7b49\u540c\u4e8e docker run --log-driver \u7684\u4f5c\u7528) options # \u6307\u5b9a\u65e5\u5fd7\u7684\u76f8\u5173\u53c2\u6570 (\u7b49\u540c\u4e8e docker run --log-opt \u7684\u4f5c\u7528) max-size # \u8bbe\u7f6e\u5355\u4e2a\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f, \u5f53\u5230\u8fbe\u8fd9\u4e2a\u503c\u540e\u4f1a\u8fdb\u884c\u65e5\u5fd7\u6eda\u52a8\u64cd\u4f5c max-file # \u65e5\u5fd7\u6587\u4ef6\u4fdd\u7559\u7684\u6570\u91cf network_mode # \u6307\u5b9a\u7f51\u7edc\u6a21\u5f0f (\u7b49\u540c\u4e8e docker run --net \u7684\u4f5c\u7528, \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) networks # \u5c06\u5bb9\u5668\u52a0\u5165\u6307\u5b9a\u7f51\u7edc (\u7b49\u540c\u4e8e docker network connect \u7684\u4f5c\u7528), networks \u53ef\u4ee5\u4f4d\u4e8e compose \u6587\u4ef6\u9876\u7ea7\u952e\u548c services \u952e\u7684\u4e8c\u7ea7\u952e aliases # \u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u5bb9\u5668\u53ef\u4ee5\u4f7f\u7528\u670d\u52a1\u540d\u79f0\u6216\u522b\u540d\u8fde\u63a5\u5230\u5176\u4e2d\u4e00\u4e2a\u670d\u52a1\u7684\u5bb9\u5668 ipv4_address # IP V4 \u683c\u5f0f ipv6_address # IP V6 \u683c\u5f0f \u793a\u4f8b: version: '3.7' services: test: image: nginx:1.14-alpine container_name: mynginx command: ifconfig networks: app_net: # \u8c03\u7528\u4e0b\u9762 networks \u5b9a\u4e49\u7684 app_net \u7f51\u7edc ipv4_address: 172.16.238.10 networks: app_net: driver: bridge ipam: driver: default config: - subnet: 172.16.238.0/24 pid: 'host' # \u5171\u4eab\u5bbf\u4e3b\u673a\u7684 \u8fdb\u7a0b\u7a7a\u95f4(PID) ports # \u5efa\u7acb\u5bbf\u4e3b\u673a\u548c\u5bb9\u5668\u4e4b\u95f4\u7684\u7aef\u53e3\u6620\u5c04\u5173\u7cfb, ports \u652f\u6301\u4e24\u79cd\u8bed\u6cd5\u683c\u5f0f SHORT \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b: - \"3000\" # \u66b4\u9732\u5bb9\u5668\u7684 3000 \u7aef\u53e3, \u5bbf\u4e3b\u673a\u7684\u7aef\u53e3\u7531 docker \u968f\u673a\u6620\u5c04\u4e00\u4e2a\u6ca1\u6709\u88ab\u5360\u7528\u7684\u7aef\u53e3 - \"3000-3005\" # \u66b4\u9732\u5bb9\u5668\u7684 3000 \u5230 3005 \u7aef\u53e3, \u5bbf\u4e3b\u673a\u7684\u7aef\u53e3\u7531 docker \u968f\u673a\u6620\u5c04\u6ca1\u6709\u88ab\u5360\u7528\u7684\u7aef\u53e3 - \"8000:8000\" # \u5bb9\u5668\u7684 8000 \u7aef\u53e3\u548c\u5bbf\u4e3b\u673a\u7684 8000 \u7aef\u53e3\u5efa\u7acb\u6620\u5c04\u5173\u7cfb - \"9090-9091:8080-8081\" - \"127.0.0.1:8001:8001\" # \u6307\u5b9a\u6620\u5c04\u5bbf\u4e3b\u673a\u7684\u6307\u5b9a\u5730\u5740\u7684 - \"127.0.0.1:5000-5010:5000-5010\" - \"6060:6060/udp\" # \u6307\u5b9a\u534f\u8bae LONG \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:(v3.2 \u65b0\u589e\u7684\u8bed\u6cd5\u683c\u5f0f) ports: - target: 80 # \u5bb9\u5668\u7aef\u53e3 published: 8080 # \u5bbf\u4e3b\u673a\u7aef\u53e3 protocol: tcp # \u534f\u8bae\u7c7b\u578b mode: host # host \u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\u53d1\u5e03\u4e3b\u673a\u7aef\u53e3, ingress \u5bf9\u4e8e\u7fa4\u6a21\u5f0f\u7aef\u53e3\u8fdb\u884c\u8d1f\u8f7d\u5747\u8861 secrets # \u4e0d\u77e5\u9053\u600e\u4e48\u7528 security_opt # \u4e3a\u6bcf\u4e2a\u5bb9\u5668\u8986\u76d6\u9ed8\u8ba4\u7684\u6807\u7b7e (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) stop_grace_period # \u6307\u5b9a\u5728\u53d1\u9001\u4e86 SIGTERM \u4fe1\u53f7\u4e4b\u540e, \u5bb9\u5668\u7b49\u5f85\u591a\u5c11\u79d2\u4e4b\u540e\u9000\u51fa(\u9ed8\u8ba4 10s) stop_signal # \u6307\u5b9a\u505c\u6b62\u5bb9\u5668\u53d1\u9001\u7684\u4fe1\u53f7 (\u9ed8\u8ba4\u4e3a SIGTERM \u76f8\u5f53\u4e8e kill PID; SIGKILL \u76f8\u5f53\u4e8e kill -9 PID; \u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) sysctls # \u8bbe\u7f6e\u5bb9\u5668\u4e2d\u7684\u5185\u6838\u53c2\u6570 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) ulimits # \u8bbe\u7f6e\u5bb9\u5668\u7684 limit userns_mode # \u5982\u679cDocker\u5b88\u62a4\u7a0b\u5e8f\u914d\u7f6e\u4e86\u7528\u6237\u540d\u79f0\u7a7a\u95f4, \u5219\u7981\u7528\u6b64\u670d\u52a1\u7684\u7528\u6237\u540d\u79f0\u7a7a\u95f4 (\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879) volumes # \u5b9a\u4e49\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u7684\u5377\u6620\u5c04\u5173\u7cfb, \u5176\u548c networks \u4e00\u6837\u53ef\u4ee5\u4f4d\u4e8e services \u952e\u7684\u4e8c\u7ea7\u952e\u548c compose \u9876\u7ea7\u952e, \u5982\u679c\u9700\u8981\u8de8\u670d\u52a1\u95f4\u4f7f\u7528\u5219\u5728\u9876\u7ea7\u952e\u5b9a\u4e49, \u5728 services \u4e2d\u5f15\u7528 SHORT \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b: volumes: - /var/lib/mysql # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a\u7684\u4e00\u4e2a\u968f\u673a\u76ee\u5f55\u4e2d - /opt/data:/var/lib/mysql # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a\u7684 /opt/data - ./cache:/tmp/cache # \u6620\u5c04\u5bb9\u5668\u5185\u7684 /var/lib/mysql \u5230\u5bbf\u4e3b\u673a compose \u6587\u4ef6\u6240\u5728\u7684\u4f4d\u7f6e - ~/configs:/etc/configs/:ro # \u6620\u5c04\u5bb9\u5668\u5bbf\u4e3b\u673a\u7684\u76ee\u5f55\u5230\u5bb9\u5668\u4e2d\u53bb, \u6743\u9650\u53ea\u8bfb - datavolume:/var/lib/mysql # datavolume \u4e3a volumes \u9876\u7ea7\u952e\u5b9a\u4e49\u7684\u76ee\u5f55, \u5728\u6b64\u5904\u76f4\u63a5\u8c03\u7528 LONG \u8bed\u6cd5\u683c\u5f0f\u793a\u4f8b:(v3.2 \u65b0\u589e\u7684\u8bed\u6cd5\u683c\u5f0f) version: \"3.2\" services: web: image: nginx:alpine ports: - \"80:80\" volumes: - type: volume # mount \u7684\u7c7b\u578b, \u5fc5\u987b\u662f bind\u3001volume \u6216 tmpfs source: mydata # \u5bbf\u4e3b\u673a\u76ee\u5f55 target: /data # \u5bb9\u5668\u76ee\u5f55 volume: # \u914d\u7f6e\u989d\u5916\u7684\u9009\u9879, \u5176 key \u5fc5\u987b\u548c type \u7684\u503c\u76f8\u540c nocopy: true # volume \u989d\u5916\u7684\u9009\u9879, \u5728\u521b\u5efa\u5377\u65f6\u7981\u7528\u4ece\u5bb9\u5668\u590d\u5236\u6570\u636e - type: bind # volume \u6a21\u5f0f\u53ea\u6307\u5b9a\u5bb9\u5668\u8def\u5f84\u5373\u53ef, \u5bbf\u4e3b\u673a\u8def\u5f84\u968f\u673a\u751f\u6210; bind \u9700\u8981\u6307\u5b9a\u5bb9\u5668\u548c\u6570\u636e\u673a\u7684\u6620\u5c04\u8def\u5f84 source: ./static target: /opt/app/static read_only: true # \u8bbe\u7f6e\u6587\u4ef6\u7cfb\u7edf\u4e3a\u53ea\u8bfb\u6587\u4ef6\u7cfb\u7edf volumes: mydata: # \u5b9a\u4e49\u5728 volume, \u53ef\u5728\u6240\u6709\u670d\u52a1\u4e2d\u8c03\u7528 restart # \u5b9a\u4e49\u5bb9\u5668\u91cd\u542f\u7b56\u7565(\u5728\u4f7f\u7528 swarm \u90e8\u7f72\u65f6\u5c06\u5ffd\u7565\u8be5\u9009\u9879, \u5728 swarm \u4f7f\u7528 restart_policy \u4ee3\u66ff restart) no # \u7981\u6b62\u81ea\u52a8\u91cd\u542f\u5bb9\u5668(\u9ed8\u8ba4) always # \u65e0\u8bba\u5982\u4f55\u5bb9\u5668\u90fd\u4f1a\u91cd\u542f on-failure # \u5f53\u51fa\u73b0 on-failure \u62a5\u9519\u65f6, \u5bb9\u5668\u91cd\u65b0\u542f\u52a8 \u5176\u4ed6\u9009\u9879\uff1a domainname, hostname, ipc, mac_address, privileged, read_only, shm_size, stdin_open, tty, user, working_dir \u4e0a\u9762\u8fd9\u4e9b\u9009\u9879\u90fd\u53ea\u63a5\u53d7\u5355\u4e2a\u503c\u548c docker run \u7684\u5bf9\u5e94\u53c2\u6570\u7c7b\u4f3c \u5bf9\u4e8e\u503c\u4e3a\u65f6\u95f4\u7684\u53ef\u63a5\u53d7\u7684\u503c\uff1a 2.5s 10s 1m30s 2h32m 5h34m56s \u65f6\u95f4\u5355\u4f4d: us, ms, s, m\uff0c h \u5bf9\u4e8e\u503c\u4e3a\u5927\u5c0f\u7684\u53ef\u63a5\u53d7\u7684\u503c\uff1a 2b 1024kb 2048k 300m 1gb \u5355\u4f4d: b, k, m, g \u6216\u8005 kb, mb, gb networks # \u5b9a\u4e49 networks \u4fe1\u606f driver # \u6307\u5b9a\u7f51\u7edc\u6a21\u5f0f, \u5927\u591a\u6570\u60c5\u51b5\u4e0b, \u5b83 bridge \u4e8e\u5355\u4e2a\u4e3b\u673a\u548c overlay Swarm \u4e0a bridge # Docker \u9ed8\u8ba4\u4f7f\u7528 bridge \u8fde\u63a5\u5355\u4e2a\u4e3b\u673a\u4e0a\u7684\u7f51\u7edc overlay # overlay \u9a71\u52a8\u7a0b\u5e8f\u521b\u5efa\u4e00\u4e2a\u8de8\u591a\u4e2a\u8282\u70b9\u547d\u540d\u7684\u7f51\u7edc host # \u5171\u4eab\u4e3b\u673a\u7f51\u7edc\u540d\u79f0\u7a7a\u95f4(\u7b49\u540c\u4e8e docker run --net=host) none # \u7b49\u540c\u4e8e docker run --net=none driver_opts # v3.2\u4ee5\u4e0a\u7248\u672c, \u4f20\u9012\u7ed9\u9a71\u52a8\u7a0b\u5e8f\u7684\u53c2\u6570, \u8fd9\u4e9b\u53c2\u6570\u53d6\u51b3\u4e8e\u9a71\u52a8\u7a0b\u5e8f attachable # driver \u4e3a overlay \u65f6\u4f7f\u7528, \u5982\u679c\u8bbe\u7f6e\u4e3a true \u5219\u9664\u4e86\u670d\u52a1\u4e4b\u5916\uff0c\u72ec\u7acb\u5bb9\u5668\u4e5f\u53ef\u4ee5\u9644\u52a0\u5230\u8be5\u7f51\u7edc; \u5982\u679c\u72ec\u7acb\u5bb9\u5668\u8fde\u63a5\u5230\u8be5\u7f51\u7edc\uff0c\u5219\u5b83\u53ef\u4ee5\u4e0e\u5176\u4ed6 Docker \u5b88\u62a4\u8fdb\u7a0b\u8fde\u63a5\u5230\u7684\u8be5\u7f51\u7edc\u7684\u670d\u52a1\u548c\u72ec\u7acb\u5bb9\u5668\u8fdb\u884c\u901a\u4fe1 ipam # \u81ea\u5b9a\u4e49 IPAM \u914d\u7f6e. \u8fd9\u662f\u4e00\u4e2a\u5177\u6709\u591a\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61, \u6bcf\u4e2a\u5c5e\u6027\u90fd\u662f\u53ef\u9009\u7684 driver # IPAM \u9a71\u52a8\u7a0b\u5e8f, bridge \u6216\u8005 default config # \u914d\u7f6e\u9879 subnet # CIDR\u683c\u5f0f\u7684\u5b50\u7f51\uff0c\u8868\u793a\u8be5\u7f51\u7edc\u7684\u7f51\u6bb5 external # \u5916\u90e8\u7f51\u7edc, \u5982\u679c\u8bbe\u7f6e\u4e3a true \u5219 docker-compose up \u4e0d\u4f1a\u5c1d\u8bd5\u521b\u5efa\u5b83, \u5982\u679c\u5b83\u4e0d\u5b58\u5728\u5219\u5f15\u53d1\u9519\u8bef name # v3.5 \u4ee5\u4e0a\u7248\u672c, \u4e3a\u6b64\u7f51\u7edc\u8bbe\u7f6e\u540d\u79f0 \u6587\u4ef6\u683c\u5f0f\u793a\u4f8b\uff1a version: \"3\" services: redis: image: redis:alpine ports: - \"6379\" networks: - frontend deploy: replicas: 2 update_config: parallelism: 2 delay: 10s restart_policy: condition: on-failure db: image: postgres:9.4 volumes: - db-data:/var/lib/postgresql/data networks: - backend deploy: placement: constraints: [node.role == manager]\u590d\u5236\u4ee3\u7801","title":"\u65b9\u5f0f\u4e8c\uff1a\u66f4\u6539\u9700\u8981\u94fe\u63a5\u7684\u5bb9\u5668\u7684\u7f51\u7edc\u6a21\u5f0f"},{"location":"etcd/etcd/","text":"Etcd \u5355\u673a\u90e8\u7f72 \u670d\u52a1\u7aef \u4e3b\u673a\u540d etcd\u7248\u672c IP\u5730\u5740 etcd v3.4.13 192.168.70.132 \u4e0b\u8f7d\u5730\u5740: https://github.com/etcd-io/etcd/releases/tag/v3.4.13 [root@etcd ~]# tar -zxvf etcd-v3.4.13-linux-amd64.tar.gz [root@centos7 ~]# cd etcd-v3.4.13-linux-amd64 [root@centos7 etcd-v3.4.13-linux-amd64]# nohup ./etcd --advertise-client-urls 'http://0.0.0.0:2379' --listen-client-urls 'http://0.0.0.0:2379' --enable-v2 > etcd.log 2>&1 & --advertise-client-urls --listen-client-urls \u8fd9\u4e24\u4e2a0.0.0.0\u5f00\u5934\u662f\u4e3a\u4e86\u6d4f\u89c8\u5668\u4e5f\u80fd\u8bbf\u95ee\uff0c\u9ed8\u8ba4\u53ea\u80fd\u8bbf\u95ee127.0.0.1 --enable-v2 \u5f00\u542fV2\u7684API \u56e0\u4e3a\u662f\u5355\u673a\u96c6\u7fa4\uff0c\u6240\u4ee5\u5c31\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\u5373\u53ef [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --version etcd Version: 3.4.13 Git SHA: ae9734ed2 Go Version: go1.12.17 Go OS/Arch: linux/amd64 [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --help Usage: etcd [flags] Start an etcd server. etcd --version Show the version of etcd. etcd -h | --help Show the help information about etcd. etcd --config-file Path to the server configuration file. Note that if a configuration file is provided, other command line flags and environment variables will be ignored. etcd gateway Run the stateless pass-through etcd TCP connection forwarding proxy. etcd grpc-proxy Run the stateless etcd v3 gRPC L7 reverse proxy. Member: --name 'default' Human-readable name for this member. --data-dir '${name}.etcd' Path to the data directory. --wal-dir '' Path to the dedicated wal directory. --snapshot-count '100000' Number of committed transactions to trigger a snapshot to disk. --heartbeat-interval '100' Time (in milliseconds) of a heartbeat interval. --election-timeout '1000' Time (in milliseconds) for an election to timeout. See tuning documentation for details. --initial-election-tick-advance 'true' Whether to fast-forward initial election ticks on boot for faster election. --listen-peer-urls 'http://localhost:2380' List of URLs to listen on for peer traffic. --listen-client-urls 'http://localhost:2379' List of URLs to listen on for client traffic. --max-snapshots '5' Maximum number of snapshot files to retain (0 is unlimited). --max-wals '5' Maximum number of wal files to retain (0 is unlimited). --quota-backend-bytes '0' Raise alarms when backend size exceeds the given quota (0 defaults to low space quota). --backend-batch-interval '' BackendBatchInterval is the maximum time before commit the backend transaction. --backend-batch-limit '0' BackendBatchLimit is the maximum operations before commit the backend transaction. --max-txn-ops '128' Maximum number of operations permitted in a transaction. --max-request-bytes '1572864' Maximum client request size in bytes the server will accept. --grpc-keepalive-min-time '5s' Minimum duration interval that a client should wait before pinging server. --grpc-keepalive-interval '2h' Frequency duration of server-to-client ping to check if a connection is alive (0 to disable). --grpc-keepalive-timeout '20s' Additional duration of wait before closing a non-responsive connection (0 to disable). Clustering: --initial-advertise-peer-urls 'http://localhost:2380' List of this member's peer URLs to advertise to the rest of the cluster. --initial-cluster 'default=http://localhost:2380' Initial cluster configuration for bootstrapping. --initial-cluster-state 'new' Initial cluster state ('new' or 'existing'). --initial-cluster-token 'etcd-cluster' Initial cluster token for the etcd cluster during bootstrap. Specifying this can protect you from unintended cross-cluster interaction when running multiple clusters. --advertise-client-urls 'http://localhost:2379' List of this member's client URLs to advertise to the public. The client URLs advertised should be accessible to machines that talk to etcd cluster. etcd client libraries parse these URLs to connect to the cluster. --discovery '' Discovery URL used to bootstrap the cluster. --discovery-fallback 'proxy' Expected behavior ('exit' or 'proxy') when discovery services fails. \"proxy\" supports v2 API only. --discovery-proxy '' HTTP proxy to use for traffic to discovery service. --discovery-srv '' DNS srv domain used to bootstrap the cluster. --discovery-srv-name '' Suffix to the dns srv name queried when bootstrapping. --strict-reconfig-check 'true' Reject reconfiguration requests that would cause quorum loss. --pre-vote 'false' Enable to run an additional Raft election phase. --auto-compaction-retention '0' Auto compaction retention length. 0 means disable auto compaction. --auto-compaction-mode 'periodic' Interpret 'auto-compaction-retention' one of: periodic|revision. 'periodic' for duration based retention, defaulting to hours if no time unit is provided (e.g. '5m'). 'revision' for revision number based retention. --enable-v2 'false' Accept etcd V2 client requests. Security: --cert-file '' Path to the client server TLS cert file. --key-file '' Path to the client server TLS key file. --client-cert-auth 'false' Enable client cert authentication. --client-crl-file '' Path to the client certificate revocation list file. --client-cert-allowed-hostname '' Allowed TLS hostname for client cert authentication. --trusted-ca-file '' Path to the client server TLS trusted CA cert file. --auto-tls 'false' Client TLS using generated certificates. --peer-cert-file '' Path to the peer server TLS cert file. --peer-key-file '' Path to the peer server TLS key file. --peer-client-cert-auth 'false' Enable peer client cert authentication. --peer-trusted-ca-file '' Path to the peer server TLS trusted CA file. --peer-cert-allowed-cn '' Required CN for client certs connecting to the peer endpoint. --peer-cert-allowed-hostname '' Allowed TLS hostname for inter peer authentication. --peer-auto-tls 'false' Peer TLS using self-generated certificates if --peer-key-file and --peer-cert-file are not provided. --peer-crl-file '' Path to the peer certificate revocation list file. --cipher-suites '' Comma-separated list of supported TLS cipher suites between client/server and peers (empty will be auto-populated by Go). --cors '*' Comma-separated whitelist of origins for CORS, or cross-origin resource sharing, (empty or * means allow all). --host-whitelist '*' Acceptable hostnames from HTTP client requests, if server is not secure (empty or * means allow all). Auth: --auth-token 'simple' Specify a v3 authentication token type and its options ('simple' or 'jwt'). --bcrypt-cost 10 Specify the cost / strength of the bcrypt algorithm for hashing auth passwords. Valid values are between 4 and 31. --auth-token-ttl 300 Time (in seconds) of the auth-token-ttl. Profiling and Monitoring: --enable-pprof 'false' Enable runtime profiling data via HTTP server. Address is at client URL + \"/debug/pprof/\" --metrics 'basic' Set level of detail for exported metrics, specify 'extensive' to include histogram metrics. --listen-metrics-urls '' List of URLs to listen on for the metrics and health endpoints. Logging: --logger 'capnslog' Specify 'zap' for structured logging or 'capnslog'. [WARN] 'capnslog' will be deprecated in v3.5. --log-outputs 'default' Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd, or list of comma separated output targets. --log-level 'info' Configures log level. Only supports debug, info, warn, error, panic, or fatal. v2 Proxy (to be deprecated in v4): --proxy 'off' Proxy mode setting ('off', 'readonly' or 'on'). --proxy-failure-wait 5000 Time (in milliseconds) an endpoint will be held in a failed state. --proxy-refresh-interval 30000 Time (in milliseconds) of the endpoints refresh interval. --proxy-dial-timeout 1000 Time (in milliseconds) for a dial to timeout. --proxy-write-timeout 5000 Time (in milliseconds) for a write to timeout. --proxy-read-timeout 0 Time (in milliseconds) for a read to timeout. Experimental feature: --experimental-initial-corrupt-check 'false' Enable to check data corruption before serving any client/peer traffic. --experimental-corrupt-check-time '0s' Duration of time between cluster corruption check passes. --experimental-enable-v2v3 '' Serve v2 requests through the v3 backend under a given prefix. --experimental-backend-bbolt-freelist-type 'array' ExperimentalBackendFreelistType specifies the type of freelist that boltdb backend uses(array and map are supported types). --experimental-enable-lease-checkpoint 'false' ExperimentalEnableLeaseCheckpoint enables primary lessor to persist lease remainingTTL to prevent indefinite auto-renewal of long lived leases. --experimental-compaction-batch-limit 1000 ExperimentalCompactionBatchLimit sets the maximum revisions deleted in each compaction batch. --experimental-peer-skip-client-san-verification 'false' Skip verification of SAN field in client certificate for peer connections. --experimental-watch-progress-notify-interval '10m' Duration of periodical watch progress notification. Unsafe feature: --force-new-cluster 'false' Force to create a new one-member cluster. CAUTIOUS with unsafe flag! It may break the guarantees given by the consensus protocol! TO BE DEPRECATED: --debug 'false' Enable debug-level logging for etcd. [WARN] Will be deprecated in v3.5. Use '--log-level=debug' instead. --log-package-levels '' Specify a particular log level for each etcd package (eg: 'etcdmain=CRITICAL,etcdserver=DEBUG'). yum\u5b89\u88c5\u65b9\u6cd5 [root@etcd ~]# yum install -y etcd [root@etcd ~]# systemctl start etcd API\u63a5\u53e3 https://github.com/etcd-io/etcd/blob/6acb3d67fbe131b3b2d5d010e00ec80182be4628/Documentation/v2/api.md \u67e5\u770b\u6240\u6709\u503c\u7684API\u63a5\u53e3 curl http://127.0.0.1:2379/v2/keys {\"action\":\"get\",\"node\":{\"dir\":true}} lucas - \u7528\u4e8e kubernetes etcd3.0 + \u96c6\u7fa4\u7684\u57fa\u4e8e Web \u7684\u952e\u503c\u67e5\u770b\u5668\u3002 etcd-manager - \u73b0\u4ee3\u3001\u9ad8\u6548\u3001\u591a\u5e73\u53f0\u548c\u514d\u8d39\u7684 etcd 3.x GUI \u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002\u9002\u7528\u4e8e Windows\u3001Linux \u548c Mac\u3002","title":"etcd\u90e8\u7f72"},{"location":"etcd/etcd/#etcd","text":"","title":"Etcd"},{"location":"etcd/etcd/#_1","text":"\u670d\u52a1\u7aef \u4e3b\u673a\u540d etcd\u7248\u672c IP\u5730\u5740 etcd v3.4.13 192.168.70.132 \u4e0b\u8f7d\u5730\u5740: https://github.com/etcd-io/etcd/releases/tag/v3.4.13 [root@etcd ~]# tar -zxvf etcd-v3.4.13-linux-amd64.tar.gz [root@centos7 ~]# cd etcd-v3.4.13-linux-amd64 [root@centos7 etcd-v3.4.13-linux-amd64]# nohup ./etcd --advertise-client-urls 'http://0.0.0.0:2379' --listen-client-urls 'http://0.0.0.0:2379' --enable-v2 > etcd.log 2>&1 & --advertise-client-urls --listen-client-urls \u8fd9\u4e24\u4e2a0.0.0.0\u5f00\u5934\u662f\u4e3a\u4e86\u6d4f\u89c8\u5668\u4e5f\u80fd\u8bbf\u95ee\uff0c\u9ed8\u8ba4\u53ea\u80fd\u8bbf\u95ee127.0.0.1 --enable-v2 \u5f00\u542fV2\u7684API \u56e0\u4e3a\u662f\u5355\u673a\u96c6\u7fa4\uff0c\u6240\u4ee5\u5c31\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\u5373\u53ef [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --version etcd Version: 3.4.13 Git SHA: ae9734ed2 Go Version: go1.12.17 Go OS/Arch: linux/amd64 [root@etcd etcd-v3.4.13-linux-amd64]# ./etcd --help Usage: etcd [flags] Start an etcd server. etcd --version Show the version of etcd. etcd -h | --help Show the help information about etcd. etcd --config-file Path to the server configuration file. Note that if a configuration file is provided, other command line flags and environment variables will be ignored. etcd gateway Run the stateless pass-through etcd TCP connection forwarding proxy. etcd grpc-proxy Run the stateless etcd v3 gRPC L7 reverse proxy. Member: --name 'default' Human-readable name for this member. --data-dir '${name}.etcd' Path to the data directory. --wal-dir '' Path to the dedicated wal directory. --snapshot-count '100000' Number of committed transactions to trigger a snapshot to disk. --heartbeat-interval '100' Time (in milliseconds) of a heartbeat interval. --election-timeout '1000' Time (in milliseconds) for an election to timeout. See tuning documentation for details. --initial-election-tick-advance 'true' Whether to fast-forward initial election ticks on boot for faster election. --listen-peer-urls 'http://localhost:2380' List of URLs to listen on for peer traffic. --listen-client-urls 'http://localhost:2379' List of URLs to listen on for client traffic. --max-snapshots '5' Maximum number of snapshot files to retain (0 is unlimited). --max-wals '5' Maximum number of wal files to retain (0 is unlimited). --quota-backend-bytes '0' Raise alarms when backend size exceeds the given quota (0 defaults to low space quota). --backend-batch-interval '' BackendBatchInterval is the maximum time before commit the backend transaction. --backend-batch-limit '0' BackendBatchLimit is the maximum operations before commit the backend transaction. --max-txn-ops '128' Maximum number of operations permitted in a transaction. --max-request-bytes '1572864' Maximum client request size in bytes the server will accept. --grpc-keepalive-min-time '5s' Minimum duration interval that a client should wait before pinging server. --grpc-keepalive-interval '2h' Frequency duration of server-to-client ping to check if a connection is alive (0 to disable). --grpc-keepalive-timeout '20s' Additional duration of wait before closing a non-responsive connection (0 to disable). Clustering: --initial-advertise-peer-urls 'http://localhost:2380' List of this member's peer URLs to advertise to the rest of the cluster. --initial-cluster 'default=http://localhost:2380' Initial cluster configuration for bootstrapping. --initial-cluster-state 'new' Initial cluster state ('new' or 'existing'). --initial-cluster-token 'etcd-cluster' Initial cluster token for the etcd cluster during bootstrap. Specifying this can protect you from unintended cross-cluster interaction when running multiple clusters. --advertise-client-urls 'http://localhost:2379' List of this member's client URLs to advertise to the public. The client URLs advertised should be accessible to machines that talk to etcd cluster. etcd client libraries parse these URLs to connect to the cluster. --discovery '' Discovery URL used to bootstrap the cluster. --discovery-fallback 'proxy' Expected behavior ('exit' or 'proxy') when discovery services fails. \"proxy\" supports v2 API only. --discovery-proxy '' HTTP proxy to use for traffic to discovery service. --discovery-srv '' DNS srv domain used to bootstrap the cluster. --discovery-srv-name '' Suffix to the dns srv name queried when bootstrapping. --strict-reconfig-check 'true' Reject reconfiguration requests that would cause quorum loss. --pre-vote 'false' Enable to run an additional Raft election phase. --auto-compaction-retention '0' Auto compaction retention length. 0 means disable auto compaction. --auto-compaction-mode 'periodic' Interpret 'auto-compaction-retention' one of: periodic|revision. 'periodic' for duration based retention, defaulting to hours if no time unit is provided (e.g. '5m'). 'revision' for revision number based retention. --enable-v2 'false' Accept etcd V2 client requests. Security: --cert-file '' Path to the client server TLS cert file. --key-file '' Path to the client server TLS key file. --client-cert-auth 'false' Enable client cert authentication. --client-crl-file '' Path to the client certificate revocation list file. --client-cert-allowed-hostname '' Allowed TLS hostname for client cert authentication. --trusted-ca-file '' Path to the client server TLS trusted CA cert file. --auto-tls 'false' Client TLS using generated certificates. --peer-cert-file '' Path to the peer server TLS cert file. --peer-key-file '' Path to the peer server TLS key file. --peer-client-cert-auth 'false' Enable peer client cert authentication. --peer-trusted-ca-file '' Path to the peer server TLS trusted CA file. --peer-cert-allowed-cn '' Required CN for client certs connecting to the peer endpoint. --peer-cert-allowed-hostname '' Allowed TLS hostname for inter peer authentication. --peer-auto-tls 'false' Peer TLS using self-generated certificates if --peer-key-file and --peer-cert-file are not provided. --peer-crl-file '' Path to the peer certificate revocation list file. --cipher-suites '' Comma-separated list of supported TLS cipher suites between client/server and peers (empty will be auto-populated by Go). --cors '*' Comma-separated whitelist of origins for CORS, or cross-origin resource sharing, (empty or * means allow all). --host-whitelist '*' Acceptable hostnames from HTTP client requests, if server is not secure (empty or * means allow all). Auth: --auth-token 'simple' Specify a v3 authentication token type and its options ('simple' or 'jwt'). --bcrypt-cost 10 Specify the cost / strength of the bcrypt algorithm for hashing auth passwords. Valid values are between 4 and 31. --auth-token-ttl 300 Time (in seconds) of the auth-token-ttl. Profiling and Monitoring: --enable-pprof 'false' Enable runtime profiling data via HTTP server. Address is at client URL + \"/debug/pprof/\" --metrics 'basic' Set level of detail for exported metrics, specify 'extensive' to include histogram metrics. --listen-metrics-urls '' List of URLs to listen on for the metrics and health endpoints. Logging: --logger 'capnslog' Specify 'zap' for structured logging or 'capnslog'. [WARN] 'capnslog' will be deprecated in v3.5. --log-outputs 'default' Specify 'stdout' or 'stderr' to skip journald logging even when running under systemd, or list of comma separated output targets. --log-level 'info' Configures log level. Only supports debug, info, warn, error, panic, or fatal. v2 Proxy (to be deprecated in v4): --proxy 'off' Proxy mode setting ('off', 'readonly' or 'on'). --proxy-failure-wait 5000 Time (in milliseconds) an endpoint will be held in a failed state. --proxy-refresh-interval 30000 Time (in milliseconds) of the endpoints refresh interval. --proxy-dial-timeout 1000 Time (in milliseconds) for a dial to timeout. --proxy-write-timeout 5000 Time (in milliseconds) for a write to timeout. --proxy-read-timeout 0 Time (in milliseconds) for a read to timeout. Experimental feature: --experimental-initial-corrupt-check 'false' Enable to check data corruption before serving any client/peer traffic. --experimental-corrupt-check-time '0s' Duration of time between cluster corruption check passes. --experimental-enable-v2v3 '' Serve v2 requests through the v3 backend under a given prefix. --experimental-backend-bbolt-freelist-type 'array' ExperimentalBackendFreelistType specifies the type of freelist that boltdb backend uses(array and map are supported types). --experimental-enable-lease-checkpoint 'false' ExperimentalEnableLeaseCheckpoint enables primary lessor to persist lease remainingTTL to prevent indefinite auto-renewal of long lived leases. --experimental-compaction-batch-limit 1000 ExperimentalCompactionBatchLimit sets the maximum revisions deleted in each compaction batch. --experimental-peer-skip-client-san-verification 'false' Skip verification of SAN field in client certificate for peer connections. --experimental-watch-progress-notify-interval '10m' Duration of periodical watch progress notification. Unsafe feature: --force-new-cluster 'false' Force to create a new one-member cluster. CAUTIOUS with unsafe flag! It may break the guarantees given by the consensus protocol! TO BE DEPRECATED: --debug 'false' Enable debug-level logging for etcd. [WARN] Will be deprecated in v3.5. Use '--log-level=debug' instead. --log-package-levels '' Specify a particular log level for each etcd package (eg: 'etcdmain=CRITICAL,etcdserver=DEBUG'). yum\u5b89\u88c5\u65b9\u6cd5 [root@etcd ~]# yum install -y etcd [root@etcd ~]# systemctl start etcd","title":"\u5355\u673a\u90e8\u7f72"},{"location":"etcd/etcd/#api","text":"https://github.com/etcd-io/etcd/blob/6acb3d67fbe131b3b2d5d010e00ec80182be4628/Documentation/v2/api.md \u67e5\u770b\u6240\u6709\u503c\u7684API\u63a5\u53e3 curl http://127.0.0.1:2379/v2/keys {\"action\":\"get\",\"node\":{\"dir\":true}} lucas - \u7528\u4e8e kubernetes etcd3.0 + \u96c6\u7fa4\u7684\u57fa\u4e8e Web \u7684\u952e\u503c\u67e5\u770b\u5668\u3002 etcd-manager - \u73b0\u4ee3\u3001\u9ad8\u6548\u3001\u591a\u5e73\u53f0\u548c\u514d\u8d39\u7684 etcd 3.x GUI \u548c\u5ba2\u6237\u7aef\u5de5\u5177\u3002\u9002\u7528\u4e8e Windows\u3001Linux \u548c Mac\u3002","title":"API\u63a5\u53e3"},{"location":"go/gin__app_route/","text":"Gin \u8def\u7531\u62c6\u5206\u5230\u4e0d\u540c\u7684APP \u6709\u65f6\u5019\u9879\u76ee\u89c4\u6a21\u5b9e\u5728\u592a\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u66f4\u503e\u5411\u4e8e\u628a\u4e1a\u52a1\u62c6\u5206\u7684\u66f4\u8be6\u7ec6\u4e00\u4e9b\uff0c\u4f8b\u5982\u628a\u4e0d\u540c\u7684\u4e1a\u52a1\u4ee3\u7801\u62c6\u5206\u6210\u4e0d\u540c\u7684APP\u3002 \u56e0\u6b64\u6211\u4eec\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u5355\u72ec\u5b9a\u4e49\u4e00\u4e2aapp\u76ee\u5f55\uff0c\u7528\u6765\u5b58\u653e\u6211\u4eec\u4e0d\u540c\u4e1a\u52a1\u7ebf\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u8fdb\u884c\u6a2a\u5411\u6269\u5c55\u3002\u5927\u81f4\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myapp \u2502 go.mod \u2502 main.go \u251c\u2500app \u2502 \u251c\u2500blog \u2502 \u2502 handler.go \u2502 \u2502 router.go \u2502 \u2502 \u2502 \u2514\u2500shop \u2502 handler.go \u2502 router.go \u2502 \u2514\u2500routers route.go main.go package main import ( \"fmt\" \"myapp/app/blog\" \"myapp/app/shop\" \"myapp/routers\" ) func main() { // \u52a0\u8f7d\u591a\u4e2aAPP\u7684\u8def\u7531\u914d\u7f6e routers.Include(shop.Routers, blog.Routers) // \u521d\u59cb\u5316\u8def\u7531 r := routers.Init() if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } go.mod module myapp go 1.16 require github.com/gin-gonic/gin v1.7.3 route.go package routers import \"github.com/gin-gonic/gin\" type Option func(*gin.Engine) var options = []Option{} // \u6ce8\u518capp\u7684\u8def\u7531\u914d\u7f6e func Include(opts ...Option) { options = append(options, opts...) } // \u521d\u59cb\u5316 func Init() *gin.Engine { r := gin.Default() for _, opt := range options { opt(r) } return r } app/shop/handler.go package shop import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } app/shop/router.go package shop import \"github.com/gin-gonic/gin\" func Routers(e *gin.Engine) { e.GET(\"/shop\", helloShop) } app/blog/handler.go package blog import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } app/blog/router.go package blog import ( \"github.com/gin-gonic/gin\" ) func Routers(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u72ecAPP"},{"location":"go/gin__app_route/#gin-app","text":"\u6709\u65f6\u5019\u9879\u76ee\u89c4\u6a21\u5b9e\u5728\u592a\u5927\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u66f4\u503e\u5411\u4e8e\u628a\u4e1a\u52a1\u62c6\u5206\u7684\u66f4\u8be6\u7ec6\u4e00\u4e9b\uff0c\u4f8b\u5982\u628a\u4e0d\u540c\u7684\u4e1a\u52a1\u4ee3\u7801\u62c6\u5206\u6210\u4e0d\u540c\u7684APP\u3002 \u56e0\u6b64\u6211\u4eec\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u5355\u72ec\u5b9a\u4e49\u4e00\u4e2aapp\u76ee\u5f55\uff0c\u7528\u6765\u5b58\u653e\u6211\u4eec\u4e0d\u540c\u4e1a\u52a1\u7ebf\u7684\u4ee3\u7801\u6587\u4ef6\uff0c\u8fd9\u6837\u5c31\u5f88\u5bb9\u6613\u8fdb\u884c\u6a2a\u5411\u6269\u5c55\u3002\u5927\u81f4\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a myapp \u2502 go.mod \u2502 main.go \u251c\u2500app \u2502 \u251c\u2500blog \u2502 \u2502 handler.go \u2502 \u2502 router.go \u2502 \u2502 \u2502 \u2514\u2500shop \u2502 handler.go \u2502 router.go \u2502 \u2514\u2500routers route.go main.go package main import ( \"fmt\" \"myapp/app/blog\" \"myapp/app/shop\" \"myapp/routers\" ) func main() { // \u52a0\u8f7d\u591a\u4e2aAPP\u7684\u8def\u7531\u914d\u7f6e routers.Include(shop.Routers, blog.Routers) // \u521d\u59cb\u5316\u8def\u7531 r := routers.Init() if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } go.mod module myapp go 1.16 require github.com/gin-gonic/gin v1.7.3 route.go package routers import \"github.com/gin-gonic/gin\" type Option func(*gin.Engine) var options = []Option{} // \u6ce8\u518capp\u7684\u8def\u7531\u914d\u7f6e func Include(opts ...Option) { options = append(options, opts...) } // \u521d\u59cb\u5316 func Init() *gin.Engine { r := gin.Default() for _, opt := range options { opt(r) } return r } app/shop/handler.go package shop import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } app/shop/router.go package shop import \"github.com/gin-gonic/gin\" func Routers(e *gin.Engine) { e.GET(\"/shop\", helloShop) } app/blog/handler.go package blog import ( \"github.com/gin-gonic/gin\" \"net/http\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } app/blog/router.go package blog import ( \"github.com/gin-gonic/gin\" ) func Routers(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Gin \u8def\u7531\u62c6\u5206\u5230\u4e0d\u540c\u7684APP"},{"location":"go/gin_route/","text":"Go Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u4e2a\u6587\u4ef6 Gin \u8def\u7531\u62c6\u5206\u6210\u591a\u4e2a\u6587\u4ef6\uff0c\u8fd9\u6837\u9002\u5408\u4e2d\u5c0f\u578b\u9879\u76ee mygin \u2502 go.mod \u2502 main.go \u2514\u2500 routers load.go shop.go main.go package main import ( \"fmt\" \"github.com/gin-gonic/gin\" \"mygin/routers\" ) func main() { r := gin.Default() routers.LoadBlog(r) routers.LoadShop(r) if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } load.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } func LoadBlog(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } shop.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } func LoadShop(e *gin.Engine) { e.GET(\"/Shop\", helloShop) } go.mod module mygin go 1.16 require github.com/gin-gonic/gin v1.7.3 \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u4e2a\u6587\u4ef6"},{"location":"go/gin_route/#go-gin","text":"Gin \u8def\u7531\u62c6\u5206\u6210\u591a\u4e2a\u6587\u4ef6\uff0c\u8fd9\u6837\u9002\u5408\u4e2d\u5c0f\u578b\u9879\u76ee mygin \u2502 go.mod \u2502 main.go \u2514\u2500 routers load.go shop.go main.go package main import ( \"fmt\" \"github.com/gin-gonic/gin\" \"mygin/routers\" ) func main() { r := gin.Default() routers.LoadBlog(r) routers.LoadShop(r) if err := r.Run(); err != nil { fmt.Println(\"startup service failed, err:%v\\n\", err) } } load.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloBlog(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Blog\", }) } func LoadBlog(e *gin.Engine) { e.GET(\"/Blog\", helloBlog) } shop.go package routers import ( \"net/http\" \"github.com/gin-gonic/gin\" ) func helloShop(c *gin.Context) { c.JSON(http.StatusOK, gin.H{ \"message\": \"Hello Shop!\", }) } func LoadShop(e *gin.Engine) { e.GET(\"/Shop\", helloShop) } go.mod module mygin go 1.16 require github.com/gin-gonic/gin v1.7.3 \u7136\u540e\u5728\u7ec8\u7aef\u8fd0\u884c D:\\idea\\mygin>go mod tidy \u9879\u76ee\u8fd0\u884c\uff0c\u6216\u8005\u5728goland\u4e2d main.go\u53f3\u952e\u8fd0\u884c D:\\idea\\mygin>go run main.go","title":"Go Gin \u8def\u7531\u62c6\u5206\u6210\u5355\u4e2a\u6587\u4ef6"},{"location":"go/go_gin/","text":"Go Gin Web\u6846\u67b6\u5165\u95e8 Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u8bbe\u7f6e\u6e90 \u5b98\u7f51\u5730\u5740\uff1ahttps://goproxy.io/zh/ 1. \u53f3\u952e \u6211\u7684\u7535\u8111 -> \u5c5e\u6027 -> \u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e -> \u73af\u5883\u53d8\u91cf 2. \u5728 \u201c[\u4f60\u7684\u7528\u6237\u540d]\u7684\u7528\u6237\u53d8\u91cf\u201d \u4e2d\u70b9\u51fb \u201d\u65b0\u5efa\u201c \u6309\u94ae 3. \u5728 \u201c\u53d8\u91cf\u540d\u201d \u8f93\u5165\u6846\u5e76\u65b0\u589e \u201cGOPROXY\u201d 4. \u5728\u5bf9\u5e94\u7684 \u201c\u53d8\u91cf\u503c\u201d \u8f93\u5165\u6846\u4e2d\u65b0\u589e \u201chttps://goproxy.io,direct\u201d 5. \u6700\u540e\u70b9\u51fb \u201c\u786e\u5b9a\u201d \u6309\u94ae\u4fdd\u5b58\u8bbe\u7f6e \u521b\u5efagin\u9879\u76ee \u7136\u540e\u9879\u76ee\u4e2d\u65b0\u5efamain.go\u6587\u4ef6 package main import \"github.com/gin-gonic/gin\" func main() { r := gin.Default() r.GET(\"/ping\", func(c *gin.Context) { c.JSON(200, gin.H{ \"message\": \"pong\", }) }) r.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\") } \u5728goland\u7ec8\u7aef\u8f93\u5165\u4e0b\u9762\u4ee3\u7801\uff0c\u7f16\u8bd1\u4f9d\u8d56\u5305\uff0c\u4e0b\u8f7d\u5305 D:\\idea\\mygin>go mod edit -require github.com/gin-gonic/gin@latest D:\\idea\\mygin>go mod tidy \u5982\u56fe \u9879\u76ee\u4e2d\u53f3\u952e\u8fd0\u884c\uff0c\u5982\u56fe","title":"Gin\u5165\u95e8"},{"location":"go/go_gin/#go-gin-web","text":"Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u8bbe\u7f6e\u6e90 \u5b98\u7f51\u5730\u5740\uff1ahttps://goproxy.io/zh/ 1. \u53f3\u952e \u6211\u7684\u7535\u8111 -> \u5c5e\u6027 -> \u9ad8\u7ea7\u7cfb\u7edf\u8bbe\u7f6e -> \u73af\u5883\u53d8\u91cf 2. \u5728 \u201c[\u4f60\u7684\u7528\u6237\u540d]\u7684\u7528\u6237\u53d8\u91cf\u201d \u4e2d\u70b9\u51fb \u201d\u65b0\u5efa\u201c \u6309\u94ae 3. \u5728 \u201c\u53d8\u91cf\u540d\u201d \u8f93\u5165\u6846\u5e76\u65b0\u589e \u201cGOPROXY\u201d 4. \u5728\u5bf9\u5e94\u7684 \u201c\u53d8\u91cf\u503c\u201d \u8f93\u5165\u6846\u4e2d\u65b0\u589e \u201chttps://goproxy.io,direct\u201d 5. \u6700\u540e\u70b9\u51fb \u201c\u786e\u5b9a\u201d \u6309\u94ae\u4fdd\u5b58\u8bbe\u7f6e \u521b\u5efagin\u9879\u76ee \u7136\u540e\u9879\u76ee\u4e2d\u65b0\u5efamain.go\u6587\u4ef6 package main import \"github.com/gin-gonic/gin\" func main() { r := gin.Default() r.GET(\"/ping\", func(c *gin.Context) { c.JSON(200, gin.H{ \"message\": \"pong\", }) }) r.Run() // listen and serve on 0.0.0.0:8080 (for windows \"localhost:8080\") } \u5728goland\u7ec8\u7aef\u8f93\u5165\u4e0b\u9762\u4ee3\u7801\uff0c\u7f16\u8bd1\u4f9d\u8d56\u5305\uff0c\u4e0b\u8f7d\u5305 D:\\idea\\mygin>go mod edit -require github.com/gin-gonic/gin@latest D:\\idea\\mygin>go mod tidy \u5982\u56fe \u9879\u76ee\u4e2d\u53f3\u952e\u8fd0\u884c\uff0c\u5982\u56fe","title":"Go Gin Web\u6846\u67b6\u5165\u95e8"},{"location":"go/go_one/","text":"\u5b89\u88c5 Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u4e0b\u8f7d\u5b89\u88c5 hello world \u6253\u5f00goland idea \u521b\u5efa\u9879\u76ee\uff0c\u521b\u5efago\u6587\u4ef6 package main import \"fmt\" func main() { fmt.Println(\"Hello, World!\") } \u53f3\u952e--\u300b\u8fd0\u884c \u547d\u4ee4\u884c \u7528git\u5e26\u7684bash \u8fdb\u5165\u9879\u76ee\u76ee\u5f55 \u6267\u884c\u547d\u4ee4 fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go run one.go Hello, World! fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go build one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ls one.exe* one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ./one.exe Hello, World!","title":"Go\u5165\u95e8"},{"location":"go/go_one/#_1","text":"Go\u5b89\u88c5 https://golang.google.cn/dl/ Windows\u5b89\u88c5\u76f4\u63a5\u9009\u62e9go1.16.6.windows-amd64.msi \u5b89\u88c5\u7684\u65f6\u5019\u52fe\u7ebf\u6dfb\u52a0\u73af\u5883\u53d8\u91cf IDEA\u5b89\u88c5 https://www.jetbrains.com/go/ \u4e0b\u8f7d\u5b89\u88c5","title":"\u5b89\u88c5"},{"location":"go/go_one/#hello-world","text":"\u6253\u5f00goland idea \u521b\u5efa\u9879\u76ee\uff0c\u521b\u5efago\u6587\u4ef6 package main import \"fmt\" func main() { fmt.Println(\"Hello, World!\") } \u53f3\u952e--\u300b\u8fd0\u884c","title":"hello world"},{"location":"go/go_one/#_2","text":"\u7528git\u5e26\u7684bash \u8fdb\u5165\u9879\u76ee\u76ee\u5f55 \u6267\u884c\u547d\u4ee4 fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go run one.go Hello, World! fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ go build one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ls one.exe* one.go fugui.wang@wangfuguiK3 MINGW64 /d/idea/go_one $ ./one.exe Hello, World!","title":"\u547d\u4ee4\u884c"},{"location":"kubernetes/ClusterRole/","text":"Role \u4e0e ClusterRole Role \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u89d2\u8272\u5305\u542b\u4e86\u4e00\u5957\u8868\u793a\u4e00\u7ec4\u6743\u9650\u7684\u89c4\u5219\u3002\u4f46\u662f\u53ea\u5bf9\u4e00\u4e2a namespace \u751f\u6548\uff0c\u4e66\u5199\u89c4\u5219\u7684\u65f6\u5019\u5fc5\u987b\u5199\u4e0a\u9488\u5bf9\u54ea\u4e2a namespace ClusterRole \u5bf9\u8c61\u4e5f\u662f\u4e00\u4e2a\u89d2\u8272\u5305\u542b\u4e86\u4e00\u5957\u8868\u793a\u4e00\u7ec4\u6743\u9650\u7684\u89c4\u5219\uff0c\u4f46\u662f\u5bf9\u6574\u4e2a Kubernetes \u96c6\u7fa4\u8303\u56f4\u5185\u6709\u6548\u3002 RoleBinding \u4e0e ClusterRoleBinding RoleBinding \u5c31\u662f\u5c06\u4e00\u4e2a Role \u7ed1\u5b9a\u7ed9\u67d0\u4e2a\u7528\u6237\uff0c\u4e5f\u53ef\u4ee5\u7ed1\u5b9a ClusterRole \uff0c\u4f46\u662f\u53ea\u80fd\u5bf9\u4e00\u4e2a namespace \u751f\u6548\uff0c\u56e0\u4e3a RoleBinding \u9700\u8981\u6307\u5b9a namespace ClusterRoleBinding \u5c31\u662f\u5c06\u4e00\u4e2a ClusterRole \u7ed1\u5b9a\u7ed9\u67d0\u4e2a\u7528\u6237 Service Account ServiceAccount \u4e3a Pod \u4e2d\u7684\u8fdb\u7a0b\u63d0\u4f9b\u8eab\u4efd\u4fe1\u606f\u3002 \u5f53\u60a8\uff08\u771f\u4eba\u7528\u6237\uff09\u8bbf\u95ee\u96c6\u7fa4\uff08\u4f8b\u5982\u4f7f\u7528 kubectl \u547d\u4ee4\uff09\u65f6\uff0capiserver \u4f1a\u5c06\u60a8\u8ba4\u8bc1\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684 User Account\uff08\u76ee\u524d\u901a\u5e38\u662f admin \uff0c\u9664\u975e\u60a8\u7684\u7cfb\u7edf\u7ba1\u7406\u5458\u81ea\u5b9a\u4e49\u4e86\u96c6\u7fa4\u914d\u7f6e\uff09\u3002Pod \u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u4e0e apiserver \u8054\u7cfb\u3002 \u5f53\u5b83\u4eec\u5728\u8054\u7cfb apiserver \u7684\u65f6\u5019\uff0c\u5b83\u4eec\u4f1a\u88ab\u8ba4\u8bc1\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684 Service Account\uff08\u4f8b\u5982 default \uff09\u3002 \u5f53\u60a8\u521b\u5efa pod \u7684\u65f6\u5019\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u6307\u5b9a\u4e00\u4e2a service account\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5f97\u5728\u4e0e\u8be5pod \u76f8\u540c\u7684 namespace \u4e0b\u4e3a\u5176\u6307\u6d3e\u4e00\u4e2a default service account\u3002\u5982\u679c\u60a8\u83b7\u53d6\u521a\u521b\u5efa\u7684 pod \u7684\u539f\u59cb json \u6216 yaml \u4fe1\u606f\uff08\u4f8b\u5982\u4f7f\u7528 kubectl get pods/podename -o yaml \u547d\u4ee4\uff09\uff0c\u60a8\u5c06\u770b\u5230 spec.serviceAccountName \u5b57\u6bb5\u5df2\u7ecf\u88ab\u8bbe\u7f6e\u4e3a default \u3002 \u8be6\u89e3\uff1a https://jimmysong.io/kubernetes-handbook/concepts/serviceaccount.html https://jimmysong.io/kubernetes-handbook/concepts/rbac.html kube-state-metrics-clusterRole.yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: labels: app.kubernetes.io/name: kube-state-metrics app.kubernetes.io/version: v1.9.5 name: kube-state-metrics rules: - apiGroups: - \"\" resources: - configmaps - secrets - nodes - pods - services - resourcequotas - replicationcontrollers - limitranges - persistentvolumeclaims - persistentvolumes - namespaces - endpoints verbs: - list - watch - apiGroups: - extensions resources: - daemonsets - deployments - replicasets - ingresses verbs: - list - watch - apiGroups: - apps resources: - statefulsets - daemonsets - deployments - replicasets verbs: - list - watch - apiGroups: - batch resources: - cronjobs - jobs verbs: - list - watch - apiGroups: - autoscaling resources: - horizontalpodautoscalers verbs: - list - watch - apiGroups: - authentication.k8s.io resources: - tokenreviews verbs: - create - apiGroups: - authorization.k8s.io resources: - subjectaccessreviews verbs: - create - apiGroups: - policy resources: - poddisruptionbudgets verbs: - list - watch - apiGroups: - certificates.k8s.io resources: - certificatesigningrequests verbs: - list - watch - apiGroups: - storage.k8s.io resources: - storageclasses - volumeattachments verbs: - list - watch - apiGroups: - admissionregistration.k8s.io resources: - mutatingwebhookconfigurations - validatingwebhookconfigurations verbs: - list - watch - apiGroups: - networking.k8s.io resources: - networkpolicies verbs: - list - watch kube-state-metrics-clusterRoleBinding.yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: labels: app.kubernetes.io/name: kube-state-metrics app.kubernetes.io/version: v1.9.5 name: kube-state-metrics roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: kube-state-metrics subjects: - kind: ServiceAccount name: kube-state-metrics namespace: monitoring kube-state-metrics-serviceAccount.yaml apiVersion: v1 kind: ServiceAccount metadata: labels: app.kubernetes.io/name: kube-state-metrics app.kubernetes.io/version: v1.9.5 name: kube-state-metrics namespace: monitoring","title":"ClusterRole"},{"location":"kubernetes/ClusterRole/#role-clusterrole","text":"Role \u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u89d2\u8272\u5305\u542b\u4e86\u4e00\u5957\u8868\u793a\u4e00\u7ec4\u6743\u9650\u7684\u89c4\u5219\u3002\u4f46\u662f\u53ea\u5bf9\u4e00\u4e2a namespace \u751f\u6548\uff0c\u4e66\u5199\u89c4\u5219\u7684\u65f6\u5019\u5fc5\u987b\u5199\u4e0a\u9488\u5bf9\u54ea\u4e2a namespace ClusterRole \u5bf9\u8c61\u4e5f\u662f\u4e00\u4e2a\u89d2\u8272\u5305\u542b\u4e86\u4e00\u5957\u8868\u793a\u4e00\u7ec4\u6743\u9650\u7684\u89c4\u5219\uff0c\u4f46\u662f\u5bf9\u6574\u4e2a Kubernetes \u96c6\u7fa4\u8303\u56f4\u5185\u6709\u6548\u3002","title":"Role \u4e0e ClusterRole"},{"location":"kubernetes/ClusterRole/#rolebinding-clusterrolebinding","text":"RoleBinding \u5c31\u662f\u5c06\u4e00\u4e2a Role \u7ed1\u5b9a\u7ed9\u67d0\u4e2a\u7528\u6237\uff0c\u4e5f\u53ef\u4ee5\u7ed1\u5b9a ClusterRole \uff0c\u4f46\u662f\u53ea\u80fd\u5bf9\u4e00\u4e2a namespace \u751f\u6548\uff0c\u56e0\u4e3a RoleBinding \u9700\u8981\u6307\u5b9a namespace ClusterRoleBinding \u5c31\u662f\u5c06\u4e00\u4e2a ClusterRole \u7ed1\u5b9a\u7ed9\u67d0\u4e2a\u7528\u6237","title":"RoleBinding \u4e0e ClusterRoleBinding"},{"location":"kubernetes/ClusterRole/#service-account","text":"ServiceAccount \u4e3a Pod \u4e2d\u7684\u8fdb\u7a0b\u63d0\u4f9b\u8eab\u4efd\u4fe1\u606f\u3002 \u5f53\u60a8\uff08\u771f\u4eba\u7528\u6237\uff09\u8bbf\u95ee\u96c6\u7fa4\uff08\u4f8b\u5982\u4f7f\u7528 kubectl \u547d\u4ee4\uff09\u65f6\uff0capiserver \u4f1a\u5c06\u60a8\u8ba4\u8bc1\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684 User Account\uff08\u76ee\u524d\u901a\u5e38\u662f admin \uff0c\u9664\u975e\u60a8\u7684\u7cfb\u7edf\u7ba1\u7406\u5458\u81ea\u5b9a\u4e49\u4e86\u96c6\u7fa4\u914d\u7f6e\uff09\u3002Pod \u5bb9\u5668\u4e2d\u7684\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u4e0e apiserver \u8054\u7cfb\u3002 \u5f53\u5b83\u4eec\u5728\u8054\u7cfb apiserver \u7684\u65f6\u5019\uff0c\u5b83\u4eec\u4f1a\u88ab\u8ba4\u8bc1\u4e3a\u4e00\u4e2a\u7279\u5b9a\u7684 Service Account\uff08\u4f8b\u5982 default \uff09\u3002 \u5f53\u60a8\u521b\u5efa pod \u7684\u65f6\u5019\uff0c\u5982\u679c\u60a8\u6ca1\u6709\u6307\u5b9a\u4e00\u4e2a service account\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5f97\u5728\u4e0e\u8be5pod \u76f8\u540c\u7684 namespace \u4e0b\u4e3a\u5176\u6307\u6d3e\u4e00\u4e2a default service account\u3002\u5982\u679c\u60a8\u83b7\u53d6\u521a\u521b\u5efa\u7684 pod \u7684\u539f\u59cb json \u6216 yaml \u4fe1\u606f\uff08\u4f8b\u5982\u4f7f\u7528 kubectl get pods/podename -o yaml \u547d\u4ee4\uff09\uff0c\u60a8\u5c06\u770b\u5230 spec.serviceAccountName \u5b57\u6bb5\u5df2\u7ecf\u88ab\u8bbe\u7f6e\u4e3a default \u3002 \u8be6\u89e3\uff1a https://jimmysong.io/kubernetes-handbook/concepts/serviceaccount.html https://jimmysong.io/kubernetes-handbook/concepts/rbac.html kube-state-metrics-clusterRole.yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRole metadata: labels: app.kubernetes.io/name: kube-state-metrics app.kubernetes.io/version: v1.9.5 name: kube-state-metrics rules: - apiGroups: - \"\" resources: - configmaps - secrets - nodes - pods - services - resourcequotas - replicationcontrollers - limitranges - persistentvolumeclaims - persistentvolumes - namespaces - endpoints verbs: - list - watch - apiGroups: - extensions resources: - daemonsets - deployments - replicasets - ingresses verbs: - list - watch - apiGroups: - apps resources: - statefulsets - daemonsets - deployments - replicasets verbs: - list - watch - apiGroups: - batch resources: - cronjobs - jobs verbs: - list - watch - apiGroups: - autoscaling resources: - horizontalpodautoscalers verbs: - list - watch - apiGroups: - authentication.k8s.io resources: - tokenreviews verbs: - create - apiGroups: - authorization.k8s.io resources: - subjectaccessreviews verbs: - create - apiGroups: - policy resources: - poddisruptionbudgets verbs: - list - watch - apiGroups: - certificates.k8s.io resources: - certificatesigningrequests verbs: - list - watch - apiGroups: - storage.k8s.io resources: - storageclasses - volumeattachments verbs: - list - watch - apiGroups: - admissionregistration.k8s.io resources: - mutatingwebhookconfigurations - validatingwebhookconfigurations verbs: - list - watch - apiGroups: - networking.k8s.io resources: - networkpolicies verbs: - list - watch kube-state-metrics-clusterRoleBinding.yaml apiVersion: rbac.authorization.k8s.io/v1 kind: ClusterRoleBinding metadata: labels: app.kubernetes.io/name: kube-state-metrics app.kubernetes.io/version: v1.9.5 name: kube-state-metrics roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: kube-state-metrics subjects: - kind: ServiceAccount name: kube-state-metrics namespace: monitoring kube-state-metrics-serviceAccount.yaml apiVersion: v1 kind: ServiceAccount metadata: labels: app.kubernetes.io/name: kube-state-metrics app.kubernetes.io/version: v1.9.5 name: kube-state-metrics namespace: monitoring","title":"Service Account"},{"location":"kubernetes/configmap-one/","text":"Depleyment\u6302\u8f7d\u914d\u7f6e\u6587\u4ef6 \u4f8b\u5982prometheus\u6302\u8f7d\u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6\uff1aprometheus.yml \u4ee5ConfigMap\u5f62\u5f0f\u5b58\u50a8\uff0c\u5982\u4e0b\uff0c\u5728K8S\u4e2d\u7528 kubectl apply -f prometheus-yml.yaml \u547d\u4ee4 \u53d1\u5e03 \u4e0b\u9762\u5185\u5bb9\u6587\u4ef6\u540d\u4e3a\uff1a prometheus-yml.yaml apiVersion: v1 kind: ConfigMap metadata: name: infra-prometheus-yml namespace: default data: prometheus.yml: >- global: scrape_interval: 15s evaluation_interval: 15s alerting: alertmanagers: - static_configs: - targets: rule_files: scrape_configs: - job_name: 'prometheus' consul_sd_configs: - server: 'infra-consul-net:8500' services: [] relabel_configs: - source_labels: [__meta_consul_service] regex: .*prometheus.* action: keep - regex: __meta_consul_service_metadata_(.+) action: labelmap - job_name: 'node-exporter' consul_sd_configs: - server: 'infra-consul-net:8500' services: [] relabel_configs: - source_labels: [__meta_consul_service] regex: .*node-exporter.* action: keep - regex: __meta_consul_service_metadata_(.+) action: labelmap - job_name: 'kube-state-metrics' consul_sd_configs: - server: 'infra-consul-net:8500' services: [] relabel_configs: - source_labels: [ __meta_consul_service ] regex: .*kube-state-metrics.* action: keep - regex: __meta_consul_service_metadata_(.+) action: labelmap \u5e94\u7528\u90e8\u7f72\u6587\u4ef6\uff1aprometheus-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: infra-prometheus namespace: default labels: app: infra-prometheus version: infra-prometheus-uat-podname spec: replicas: 1 progressDeadlineSeconds: 600 selector: matchLabels: app: infra-prometheus template: metadata: labels: app: infra-prometheus version: infra-prometheus-uat-podname spec: containers: - name: infra-prometheus-uat-podname image: prom/prometheus:latest #\u6302\u8f7d\u4e0b\u9762\u7684configmap volumeMounts: - mountPath: /etc/prometheus/prometheus.yml subPath: prometheus.yml name: appconfs #\u8bbe\u7f6eIP\uff0cPOD_Name\u53d8\u91cf env: - name: MY_POD_NAME valueFrom: fieldRef: fieldPath: metadata.name - name: MY_POD_IP valueFrom: fieldRef: fieldPath: status.podIP - name: ENV value: UAT ports: - name: requestshttp containerPort: 9090 protocol: TCP - name: curl image: curlimages/curl:latest env: - name: MY_POD_NAME valueFrom: fieldRef: fieldPath: metadata.name - name: MY_POD_IP valueFrom: fieldRef: fieldPath: status.podIP - name: ENV value: UAT #\u8be5\u547d\u4ee4\u8ba9\u5bb9\u5668\u6c38\u4e45\u8fd0\u884c command: [ '/bin/sh','-c' ] args: ['while true;do sleep 1s;done'] lifecycle: postStart: exec: command: [ '/bin/sh','-c','curl -X PUT -d \"{\\\"id\\\": \\\"prometheus-$MY_POD_IP\\\",\\\"name\\\": \\\"prometheus\\\",\\\"address\\\":\\\"$MY_POD_IP\\\",\\\"port\\\": 9090,\\\"tags\\\": [\\\"prometheus\\\"],\\\"checks\\\": [{\\\"http\\\": \\\"http://$MY_POD_IP:9090/metrics\\\", \\\"interval\\\": \\\"15s\\\"}]}\" http://infra-consul-net:8500/v1/agent/service/register && echo \"{\\\"id\\\": \\\"prometheus-$MY_POD_IP\\\",\\\"name\\\": \\\"prometheus\\\",\\\"address\\\":\\\"$MY_POD_IP\\\",\\\"port\\\": 9090,\\\"tags\\\": [\\\"prometheus\\\"],\\\"checks\\\": [{\\\"http\\\": \\\"http://$MY_POD_IP:9090/metrics\\\", \\\"interval\\\": \\\"15s\\\"}]}\" > /tmp/curl.txt' ] preStop: exec: command: [ '/bin/sh','-c','curl -X PUT http://infra-consul-net:8500/v1/agent/service/deregister/prometheus-$MY_POD_IP' ] #\u58f0\u660econfigmap\u7684\u90e8\u5206\u952e\u503c volumes: - name: appconfs configMap: name: infra-prometheus-yml items: - key: prometheus.yml path: prometheus.yml configMap\u5377\u63d2\u4ef6\u4e2d\u7684items\u5b57\u6bb5\u7684\u503c\u662f\u4e00\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u53ef\u5d4c\u5957\u4f7f\u75283\u4e2a\u5b57\u6bb5\u6765\u7ec4\u5408\u6307\u5b9a\u8981\u5f15\u7528\u7684\u7279\u5b9a\u952e\u3002 \u25aakey \uff1a\u8981\u5f15\u7528\u7684\u952e\u540d\u79f0\uff0c\u5fc5\u9009\u5b57\u6bb5\u3002 \u25aapath \uff1a\u5bf9\u5e94\u7684\u952e\u5728\u6302\u8f7d\u70b9\u76ee\u5f55\u4e2d\u6620\u5c04\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u5b83\u53ef\u4e0d\u540c\u4e8e\u952e\u540d\u79f0\uff0c\u5fc5\u9009\u5b57\u6bb5\u3002 \u25aamode \uff1a\u6587\u4ef6\u7684\u6743\u9650\u6a21\u578b\uff0c\u53ef\u7528\u8303\u56f4\u4e3a0\uff5e0777\u3002 https://www.jianshu.com/p/762c8ccdb092","title":"deployment\u6dfb\u52a0\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/configmap-one/#depleyment","text":"\u4f8b\u5982prometheus\u6302\u8f7d\u914d\u7f6e\u6587\u4ef6 \u914d\u7f6e\u6587\u4ef6\uff1aprometheus.yml \u4ee5ConfigMap\u5f62\u5f0f\u5b58\u50a8\uff0c\u5982\u4e0b\uff0c\u5728K8S\u4e2d\u7528 kubectl apply -f prometheus-yml.yaml \u547d\u4ee4 \u53d1\u5e03 \u4e0b\u9762\u5185\u5bb9\u6587\u4ef6\u540d\u4e3a\uff1a prometheus-yml.yaml apiVersion: v1 kind: ConfigMap metadata: name: infra-prometheus-yml namespace: default data: prometheus.yml: >- global: scrape_interval: 15s evaluation_interval: 15s alerting: alertmanagers: - static_configs: - targets: rule_files: scrape_configs: - job_name: 'prometheus' consul_sd_configs: - server: 'infra-consul-net:8500' services: [] relabel_configs: - source_labels: [__meta_consul_service] regex: .*prometheus.* action: keep - regex: __meta_consul_service_metadata_(.+) action: labelmap - job_name: 'node-exporter' consul_sd_configs: - server: 'infra-consul-net:8500' services: [] relabel_configs: - source_labels: [__meta_consul_service] regex: .*node-exporter.* action: keep - regex: __meta_consul_service_metadata_(.+) action: labelmap - job_name: 'kube-state-metrics' consul_sd_configs: - server: 'infra-consul-net:8500' services: [] relabel_configs: - source_labels: [ __meta_consul_service ] regex: .*kube-state-metrics.* action: keep - regex: __meta_consul_service_metadata_(.+) action: labelmap \u5e94\u7528\u90e8\u7f72\u6587\u4ef6\uff1aprometheus-deployment.yaml apiVersion: apps/v1 kind: Deployment metadata: name: infra-prometheus namespace: default labels: app: infra-prometheus version: infra-prometheus-uat-podname spec: replicas: 1 progressDeadlineSeconds: 600 selector: matchLabels: app: infra-prometheus template: metadata: labels: app: infra-prometheus version: infra-prometheus-uat-podname spec: containers: - name: infra-prometheus-uat-podname image: prom/prometheus:latest #\u6302\u8f7d\u4e0b\u9762\u7684configmap volumeMounts: - mountPath: /etc/prometheus/prometheus.yml subPath: prometheus.yml name: appconfs #\u8bbe\u7f6eIP\uff0cPOD_Name\u53d8\u91cf env: - name: MY_POD_NAME valueFrom: fieldRef: fieldPath: metadata.name - name: MY_POD_IP valueFrom: fieldRef: fieldPath: status.podIP - name: ENV value: UAT ports: - name: requestshttp containerPort: 9090 protocol: TCP - name: curl image: curlimages/curl:latest env: - name: MY_POD_NAME valueFrom: fieldRef: fieldPath: metadata.name - name: MY_POD_IP valueFrom: fieldRef: fieldPath: status.podIP - name: ENV value: UAT #\u8be5\u547d\u4ee4\u8ba9\u5bb9\u5668\u6c38\u4e45\u8fd0\u884c command: [ '/bin/sh','-c' ] args: ['while true;do sleep 1s;done'] lifecycle: postStart: exec: command: [ '/bin/sh','-c','curl -X PUT -d \"{\\\"id\\\": \\\"prometheus-$MY_POD_IP\\\",\\\"name\\\": \\\"prometheus\\\",\\\"address\\\":\\\"$MY_POD_IP\\\",\\\"port\\\": 9090,\\\"tags\\\": [\\\"prometheus\\\"],\\\"checks\\\": [{\\\"http\\\": \\\"http://$MY_POD_IP:9090/metrics\\\", \\\"interval\\\": \\\"15s\\\"}]}\" http://infra-consul-net:8500/v1/agent/service/register && echo \"{\\\"id\\\": \\\"prometheus-$MY_POD_IP\\\",\\\"name\\\": \\\"prometheus\\\",\\\"address\\\":\\\"$MY_POD_IP\\\",\\\"port\\\": 9090,\\\"tags\\\": [\\\"prometheus\\\"],\\\"checks\\\": [{\\\"http\\\": \\\"http://$MY_POD_IP:9090/metrics\\\", \\\"interval\\\": \\\"15s\\\"}]}\" > /tmp/curl.txt' ] preStop: exec: command: [ '/bin/sh','-c','curl -X PUT http://infra-consul-net:8500/v1/agent/service/deregister/prometheus-$MY_POD_IP' ] #\u58f0\u660econfigmap\u7684\u90e8\u5206\u952e\u503c volumes: - name: appconfs configMap: name: infra-prometheus-yml items: - key: prometheus.yml path: prometheus.yml configMap\u5377\u63d2\u4ef6\u4e2d\u7684items\u5b57\u6bb5\u7684\u503c\u662f\u4e00\u4e2a\u5bf9\u8c61\u5217\u8868\uff0c\u53ef\u5d4c\u5957\u4f7f\u75283\u4e2a\u5b57\u6bb5\u6765\u7ec4\u5408\u6307\u5b9a\u8981\u5f15\u7528\u7684\u7279\u5b9a\u952e\u3002 \u25aakey \uff1a\u8981\u5f15\u7528\u7684\u952e\u540d\u79f0\uff0c\u5fc5\u9009\u5b57\u6bb5\u3002 \u25aapath \uff1a\u5bf9\u5e94\u7684\u952e\u5728\u6302\u8f7d\u70b9\u76ee\u5f55\u4e2d\u6620\u5c04\u7684\u6587\u4ef6\u540d\u79f0\uff0c\u5b83\u53ef\u4e0d\u540c\u4e8e\u952e\u540d\u79f0\uff0c\u5fc5\u9009\u5b57\u6bb5\u3002 \u25aamode \uff1a\u6587\u4ef6\u7684\u6743\u9650\u6a21\u578b\uff0c\u53ef\u7528\u8303\u56f4\u4e3a0\uff5e0777\u3002 https://www.jianshu.com/p/762c8ccdb092","title":"Depleyment\u6302\u8f7d\u914d\u7f6e\u6587\u4ef6"},{"location":"kubernetes/depolyment_model/","text":"","title":"Depolyment model"},{"location":"kubernetes/diaodu/","text":"nodeSelector \u6211\u4eec\u77e5\u9053 label \u662f kubernetes \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u7528\u6237\u53ef\u4ee5\u975e\u5e38\u7075\u6d3b\u7684\u5229\u7528 label \u6765\u7ba1\u7406\u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u6700\u5e38\u89c1\u7684\u4e00\u4e2a\u5c31\u662f service \u901a\u8fc7\u5339\u914d label \u53bb\u9009\u62e9 POD \u7684\u3002\u800c POD \u7684\u8c03\u5ea6\u4e5f\u53ef\u4ee5\u6839\u636e\u8282\u70b9\u7684 label \u8fdb\u884c\u7279\u5b9a\u7684\u90e8\u7f72\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u6211\u4eec\u7684 node \u7684 label\uff1a $ kubectl get nodes --show-labels NAME STATUS ROLES AGE VERSION LABELS 192.168.1.140 Ready <none> 42d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/hostname=192.168.1.140 192.168.1.161 Ready <none> 118d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/cluster-service=true,kubernetes.io/hostname=192.168.1.161 192.168.1.170 Ready <none> 118d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/cluster-service=true,kubernetes.io/hostname=192.168.1.170 192.168.1.172 Ready <none> 114d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/cluster-service=true,kubernetes.io/hostname=192.168.1.172 \u73b0\u5728\u6211\u4eec\u5148\u7ed9\u8282\u70b9 192.168.1.140 \u589e\u52a0\u4e00\u4e2a source=qikqiak \u7684\u6807\u7b7e\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a $ kubectl label nodes 192.168.1.140 source=qikqiak node \"192.168.1.140\" labeled \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 --show-labels \u53c2\u6570\u53ef\u4ee5\u67e5\u770b\u4e0a\u8ff0\u6807\u7b7e\u662f\u5426\u751f\u6548\u3002\u5f53 node \u88ab\u6253\u4e0a\u4e86\u76f8\u5173\u6807\u7b7e\u540e\uff0c\u5728\u8c03\u5ea6\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6807\u7b7e\u4e86\uff0c\u53ea\u9700\u8981\u5728 POD \u7684 spec \u5b57\u6bb5\u4e2d\u6dfb\u52a0 nodeSelector \u5b57\u6bb5\uff0c\u91cc\u9762\u662f\u6211\u4eec\u9700\u8981\u88ab\u8c03\u5ea6\u7684\u8282\u70b9\u7684 label\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u4e4b\u524d\u7684\u4e00\u4e2a\u9ed8\u8ba4\u7684 busybox POD \u7684 YAML \u6587\u4ef6\uff1a apiVersion: v1 kind: Pod metadata: labels: app: busybox-pod name: test-busybox spec: containers: - command: - sleep - \"3600\" image: busybox imagePullPolicy: Always name: test-busybox \u7136\u540e\u6211\u9700\u8981\u8ba9\u4e0a\u9762\u7684 POD \u88ab\u8c03\u5ea6\u5230140\u7684\u8282\u70b9\u4e0a\uff0c\u90a3\u4e48\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u53bb\u5339\u914d140\u4e0a\u9762\u7684 label\uff0c\u5982\u4e0b\uff1a apiVersion: v1 kind: Pod metadata: labels: app: busybox-pod name: test-busybox spec: containers: - command: - sleep - \"3600\" image: busybox imagePullPolicy: Always name: test-busybox nodeSelector: source: qikqiak \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 describe \u547d\u4ee4\u67e5\u770b\u8c03\u5ea6\u7ed3\u679c\uff1a $ kubectl describe pod test-busybox ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 49s default-scheduler Successfully assigned test-busybox to 192.168.1.140 Normal SuccessfulMountVolume 49s kubelet, 192.168.1.140 MountVolume.SetUp succeeded for volume \"default-token-hmpbz\" Normal Pulling 49s kubelet, 192.168.1.140 pulling image \"busybox\" Normal Pulled 41s kubelet, 192.168.1.140 Successfully pulled image \"busybox\" Normal Created 41s kubelet, 192.168.1.140 Created container Normal Started 41s kubelet, 192.168.1.140 Started container \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Events \u4e0b\u9762\u7684\u4fe1\u606f\uff0c\u4e0a\u9762\u7684 POD \u88ab\u6b63\u786e\u7684\u8c03\u5ea6\u5230\u4e86140\u8282\u70b9\u3002\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u611f\u53d7\u5230 nodeSelector \u7684\u65b9\u5f0f\u6bd4\u8f83\u76f4\u89c2\uff0c\u4f46\u662f\u8fd8\u591f\u7075\u6d3b\uff0c\u63a7\u5236\u7c92\u5ea6\u504f\u5927 node affinity \u8282\u70b9\u4eb2\u548c\u6027\uff08node affinity\uff09\u7684\u6982\u5ff5\u4e0e nodeSelector \u76f8\u4f3c\uff0c\u53ef\u4ee5\u57fa\u4e8e\u8282\u70b9\u7684\u6807\u7b7e\u6765\u9650\u5b9a Pod \u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230\u54ea\u4e9b\u8282\u70b9\u4e0a\u3002 \u5f53\u524d\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9\u4eb2\u548c\u6027\uff0c requiredDuringSchedulingIgnoredDuringExecution \uff08hard\uff0c\u76ee\u6807\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3\u6b64\u6761\u4ef6\uff09 \u4ee5\u53ca preferredDuringSchedulingIgnoredDuringExecution \uff08soft\uff0c\u76ee\u6807\u8282\u70b9\u6700\u597d\u80fd\u6ee1\u8db3\u6b64\u6761\u4ef6\uff09\u3002\u540d\u5b57\u4e2d IgnoredDuringExecution \u610f\u5473\u7740\uff1a\u5982\u679c Pod \u5df2\u7ecf\u8c03\u5ea6\u5230\u8282\u70b9\u4e0a\u4ee5\u540e\uff0c\u8282\u70b9\u7684\u6807\u7b7e\u53d1\u751f\u6539\u53d8\uff0c\u4f7f\u5f97\u8282\u70b9\u5df2\u7ecf\u4e0d\u518d\u5339\u914d\u8be5\u4eb2\u548c\u6027\u89c4\u5219\u4e86\uff0cPod \u4ecd\u5c06\u7ee7\u7eed\u5728\u8282\u70b9\u4e0a\u6267\u884c\uff08\u8fd9\u4e00\u70b9\u4e0e nodeSelector \u76f8\u4f3c\uff09\u3002\u5c06\u6765\uff0cKubernetes \u5c06\u4f1a\u63d0\u4f9b requiredDuringSchedulingRequiredDuringExecution \u8fd9\u4e2a\u9009\u9879\uff0c\u8be5\u9009\u9879\u4e0e requiredDuringSchedulingIgnoredDuringExecution \u76f8\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u5f53\u8282\u70b9\u7684\u6807\u7b7e\u4e0d\u5728\u5339\u914d\u4eb2\u548c\u6027\u89c4\u5219\u4e4b\u540e\uff0cPod \u5c06\u88ab\u4ece\u8282\u70b9\u4e0a\u9a71\u9010\u3002 requiredDuringSchedulingIgnoredDuringExecution \u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c \u53ea\u5728 Intel CPU \u4e0a\u8fd0\u884c\u8be5 Pod \uff0c preferredDuringSchedulingIgnoredDuringExecution \u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c \u5c3d\u91cf\u5728\u9ad8\u53ef\u7528\u533a XYZ \u4e2d\u8fd0\u884c\u8fd9\u4e2a Pod\uff0c\u4f46\u662f\u5982\u679c\u505a\u4e0d\u5230\uff0c\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u8fd0\u884c\u8be5 Pod \u3002 PodSpec \u4e2d\u901a\u8fc7 affinity.nodeAffinity \u5b57\u6bb5\u6765\u5b9a\u4e49\u8282\u70b9\u4eb2\u548c\u6027\uff0c\u793a\u4f8b\u6587\u4ef6\u5982\u4e0b\uff1a apiVersion: v1 kind: Pod metadata: name: with-node-affinity spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/e2e-az-name operator: In values: - e2e-az1 - e2e-az2 preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 preference: matchExpressions: - key: another-node-label-key operator: In values: - another-node-label-value containers: - name: with-node-affinity image: k8s.gcr.io/pause:2.0 \u6b64\u5904\u7684\u4eb2\u548c\u6027\u89c4\u5219\u8868\u660e\uff0c\u8be5 Pod \u53ea\u80fd\u88ab\u8c03\u5ea6\u5230\u5305\u542b key \u4e3a kubernetes.io/e2e-az-name \u4e14 value \u4e3a e2e-az1 \u6216 e2e-az2 \u7684\u6807\u7b7e\u7684\u8282\u70b9\u4e0a\u3002\u6b64\u5916\uff0c\u5982\u679c\u8282\u70b9\u5df2\u7ecf\u6ee1\u8db3\u4e86\u524d\u8ff0\u6761\u4ef6\uff0c\u5c06\u4f18\u5148\u9009\u62e9\u5305\u542b key \u4e3a another-node-label-key \u4e14 value \u4e3a another-node-label-value \u7684\u6807\u7b7e\u7684\u8282\u70b9\u3002 \u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86\u64cd\u4f5c\u7b26 In \u3002\u8282\u70b9\u4eb2\u548c\u6027\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\u7b26\uff1a In \u3001 NotIn \u3001 Exists \u3001 DoesNotExist \u3001 Gt \u3001 Lt \u3002\u4f7f\u7528 NotIn \u548c DoesNotExist \u53ef\u4ee5\u5b9e\u73b0\u8282\u70b9\u53cd\u4eb2\u548c\u6027\uff08node anti-affinity\uff09\u7684\u6548\u679c\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 \u6c61\u70b9 \u4e3a\u8282\u70b9\u6392\u65a5\u67d0\u7c7b Pod\u3002 In\uff1alabel \u7684\u503c\u5728\u67d0\u4e2a\u5217\u8868\u4e2d NotIn\uff1alabel \u7684\u503c\u4e0d\u5728\u67d0\u4e2a\u5217\u8868\u4e2d Gt\uff1alabel \u7684\u503c\u5927\u4e8e\u67d0\u4e2a\u503c Lt\uff1alabel \u7684\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c Exists\uff1a\u67d0\u4e2a label \u5b58\u5728 DoesNotExist\uff1a\u67d0\u4e2a label \u4e0d\u5b58\u5728 \u5982\u679c\u67d0\u4e2a Pod \u540c\u65f6\u6307\u5b9a\u4e86 nodeSelector \u548c nodeAffinity \uff0c\u5219\u76ee\u6807\u8282\u70b9\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff0c\u624d\u80fd\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u3002 \u5982\u679c\u4e3a nodeAffinity \u6307\u5b9a\u591a\u4e2a nodeSelectorTerms \uff0c\u5219\u76ee\u6807\u8282\u70b9\u53ea\u9700\u8981\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a nodeSelectorTerms \u7684\u8981\u6c42\uff0c\u5c31\u53ef\u4ee5\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u3002 \u5982\u679c\u4e3a nodeSelectorTerms \u6307\u5b9a\u591a\u4e2a matchExpressions \uff0c\u5219\u76ee\u6807\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u7684 matchExpressions \u7684\u8981\u6c42\uff0c\u624d\u80fd\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u3002 \u5f53 Pod \u88ab\u8c03\u5ea6\u5230\u67d0\u8282\u70b9\u4e0a\u4e4b\u540e\uff0c\u5982\u679c\u79fb\u9664\u6216\u8005\u4fee\u6539\u8282\u70b9\u7684\u6807\u7b7e\uff0cPod \u5c06\u4ecd\u7136\u7ee7\u7eed\u5728\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8282\u70b9\u4eb2\u548c\u6027\u89c4\u5219\u53ea\u5728\u8c03\u5ea6\u8be5 Pod \u65f6\u53d1\u751f\u4f5c\u7528\u3002 preferredDuringSchedulingIgnoredDuringExecution \u4e2d\u7684 weight \u5b57\u6bb5\u53d6\u503c\u8303\u56f4\u4e3a 1-100\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6ee1\u8db3\u8c03\u5ea6\u8981\u6c42\u7684\u8282\u70b9\uff08\u8d44\u6e90\u8bf7\u6c42\u3001\u4eb2\u548c\u6027/\u53cd\u4eb2\u548c\u6027\u89c4\u5219\uff0c\u7b49\uff09\uff0c\u8c03\u5ea6\u5668\u5c06\u904d\u5386\u8be5\u8282\u70b9\u5339\u914d\u7684 preferredDuringSchedulingIgnoredDuringExecution \u4e2d\u6240\u6709\u7684 weight \u5e76\u6c42\u548c\u3002\u6b64\u6c42\u548c\u7ed3\u679c\u5c06\u4e0e\u8282\u70b9\u7684\u5176\u4ed6\u4f18\u5148\u7ea7\u8ba1\u7b97\u7684\u5f97\u5206\u5408\u5e76\u3002\u5f97\u5206\u6700\u9ad8\u7684\u8282\u70b9\u88ab\u4f18\u5148\u9009\u62e9\u3002 Pod\u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027 Pod\u4e4b\u95f4\u7684\u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027\uff08inter-pod affinity and anti-affinity\uff09\u53ef\u4ee5\u57fa\u4e8e\u5df2\u7ecf\u8fd0\u884c\u5728\u8282\u70b9\u4e0a\u7684 Pod \u7684\u6807\u7b7e\uff08\u800c\u4e0d\u662f\u8282\u70b9\u7684\u6807\u7b7e\uff09\u6765\u9650\u5b9a Pod \u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230\u54ea\u4e2a\u8282\u70b9\u4e0a\u3002\u6b64\u7c7b\u89c4\u5219\u7684\u8868\u73b0\u5f62\u5f0f\u662f\uff1a \u5f53 X \u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6ee1\u8db3\u89c4\u5219 Y \u7684 Pod \u65f6\uff0c\u5f85\u8c03\u5ea6\u7684 Pod \u5e94\u8be5\uff08\u6216\u8005\u4e0d\u5e94\u8be5 - \u53cd\u4eb2\u548c\u6027\uff09\u5728 X \u4e0a\u8fd0\u884c \u89c4\u5219 Y \u4ee5 LabelSelector \u7684\u5f62\u5f0f\u8868\u8ff0\uff0c\u9644\u5e26\u4e00\u4e2a\u53ef\u9009\u7684\u540d\u79f0\u7a7a\u95f4\u5217\u8868 \u4e0e\u8282\u70b9\u4e0d\u4e00\u6837\uff0cPod \u662f\u5728\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\uff08\u56e0\u6b64\uff0cPod\u7684\u6807\u7b7e\u662f\u5728\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\uff09\uff0c\u9488\u5bf9 Pod \u7684 LabelSelector \u5fc5\u987b\u540c\u65f6\u6307\u5b9a\u5bf9\u5e94\u7684\u540d\u79f0\u7a7a\u95f4 X \u662f\u4e00\u4e2a\u62d3\u6251\u57df\u7684\u6982\u5ff5\uff0c\u4f8b\u5982\u8282\u70b9\u3001\u673a\u67dc\u3001\u4e91\u4f9b\u5e94\u5546\u53ef\u7528\u533a\u3001\u4e91\u4f9b\u5e94\u5546\u5730\u57df\uff0c\u7b49\u3002X \u4ee5 topologyKey \u7684\u5f62\u5f0f\u8868\u8fbe\uff0c\u8be5 Key\u4ee3\u8868\u4e86\u8282\u70b9\u4e0a\u4ee3\u8868\u62d3\u6251\u57df\uff08topology domain\uff09\u7684\u4e00\u4e2a\u6807\u7b7e\u3002 pod affinity \u7684\u4e00\u4e2a\u4f8b\u5b50 apiVersion: v1 kind: Pod metadata: name: with-pod-affinity spec: affinity: podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: security operator: In values: - S1 topologyKey: failure-domain.beta.kubernetes.io/zone podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 100 podAffinityTerm: labelSelector: matchExpressions: - key: security operator: In values: - S2 topologyKey: failure-domain.beta.kubernetes.io/zone containers: - name: with-pod-affinity image: k8s.gcr.io/pause:2.0 \u8be5 Pod \u7684 affinity \u5b9a\u4e49\u4e86\u4e00\u4e2a Pod \u4eb2\u548c\u6027\u89c4\u5219\u548c\u4e00\u4e2a Pod \u53cd\u4eb2\u548c\u6027\u89c4\u5219\uff0c\u4f8b\u5b50\u4e2d\uff0c podAffinity \u662f requiredDuringSchedulingIgnoredDuringExecution \uff0c\u800c podAntiAffinity \u5219\u662f preferredDuringSchedulingIgnoredDuringExecution \u3002 Pod \u4eb2\u548c\u6027\u89c4\u5219\u8981\u6c42\uff0c\u8be5 Pod \u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230\u7684\u8282\u70b9\u6240\u5728\u7684\u53ef\u7528\u533a zone \u5fc5\u987b\u5df2\u7ecf\u6709\u4e00\u4e2a\u5df2\u7ecf\u8fd0\u884c\u7684 Pod \u5305\u542b\u6807\u7b7e key=security\uff0cvalue=S1\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a \u8282\u70b9\u5305\u542b key \u4e3a failure-domain.beta.kubernetes.io/zone \u7684\u6807\u7b7e\uff0c\u5047\u8bbe\u8be5\u6807\u7b7e\u7684\u503c\u4e3a V \u81f3\u5c11\u6709\u4e00\u4e2a\u5305\u542b key \u4e3a failure-domain.beta.kubernetes.io/zone \u4e14 value \u4e3a V \u7684\u6807\u7b7e\u7684\u8282\u70b9\u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u4e2a\u5305\u542b\u6807\u7b7e key \u4e3a security \u4e14 value \u4e3a S1 \u7684 Pod Pod \u53cd\u4eb2\u548c\u6027\u89c4\u5219\u8981\u6c42\uff0c\u8be5 Pod \u6700\u597d\u4e0d\u8981\u88ab\u8c03\u5ea6\u5230\u5df2\u7ecf\u8fd0\u884c\u4e86\u5305\u542b key \u4e3a security \u4e14 value \u4e3a S2 \u7684\u6807\u7b7e\u7684 Pod \u7684\u8282\u70b9\u4e0a\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a \u5982\u679c topologyKey \u662f failure-domain.beta.kubernetes.io/zone \uff0c\u5219\uff0cPod\u4e0d\u80fd\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a zone \u4e2d\u7684\u5df2\u7ecf\u8fd0\u884c\u4e86\u5305\u542b\u6807\u7b7e security: S2 \u7684\u8282\u70b9\u4e0a \u53c2\u8003 design doc (opens new window) \u53ef\u4ee5\u4e86\u89e3\u66f4\u591a Pod \u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027\u7684\u4f8b\u5b50\u3002 \u539f\u5219\u4e0a\uff0c topologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e key\u3002\u7136\u800c\uff0c\u5904\u4e8e\u6027\u80fd\u548c\u5b89\u5168\u7684\u8003\u8651\uff0c\u4ecd\u7136\u5bf9 topologyKey \u6709\u5982\u4e0b\u9650\u5236\uff1a \u5bf9\u4eb2\u548c\u6027\u4ee5\u53ca requiredDuringSchedulingIgnoredDuringExecution Pod \u53cd\u4eb2\u548c\u6027\uff0c topologyKey \u4e0d\u80fd\u4e3a\u7a7a \u5bf9 requiredDuringSchedulingIgnoredDuringExecution Pod \u53cd\u4eb2\u548c\u6027\uff0c\u7ba1\u7406\u63a7\u5236\u5668 LimitPodHardAntiAffinityTopology \u88ab\u7528\u6765\u9650\u5236 topologyKey \u5fc5\u987b\u4e3a kubernetes.io/hostname \u3002\u5982\u679c\u60f3\u8981\u4f7f\u7528\u5176\u4ed6\u7684\u81ea\u5b9a\u4e49 topology\uff0c\u5fc5\u987b\u4fee\u6539\u8be5\u7ba1\u7406\u63a7\u5236\u5668\uff0c\u6216\u8005\u5c06\u5176\u7981\u7528 \u5bf9 preferredDuringSchedulingIgnoredDuringExecution Pod \u53cd\u4eb2\u548c\u6027\uff0c\u5982\u679c topologyKey \u4e3a\u7a7a\uff0c\u5219\u4ee3\u8868\u6240\u6709\u7684 topology \uff08\u6b64\u65f6\uff0c\u4e0d\u5c40\u9650\u4e8e kubernetes.io/hostname \u3001 failure-domain.beta.kubernetes.io/zone \u548c failure-domain.beta.kubernetes.io/region \u7684\u7ec4\u5408\uff09 \u9664\u4e86\u4e0a\u8ff0\u7684\u60c5\u5f62\u4ee5\u5916\uff0c topologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e Key \u9664\u4e86 labelSelector \u548c topologyKey \u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a namespaces \u7684\u5217\u8868\uff0c\u7528\u4f5c labelSelector \u7684\u4f5c\u7528\u8303\u56f4\uff08\u4e0e labelSelector \u548c topologyKey \u7684\u5b9a\u4e49\u4e3a\u540c\u4e00\u4e2a\u7ea7\u522b\uff09\u3002\u5982\u679c\u4e0d\u5b9a\u4e49\u6216\u8005\u8be5\u5b57\u6bb5\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u4e3a Pod \u6240\u5728\u7684\u540d\u79f0\u7a7a\u95f4\u3002 \u6240\u6709\u4e0e requiredDuringSchedulingIgnoredDuringExecution \u4eb2\u548c\u6027\u548c\u53cd\u4eb2\u548c\u6027\u5173\u8054\u7684 matchExpressions \u5fc5\u987b\u88ab\u6ee1\u8db3\uff0cPod \u624d\u80fd\u88ab\u8c03\u5ea6\u5230\u76ee\u6807\u8282\u70b9\u3002 \u4ec0\u4e48\u662ftopologyKey \u987e\u540d\u601d\u4e49\uff0c topology \u5c31\u662f \u62d3\u6251 \u7684\u610f\u601d\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u4e00\u4e2a \u62d3\u6251\u57df \uff0c\u662f\u6307\u4e00\u4e2a\u8303\u56f4\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u4e00\u4e2a Node\u3001\u4e00\u4e2a\u673a\u67dc\u3001\u4e00\u4e2a\u673a\u623f\u6216\u8005\u662f\u4e00\u4e2a\u5730\u533a\uff08\u5982\u676d\u5dde\u3001\u4e0a\u6d77\uff09\u7b49\uff0c\u5b9e\u9645\u4e0a\u5bf9\u5e94\u7684\u8fd8\u662f Node \u4e0a\u7684\u6807\u7b7e\u3002\u8fd9\u91cc\u7684 topologyKey \u5bf9\u5e94\u7684\u662f Node \u4e0a\u7684\u6807\u7b7e\u7684 Key\uff08\u6ca1\u6709Value\uff09\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u5176\u5b9e topologyKey \u5c31\u662f\u7528\u4e8e\u7b5b\u9009 Node \u7684\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5404\u4e2a Pod \u8fdb\u884c\u8de8\u96c6\u7fa4\u3001\u8de8\u673a\u623f\u3001\u8de8\u5730\u533a\u7684\u8c03\u5ea6\u4e86\u3002 \u5982\u4f55\u4f7f\u7528topologyKey \u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a apiVersion: v1 kind: Pod metadata: name: with-pod-affinity spec: affinity: podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: security operator: In values: - S1 topologyKey: failure-domain.beta.kubernetes.io/zone podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 100 podAffinityTerm: labelSelector: matchExpressions: - key: security operator: In values: - S2 topologyKey: kubernetes.io/hostname containers: - name: with-pod-affinity image: k8s.gcr.io/pause:2.0 \u8fd9\u91cc Pod \u7684\u4eb2\u548c\u6027\u89c4\u5219\u662f\uff1a\u8fd9\u4e2a Pod \u8981\u8c03\u5ea6\u5230\u7684 Node \u5fc5\u987b\u6709\u4e00\u4e2a\u6807\u7b7e\u4e3a security: S1 \u7684 Pod\uff0c\u4e14\u8be5 Node \u5fc5\u987b\u6709\u4e00\u4e2a Key \u4e3a failure-domain.beta.kubernetes.io/zone \u7684 \u6807\u7b7e\uff0c\u5373 Node \u5fc5\u987b\u5c5e\u4e8e failure-domain.beta.kubernetes.io/zone \u62d3\u6251\u57df\u3002 Pod \u7684\u53cd\u4eb2\u548c\u6027\u89c4\u5219\u662f\uff1a\u8fd9\u4e2a Pod \u5c3d\u91cf\u4e0d\u8981\u8c03\u5ea6\u5230\u8fd9\u6837\u7684 Node\uff0c\u5176\u5305\u542b\u4e00\u4e2a Key \u4e3a kubernetes.io/hostname \u7684\u6807\u7b7e\uff0c\u4e14\u8be5 Node \u4e0a\u6709\u6807\u7b7e\u4e3a security: S2 \u7684 Pod\u3002 topologyKey\u8be6\u89e3 \u65e2\u7136 topologyKey \u662f\u62d3\u6251\u57df\uff0c\u90a3 Pod \u4e4b\u95f4\u600e\u6837\u624d\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u62d3\u6251\u57df\uff1f \u5982\u679c\u4f7f\u7528 k8s.io/hostname \uff0c\u5219\u8868\u793a\u62d3\u6251\u57df\u4e3a Node \u8303\u56f4\uff0c\u90a3\u4e48 k8s.io/hostname \u5bf9\u5e94\u7684\u503c\u4e0d\u4e00\u6837\u5c31\u662f\u4e0d\u540c\u7684\u62d3\u6251\u57df\u3002\u6bd4\u5982 Pod1 \u5728 k8s.io/hostname=node1 \u7684 Node \u4e0a\uff0cPod2 \u5728 k8s.io/hostname=node2 \u7684 Node \u4e0a\uff0cPod3 \u5728 k8s.io/hostname=node1 \u7684 Node \u4e0a\uff0c\u5219 Pod2 \u548c Pod1\u3001Pod3 \u4e0d\u5728\u540c\u4e00\u4e2a\u62d3\u6251\u57df\uff0c\u800cPod1 \u548c Pod3\u5728\u540c\u4e00\u4e2a\u62d3\u6251\u57df\u3002 \u5982\u679c\u4f7f\u7528 failure-domain.k8s.io/zone \uff0c\u5219\u8868\u793a\u62d3\u6251\u57df\u4e3a\u4e00\u4e2a\u533a\u57df\u3002\u540c\u6837\uff0cNode \u7684\u6807\u7b7e failure-domain.k8s.io/zone \u5bf9\u5e94\u7684\u503c\u4e0d\u4e00\u6837\u4e5f\u4e0d\u662f\u540c\u4e00\u4e2a\u62d3\u6251\u57df\uff0c\u6bd4\u5982 Pod1 \u5728 failure-domain.k8s.io/zone=beijing \u7684 Node \u4e0a\uff0cPod2 \u5728 failure-domain.k8s.io/zone=hangzhou \u7684 Node \u4e0a\uff0c\u5219 Pod1 \u548c Pod2 \u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u62d3\u6251\u57df\u3002 \u5f53\u7136\uff0ctopologyKey \u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002\u6bd4\u5982\u53ef\u4ee5\u7ed9\u4e00\u7ec4 Node \u6253\u4e0a\u6807\u7b7e custom_topology \uff0c\u90a3\u4e48\u62d3\u6251\u57df\u5c31\u662f\u9488\u5bf9\u8fd9\u4e2a\u6807\u7b7e\u4e86\uff0c\u5219\u8be5\u6807\u7b7e\u76f8\u540c\u7684 Node \u4e0a\u7684 Pod \u5c5e\u4e8e\u540c\u4e00\u4e2a\u62d3\u6251\u57df\u3002 \u6ce8\u610f\u4e8b\u9879 \u539f\u5219\u4e0a\uff0ctopologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e Key\u3002\u4f46\u662f\u51fa\u4e8e\u6027\u80fd\u548c\u5b89\u5168\u539f\u56e0\uff0c\u5bf9 topologyKey \u6709\u4e00\u4e9b\u9650\u5236\uff1a \u5bf9\u4e8e\u4eb2\u548c\u6027\u548c requiredDuringSchedulingIgnoredDuringExecution \u7684 Pod \u53cd\u4eb2\u548c\u6027\uff0ctopologyKey \u4e0d\u80fd\u4e3a\u7a7a\u3002 \u5bf9\u4e8e requiredDuringSchedulingIgnoredDuringExecution \u7684 Pod \u53cd\u4eb2\u548c\u6027\uff0c\u5f15\u5165 LimitPodHardAntiAffinityTopology \u51c6\u5165\u63a7\u5236\u5668\u6765\u9650\u5236 topologyKey \u53ea\u80fd\u662f kubernetes.io/hostname \u3002\u5982\u679c\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u62d3\u6251\u57df\uff0c\u5219\u53ef\u4ee5\u4fee\u6539\u51c6\u5165\u63a7\u5236\u5668\uff0c\u6216\u8005\u76f4\u63a5\u7981\u7528\u5b83\u3002 \u5bf9\u4e8e preferredDuringSchedulingIgnoredDuringExecution \u7684 Pod \u53cd\u4eb2\u548c\u6027\uff0c\u7a7a\u7684 topologyKey \u8868\u793a\u6240\u6709\u62d3\u6251\u57df\u3002\u622a\u6b62 v1.12 \u7248\u672c\uff0c\u6240\u6709\u62d3\u6251\u57df\u8fd8\u53ea\u80fd\u662f kubernetes.io/hostname \u3001 failure-domain.beta.kubernetes.io/zone \u548c failure-domain.beta.kubernetes.io/region \u7684\u7ec4\u5408\u3002 \u9664\u4e0a\u8ff0\u60c5\u51b5\u5916\uff0ctopologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e key\u3002 \u66f4\u591a\u5b9e\u7528\u7684\u4f8b\u5b50 Pod \u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027\u7ed3\u5408\u9ad8\u7ea7\u522b\u63a7\u5236\u5668\uff08\u4f8b\u5982 ReplicaSet\u3001StatefulSet\u3001Deployment \u7b49\uff09\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u975e\u5e38\u5b9e\u7528\u3002\u6b64\u65f6\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5c06\u4e00\u7ec4\u5de5\u4f5c\u590d\u6742\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a topology\uff0c\u4f8b\u5982\uff0c\u540c\u4e00\u4e2a\u8282\u70b9\u3002 \u59cb\u7ec8\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u59cb\u7ec8\u5728\u540c\u4e00\u4e2a\u8282\u70b9 \u5728\u4e00\u4e2a\u4e09\u8282\u70b9\u7684\u96c6\u7fa4\u4e2d\uff0c\u90e8\u7f72\u4e00\u4e2a\u4f7f\u7528 redis \u7684 web \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u671f\u671b web-server \u5c3d\u53ef\u80fd\u4e0e redis \u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u4e0b\u9762\u662f redis deployment \u7684 yaml \u7247\u6bb5\uff0c\u5305\u542b\u4e09\u4e2a\u526f\u672c\u4ee5\u53ca app=store \u6807\u7b7e\u9009\u62e9\u5668\u3002Deployment \u4e2d\u914d\u7f6e\u4e86 PodAntiAffinity \uff0c\u786e\u4fdd\u8c03\u5ea6\u5668\u4e0d\u4f1a\u5c06\u4e09\u4e2a\u526f\u672c\u8c03\u5ea6\u5230\u4e00\u4e2a\u8282\u70b9\u4e0a\uff1a apiVersion: apps/v1 kind: Deployment metadata: name: redis-cache spec: selector: matchLabels: app: store replicas: 3 template: metadata: labels: app: store spec: affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app operator: In values: - store topologyKey: \"kubernetes.io/hostname\" containers: - name: redis-server image: redis:3.2-alpine \u4e0b\u9762\u662f webserver deployment \u7684 yaml \u7247\u6bb5\uff0c\u914d\u7f6e\u4e86 podAntiAffinity \u4ee5\u53ca podAffinity \u3002\u8981\u6c42\u5c06\u5176\u526f\u672c\u4e0e \u5305\u542b app=store \u6807\u7b7e\u7684 Pod \u653e\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff1b\u540c\u65f6\u4e5f\u8981\u6c42 web-server \u7684\u526f\u672c\u4e0d\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: web-server spec: selector: matchLabels: app: web-store replicas: 3 template: metadata: labels: app: web-store spec: affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app operator: In values: - web-store topologyKey: \"kubernetes.io/hostname\" podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app operator: In values: - store topologyKey: \"kubernetes.io/hostname\" containers: - name: web-app image: nginx:1.12-alpine \u5982\u679c\u521b\u5efa\u4e0a\u8ff0\u4e24\u4e2a deployment\uff0c\u96c6\u7fa4\u5c06\u5982\u4e0b\u6240\u793a\uff1a Node-1 Node-2 Node-3 web-server-1 webserver-2 webserver-3 cache-1 cache-2 cache-3 web-server \u7684\u4e09\u4e2a\u526f\u672c\u90fd\u81ea\u52a8\u4e0e cach \u7684\u526f\u672c\u8fd0\u884c\u5728\u76f8\u540c\u7684\u8282\u70b9\u4e0a\u3002 kubectl get pods -o wide \u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a NAME READY STATUS RESTARTS AGE IP NODE redis-cache-1450370735-6dzlj 1/1 Running 0 8m 10.192.4.2 kube-node-3 redis-cache-1450370735-j2j96 1/1 Running 0 8m 10.192.2.2 kube-node-1 redis-cache-1450370735-z73mh 1/1 Running 0 8m 10.192.3.1 kube-node-2 web-server-1287567482-5d4dz 1/1 Running 0 7m 10.192.2.3 kube-node-1 web-server-1287567482-6f7v5 1/1 Running 0 7m 10.192.4.3 kube-node-3 web-server-1287567482-s330j 1/1 Running 0 7m 10.192.3.2 kube-node-2 \u59cb\u7ec8\u4e0d\u5728\u76f8\u540c\u7684\u8282\u70b9\u4e0a \u4e0a\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86 PodAntiAffinity \u89c4\u5219\u4e0e topologyKey: \"kubernetes.io/hostname\" \u6765\u90e8\u7f72 redis \u96c6\u7fa4\uff0c\u56e0\u6b64\u6ca1\u6709\u4efb\u4f55\u4e24\u4e2a\u526f\u672c\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002\u53c2\u8003 ZooKeeper tutorial (opens new window) \u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u4e3a StatefulSet \u914d\u7f6e\u53cd\u4eb2\u548c\u6027\u4ee5\u5b9e\u73b0\u9ad8\u53ef\u7528\u3002 http://bazingafeng.com/2019/03/31/k8s-affinity-topologykey/ https://kuboard.cn/learning/k8s-intermediate/config/affinity.html","title":"\u4eb2\u548c\u6027"},{"location":"kubernetes/diaodu/#nodeselector","text":"\u6211\u4eec\u77e5\u9053 label \u662f kubernetes \u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5\uff0c\u7528\u6237\u53ef\u4ee5\u975e\u5e38\u7075\u6d3b\u7684\u5229\u7528 label \u6765\u7ba1\u7406\u96c6\u7fa4\u4e2d\u7684\u8d44\u6e90\uff0c\u6bd4\u5982\u6700\u5e38\u89c1\u7684\u4e00\u4e2a\u5c31\u662f service \u901a\u8fc7\u5339\u914d label \u53bb\u9009\u62e9 POD \u7684\u3002\u800c POD \u7684\u8c03\u5ea6\u4e5f\u53ef\u4ee5\u6839\u636e\u8282\u70b9\u7684 label \u8fdb\u884c\u7279\u5b9a\u7684\u90e8\u7f72\u3002 \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u6211\u4eec\u7684 node \u7684 label\uff1a $ kubectl get nodes --show-labels NAME STATUS ROLES AGE VERSION LABELS 192.168.1.140 Ready <none> 42d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/hostname=192.168.1.140 192.168.1.161 Ready <none> 118d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/cluster-service=true,kubernetes.io/hostname=192.168.1.161 192.168.1.170 Ready <none> 118d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/cluster-service=true,kubernetes.io/hostname=192.168.1.170 192.168.1.172 Ready <none> 114d v1.8.1 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/cluster-service=true,kubernetes.io/hostname=192.168.1.172 \u73b0\u5728\u6211\u4eec\u5148\u7ed9\u8282\u70b9 192.168.1.140 \u589e\u52a0\u4e00\u4e2a source=qikqiak \u7684\u6807\u7b7e\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a $ kubectl label nodes 192.168.1.140 source=qikqiak node \"192.168.1.140\" labeled \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0a\u9762\u7684 --show-labels \u53c2\u6570\u53ef\u4ee5\u67e5\u770b\u4e0a\u8ff0\u6807\u7b7e\u662f\u5426\u751f\u6548\u3002\u5f53 node \u88ab\u6253\u4e0a\u4e86\u76f8\u5173\u6807\u7b7e\u540e\uff0c\u5728\u8c03\u5ea6\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9b\u6807\u7b7e\u4e86\uff0c\u53ea\u9700\u8981\u5728 POD \u7684 spec \u5b57\u6bb5\u4e2d\u6dfb\u52a0 nodeSelector \u5b57\u6bb5\uff0c\u91cc\u9762\u662f\u6211\u4eec\u9700\u8981\u88ab\u8c03\u5ea6\u7684\u8282\u70b9\u7684 label\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u662f\u6211\u4eec\u4e4b\u524d\u7684\u4e00\u4e2a\u9ed8\u8ba4\u7684 busybox POD \u7684 YAML \u6587\u4ef6\uff1a apiVersion: v1 kind: Pod metadata: labels: app: busybox-pod name: test-busybox spec: containers: - command: - sleep - \"3600\" image: busybox imagePullPolicy: Always name: test-busybox \u7136\u540e\u6211\u9700\u8981\u8ba9\u4e0a\u9762\u7684 POD \u88ab\u8c03\u5ea6\u5230140\u7684\u8282\u70b9\u4e0a\uff0c\u90a3\u4e48\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u53bb\u5339\u914d140\u4e0a\u9762\u7684 label\uff0c\u5982\u4e0b\uff1a apiVersion: v1 kind: Pod metadata: labels: app: busybox-pod name: test-busybox spec: containers: - command: - sleep - \"3600\" image: busybox imagePullPolicy: Always name: test-busybox nodeSelector: source: qikqiak \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7 describe \u547d\u4ee4\u67e5\u770b\u8c03\u5ea6\u7ed3\u679c\uff1a $ kubectl describe pod test-busybox ...... Events: Type Reason Age From Message ---- ------ ---- ---- ------- Normal Scheduled 49s default-scheduler Successfully assigned test-busybox to 192.168.1.140 Normal SuccessfulMountVolume 49s kubelet, 192.168.1.140 MountVolume.SetUp succeeded for volume \"default-token-hmpbz\" Normal Pulling 49s kubelet, 192.168.1.140 pulling image \"busybox\" Normal Pulled 41s kubelet, 192.168.1.140 Successfully pulled image \"busybox\" Normal Created 41s kubelet, 192.168.1.140 Created container Normal Started 41s kubelet, 192.168.1.140 Started container \u6211\u4eec\u53ef\u4ee5\u770b\u5230 Events \u4e0b\u9762\u7684\u4fe1\u606f\uff0c\u4e0a\u9762\u7684 POD \u88ab\u6b63\u786e\u7684\u8c03\u5ea6\u5230\u4e86140\u8282\u70b9\u3002\u901a\u8fc7\u4e0a\u9762\u7684\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u611f\u53d7\u5230 nodeSelector \u7684\u65b9\u5f0f\u6bd4\u8f83\u76f4\u89c2\uff0c\u4f46\u662f\u8fd8\u591f\u7075\u6d3b\uff0c\u63a7\u5236\u7c92\u5ea6\u504f\u5927","title":"nodeSelector"},{"location":"kubernetes/diaodu/#node-affinity","text":"\u8282\u70b9\u4eb2\u548c\u6027\uff08node affinity\uff09\u7684\u6982\u5ff5\u4e0e nodeSelector \u76f8\u4f3c\uff0c\u53ef\u4ee5\u57fa\u4e8e\u8282\u70b9\u7684\u6807\u7b7e\u6765\u9650\u5b9a Pod \u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230\u54ea\u4e9b\u8282\u70b9\u4e0a\u3002 \u5f53\u524d\u652f\u6301\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9\u4eb2\u548c\u6027\uff0c requiredDuringSchedulingIgnoredDuringExecution \uff08hard\uff0c\u76ee\u6807\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3\u6b64\u6761\u4ef6\uff09 \u4ee5\u53ca preferredDuringSchedulingIgnoredDuringExecution \uff08soft\uff0c\u76ee\u6807\u8282\u70b9\u6700\u597d\u80fd\u6ee1\u8db3\u6b64\u6761\u4ef6\uff09\u3002\u540d\u5b57\u4e2d IgnoredDuringExecution \u610f\u5473\u7740\uff1a\u5982\u679c Pod \u5df2\u7ecf\u8c03\u5ea6\u5230\u8282\u70b9\u4e0a\u4ee5\u540e\uff0c\u8282\u70b9\u7684\u6807\u7b7e\u53d1\u751f\u6539\u53d8\uff0c\u4f7f\u5f97\u8282\u70b9\u5df2\u7ecf\u4e0d\u518d\u5339\u914d\u8be5\u4eb2\u548c\u6027\u89c4\u5219\u4e86\uff0cPod \u4ecd\u5c06\u7ee7\u7eed\u5728\u8282\u70b9\u4e0a\u6267\u884c\uff08\u8fd9\u4e00\u70b9\u4e0e nodeSelector \u76f8\u4f3c\uff09\u3002\u5c06\u6765\uff0cKubernetes \u5c06\u4f1a\u63d0\u4f9b requiredDuringSchedulingRequiredDuringExecution \u8fd9\u4e2a\u9009\u9879\uff0c\u8be5\u9009\u9879\u4e0e requiredDuringSchedulingIgnoredDuringExecution \u76f8\u4f3c\uff0c\u4e0d\u540c\u7684\u662f\uff0c\u5f53\u8282\u70b9\u7684\u6807\u7b7e\u4e0d\u5728\u5339\u914d\u4eb2\u548c\u6027\u89c4\u5219\u4e4b\u540e\uff0cPod \u5c06\u88ab\u4ece\u8282\u70b9\u4e0a\u9a71\u9010\u3002 requiredDuringSchedulingIgnoredDuringExecution \u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c \u53ea\u5728 Intel CPU \u4e0a\u8fd0\u884c\u8be5 Pod \uff0c preferredDuringSchedulingIgnoredDuringExecution \u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\uff0c \u5c3d\u91cf\u5728\u9ad8\u53ef\u7528\u533a XYZ \u4e2d\u8fd0\u884c\u8fd9\u4e2a Pod\uff0c\u4f46\u662f\u5982\u679c\u505a\u4e0d\u5230\uff0c\u4e5f\u53ef\u4ee5\u5728\u5176\u4ed6\u5730\u65b9\u8fd0\u884c\u8be5 Pod \u3002 PodSpec \u4e2d\u901a\u8fc7 affinity.nodeAffinity \u5b57\u6bb5\u6765\u5b9a\u4e49\u8282\u70b9\u4eb2\u548c\u6027\uff0c\u793a\u4f8b\u6587\u4ef6\u5982\u4e0b\uff1a apiVersion: v1 kind: Pod metadata: name: with-node-affinity spec: affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/e2e-az-name operator: In values: - e2e-az1 - e2e-az2 preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 preference: matchExpressions: - key: another-node-label-key operator: In values: - another-node-label-value containers: - name: with-node-affinity image: k8s.gcr.io/pause:2.0 \u6b64\u5904\u7684\u4eb2\u548c\u6027\u89c4\u5219\u8868\u660e\uff0c\u8be5 Pod \u53ea\u80fd\u88ab\u8c03\u5ea6\u5230\u5305\u542b key \u4e3a kubernetes.io/e2e-az-name \u4e14 value \u4e3a e2e-az1 \u6216 e2e-az2 \u7684\u6807\u7b7e\u7684\u8282\u70b9\u4e0a\u3002\u6b64\u5916\uff0c\u5982\u679c\u8282\u70b9\u5df2\u7ecf\u6ee1\u8db3\u4e86\u524d\u8ff0\u6761\u4ef6\uff0c\u5c06\u4f18\u5148\u9009\u62e9\u5305\u542b key \u4e3a another-node-label-key \u4e14 value \u4e3a another-node-label-value \u7684\u6807\u7b7e\u7684\u8282\u70b9\u3002 \u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86\u64cd\u4f5c\u7b26 In \u3002\u8282\u70b9\u4eb2\u548c\u6027\u652f\u6301\u5982\u4e0b\u64cd\u4f5c\u7b26\uff1a In \u3001 NotIn \u3001 Exists \u3001 DoesNotExist \u3001 Gt \u3001 Lt \u3002\u4f7f\u7528 NotIn \u548c DoesNotExist \u53ef\u4ee5\u5b9e\u73b0\u8282\u70b9\u53cd\u4eb2\u548c\u6027\uff08node anti-affinity\uff09\u7684\u6548\u679c\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528 \u6c61\u70b9 \u4e3a\u8282\u70b9\u6392\u65a5\u67d0\u7c7b Pod\u3002 In\uff1alabel \u7684\u503c\u5728\u67d0\u4e2a\u5217\u8868\u4e2d NotIn\uff1alabel \u7684\u503c\u4e0d\u5728\u67d0\u4e2a\u5217\u8868\u4e2d Gt\uff1alabel \u7684\u503c\u5927\u4e8e\u67d0\u4e2a\u503c Lt\uff1alabel \u7684\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c Exists\uff1a\u67d0\u4e2a label \u5b58\u5728 DoesNotExist\uff1a\u67d0\u4e2a label \u4e0d\u5b58\u5728 \u5982\u679c\u67d0\u4e2a Pod \u540c\u65f6\u6307\u5b9a\u4e86 nodeSelector \u548c nodeAffinity \uff0c\u5219\u76ee\u6807\u8282\u70b9\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff0c\u624d\u80fd\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u3002 \u5982\u679c\u4e3a nodeAffinity \u6307\u5b9a\u591a\u4e2a nodeSelectorTerms \uff0c\u5219\u76ee\u6807\u8282\u70b9\u53ea\u9700\u8981\u6ee1\u8db3\u4efb\u610f\u4e00\u4e2a nodeSelectorTerms \u7684\u8981\u6c42\uff0c\u5c31\u53ef\u4ee5\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u3002 \u5982\u679c\u4e3a nodeSelectorTerms \u6307\u5b9a\u591a\u4e2a matchExpressions \uff0c\u5219\u76ee\u6807\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3\u6240\u6709\u7684 matchExpressions \u7684\u8981\u6c42\uff0c\u624d\u80fd\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\u3002 \u5f53 Pod \u88ab\u8c03\u5ea6\u5230\u67d0\u8282\u70b9\u4e0a\u4e4b\u540e\uff0c\u5982\u679c\u79fb\u9664\u6216\u8005\u4fee\u6539\u8282\u70b9\u7684\u6807\u7b7e\uff0cPod \u5c06\u4ecd\u7136\u7ee7\u7eed\u5728\u8282\u70b9\u4e0a\u8fd0\u884c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u8282\u70b9\u4eb2\u548c\u6027\u89c4\u5219\u53ea\u5728\u8c03\u5ea6\u8be5 Pod \u65f6\u53d1\u751f\u4f5c\u7528\u3002 preferredDuringSchedulingIgnoredDuringExecution \u4e2d\u7684 weight \u5b57\u6bb5\u53d6\u503c\u8303\u56f4\u4e3a 1-100\u3002\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6ee1\u8db3\u8c03\u5ea6\u8981\u6c42\u7684\u8282\u70b9\uff08\u8d44\u6e90\u8bf7\u6c42\u3001\u4eb2\u548c\u6027/\u53cd\u4eb2\u548c\u6027\u89c4\u5219\uff0c\u7b49\uff09\uff0c\u8c03\u5ea6\u5668\u5c06\u904d\u5386\u8be5\u8282\u70b9\u5339\u914d\u7684 preferredDuringSchedulingIgnoredDuringExecution \u4e2d\u6240\u6709\u7684 weight \u5e76\u6c42\u548c\u3002\u6b64\u6c42\u548c\u7ed3\u679c\u5c06\u4e0e\u8282\u70b9\u7684\u5176\u4ed6\u4f18\u5148\u7ea7\u8ba1\u7b97\u7684\u5f97\u5206\u5408\u5e76\u3002\u5f97\u5206\u6700\u9ad8\u7684\u8282\u70b9\u88ab\u4f18\u5148\u9009\u62e9\u3002","title":"node affinity"},{"location":"kubernetes/diaodu/#pod","text":"Pod\u4e4b\u95f4\u7684\u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027\uff08inter-pod affinity and anti-affinity\uff09\u53ef\u4ee5\u57fa\u4e8e\u5df2\u7ecf\u8fd0\u884c\u5728\u8282\u70b9\u4e0a\u7684 Pod \u7684\u6807\u7b7e\uff08\u800c\u4e0d\u662f\u8282\u70b9\u7684\u6807\u7b7e\uff09\u6765\u9650\u5b9a Pod \u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230\u54ea\u4e2a\u8282\u70b9\u4e0a\u3002\u6b64\u7c7b\u89c4\u5219\u7684\u8868\u73b0\u5f62\u5f0f\u662f\uff1a \u5f53 X \u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6ee1\u8db3\u89c4\u5219 Y \u7684 Pod \u65f6\uff0c\u5f85\u8c03\u5ea6\u7684 Pod \u5e94\u8be5\uff08\u6216\u8005\u4e0d\u5e94\u8be5 - \u53cd\u4eb2\u548c\u6027\uff09\u5728 X \u4e0a\u8fd0\u884c \u89c4\u5219 Y \u4ee5 LabelSelector \u7684\u5f62\u5f0f\u8868\u8ff0\uff0c\u9644\u5e26\u4e00\u4e2a\u53ef\u9009\u7684\u540d\u79f0\u7a7a\u95f4\u5217\u8868 \u4e0e\u8282\u70b9\u4e0d\u4e00\u6837\uff0cPod \u662f\u5728\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\uff08\u56e0\u6b64\uff0cPod\u7684\u6807\u7b7e\u662f\u5728\u540d\u79f0\u7a7a\u95f4\u4e2d\u7684\uff09\uff0c\u9488\u5bf9 Pod \u7684 LabelSelector \u5fc5\u987b\u540c\u65f6\u6307\u5b9a\u5bf9\u5e94\u7684\u540d\u79f0\u7a7a\u95f4 X \u662f\u4e00\u4e2a\u62d3\u6251\u57df\u7684\u6982\u5ff5\uff0c\u4f8b\u5982\u8282\u70b9\u3001\u673a\u67dc\u3001\u4e91\u4f9b\u5e94\u5546\u53ef\u7528\u533a\u3001\u4e91\u4f9b\u5e94\u5546\u5730\u57df\uff0c\u7b49\u3002X \u4ee5 topologyKey \u7684\u5f62\u5f0f\u8868\u8fbe\uff0c\u8be5 Key\u4ee3\u8868\u4e86\u8282\u70b9\u4e0a\u4ee3\u8868\u62d3\u6251\u57df\uff08topology domain\uff09\u7684\u4e00\u4e2a\u6807\u7b7e\u3002","title":"Pod\u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027"},{"location":"kubernetes/diaodu/#pod-affinity","text":"apiVersion: v1 kind: Pod metadata: name: with-pod-affinity spec: affinity: podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: security operator: In values: - S1 topologyKey: failure-domain.beta.kubernetes.io/zone podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 100 podAffinityTerm: labelSelector: matchExpressions: - key: security operator: In values: - S2 topologyKey: failure-domain.beta.kubernetes.io/zone containers: - name: with-pod-affinity image: k8s.gcr.io/pause:2.0 \u8be5 Pod \u7684 affinity \u5b9a\u4e49\u4e86\u4e00\u4e2a Pod \u4eb2\u548c\u6027\u89c4\u5219\u548c\u4e00\u4e2a Pod \u53cd\u4eb2\u548c\u6027\u89c4\u5219\uff0c\u4f8b\u5b50\u4e2d\uff0c podAffinity \u662f requiredDuringSchedulingIgnoredDuringExecution \uff0c\u800c podAntiAffinity \u5219\u662f preferredDuringSchedulingIgnoredDuringExecution \u3002 Pod \u4eb2\u548c\u6027\u89c4\u5219\u8981\u6c42\uff0c\u8be5 Pod \u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230\u7684\u8282\u70b9\u6240\u5728\u7684\u53ef\u7528\u533a zone \u5fc5\u987b\u5df2\u7ecf\u6709\u4e00\u4e2a\u5df2\u7ecf\u8fd0\u884c\u7684 Pod \u5305\u542b\u6807\u7b7e key=security\uff0cvalue=S1\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u8282\u70b9\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a \u8282\u70b9\u5305\u542b key \u4e3a failure-domain.beta.kubernetes.io/zone \u7684\u6807\u7b7e\uff0c\u5047\u8bbe\u8be5\u6807\u7b7e\u7684\u503c\u4e3a V \u81f3\u5c11\u6709\u4e00\u4e2a\u5305\u542b key \u4e3a failure-domain.beta.kubernetes.io/zone \u4e14 value \u4e3a V \u7684\u6807\u7b7e\u7684\u8282\u70b9\u5df2\u7ecf\u8fd0\u884c\u4e86\u4e00\u4e2a\u5305\u542b\u6807\u7b7e key \u4e3a security \u4e14 value \u4e3a S1 \u7684 Pod Pod \u53cd\u4eb2\u548c\u6027\u89c4\u5219\u8981\u6c42\uff0c\u8be5 Pod \u6700\u597d\u4e0d\u8981\u88ab\u8c03\u5ea6\u5230\u5df2\u7ecf\u8fd0\u884c\u4e86\u5305\u542b key \u4e3a security \u4e14 value \u4e3a S2 \u7684\u6807\u7b7e\u7684 Pod \u7684\u8282\u70b9\u4e0a\uff0c\u6216\u8005\u66f4\u51c6\u786e\u5730\u8bf4\uff0c\u5fc5\u987b\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\uff1a \u5982\u679c topologyKey \u662f failure-domain.beta.kubernetes.io/zone \uff0c\u5219\uff0cPod\u4e0d\u80fd\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a zone \u4e2d\u7684\u5df2\u7ecf\u8fd0\u884c\u4e86\u5305\u542b\u6807\u7b7e security: S2 \u7684\u8282\u70b9\u4e0a \u53c2\u8003 design doc (opens new window) \u53ef\u4ee5\u4e86\u89e3\u66f4\u591a Pod \u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027\u7684\u4f8b\u5b50\u3002 \u539f\u5219\u4e0a\uff0c topologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e key\u3002\u7136\u800c\uff0c\u5904\u4e8e\u6027\u80fd\u548c\u5b89\u5168\u7684\u8003\u8651\uff0c\u4ecd\u7136\u5bf9 topologyKey \u6709\u5982\u4e0b\u9650\u5236\uff1a \u5bf9\u4eb2\u548c\u6027\u4ee5\u53ca requiredDuringSchedulingIgnoredDuringExecution Pod \u53cd\u4eb2\u548c\u6027\uff0c topologyKey \u4e0d\u80fd\u4e3a\u7a7a \u5bf9 requiredDuringSchedulingIgnoredDuringExecution Pod \u53cd\u4eb2\u548c\u6027\uff0c\u7ba1\u7406\u63a7\u5236\u5668 LimitPodHardAntiAffinityTopology \u88ab\u7528\u6765\u9650\u5236 topologyKey \u5fc5\u987b\u4e3a kubernetes.io/hostname \u3002\u5982\u679c\u60f3\u8981\u4f7f\u7528\u5176\u4ed6\u7684\u81ea\u5b9a\u4e49 topology\uff0c\u5fc5\u987b\u4fee\u6539\u8be5\u7ba1\u7406\u63a7\u5236\u5668\uff0c\u6216\u8005\u5c06\u5176\u7981\u7528 \u5bf9 preferredDuringSchedulingIgnoredDuringExecution Pod \u53cd\u4eb2\u548c\u6027\uff0c\u5982\u679c topologyKey \u4e3a\u7a7a\uff0c\u5219\u4ee3\u8868\u6240\u6709\u7684 topology \uff08\u6b64\u65f6\uff0c\u4e0d\u5c40\u9650\u4e8e kubernetes.io/hostname \u3001 failure-domain.beta.kubernetes.io/zone \u548c failure-domain.beta.kubernetes.io/region \u7684\u7ec4\u5408\uff09 \u9664\u4e86\u4e0a\u8ff0\u7684\u60c5\u5f62\u4ee5\u5916\uff0c topologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e Key \u9664\u4e86 labelSelector \u548c topologyKey \u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a namespaces \u7684\u5217\u8868\uff0c\u7528\u4f5c labelSelector \u7684\u4f5c\u7528\u8303\u56f4\uff08\u4e0e labelSelector \u548c topologyKey \u7684\u5b9a\u4e49\u4e3a\u540c\u4e00\u4e2a\u7ea7\u522b\uff09\u3002\u5982\u679c\u4e0d\u5b9a\u4e49\u6216\u8005\u8be5\u5b57\u6bb5\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u4e3a Pod \u6240\u5728\u7684\u540d\u79f0\u7a7a\u95f4\u3002 \u6240\u6709\u4e0e requiredDuringSchedulingIgnoredDuringExecution \u4eb2\u548c\u6027\u548c\u53cd\u4eb2\u548c\u6027\u5173\u8054\u7684 matchExpressions \u5fc5\u987b\u88ab\u6ee1\u8db3\uff0cPod \u624d\u80fd\u88ab\u8c03\u5ea6\u5230\u76ee\u6807\u8282\u70b9\u3002","title":"pod affinity \u7684\u4e00\u4e2a\u4f8b\u5b50"},{"location":"kubernetes/diaodu/#topologykey","text":"\u987e\u540d\u601d\u4e49\uff0c topology \u5c31\u662f \u62d3\u6251 \u7684\u610f\u601d\uff0c\u8fd9\u91cc\u6307\u7684\u662f\u4e00\u4e2a \u62d3\u6251\u57df \uff0c\u662f\u6307\u4e00\u4e2a\u8303\u56f4\u7684\u6982\u5ff5\uff0c\u6bd4\u5982\u4e00\u4e2a Node\u3001\u4e00\u4e2a\u673a\u67dc\u3001\u4e00\u4e2a\u673a\u623f\u6216\u8005\u662f\u4e00\u4e2a\u5730\u533a\uff08\u5982\u676d\u5dde\u3001\u4e0a\u6d77\uff09\u7b49\uff0c\u5b9e\u9645\u4e0a\u5bf9\u5e94\u7684\u8fd8\u662f Node \u4e0a\u7684\u6807\u7b7e\u3002\u8fd9\u91cc\u7684 topologyKey \u5bf9\u5e94\u7684\u662f Node \u4e0a\u7684\u6807\u7b7e\u7684 Key\uff08\u6ca1\u6709Value\uff09\uff0c\u53ef\u4ee5\u770b\u51fa\uff0c\u5176\u5b9e topologyKey \u5c31\u662f\u7528\u4e8e\u7b5b\u9009 Node \u7684\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5c06\u5404\u4e2a Pod \u8fdb\u884c\u8de8\u96c6\u7fa4\u3001\u8de8\u673a\u623f\u3001\u8de8\u5730\u533a\u7684\u8c03\u5ea6\u4e86\u3002","title":"\u4ec0\u4e48\u662ftopologyKey"},{"location":"kubernetes/diaodu/#topologykey_1","text":"\u770b\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a apiVersion: v1 kind: Pod metadata: name: with-pod-affinity spec: affinity: podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: security operator: In values: - S1 topologyKey: failure-domain.beta.kubernetes.io/zone podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 100 podAffinityTerm: labelSelector: matchExpressions: - key: security operator: In values: - S2 topologyKey: kubernetes.io/hostname containers: - name: with-pod-affinity image: k8s.gcr.io/pause:2.0 \u8fd9\u91cc Pod \u7684\u4eb2\u548c\u6027\u89c4\u5219\u662f\uff1a\u8fd9\u4e2a Pod \u8981\u8c03\u5ea6\u5230\u7684 Node \u5fc5\u987b\u6709\u4e00\u4e2a\u6807\u7b7e\u4e3a security: S1 \u7684 Pod\uff0c\u4e14\u8be5 Node \u5fc5\u987b\u6709\u4e00\u4e2a Key \u4e3a failure-domain.beta.kubernetes.io/zone \u7684 \u6807\u7b7e\uff0c\u5373 Node \u5fc5\u987b\u5c5e\u4e8e failure-domain.beta.kubernetes.io/zone \u62d3\u6251\u57df\u3002 Pod \u7684\u53cd\u4eb2\u548c\u6027\u89c4\u5219\u662f\uff1a\u8fd9\u4e2a Pod \u5c3d\u91cf\u4e0d\u8981\u8c03\u5ea6\u5230\u8fd9\u6837\u7684 Node\uff0c\u5176\u5305\u542b\u4e00\u4e2a Key \u4e3a kubernetes.io/hostname \u7684\u6807\u7b7e\uff0c\u4e14\u8be5 Node \u4e0a\u6709\u6807\u7b7e\u4e3a security: S2 \u7684 Pod\u3002","title":"\u5982\u4f55\u4f7f\u7528topologyKey"},{"location":"kubernetes/diaodu/#topologykey_2","text":"\u65e2\u7136 topologyKey \u662f\u62d3\u6251\u57df\uff0c\u90a3 Pod \u4e4b\u95f4\u600e\u6837\u624d\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u62d3\u6251\u57df\uff1f \u5982\u679c\u4f7f\u7528 k8s.io/hostname \uff0c\u5219\u8868\u793a\u62d3\u6251\u57df\u4e3a Node \u8303\u56f4\uff0c\u90a3\u4e48 k8s.io/hostname \u5bf9\u5e94\u7684\u503c\u4e0d\u4e00\u6837\u5c31\u662f\u4e0d\u540c\u7684\u62d3\u6251\u57df\u3002\u6bd4\u5982 Pod1 \u5728 k8s.io/hostname=node1 \u7684 Node \u4e0a\uff0cPod2 \u5728 k8s.io/hostname=node2 \u7684 Node \u4e0a\uff0cPod3 \u5728 k8s.io/hostname=node1 \u7684 Node \u4e0a\uff0c\u5219 Pod2 \u548c Pod1\u3001Pod3 \u4e0d\u5728\u540c\u4e00\u4e2a\u62d3\u6251\u57df\uff0c\u800cPod1 \u548c Pod3\u5728\u540c\u4e00\u4e2a\u62d3\u6251\u57df\u3002 \u5982\u679c\u4f7f\u7528 failure-domain.k8s.io/zone \uff0c\u5219\u8868\u793a\u62d3\u6251\u57df\u4e3a\u4e00\u4e2a\u533a\u57df\u3002\u540c\u6837\uff0cNode \u7684\u6807\u7b7e failure-domain.k8s.io/zone \u5bf9\u5e94\u7684\u503c\u4e0d\u4e00\u6837\u4e5f\u4e0d\u662f\u540c\u4e00\u4e2a\u62d3\u6251\u57df\uff0c\u6bd4\u5982 Pod1 \u5728 failure-domain.k8s.io/zone=beijing \u7684 Node \u4e0a\uff0cPod2 \u5728 failure-domain.k8s.io/zone=hangzhou \u7684 Node \u4e0a\uff0c\u5219 Pod1 \u548c Pod2 \u4e0d\u5c5e\u4e8e\u540c\u4e00\u4e2a\u62d3\u6251\u57df\u3002 \u5f53\u7136\uff0ctopologyKey \u4e5f\u53ef\u4ee5\u4f7f\u7528\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002\u6bd4\u5982\u53ef\u4ee5\u7ed9\u4e00\u7ec4 Node \u6253\u4e0a\u6807\u7b7e custom_topology \uff0c\u90a3\u4e48\u62d3\u6251\u57df\u5c31\u662f\u9488\u5bf9\u8fd9\u4e2a\u6807\u7b7e\u4e86\uff0c\u5219\u8be5\u6807\u7b7e\u76f8\u540c\u7684 Node \u4e0a\u7684 Pod \u5c5e\u4e8e\u540c\u4e00\u4e2a\u62d3\u6251\u57df\u3002","title":"topologyKey\u8be6\u89e3"},{"location":"kubernetes/diaodu/#_1","text":"\u539f\u5219\u4e0a\uff0ctopologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e Key\u3002\u4f46\u662f\u51fa\u4e8e\u6027\u80fd\u548c\u5b89\u5168\u539f\u56e0\uff0c\u5bf9 topologyKey \u6709\u4e00\u4e9b\u9650\u5236\uff1a \u5bf9\u4e8e\u4eb2\u548c\u6027\u548c requiredDuringSchedulingIgnoredDuringExecution \u7684 Pod \u53cd\u4eb2\u548c\u6027\uff0ctopologyKey \u4e0d\u80fd\u4e3a\u7a7a\u3002 \u5bf9\u4e8e requiredDuringSchedulingIgnoredDuringExecution \u7684 Pod \u53cd\u4eb2\u548c\u6027\uff0c\u5f15\u5165 LimitPodHardAntiAffinityTopology \u51c6\u5165\u63a7\u5236\u5668\u6765\u9650\u5236 topologyKey \u53ea\u80fd\u662f kubernetes.io/hostname \u3002\u5982\u679c\u8981\u4f7f\u7528\u81ea\u5b9a\u4e49\u62d3\u6251\u57df\uff0c\u5219\u53ef\u4ee5\u4fee\u6539\u51c6\u5165\u63a7\u5236\u5668\uff0c\u6216\u8005\u76f4\u63a5\u7981\u7528\u5b83\u3002 \u5bf9\u4e8e preferredDuringSchedulingIgnoredDuringExecution \u7684 Pod \u53cd\u4eb2\u548c\u6027\uff0c\u7a7a\u7684 topologyKey \u8868\u793a\u6240\u6709\u62d3\u6251\u57df\u3002\u622a\u6b62 v1.12 \u7248\u672c\uff0c\u6240\u6709\u62d3\u6251\u57df\u8fd8\u53ea\u80fd\u662f kubernetes.io/hostname \u3001 failure-domain.beta.kubernetes.io/zone \u548c failure-domain.beta.kubernetes.io/region \u7684\u7ec4\u5408\u3002 \u9664\u4e0a\u8ff0\u60c5\u51b5\u5916\uff0ctopologyKey \u53ef\u4ee5\u662f\u4efb\u4f55\u5408\u6cd5\u7684\u6807\u7b7e key\u3002","title":"\u6ce8\u610f\u4e8b\u9879"},{"location":"kubernetes/diaodu/#_2","text":"Pod \u4eb2\u548c\u6027\u4e0e\u53cd\u4eb2\u548c\u6027\u7ed3\u5408\u9ad8\u7ea7\u522b\u63a7\u5236\u5668\uff08\u4f8b\u5982 ReplicaSet\u3001StatefulSet\u3001Deployment \u7b49\uff09\u4e00\u8d77\u4f7f\u7528\u65f6\uff0c\u53ef\u4ee5\u975e\u5e38\u5b9e\u7528\u3002\u6b64\u65f6\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u5c06\u4e00\u7ec4\u5de5\u4f5c\u590d\u6742\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a topology\uff0c\u4f8b\u5982\uff0c\u540c\u4e00\u4e2a\u8282\u70b9\u3002","title":"\u66f4\u591a\u5b9e\u7528\u7684\u4f8b\u5b50"},{"location":"kubernetes/diaodu/#_3","text":"\u5728\u4e00\u4e2a\u4e09\u8282\u70b9\u7684\u96c6\u7fa4\u4e2d\uff0c\u90e8\u7f72\u4e00\u4e2a\u4f7f\u7528 redis \u7684 web \u5e94\u7528\u7a0b\u5e8f\uff0c\u5e76\u671f\u671b web-server \u5c3d\u53ef\u80fd\u4e0e redis \u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u4e0b\u9762\u662f redis deployment \u7684 yaml \u7247\u6bb5\uff0c\u5305\u542b\u4e09\u4e2a\u526f\u672c\u4ee5\u53ca app=store \u6807\u7b7e\u9009\u62e9\u5668\u3002Deployment \u4e2d\u914d\u7f6e\u4e86 PodAntiAffinity \uff0c\u786e\u4fdd\u8c03\u5ea6\u5668\u4e0d\u4f1a\u5c06\u4e09\u4e2a\u526f\u672c\u8c03\u5ea6\u5230\u4e00\u4e2a\u8282\u70b9\u4e0a\uff1a apiVersion: apps/v1 kind: Deployment metadata: name: redis-cache spec: selector: matchLabels: app: store replicas: 3 template: metadata: labels: app: store spec: affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app operator: In values: - store topologyKey: \"kubernetes.io/hostname\" containers: - name: redis-server image: redis:3.2-alpine \u4e0b\u9762\u662f webserver deployment \u7684 yaml \u7247\u6bb5\uff0c\u914d\u7f6e\u4e86 podAntiAffinity \u4ee5\u53ca podAffinity \u3002\u8981\u6c42\u5c06\u5176\u526f\u672c\u4e0e \u5305\u542b app=store \u6807\u7b7e\u7684 Pod \u653e\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\uff1b\u540c\u65f6\u4e5f\u8981\u6c42 web-server \u7684\u526f\u672c\u4e0d\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 apiVersion: apps/v1 kind: Deployment metadata: name: web-server spec: selector: matchLabels: app: web-store replicas: 3 template: metadata: labels: app: web-store spec: affinity: podAntiAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app operator: In values: - web-store topologyKey: \"kubernetes.io/hostname\" podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app operator: In values: - store topologyKey: \"kubernetes.io/hostname\" containers: - name: web-app image: nginx:1.12-alpine \u5982\u679c\u521b\u5efa\u4e0a\u8ff0\u4e24\u4e2a deployment\uff0c\u96c6\u7fa4\u5c06\u5982\u4e0b\u6240\u793a\uff1a Node-1 Node-2 Node-3 web-server-1 webserver-2 webserver-3 cache-1 cache-2 cache-3 web-server \u7684\u4e09\u4e2a\u526f\u672c\u90fd\u81ea\u52a8\u4e0e cach \u7684\u526f\u672c\u8fd0\u884c\u5728\u76f8\u540c\u7684\u8282\u70b9\u4e0a\u3002 kubectl get pods -o wide \u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\u6240\u793a NAME READY STATUS RESTARTS AGE IP NODE redis-cache-1450370735-6dzlj 1/1 Running 0 8m 10.192.4.2 kube-node-3 redis-cache-1450370735-j2j96 1/1 Running 0 8m 10.192.2.2 kube-node-1 redis-cache-1450370735-z73mh 1/1 Running 0 8m 10.192.3.1 kube-node-2 web-server-1287567482-5d4dz 1/1 Running 0 7m 10.192.2.3 kube-node-1 web-server-1287567482-6f7v5 1/1 Running 0 7m 10.192.4.3 kube-node-3 web-server-1287567482-s330j 1/1 Running 0 7m 10.192.3.2 kube-node-2","title":"\u59cb\u7ec8\u5728\u540c\u4e00\u4e2a\u8282\u70b9\u59cb\u7ec8\u5728\u540c\u4e00\u4e2a\u8282\u70b9"},{"location":"kubernetes/diaodu/#_4","text":"\u4e0a\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e86 PodAntiAffinity \u89c4\u5219\u4e0e topologyKey: \"kubernetes.io/hostname\" \u6765\u90e8\u7f72 redis \u96c6\u7fa4\uff0c\u56e0\u6b64\u6ca1\u6709\u4efb\u4f55\u4e24\u4e2a\u526f\u672c\u88ab\u8c03\u5ea6\u5230\u540c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002\u53c2\u8003 ZooKeeper tutorial (opens new window) \u4e86\u89e3\u5982\u4f55\u4f7f\u7528\u76f8\u540c\u7684\u65b9\u5f0f\u4e3a StatefulSet \u914d\u7f6e\u53cd\u4eb2\u548c\u6027\u4ee5\u5b9e\u73b0\u9ad8\u53ef\u7528\u3002 http://bazingafeng.com/2019/03/31/k8s-affinity-topologykey/ https://kuboard.cn/learning/k8s-intermediate/config/affinity.html","title":"\u59cb\u7ec8\u4e0d\u5728\u76f8\u540c\u7684\u8282\u70b9\u4e0a"},{"location":"kubernetes/dudian/","text":"\u6c61\u70b9\u548c\u5bb9\u5fcd \u6c61\u70b9\u548c\u5bb9\u5fcd\uff08taints and tolerations\uff09\u6210\u5bf9\u5de5\u4f5c\uff0c\u4ee5\u786e\u4fdd Pod \u4e0d\u4f1a\u88ab\u8c03\u5ea6\u5230\u4e0d\u5408\u9002\u7684\u8282\u70b9\u4e0a\u3002 \u53ef\u4ee5\u4e3a\u8282\u70b9\u589e\u52a0\u6c61\u70b9\uff08taints\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u6709 0-N \u4e2a\u6c61\u70b9\uff09 \u53ef\u4ee5\u4e3a Pod \u589e\u52a0\u5bb9\u5fcd\uff08toleration\uff0c\u4e00\u4e2a Pod \u53ef\u4ee5\u6709 0-N \u4e2a\u5bb9\u5fcd\uff09 \u5982\u679c\u8282\u70b9\u4e0a\u5b58\u5728\u6c61\u70b9\uff0c\u5219\u8be5\u8282\u70b9\u4e0d\u4f1a\u63a5\u53d7\u4efb\u4f55\u4e0d\u80fd\u5bb9\u5fcd\uff08tolerate\uff09\u8be5\u6c61\u70b9\u7684 Pod\u3002 \u5411\u8282\u70b9\u6dfb\u52a0\u6c61\u70b9 \u6267\u884c kubectl taint \u547d\u4ee4\uff0c\u53ef\u5411\u8282\u70b9\u6dfb\u52a0\u6c61\u70b9\uff0c\u5982\u4e0b\u6240\u793a\uff1a kubectl taint nodes node1 key=value:NoSchedule \u8be5\u547d\u4ee4\u4e3a\u8282\u70b9 node1 \u6dfb\u52a0\u4e86\u4e00\u4e2a\u6c61\u70b9\u3002\u6c61\u70b9\u662f\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u6c61\u70b9\u7684\u952e\u4e3a key \uff0c\u503c\u4e3a value \uff0c\u6c61\u70b9\u6548\u679c\u4e3a NoSchedule \u3002\u6b64\u6c61\u70b9\u610f\u5473\u7740 Kubernetes \u4e0d\u4f1a\u5411\u8be5\u8282\u70b9\u8c03\u5ea6\u4efb\u4f55 Pod\uff0c\u9664\u975e\u8be5 Pod \u6709\u4e00\u4e2a\u5339\u914d\u7684\u5bb9\u5fcd\uff08toleration\uff09 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5c06\u672c\u4f8b\u4e2d\u7684\u6c61\u70b9\u79fb\u9664\uff1a kubectl taint nodes node1 key:NoSchedule- \u8bbe\u7f6e\u6c61\u70b9\uff1a kubectl taint node [node] key=value[effect] \u5176\u4e2d[effect] \u53ef\u53d6\u503c\uff1a [ NoSchedule | PreferNoSchedule | NoExecute ] NoSchedule \uff1a\u4e00\u5b9a\u4e0d\u80fd\u88ab\u8c03\u5ea6\u3002 PreferNoSchedule\uff1a\u5c3d\u91cf\u4e0d\u8981\u8c03\u5ea6\u3002 NoExecute\uff1a\u4e0d\u4ec5\u4e0d\u4f1a\u8c03\u5ea6\uff0c\u8fd8\u4f1a\u9a71\u9010Node\u4e0a\u5df2\u6709\u7684Pod\u3002 #\u793a\u4f8b\uff1a kubectl taint node 10.3.1.16 test=16:NoSchedule \u53bb\u9664\u6c61\u70b9\uff1a #\u6bd4\u5982\u8bbe\u7f6e\u6c61\u70b9\uff1a kubectl taint node 10.3.1.16 test=16:NoSchedule kubectl taint node 10.3.1.16 test=16:NoExecute #\u53bb\u9664\u6307\u5b9akey\u53ca\u5176effect\uff1a kubectl taint nodes node_name key:[effect]- #(\u8fd9\u91cc\u7684key\u4e0d\u7528\u6307\u5b9avalue) #\u53bb\u9664\u6307\u5b9akey\u6240\u6709\u7684effect: kubectl taint nodes node_name key- #\u793a\u4f8b\uff1a kubectl taint node 10.3.1.16 test:NoSchedule- kubectl taint node 10.3.1.16 test:NoExecute- kubectl taint node 10.3.1.16 test- \u5411 Pod \u6dfb\u52a0\u5bb9\u5fcd PodSpec \u4e2d\u6709\u4e00\u4e2a tolerations \u5b57\u6bb5\uff0c\u53ef\u7528\u4e8e\u5411 Pod \u6dfb\u52a0\u5bb9\u5fcd\u3002\u4e0b\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u7684\u5bb9\u5fcd\u90fd\u53ef\u4ee5\u5339\u914d\u4e0a\u4f8b\u4e2d\u7684\u6c61\u70b9\uff0c\u5305\u542b\u8fd9\u4e9b\u5bb9\u5fcd\u7684 Pod \u4e5f\u90fd\u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230 node1 \u8282\u70b9\u4e0a\uff1a \u5bb9\u5fcd1\uff1a tolerations: - key: \"key\" operator: \"Equal\" value: \"value\" effect: \"NoSchedule\" \u5bb9\u5fcd2\uff1a tolerations: - key: \"key\" operator: \"Exists\" effect: \"NoSchedule\" \u4e0b\u9762\u8fd9\u4e2a Pod \u7684\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528\u4e86\u5bb9\u5fcd\uff1a apiVersion: v1 kind: Pod metadata: name: nginx labels: env: test spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent tolerations: - key: \"example-key\" operator: \"Exists\" effect: \"NoSchedule\" \u6c61\u70b9\u4e0e\u5bb9\u5fcd\u7684\u5339\u914d \u5f53\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u65f6\uff0cKubernetes \u8ba4\u4e3a\u5bb9\u5fcd\u548c\u6c61\u70b9\u5339\u914d\uff1a \u952e\uff08key\uff09\u76f8\u540c \u6548\u679c\uff08effect\uff09\u76f8\u540c \u6c61\u70b9\u7684 operator \u4e3a\uff1a Exists \uff08\u6b64\u65f6\u6c61\u70b9\u4e2d\u4e0d\u5e94\u8be5\u6307\u5b9a value \uff09 \u6216\u8005 Equal \uff08\u6b64\u65f6\u5bb9\u5fcd\u7684 value \u5e94\u4e0e\u6c61\u70b9\u7684 value \u76f8\u540c\uff09 \u5982\u679c\u4e0d\u6307\u5b9a operator \uff0c\u5219\u5176\u9ed8\u8ba4\u4e3a Equal \u7279\u6b8a\u60c5\u51b5 \u5b58\u5728\u5982\u4e0b\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a \u5bb9\u5fcd\u4e2d\u672a\u5b9a\u4e49 key \u4f46\u662f\u5b9a\u4e49\u4e86 operator \u4e3a Exists \uff0cKubernetes \u8ba4\u4e3a\u6b64\u5bb9\u5fcd\u5339\u914d\u6240\u6709\u7684\u6c61\u70b9\uff0c\u5982\u4e0b\u6240\u793a\uff1a tolerations: - operator: \"Exists\" \u5bb9\u5fcd\u4e2d\u672a\u5b9a\u4e49 effect \u4f46\u662f\u5b9a\u4e49\u4e86 key \uff0cKubernetes \u8ba4\u4e3a\u6b64\u5bb9\u5fcd\u5339\u914d\u6240\u6709 effect \uff0c\u5982\u4e0b\u6240\u793a\uff1a tolerations: - key: \"key\" operator: \"Exists\" \u652f\u6301\u7684\u6548\u679c effect \u6709\uff1a NoSchedule PreferNoSchedule \u6bd4 NoSchedule \u66f4\u5bbd\u5bb9\u4e00\u4e9b\uff0cKubernetes \u5c06\u5c3d\u91cf\u907f\u514d\u5c06\u6ca1\u6709\u5339\u914d\u5bb9\u5fcd\u7684 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u4e0d\u53ef\u4ee5 NoExecute \u4e0d\u80fd\u5728\u8282\u70b9\u4e0a\u8fd0\u884c\uff08\u5982\u679c\u5df2\u7ecf\u8fd0\u884c\uff0c\u5c06\u88ab\u9a71\u9010\uff09 \u4e00\u4e2a\u8282\u70b9\u4e0a\u53ef\u4ee5\u6709\u591a\u4e2a\u6c61\u70b9\uff0c\u540c\u65f6\u4e00\u4e2a Pod \u4e0a\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5fcd\u3002Kubernetes \u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u8fc7\u6ee4\u5668\u7684\u65b9\u6cd5\u6765\u5904\u7406\u591a\u4e2a\u8282\u70b9\u548c\u5bb9\u5fcd\uff1a \u5bf9\u4e8e\u8282\u70b9\u7684\u6240\u6709\u6c61\u70b9\uff0c\u68c0\u67e5 Pod \u4e0a\u662f\u5426\u6709\u5339\u914d\u7684\u5bb9\u5fcd\uff0c\u5982\u679c\u5b58\u5728\u5339\u914d\u7684\u5bb9\u5fcd\uff0c\u5219\u5ffd\u7565\u8be5\u6c61\u70b9\uff1b \u5269\u4e0b\u7684\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5c06\u5bf9\u8be5 Pod \u8d77\u4f5c\u7528 \u4f8b\u5982\uff1a \u5982\u679c\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c NoSchedule \uff0c\u5219 Kubernetes \u4e0d\u4f1a\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a \u5982\u679c\u6ca1\u6709\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c NoSchedule \uff0c\u4f46\u662f\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c PreferNoSchedule \uff0c\u5219 Kubernetes \u5c06\u5c3d\u91cf\u907f\u514d\u5c06\u8be5 Pod \u8c03\u5ea6\u5230\u6b64\u8282\u70b9 \u5982\u679c\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c NoExecute \uff0c\u5219\uff1a \u5047\u8bbe Pod \u5df2\u7ecf\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\uff0cKubernetes \u5c06\u4ece\u8be5\u8282\u70b9\u4e0a\u9a71\u9010\uff08evict\uff09\u8be5 Pod \u5047\u8bbe Pod \u5c1a\u672a\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\uff0cKubernetes \u5c06\u4e0d\u4f1a\u628a Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u7ed9\u4e00\u4e2a\u8282\u70b9\u6dfb\u52a0\u4e86\u4e09\u4e2a\u6c61\u70b9\uff1a kubectl taint nodes node1 key1=value1:NoSchedule kubectl taint nodes node1 key1=value1:NoExecute kubectl taint nodes node1 key2=value2:NoSchedule \u540c\u65f6\uff0c\u6709\u4e00\u4e2a Pod \u5e26\u6709\u4e24\u4e2a\u5bb9\u5fcd\uff1a tolerations: - key: \"key1\" operator: \"Equal\" value: \"value1\" effect: \"NoSchedule\" - key: \"key1\" operator: \"Equal\" value: \"value1\" effect: \"NoExecute\" \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0cPod \u4e0a\u6709\u4e24\u4e2a\u5bb9\u5fcd\uff0c\u5339\u914d\u4e86\u8282\u70b9\u7684\u524d\u4e24\u4e2a\u6c61\u70b9\uff0c\u53ea\u6709\u8282\u70b9\u7684\u7b2c\u4e09\u4e2a\u6c61\u70b9\u5bf9\u8be5 Pod \u6765\u8bf4\u4e0d\u53ef\u5ffd\u7565\uff0c\u8be5\u6c61\u70b9\u7684\u6548\u679c\u4e3a NoSchedule \uff1a Kubernetes \u4e0d\u4f1a\u5c06\u6b64 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a \u5982\u679c Kubernetes \u5148\u5c06 Pod \u8c03\u5ea6\u5230\u4e86\u8be5\u8282\u70b9\uff0c\u540e\u5411\u8be5\u8282\u70b9\u6dfb\u52a0\u4e86\u7b2c\u4e09\u4e2a\u6c61\u70b9\uff0c\u5219 Pod \u5c06\u7ee7\u7eed\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\u800c\u4e0d\u4f1a\u88ab\u9a71\u9010\uff08\u8282\u70b9\u4e0a\u5e26\u6709 NoExecute \u6548\u679c\u7684\u6c61\u70b9\u5df2\u88ab Pod \u4e0a\u7684\u7b2c\u4e8c\u4e2a\u5bb9\u5fcd\u5339\u914d\uff0c\u56e0\u6b64\u88ab\u5ffd\u7565\uff09 \u901a\u5e38\uff0c\u5728\u5e26\u6709\u6548\u679c NoExecute \u7684\u6c61\u70b9\u88ab\u6dfb\u52a0\u5230\u8282\u70b9\u65f6\uff0c\u8282\u70b9\u4e0a\u4efb\u4f55\u4e0d\u5bb9\u5fcd\u8be5\u6c61\u70b9\u7684 Pod \u5c06\u88ab\u7acb\u523b\u9a71\u9010\uff0c\u800c\u5bb9\u5fcd\u8be5\u6c61\u70b9\u7684 Pod \u5219\u4e0d\u4f1a\u88ab\u9a71\u9010\u3002 \u6b64\u5916\uff0c\u5e26\u6709\u6548\u679c NoExecute \u7684\u6c61\u70b9\u8fd8\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5 tolerationSeconds \uff0c\u8be5\u5b57\u6bb5\u6307\u5b9a\u4e86 Pod \u5728\u591a\u957f\u65f6\u95f4\u540e\u88ab\u9a71\u9010\uff0c\u4f8b\u5982\uff1a tolerations: - key: \"key1\" operator: \"Equal\" value: \"value1\" effect: \"NoExecute\" tolerationSeconds: 3600 \u6b64\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c Pod \u5df2\u7ecf\u8fd0\u884c\u5728\u8282\u70b9\u4e0a\uff0c\u518d\u5411\u8282\u70b9\u589e\u52a0\u6b64\u6c61\u70b9\u65f6\uff0cPod \u5c06\u5728\u8be5\u8282\u70b9\u4e0a\u7ee7\u7eed\u8fd0\u884c 3600 \u79d2\uff0c\u7136\u540e\u624d\u88ab\u9a71\u9010\u3002\u5982\u679c\u6c61\u70b9\u5728\u6b64\u4e4b\u95f4\u88ab\u79fb\u9664\uff0c\u5219 Pod \u5c06\u4e0d\u4f1a\u88ab\u9a71\u9010\u3002","title":"\u6c61\u70b9"},{"location":"kubernetes/dudian/#_1","text":"\u6c61\u70b9\u548c\u5bb9\u5fcd\uff08taints and tolerations\uff09\u6210\u5bf9\u5de5\u4f5c\uff0c\u4ee5\u786e\u4fdd Pod \u4e0d\u4f1a\u88ab\u8c03\u5ea6\u5230\u4e0d\u5408\u9002\u7684\u8282\u70b9\u4e0a\u3002 \u53ef\u4ee5\u4e3a\u8282\u70b9\u589e\u52a0\u6c61\u70b9\uff08taints\uff0c\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u6709 0-N \u4e2a\u6c61\u70b9\uff09 \u53ef\u4ee5\u4e3a Pod \u589e\u52a0\u5bb9\u5fcd\uff08toleration\uff0c\u4e00\u4e2a Pod \u53ef\u4ee5\u6709 0-N \u4e2a\u5bb9\u5fcd\uff09 \u5982\u679c\u8282\u70b9\u4e0a\u5b58\u5728\u6c61\u70b9\uff0c\u5219\u8be5\u8282\u70b9\u4e0d\u4f1a\u63a5\u53d7\u4efb\u4f55\u4e0d\u80fd\u5bb9\u5fcd\uff08tolerate\uff09\u8be5\u6c61\u70b9\u7684 Pod\u3002","title":"\u6c61\u70b9\u548c\u5bb9\u5fcd"},{"location":"kubernetes/dudian/#_2","text":"\u6267\u884c kubectl taint \u547d\u4ee4\uff0c\u53ef\u5411\u8282\u70b9\u6dfb\u52a0\u6c61\u70b9\uff0c\u5982\u4e0b\u6240\u793a\uff1a kubectl taint nodes node1 key=value:NoSchedule \u8be5\u547d\u4ee4\u4e3a\u8282\u70b9 node1 \u6dfb\u52a0\u4e86\u4e00\u4e2a\u6c61\u70b9\u3002\u6c61\u70b9\u662f\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u6c61\u70b9\u7684\u952e\u4e3a key \uff0c\u503c\u4e3a value \uff0c\u6c61\u70b9\u6548\u679c\u4e3a NoSchedule \u3002\u6b64\u6c61\u70b9\u610f\u5473\u7740 Kubernetes \u4e0d\u4f1a\u5411\u8be5\u8282\u70b9\u8c03\u5ea6\u4efb\u4f55 Pod\uff0c\u9664\u975e\u8be5 Pod \u6709\u4e00\u4e2a\u5339\u914d\u7684\u5bb9\u5fcd\uff08toleration\uff09 \u6267\u884c\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u5c06\u672c\u4f8b\u4e2d\u7684\u6c61\u70b9\u79fb\u9664\uff1a kubectl taint nodes node1 key:NoSchedule- \u8bbe\u7f6e\u6c61\u70b9\uff1a kubectl taint node [node] key=value[effect] \u5176\u4e2d[effect] \u53ef\u53d6\u503c\uff1a [ NoSchedule | PreferNoSchedule | NoExecute ] NoSchedule \uff1a\u4e00\u5b9a\u4e0d\u80fd\u88ab\u8c03\u5ea6\u3002 PreferNoSchedule\uff1a\u5c3d\u91cf\u4e0d\u8981\u8c03\u5ea6\u3002 NoExecute\uff1a\u4e0d\u4ec5\u4e0d\u4f1a\u8c03\u5ea6\uff0c\u8fd8\u4f1a\u9a71\u9010Node\u4e0a\u5df2\u6709\u7684Pod\u3002 #\u793a\u4f8b\uff1a kubectl taint node 10.3.1.16 test=16:NoSchedule \u53bb\u9664\u6c61\u70b9\uff1a #\u6bd4\u5982\u8bbe\u7f6e\u6c61\u70b9\uff1a kubectl taint node 10.3.1.16 test=16:NoSchedule kubectl taint node 10.3.1.16 test=16:NoExecute #\u53bb\u9664\u6307\u5b9akey\u53ca\u5176effect\uff1a kubectl taint nodes node_name key:[effect]- #(\u8fd9\u91cc\u7684key\u4e0d\u7528\u6307\u5b9avalue) #\u53bb\u9664\u6307\u5b9akey\u6240\u6709\u7684effect: kubectl taint nodes node_name key- #\u793a\u4f8b\uff1a kubectl taint node 10.3.1.16 test:NoSchedule- kubectl taint node 10.3.1.16 test:NoExecute- kubectl taint node 10.3.1.16 test-","title":"\u5411\u8282\u70b9\u6dfb\u52a0\u6c61\u70b9"},{"location":"kubernetes/dudian/#pod","text":"PodSpec \u4e2d\u6709\u4e00\u4e2a tolerations \u5b57\u6bb5\uff0c\u53ef\u7528\u4e8e\u5411 Pod \u6dfb\u52a0\u5bb9\u5fcd\u3002\u4e0b\u9762\u7684\u4e24\u4e2a\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u7684\u5bb9\u5fcd\u90fd\u53ef\u4ee5\u5339\u914d\u4e0a\u4f8b\u4e2d\u7684\u6c61\u70b9\uff0c\u5305\u542b\u8fd9\u4e9b\u5bb9\u5fcd\u7684 Pod \u4e5f\u90fd\u53ef\u4ee5\u88ab\u8c03\u5ea6\u5230 node1 \u8282\u70b9\u4e0a\uff1a \u5bb9\u5fcd1\uff1a tolerations: - key: \"key\" operator: \"Equal\" value: \"value\" effect: \"NoSchedule\" \u5bb9\u5fcd2\uff1a tolerations: - key: \"key\" operator: \"Exists\" effect: \"NoSchedule\" \u4e0b\u9762\u8fd9\u4e2a Pod \u7684\u4f8b\u5b50\u4e2d\uff0c\u4f7f\u7528\u4e86\u5bb9\u5fcd\uff1a apiVersion: v1 kind: Pod metadata: name: nginx labels: env: test spec: containers: - name: nginx image: nginx imagePullPolicy: IfNotPresent tolerations: - key: \"example-key\" operator: \"Exists\" effect: \"NoSchedule\"","title":"\u5411 Pod \u6dfb\u52a0\u5bb9\u5fcd"},{"location":"kubernetes/dudian/#_3","text":"\u5f53\u6ee1\u8db3\u5982\u4e0b\u6761\u4ef6\u65f6\uff0cKubernetes \u8ba4\u4e3a\u5bb9\u5fcd\u548c\u6c61\u70b9\u5339\u914d\uff1a \u952e\uff08key\uff09\u76f8\u540c \u6548\u679c\uff08effect\uff09\u76f8\u540c \u6c61\u70b9\u7684 operator \u4e3a\uff1a Exists \uff08\u6b64\u65f6\u6c61\u70b9\u4e2d\u4e0d\u5e94\u8be5\u6307\u5b9a value \uff09 \u6216\u8005 Equal \uff08\u6b64\u65f6\u5bb9\u5fcd\u7684 value \u5e94\u4e0e\u6c61\u70b9\u7684 value \u76f8\u540c\uff09 \u5982\u679c\u4e0d\u6307\u5b9a operator \uff0c\u5219\u5176\u9ed8\u8ba4\u4e3a Equal \u7279\u6b8a\u60c5\u51b5 \u5b58\u5728\u5982\u4e0b\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5\uff1a \u5bb9\u5fcd\u4e2d\u672a\u5b9a\u4e49 key \u4f46\u662f\u5b9a\u4e49\u4e86 operator \u4e3a Exists \uff0cKubernetes \u8ba4\u4e3a\u6b64\u5bb9\u5fcd\u5339\u914d\u6240\u6709\u7684\u6c61\u70b9\uff0c\u5982\u4e0b\u6240\u793a\uff1a tolerations: - operator: \"Exists\" \u5bb9\u5fcd\u4e2d\u672a\u5b9a\u4e49 effect \u4f46\u662f\u5b9a\u4e49\u4e86 key \uff0cKubernetes \u8ba4\u4e3a\u6b64\u5bb9\u5fcd\u5339\u914d\u6240\u6709 effect \uff0c\u5982\u4e0b\u6240\u793a\uff1a tolerations: - key: \"key\" operator: \"Exists\" \u652f\u6301\u7684\u6548\u679c effect \u6709\uff1a NoSchedule PreferNoSchedule \u6bd4 NoSchedule \u66f4\u5bbd\u5bb9\u4e00\u4e9b\uff0cKubernetes \u5c06\u5c3d\u91cf\u907f\u514d\u5c06\u6ca1\u6709\u5339\u914d\u5bb9\u5fcd\u7684 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a\uff0c\u4f46\u662f\u5e76\u4e0d\u662f\u4e0d\u53ef\u4ee5 NoExecute \u4e0d\u80fd\u5728\u8282\u70b9\u4e0a\u8fd0\u884c\uff08\u5982\u679c\u5df2\u7ecf\u8fd0\u884c\uff0c\u5c06\u88ab\u9a71\u9010\uff09 \u4e00\u4e2a\u8282\u70b9\u4e0a\u53ef\u4ee5\u6709\u591a\u4e2a\u6c61\u70b9\uff0c\u540c\u65f6\u4e00\u4e2a Pod \u4e0a\u53ef\u4ee5\u6709\u591a\u4e2a\u5bb9\u5fcd\u3002Kubernetes \u4f7f\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u8fc7\u6ee4\u5668\u7684\u65b9\u6cd5\u6765\u5904\u7406\u591a\u4e2a\u8282\u70b9\u548c\u5bb9\u5fcd\uff1a \u5bf9\u4e8e\u8282\u70b9\u7684\u6240\u6709\u6c61\u70b9\uff0c\u68c0\u67e5 Pod \u4e0a\u662f\u5426\u6709\u5339\u914d\u7684\u5bb9\u5fcd\uff0c\u5982\u679c\u5b58\u5728\u5339\u914d\u7684\u5bb9\u5fcd\uff0c\u5219\u5ffd\u7565\u8be5\u6c61\u70b9\uff1b \u5269\u4e0b\u7684\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5c06\u5bf9\u8be5 Pod \u8d77\u4f5c\u7528 \u4f8b\u5982\uff1a \u5982\u679c\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c NoSchedule \uff0c\u5219 Kubernetes \u4e0d\u4f1a\u5c06 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a \u5982\u679c\u6ca1\u6709\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c NoSchedule \uff0c\u4f46\u662f\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u4e0d\u53ef\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c PreferNoSchedule \uff0c\u5219 Kubernetes \u5c06\u5c3d\u91cf\u907f\u514d\u5c06\u8be5 Pod \u8c03\u5ea6\u5230\u6b64\u8282\u70b9 \u5982\u679c\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u5ffd\u7565\u7684\u6c61\u70b9\u5e26\u6709\u6548\u679c NoExecute \uff0c\u5219\uff1a \u5047\u8bbe Pod \u5df2\u7ecf\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\uff0cKubernetes \u5c06\u4ece\u8be5\u8282\u70b9\u4e0a\u9a71\u9010\uff08evict\uff09\u8be5 Pod \u5047\u8bbe Pod \u5c1a\u672a\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\uff0cKubernetes \u5c06\u4e0d\u4f1a\u628a Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9 \u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u7ed9\u4e00\u4e2a\u8282\u70b9\u6dfb\u52a0\u4e86\u4e09\u4e2a\u6c61\u70b9\uff1a kubectl taint nodes node1 key1=value1:NoSchedule kubectl taint nodes node1 key1=value1:NoExecute kubectl taint nodes node1 key2=value2:NoSchedule \u540c\u65f6\uff0c\u6709\u4e00\u4e2a Pod \u5e26\u6709\u4e24\u4e2a\u5bb9\u5fcd\uff1a tolerations: - key: \"key1\" operator: \"Equal\" value: \"value1\" effect: \"NoSchedule\" - key: \"key1\" operator: \"Equal\" value: \"value1\" effect: \"NoExecute\" \u5728\u8fd9\u4e2a\u6848\u4f8b\u4e2d\uff0cPod \u4e0a\u6709\u4e24\u4e2a\u5bb9\u5fcd\uff0c\u5339\u914d\u4e86\u8282\u70b9\u7684\u524d\u4e24\u4e2a\u6c61\u70b9\uff0c\u53ea\u6709\u8282\u70b9\u7684\u7b2c\u4e09\u4e2a\u6c61\u70b9\u5bf9\u8be5 Pod \u6765\u8bf4\u4e0d\u53ef\u5ffd\u7565\uff0c\u8be5\u6c61\u70b9\u7684\u6548\u679c\u4e3a NoSchedule \uff1a Kubernetes \u4e0d\u4f1a\u5c06\u6b64 Pod \u8c03\u5ea6\u5230\u8be5\u8282\u70b9\u4e0a \u5982\u679c Kubernetes \u5148\u5c06 Pod \u8c03\u5ea6\u5230\u4e86\u8be5\u8282\u70b9\uff0c\u540e\u5411\u8be5\u8282\u70b9\u6dfb\u52a0\u4e86\u7b2c\u4e09\u4e2a\u6c61\u70b9\uff0c\u5219 Pod \u5c06\u7ee7\u7eed\u5728\u8be5\u8282\u70b9\u4e0a\u8fd0\u884c\u800c\u4e0d\u4f1a\u88ab\u9a71\u9010\uff08\u8282\u70b9\u4e0a\u5e26\u6709 NoExecute \u6548\u679c\u7684\u6c61\u70b9\u5df2\u88ab Pod \u4e0a\u7684\u7b2c\u4e8c\u4e2a\u5bb9\u5fcd\u5339\u914d\uff0c\u56e0\u6b64\u88ab\u5ffd\u7565\uff09 \u901a\u5e38\uff0c\u5728\u5e26\u6709\u6548\u679c NoExecute \u7684\u6c61\u70b9\u88ab\u6dfb\u52a0\u5230\u8282\u70b9\u65f6\uff0c\u8282\u70b9\u4e0a\u4efb\u4f55\u4e0d\u5bb9\u5fcd\u8be5\u6c61\u70b9\u7684 Pod \u5c06\u88ab\u7acb\u523b\u9a71\u9010\uff0c\u800c\u5bb9\u5fcd\u8be5\u6c61\u70b9\u7684 Pod \u5219\u4e0d\u4f1a\u88ab\u9a71\u9010\u3002 \u6b64\u5916\uff0c\u5e26\u6709\u6548\u679c NoExecute \u7684\u6c61\u70b9\u8fd8\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u53ef\u9009\u5b57\u6bb5 tolerationSeconds \uff0c\u8be5\u5b57\u6bb5\u6307\u5b9a\u4e86 Pod \u5728\u591a\u957f\u65f6\u95f4\u540e\u88ab\u9a71\u9010\uff0c\u4f8b\u5982\uff1a tolerations: - key: \"key1\" operator: \"Equal\" value: \"value1\" effect: \"NoExecute\" tolerationSeconds: 3600 \u6b64\u4f8b\u5b50\u4e2d\uff0c\u5982\u679c Pod \u5df2\u7ecf\u8fd0\u884c\u5728\u8282\u70b9\u4e0a\uff0c\u518d\u5411\u8282\u70b9\u589e\u52a0\u6b64\u6c61\u70b9\u65f6\uff0cPod \u5c06\u5728\u8be5\u8282\u70b9\u4e0a\u7ee7\u7eed\u8fd0\u884c 3600 \u79d2\uff0c\u7136\u540e\u624d\u88ab\u9a71\u9010\u3002\u5982\u679c\u6c61\u70b9\u5728\u6b64\u4e4b\u95f4\u88ab\u79fb\u9664\uff0c\u5219 Pod \u5c06\u4e0d\u4f1a\u88ab\u9a71\u9010\u3002","title":"\u6c61\u70b9\u4e0e\u5bb9\u5fcd\u7684\u5339\u914d"},{"location":"kubernetes/emptyDir/","text":"emptyDir emptyDir\u7c7b\u578b\u7684\u5b58\u50a8\u5377\u521b\u5efa\u4e8ePod\u88ab\u8c03\u5ea6\u5230\u5bbf\u4e3b\u673a\u4e0a\u7684\u65f6\u5019\uff0c\u540c\u4e00\u4e2aPod\u5185\u7684\u591a\u4e2a\u5bb9\u5668\u80fd\u8bfb\u5199emptyDir\u4e2d\u7684\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e00\u65e6\u8fd9\u4e2aPod\u9500\u6bc1\u6216\u8005\u6f02\u79fb\u5f00\u8be5\u5bbf\u4e3b\u673a\uff0cemptyDir\u4e2d\u7684\u6570\u636e\u5c31\u4f1a\u88ab\u6c38\u4e45\u5220\u9664\u3002emptyDir\u7c7b\u578b\u7684\u5b58\u50a8\u5377\u4e3b\u8981\u7528\u4f5c\u4e34\u65f6\u7a7a\u95f4\u6216\u8005\u4e0d\u540c\u5bb9\u5668\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab\u3002\u5bb9\u5668\u7684crashing\u4e8b\u4ef6\u5e76\u4e0d\u4f1a\u5bfc\u81f4emptyDir\u4e2d\u7684\u6570\u636e\u88ab\u5220\u9664\u3002 emptyDir\u652f\u6301\u5185\u5b58\u4f5c\u4e3a\u5b58\u50a8\u8d44\u6e90\uff0cemptyDir.medium\u8bbe\u4e3aMemory\u5373\u53ef\uff0c\u4f46\u5982\u679c\u9047\u5230node\u8282\u70b9\u91cd\u542f\uff0cemptyDir\u4e2d\u7684\u6570\u636e\u4e5f\u4f1a\u5168\u90e8\u4e22\u5931\u3002 \u4ee5\u4e0b\u6f14\u793a\u5982\u4f55\u5728Pod\u4e2d\u4e0d\u540c\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002 vi emptydir-pod.yaml apiVersion: v1 kind: Pod metadata: name: emptydir-pod spec: #\u5b9a\u4e49emptyDir\u5b58\u50a8\u5377\uff0c\u540d\u79f0my-emptydir-vol volumes: - name: my-emptydir-vol emptyDir: {} containers: - name: busybox-1 image: busybox:latest command: - \"sleep\" - \"3600\" #\u5c06my-emptydir-vol\u5b58\u50a8\u5377Mount\u5230\u5bb9\u5668\u4e2d volumeMounts: - name: my-emptydir-vol #\u6b64\u8def\u5f84\u4e3a\u5bb9\u5668\u4e2d\u76ee\u5f55 mountPath: /data-1 - name: busybox-2 image: busybox:latest command: - \"sleep\" - \"3600\" #\u5c06my-emptydir-vol\u5b58\u50a8\u5377Mount\u5230\u5bb9\u5668\u4e2d volumeMounts: - name: my-emptydir-vol mountPath: /data-2 kubectl apply -f emptydir-pod.yaml \u8fdb\u5165\u5bb9\u5668busybox-1\uff0c\u5b58\u5728/data-1\u76ee\u5f55 kubectl exec -it emptydir-pod -c busybox-1 sh ls bin data-1 dev etc home proc root sys tmp usr var \u5728\u5bb9\u5668busybox-1\u5411\u5171\u4eab\u76ee\u5f55\u4e2d/data-1\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 cd data-1 echo \"hello world\" > hello.txt exit \u5bb9\u5668busybox-2\u7684\u5171\u4eab\u76ee\u5f55\u4e2d/data-2\u786e\u5b9e\u80fd\u591f\u8bbf\u95ee\u5bb9\u5668busybox-1\u521b\u5efa\u7684\u6587\u4ef6\uff0c\u6ce8\u610fbusybox-1:/data-1 = busybox-2:/data-2 kubectl exec -it emptydir-pod -c busybox-2 sh cat /data-2/hello.txt hello world exit \u6211\u4eec\u770b\u770bemptyDir\u5b58\u50a8\u5377\u5728\u5bbf\u4e3b\u673a\u7684\u4f4d\u7f6e\u3002\u5728k8s-node1\u8282\u70b9\uff0c\u5728Pod\u4e34\u65f6\u76ee\u5f55\u4e0b\u5b58\u5728my-emptydir-vol\u76ee\u5f55\uff0c\u5bb9\u5668\u521b\u5efa\u7684\u6587\u4ef6\u5c31\u5b58\u653e\u5728\u8be5\u76ee\u5f55\u4e2d\u3002Pod\u7684\u4e34\u65f6\u76ee\u5f55\u4f1a\u5728Pod\u9500\u6bc1\u65f6\u5220\u9664\uff0c\u5176\u4e2dmy-emptydir-vol\u4e5f\u4f1a\u88ab\u9644\u5e26\u5220\u9664\u3002 kubectl get pod -o yaml | grep nodeName nodeName: k8s-node1 kubectl get pod -o yaml | grep uid uid: e70923f9-156a-4fde-98be-e77f3f65fbd9 #\u5728k8s-node1\u8282\u70b9 tree /var/lib/kubelet/pods/e70923f9-156a-4fde-98be-e77f3f65fbd9/ /var/lib/kubelet/pods/e70923f9-156a-4fde-98be-e77f3f65fbd9/ \u251c\u2500\u2500 containers \u2502 \u251c\u2500\u2500 busybox-1 \u2502 \u2502 \u251c\u2500\u2500 753e3ae2 \u2502 \u2502 \u2514\u2500\u2500 96560e76 \u2502 \u2514\u2500\u2500 busybox-2 \u2502 \u251c\u2500\u2500 1a8b5849 \u2502 \u2514\u2500\u2500 a6a696a2 \u251c\u2500\u2500 etc-hosts \u251c\u2500\u2500 plugins \u2502 \u2514\u2500\u2500 kubernetes.io~empty-dir \u2502 \u251c\u2500\u2500 my-emptydir-vol \u2502 \u2502 \u2514\u2500\u2500 ready \u2502 \u2514\u2500\u2500 wrapped_default-token-wtqgl \u2502 \u2514\u2500\u2500 ready \u2514\u2500\u2500 volumes \u251c\u2500\u2500 kubernetes.io~empty-dir \u2502 \u2514\u2500\u2500 my-emptydir-vol \u2502 \u2514\u2500\u2500 hello.txt \u2514\u2500\u2500 kubernetes.io~secret \u2514\u2500\u2500 default-token-wtqgl \u251c\u2500\u2500 ca.crt -> ..data/ca.crt \u251c\u2500\u2500 namespace -> ..data/namespace \u2514\u2500\u2500 token -> ..data/token cat /var/lib/kubelet/pods/e70923f9-156a-4fde-98be-e77f3f65fbd9/volumes/kubernetes.io~empty-dir/my-emptydir-vol/hello.txt hello world \u5220\u9664Pod\uff0c\u67e5\u770bPod\u4e34\u65f6\u76ee\u5f55\u3002\u53d1\u73b0\u5df2\u7ecf\u6ca1\u6709Pod\u4e34\u65f6\u76ee\u5f55e70923f9-156a-4fde-98be-e77f3f65fbd9\u4e86\u3002 kubectl delete -f emptydir-pod.yaml #\u5728k8s-node1\u8282\u70b9 ls /var/lib/kubelet/pods/","title":"emptyDir"},{"location":"kubernetes/emptyDir/#emptydir","text":"emptyDir\u7c7b\u578b\u7684\u5b58\u50a8\u5377\u521b\u5efa\u4e8ePod\u88ab\u8c03\u5ea6\u5230\u5bbf\u4e3b\u673a\u4e0a\u7684\u65f6\u5019\uff0c\u540c\u4e00\u4e2aPod\u5185\u7684\u591a\u4e2a\u5bb9\u5668\u80fd\u8bfb\u5199emptyDir\u4e2d\u7684\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u4e00\u65e6\u8fd9\u4e2aPod\u9500\u6bc1\u6216\u8005\u6f02\u79fb\u5f00\u8be5\u5bbf\u4e3b\u673a\uff0cemptyDir\u4e2d\u7684\u6570\u636e\u5c31\u4f1a\u88ab\u6c38\u4e45\u5220\u9664\u3002emptyDir\u7c7b\u578b\u7684\u5b58\u50a8\u5377\u4e3b\u8981\u7528\u4f5c\u4e34\u65f6\u7a7a\u95f4\u6216\u8005\u4e0d\u540c\u5bb9\u5668\u4e4b\u95f4\u7684\u6570\u636e\u5171\u4eab\u3002\u5bb9\u5668\u7684crashing\u4e8b\u4ef6\u5e76\u4e0d\u4f1a\u5bfc\u81f4emptyDir\u4e2d\u7684\u6570\u636e\u88ab\u5220\u9664\u3002 emptyDir\u652f\u6301\u5185\u5b58\u4f5c\u4e3a\u5b58\u50a8\u8d44\u6e90\uff0cemptyDir.medium\u8bbe\u4e3aMemory\u5373\u53ef\uff0c\u4f46\u5982\u679c\u9047\u5230node\u8282\u70b9\u91cd\u542f\uff0cemptyDir\u4e2d\u7684\u6570\u636e\u4e5f\u4f1a\u5168\u90e8\u4e22\u5931\u3002 \u4ee5\u4e0b\u6f14\u793a\u5982\u4f55\u5728Pod\u4e2d\u4e0d\u540c\u5bb9\u5668\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u3002 vi emptydir-pod.yaml apiVersion: v1 kind: Pod metadata: name: emptydir-pod spec: #\u5b9a\u4e49emptyDir\u5b58\u50a8\u5377\uff0c\u540d\u79f0my-emptydir-vol volumes: - name: my-emptydir-vol emptyDir: {} containers: - name: busybox-1 image: busybox:latest command: - \"sleep\" - \"3600\" #\u5c06my-emptydir-vol\u5b58\u50a8\u5377Mount\u5230\u5bb9\u5668\u4e2d volumeMounts: - name: my-emptydir-vol #\u6b64\u8def\u5f84\u4e3a\u5bb9\u5668\u4e2d\u76ee\u5f55 mountPath: /data-1 - name: busybox-2 image: busybox:latest command: - \"sleep\" - \"3600\" #\u5c06my-emptydir-vol\u5b58\u50a8\u5377Mount\u5230\u5bb9\u5668\u4e2d volumeMounts: - name: my-emptydir-vol mountPath: /data-2 kubectl apply -f emptydir-pod.yaml \u8fdb\u5165\u5bb9\u5668busybox-1\uff0c\u5b58\u5728/data-1\u76ee\u5f55 kubectl exec -it emptydir-pod -c busybox-1 sh ls bin data-1 dev etc home proc root sys tmp usr var \u5728\u5bb9\u5668busybox-1\u5411\u5171\u4eab\u76ee\u5f55\u4e2d/data-1\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6 cd data-1 echo \"hello world\" > hello.txt exit \u5bb9\u5668busybox-2\u7684\u5171\u4eab\u76ee\u5f55\u4e2d/data-2\u786e\u5b9e\u80fd\u591f\u8bbf\u95ee\u5bb9\u5668busybox-1\u521b\u5efa\u7684\u6587\u4ef6\uff0c\u6ce8\u610fbusybox-1:/data-1 = busybox-2:/data-2 kubectl exec -it emptydir-pod -c busybox-2 sh cat /data-2/hello.txt hello world exit \u6211\u4eec\u770b\u770bemptyDir\u5b58\u50a8\u5377\u5728\u5bbf\u4e3b\u673a\u7684\u4f4d\u7f6e\u3002\u5728k8s-node1\u8282\u70b9\uff0c\u5728Pod\u4e34\u65f6\u76ee\u5f55\u4e0b\u5b58\u5728my-emptydir-vol\u76ee\u5f55\uff0c\u5bb9\u5668\u521b\u5efa\u7684\u6587\u4ef6\u5c31\u5b58\u653e\u5728\u8be5\u76ee\u5f55\u4e2d\u3002Pod\u7684\u4e34\u65f6\u76ee\u5f55\u4f1a\u5728Pod\u9500\u6bc1\u65f6\u5220\u9664\uff0c\u5176\u4e2dmy-emptydir-vol\u4e5f\u4f1a\u88ab\u9644\u5e26\u5220\u9664\u3002 kubectl get pod -o yaml | grep nodeName nodeName: k8s-node1 kubectl get pod -o yaml | grep uid uid: e70923f9-156a-4fde-98be-e77f3f65fbd9 #\u5728k8s-node1\u8282\u70b9 tree /var/lib/kubelet/pods/e70923f9-156a-4fde-98be-e77f3f65fbd9/ /var/lib/kubelet/pods/e70923f9-156a-4fde-98be-e77f3f65fbd9/ \u251c\u2500\u2500 containers \u2502 \u251c\u2500\u2500 busybox-1 \u2502 \u2502 \u251c\u2500\u2500 753e3ae2 \u2502 \u2502 \u2514\u2500\u2500 96560e76 \u2502 \u2514\u2500\u2500 busybox-2 \u2502 \u251c\u2500\u2500 1a8b5849 \u2502 \u2514\u2500\u2500 a6a696a2 \u251c\u2500\u2500 etc-hosts \u251c\u2500\u2500 plugins \u2502 \u2514\u2500\u2500 kubernetes.io~empty-dir \u2502 \u251c\u2500\u2500 my-emptydir-vol \u2502 \u2502 \u2514\u2500\u2500 ready \u2502 \u2514\u2500\u2500 wrapped_default-token-wtqgl \u2502 \u2514\u2500\u2500 ready \u2514\u2500\u2500 volumes \u251c\u2500\u2500 kubernetes.io~empty-dir \u2502 \u2514\u2500\u2500 my-emptydir-vol \u2502 \u2514\u2500\u2500 hello.txt \u2514\u2500\u2500 kubernetes.io~secret \u2514\u2500\u2500 default-token-wtqgl \u251c\u2500\u2500 ca.crt -> ..data/ca.crt \u251c\u2500\u2500 namespace -> ..data/namespace \u2514\u2500\u2500 token -> ..data/token cat /var/lib/kubelet/pods/e70923f9-156a-4fde-98be-e77f3f65fbd9/volumes/kubernetes.io~empty-dir/my-emptydir-vol/hello.txt hello world \u5220\u9664Pod\uff0c\u67e5\u770bPod\u4e34\u65f6\u76ee\u5f55\u3002\u53d1\u73b0\u5df2\u7ecf\u6ca1\u6709Pod\u4e34\u65f6\u76ee\u5f55e70923f9-156a-4fde-98be-e77f3f65fbd9\u4e86\u3002 kubectl delete -f emptydir-pod.yaml #\u5728k8s-node1\u8282\u70b9 ls /var/lib/kubelet/pods/","title":"emptyDir"},{"location":"kubernetes/kubernetes1.16/","text":"\u672c\u5730\u90e8\u7f72K8S 1.16 \u5b9e\u9a8c\u73af\u5883\uff1a \u4e3b\u673a\u540d IP\u5730\u5740 k8s\u7248\u672c master 192.168.70.130 v1.16.9 node1 192.168.70.141 v1.16.9 node1 192.168.70.142 v1.16.9 \u673a\u5668\u90fd\u5173\u95edselinux\u548c\u9632\u706b\u5899 \u4e09\u53f0\u673a\u5668\u90fd\u6267\u884c\uff1a # cat >> /etc/hosts << EOF 192.168.70.130 k8s-master 192.168.70.141 k8s-node1 192.168.70.142 k8s-node2 EOF # yum -y install wget vim # mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak # wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo # yum clean all && yum makecache # yum install net-tools -y # sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab # \u4e34\u65f6\u7981\u7528 # swapoff -a # \u672c\u6587\u7684k8s\u7f51\u7edc\u4f7f\u7528flannel\uff0c\u8be5\u7f51\u7edc\u9700\u8981\u8bbe\u7f6e\u5185\u6838\u53c2\u6570bridge-nf-call-iptables=1\uff0c\u4fee\u6539\u8fd9\u4e2a\u53c2\u6570\u9700\u8981\u7cfb\u7edf\u6709br_netfilter\u6a21\u5757\u3002 # \u67e5\u770bbr_netfilter\u6a21\u5757\uff1a # lsmod |grep br_netfilter # \u5982\u679c\u7cfb\u7edf\u6ca1\u6709br_netfilter\u6a21\u5757\u5219\u6267\u884c\u4e0b\u9762\u7684\u65b0\u589e\u547d\u4ee4\uff0c\u5982\u6709\u5219\u5ffd\u7565 # \u4e34\u65f6\u65b0\u589ebr_netfilter\u6a21\u5757: # modprobe br_netfilter # lsmod |grep br_netfilter br_netfilter 22256 0 bridge 151336 1 br_netfilter # \u8be5\u65b9\u5f0f\u91cd\u542f\u540e\u4f1a\u5931\u6548 # \u6c38\u4e45\u65b0\u589ebr_netfilter\u6a21\u5757\uff1a # cat > /etc/rc.sysinit << EOF #!/bin/bash for file in /etc/sysconfig/modules/*.modules ; do [ -x $file ] && $file done EOF # cat > /etc/sysconfig/modules/br_netfilter.modules << EOF modprobe br_netfilter EOF # chmod 755 /etc/sysconfig/modules/br_netfilter.modules # cat <<EOF > /etc/sysctl.d/k8s.conf vm.swappiness = 0 net.bridge.bridge-nf-call-ip6tables = 1 net.ipv4.ip_forward = 1 net.bridge.bridge-nf-call-iptables = 1 EOF # cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack EOF # chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4 # yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset # yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # yum list docker-ce --showduplicates | sort -r # yum install -y docker-ce-18.09.9 docker-ce-cli-18.09.9 containerd.io # systemctl enable docker && systemctl start docker # # mkdir /etc/docker # cat > /etc/docker/daemon.json <<EOF { # \"registry-mirrors\": [ \"https://registry.docker-cn.com\", \"http://hub-mirror.c.163.com\", \"https://docker.mirrors.ustc.edu.cn\" ], \"exec-opts\": [\"native.cgroupdriver=systemd\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"storage-driver\": \"overlay2\", \"storage-opts\": [ \"overlay2.override_kernel_check=true\" ] } EOF # systemctl daemon-reload && systemctl restart docker # cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/ enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF # \u66f4\u65b0\u7f13\u5b58 # yum clean all # yum -y makecache # yum list kubelet --showduplicates | sort -r # yum install -y kubelet-1.16.9 kubeadm-1.16.9 kubectl-1.16.9 # systemctl enable kubelet.service && systemctl start kubelet # vi image.sh #!/bin/bash url=registry.cn-hangzhou.aliyuncs.com/google_containers version=v1.16.9 images=(`kubeadm config images list --kubernetes-version=$version|awk -F '/' '{print $2}'`) for imagename in ${images[@]} ; do docker pull $url/$imagename docker tag $url/$imagename k8s.gcr.io/$imagename docker rmi -f $url/$imagename done # chmod 777 image.sh # ./image.sh master\u6267\u884c\uff1a # kubeadm init \\ --apiserver-advertise-address=192.168.70.130 \\ --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \\ --kubernetes-version v1.16.9 \\ --service-cidr=10.1.0.0/16 \\ --pod-network-cidr=10.244.0.0/16 W0628 09:01:05.568405 20714 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups ...\u7701\u7565... Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192.168.70.130:6443 --token eufass.9mj0z1oafwjwna8y \\ --discovery-token-ca-cert-hash sha256:1899cb7904899c7377fa01ca452d7260241f2f333f6dfff1bc843f338224ffb9 # echo \"export KUBECONFIG=/etc/kubernetes/admin.conf\" >> ~/.bash_profile # source .bash_profile # mkdir -p $HOME/.kube # cp -i /etc/kubernetes/admin.conf $HOME/.kube/config # chown $(id -u):$(id -g) $HOME/.kube/config \u67e5\u770b\u96c6\u7fa4\u72b6\u6001 # kubectl get cs NAME AGE scheduler <unknown> controller-manager <unknown> etcd-0 <unknown> # kubectl get cs -o=go-template='{{printf \"|NAME|STATUS|MESSAGE|\\n\"}}{{range .items}}{{$name := .metadata.name}}{{range .conditions}}{{printf \"|%s|%s|%s|\\n\" $name .status .message}}{{end}}{{end}}' |NAME|STATUS|MESSAGE| |scheduler|True|ok| |controller-manager|True|ok| |etcd-0|True|{\"health\":\"true\"}| \u90e8\u7f72\u7f51\u7edc # \u8fd9\u4e2ayml\u6587\u4ef6\u53ef\u4ee5\u63d0\u524d\u4e0b\u8f7d\u4e0b\u6765 # kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml # kubectl get ds -l app=flannel -n kube-system NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE kube-flannel-ds-amd64 1 1 1 1 1 <none> 39s kube-flannel-ds-arm 0 0 0 0 0 <none> 39s kube-flannel-ds-arm64 0 0 0 0 0 <none> 39s kube-flannel-ds-ppc64le 0 0 0 0 0 <none> 39s kube-flannel-ds-s390x 0 0 0 0 0 <none> 39s # kubeadm token create --print-join-command W0628 09:12:59.371222 26258 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io] kubeadm join 192.168.70.130:6443 --token jf0j4u.lieaijygwth7jcoo --discovery-token-ca-cert-hash sha256:1899cb7904899c7377fa01ca452d7260241f2f333f6dfff1bc843f338224ffb9 node\u6267\u884c\uff1a # kubeadm join 192.168.119.191:6443 --token jf0j4u.lieaijygwth7jcoo --discovery-token-ca-cert-hash sha256:1899cb7904899c7377fa01ca452d7260241f2f333f6dfff1bc843f338224ffb9 \u6d4b\u8bd5\u96c6\u7fa4\uff1a \u5728master\u4e0a\u6267\u884c # kubectl run curl --image=radial/busyboxplus:curl -it kubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead. If you don't see a command prompt, try pressing enter. $ nslookup kubernetes.default Server: 10.96.0.10 Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local Name: kubernetes.default Address 1: 10.96.0.1 kubernetes.default.svc.cluster.local # \u6d4b\u8bd5\u96c6\u7fa4\u662f\u5426\u6b63\u5e38 # kubectl create deployment nginx --image=nginx deployment.apps/nginx created # \u521b\u5efaservice # kubectl expose deployment nginx --port=80 --type=NodePort service/nginx exposed # kubectl get pods,svc NAME READY STATUS RESTARTS AGE pod/nginx-6799fc88d8-wp9db 0/1 ContainerCreating 0 19s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/kubernetes ClusterIP 10.1.0.1 <none> 443/TCP 31m service/nginx NodePort 10.1.245.2 <none> 80:31532/TCP 6s $ curl 10.1.245.2 <!DOCTYPE html> <html> <head>","title":"K8S 1.16.9\u90e8\u7f72"},{"location":"kubernetes/kubernetes1.16/#k8s-116","text":"\u5b9e\u9a8c\u73af\u5883\uff1a \u4e3b\u673a\u540d IP\u5730\u5740 k8s\u7248\u672c master 192.168.70.130 v1.16.9 node1 192.168.70.141 v1.16.9 node1 192.168.70.142 v1.16.9 \u673a\u5668\u90fd\u5173\u95edselinux\u548c\u9632\u706b\u5899","title":"\u672c\u5730\u90e8\u7f72K8S 1.16"},{"location":"kubernetes/kubernetes1.16/#_1","text":"# cat >> /etc/hosts << EOF 192.168.70.130 k8s-master 192.168.70.141 k8s-node1 192.168.70.142 k8s-node2 EOF # yum -y install wget vim # mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.bak # wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo # yum clean all && yum makecache # yum install net-tools -y # sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab # \u4e34\u65f6\u7981\u7528 # swapoff -a # \u672c\u6587\u7684k8s\u7f51\u7edc\u4f7f\u7528flannel\uff0c\u8be5\u7f51\u7edc\u9700\u8981\u8bbe\u7f6e\u5185\u6838\u53c2\u6570bridge-nf-call-iptables=1\uff0c\u4fee\u6539\u8fd9\u4e2a\u53c2\u6570\u9700\u8981\u7cfb\u7edf\u6709br_netfilter\u6a21\u5757\u3002 # \u67e5\u770bbr_netfilter\u6a21\u5757\uff1a # lsmod |grep br_netfilter # \u5982\u679c\u7cfb\u7edf\u6ca1\u6709br_netfilter\u6a21\u5757\u5219\u6267\u884c\u4e0b\u9762\u7684\u65b0\u589e\u547d\u4ee4\uff0c\u5982\u6709\u5219\u5ffd\u7565 # \u4e34\u65f6\u65b0\u589ebr_netfilter\u6a21\u5757: # modprobe br_netfilter # lsmod |grep br_netfilter br_netfilter 22256 0 bridge 151336 1 br_netfilter # \u8be5\u65b9\u5f0f\u91cd\u542f\u540e\u4f1a\u5931\u6548 # \u6c38\u4e45\u65b0\u589ebr_netfilter\u6a21\u5757\uff1a # cat > /etc/rc.sysinit << EOF #!/bin/bash for file in /etc/sysconfig/modules/*.modules ; do [ -x $file ] && $file done EOF # cat > /etc/sysconfig/modules/br_netfilter.modules << EOF modprobe br_netfilter EOF # chmod 755 /etc/sysconfig/modules/br_netfilter.modules # cat <<EOF > /etc/sysctl.d/k8s.conf vm.swappiness = 0 net.bridge.bridge-nf-call-ip6tables = 1 net.ipv4.ip_forward = 1 net.bridge.bridge-nf-call-iptables = 1 EOF # cat > /etc/sysconfig/modules/ipvs.modules <<EOF #!/bin/bash modprobe -- ip_vs modprobe -- ip_vs_rr modprobe -- ip_vs_wrr modprobe -- ip_vs_sh modprobe -- nf_conntrack EOF # chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs -e nf_conntrack_ipv4 # yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset # yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo # yum list docker-ce --showduplicates | sort -r # yum install -y docker-ce-18.09.9 docker-ce-cli-18.09.9 containerd.io # systemctl enable docker && systemctl start docker # # mkdir /etc/docker # cat > /etc/docker/daemon.json <<EOF { # \"registry-mirrors\": [ \"https://registry.docker-cn.com\", \"http://hub-mirror.c.163.com\", \"https://docker.mirrors.ustc.edu.cn\" ], \"exec-opts\": [\"native.cgroupdriver=systemd\"], \"log-driver\": \"json-file\", \"log-opts\": { \"max-size\": \"100m\" }, \"storage-driver\": \"overlay2\", \"storage-opts\": [ \"overlay2.override_kernel_check=true\" ] } EOF # systemctl daemon-reload && systemctl restart docker # cat <<EOF > /etc/yum.repos.d/kubernetes.repo [kubernetes] name=Kubernetes baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/ enabled=1 gpgcheck=1 repo_gpgcheck=1 gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg EOF # \u66f4\u65b0\u7f13\u5b58 # yum clean all # yum -y makecache # yum list kubelet --showduplicates | sort -r # yum install -y kubelet-1.16.9 kubeadm-1.16.9 kubectl-1.16.9 # systemctl enable kubelet.service && systemctl start kubelet # vi image.sh #!/bin/bash url=registry.cn-hangzhou.aliyuncs.com/google_containers version=v1.16.9 images=(`kubeadm config images list --kubernetes-version=$version|awk -F '/' '{print $2}'`) for imagename in ${images[@]} ; do docker pull $url/$imagename docker tag $url/$imagename k8s.gcr.io/$imagename docker rmi -f $url/$imagename done # chmod 777 image.sh # ./image.sh","title":"\u4e09\u53f0\u673a\u5668\u90fd\u6267\u884c\uff1a"},{"location":"kubernetes/kubernetes1.16/#master","text":"# kubeadm init \\ --apiserver-advertise-address=192.168.70.130 \\ --image-repository registry.cn-hangzhou.aliyuncs.com/google_containers \\ --kubernetes-version v1.16.9 \\ --service-cidr=10.1.0.0/16 \\ --pod-network-cidr=10.244.0.0/16 W0628 09:01:05.568405 20714 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups ...\u7701\u7565... Your Kubernetes control-plane has initialized successfully! To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config You should now deploy a pod network to the cluster. Run \"kubectl apply -f [podnetwork].yaml\" with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ Then you can join any number of worker nodes by running the following on each as root: kubeadm join 192.168.70.130:6443 --token eufass.9mj0z1oafwjwna8y \\ --discovery-token-ca-cert-hash sha256:1899cb7904899c7377fa01ca452d7260241f2f333f6dfff1bc843f338224ffb9 # echo \"export KUBECONFIG=/etc/kubernetes/admin.conf\" >> ~/.bash_profile # source .bash_profile # mkdir -p $HOME/.kube # cp -i /etc/kubernetes/admin.conf $HOME/.kube/config # chown $(id -u):$(id -g) $HOME/.kube/config \u67e5\u770b\u96c6\u7fa4\u72b6\u6001 # kubectl get cs NAME AGE scheduler <unknown> controller-manager <unknown> etcd-0 <unknown> # kubectl get cs -o=go-template='{{printf \"|NAME|STATUS|MESSAGE|\\n\"}}{{range .items}}{{$name := .metadata.name}}{{range .conditions}}{{printf \"|%s|%s|%s|\\n\" $name .status .message}}{{end}}{{end}}' |NAME|STATUS|MESSAGE| |scheduler|True|ok| |controller-manager|True|ok| |etcd-0|True|{\"health\":\"true\"}| \u90e8\u7f72\u7f51\u7edc # \u8fd9\u4e2ayml\u6587\u4ef6\u53ef\u4ee5\u63d0\u524d\u4e0b\u8f7d\u4e0b\u6765 # kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml # kubectl get ds -l app=flannel -n kube-system NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGE kube-flannel-ds-amd64 1 1 1 1 1 <none> 39s kube-flannel-ds-arm 0 0 0 0 0 <none> 39s kube-flannel-ds-arm64 0 0 0 0 0 <none> 39s kube-flannel-ds-ppc64le 0 0 0 0 0 <none> 39s kube-flannel-ds-s390x 0 0 0 0 0 <none> 39s # kubeadm token create --print-join-command W0628 09:12:59.371222 26258 configset.go:202] WARNING: kubeadm cannot validate component configs for API groups [kubelet.config.k8s.io kubeproxy.config.k8s.io] kubeadm join 192.168.70.130:6443 --token jf0j4u.lieaijygwth7jcoo --discovery-token-ca-cert-hash sha256:1899cb7904899c7377fa01ca452d7260241f2f333f6dfff1bc843f338224ffb9","title":"master\u6267\u884c\uff1a"},{"location":"kubernetes/kubernetes1.16/#node","text":"# kubeadm join 192.168.119.191:6443 --token jf0j4u.lieaijygwth7jcoo --discovery-token-ca-cert-hash sha256:1899cb7904899c7377fa01ca452d7260241f2f333f6dfff1bc843f338224ffb9 \u6d4b\u8bd5\u96c6\u7fa4\uff1a \u5728master\u4e0a\u6267\u884c # kubectl run curl --image=radial/busyboxplus:curl -it kubectl run --generator=deployment/apps.v1 is DEPRECATED and will be removed in a future version. Use kubectl run --generator=run-pod/v1 or kubectl create instead. If you don't see a command prompt, try pressing enter. $ nslookup kubernetes.default Server: 10.96.0.10 Address 1: 10.96.0.10 kube-dns.kube-system.svc.cluster.local Name: kubernetes.default Address 1: 10.96.0.1 kubernetes.default.svc.cluster.local # \u6d4b\u8bd5\u96c6\u7fa4\u662f\u5426\u6b63\u5e38 # kubectl create deployment nginx --image=nginx deployment.apps/nginx created # \u521b\u5efaservice # kubectl expose deployment nginx --port=80 --type=NodePort service/nginx exposed # kubectl get pods,svc NAME READY STATUS RESTARTS AGE pod/nginx-6799fc88d8-wp9db 0/1 ContainerCreating 0 19s NAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGE service/kubernetes ClusterIP 10.1.0.1 <none> 443/TCP 31m service/nginx NodePort 10.1.245.2 <none> 80:31532/TCP 6s $ curl 10.1.245.2 <!DOCTYPE html> <html> <head>","title":"node\u6267\u884c\uff1a"},{"location":"kubernetes/minikube/minikube/","text":"ECS\u90e8\u7f72Minikube \u6211\u7684ECS\u662f\u817e\u8baf\u4e91\u7684\uff0cCentos7.6 \u955c\u50cf\uff0c\u5730\u57df\u5728\u7845\u8c37\uff0c\u56e0\u4e3aK8S\u5f88\u591a\u955c\u50cf\u90fd\u5728\u6d77\u5916\uff0c\u56fd\u5185\u5373\u4f7f\u6709\u817e\u8baf\u963f\u91cc\u7684\u6e90\uff0c\u4f46\u662f\u7ecf\u5e38\u4e5f\u4e0b\u8f7d\u4e0d\u4e0b\u6765\uff0c\u6298\u817e\u4e86\u5f88\u591a\u904d\uff0c\u4e0d\u6298\u817e\u4e86\uff0c\u76f4\u63a5\u5730\u57df\u9009\u62e9\u6d77\u5916\uff0c\u8282\u7701\u5f88\u591a\u5fc3\u529b \u673a\u5668\u9700\u8981\u5b89\u88c5 Kubectl\u548cDocker Kubectl\u5b89\u88c5\uff1ahttps://kubernetes.io/docs/tasks/tools/install-kubectl-linux/ \u7248\u672c\u9009\u62e9\uff1a yum list kubectl --showduplicates | sort -r yum install -y kubectl-1.18.20-0 Docker\u5b89\u88c5\uff1ahttps://docs.docker.com/engine/install/centos/ #\u5b89\u88c5minikube curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube # minikube\u542f\u52a8\u96c6\u7fa4\uff0c--image-mirror-country='cn'\u5c31\u662f\u5728\u4e2d\u56fd\u533a\u5b89\u88c5\u96c6\u7fa4\uff0c\u4e0b\u8f7d\u955c\u50cf\u4ece\u963f\u91cc\u4e91\u4e0b\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8fd8\u662f\u6709\u5f88\u591a\u955c\u50cf\u4e0b\u8f7d\u4e0d\u4e0b\u6765 # minikube start --image-mirror-country='cn' --force --driver=docker --nodes=2 --cpus=2 --memory=3000MB --network-plugin=cni --cni=flannel --extra-config=kubeadm.pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.18.20 # \u6d77\u5916\u76f4\u63a5\u7528\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4 minikube start --force --driver=docker --nodes=2 --network-plugin=cni --cni=flannel --extra-config=kubeadm.pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.18.20 #\u5982\u679c\u4e0d\u8bbe\u7f6ecni\uff0c\u540e\u7eed\u6dfb\u52a0\u8282\u70b9\uff0c\u4f1a\u51fa\u73b0Cluster was created without any CNI, adding a node to it might cause broken networking\u3002\u5c31\u662f\u540e\u7eed\u7684\u8282\u70b9\u65e0\u6cd5\u8bbf\u95ee\u96c6\u7fa4\u5185\u7684service #\u6dfb\u52a0\u8282\u70b9\uff0c\u53ef\u4ee5\u4e0d\u6dfb\u52a0\uff0c\u4e0a\u9762\u547d\u4ee4\u5df2\u7ecf\u6dfb\u52a0\u4e86\u4e24\u4e2a\u8282\u70b9 minikube node add \u90e8\u7f72\u5b8c\u6210 \u8f6c\u53d1 service \u7684\u7aef\u53e3\u5230ecs \u7684\u7aef\u53e3 \uff0c-n \u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6620\u5c04POD kubectl port-forward -n infra svc/consul-net --address 0.0.0.0 8500:8500 kubectl port-forward -n namespace $POD_NAME --address 0.0.0.0 3306:3306 \u540e\u53f0\u8fd0\u884c nohup kubectl port-forward svc/infra-consul-net --address 0.0.0.0 8500:8500 >>forward-8500.log 2>&1 & \u8bbf\u95eek8s\u9762\u677f kubectl proxy --port=8001 --address='0.0.0.0' --accept-hosts='^.*' --disable-filter=true \u8bbf\u95eedashboard\u5730\u5740 http://ECS\u5730\u5740:8001/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/overview?namespace=default \u6d4b\u8bd5\u96c6\u7fa4 # \u521b\u5efadeployment # kubectl create deployment nginx --image=nginx deployment.apps/nginx created #\u6269\u5bb9deployment # kubectl scale deployment nginx --replicas=5 deployment.apps/nginx scaled # \u521b\u5efaservice # kubectl expose deployment nginx --port=80 --type=NodePort service/nginx exposed # kubectl get pods,svc \u6d4b\u8bd5\u5b8c\u96c6\u7fa4\uff0c\u53ef\u4ee5\u91cd\u65b0\u521d\u59cb\u5316\u96c6\u7fa4\uff0c\u7701\u7684\u4e00\u4e2a\u4e2a\u5220\u9664\u8d44\u6e90 #\u505c\u6b62\u96c6\u7fa4 minikube stop #\u5220\u9664\u96c6\u7fa4 minikube delete","title":"minikube"},{"location":"kubernetes/minikube/minikube/#ecsminikube","text":"\u6211\u7684ECS\u662f\u817e\u8baf\u4e91\u7684\uff0cCentos7.6 \u955c\u50cf\uff0c\u5730\u57df\u5728\u7845\u8c37\uff0c\u56e0\u4e3aK8S\u5f88\u591a\u955c\u50cf\u90fd\u5728\u6d77\u5916\uff0c\u56fd\u5185\u5373\u4f7f\u6709\u817e\u8baf\u963f\u91cc\u7684\u6e90\uff0c\u4f46\u662f\u7ecf\u5e38\u4e5f\u4e0b\u8f7d\u4e0d\u4e0b\u6765\uff0c\u6298\u817e\u4e86\u5f88\u591a\u904d\uff0c\u4e0d\u6298\u817e\u4e86\uff0c\u76f4\u63a5\u5730\u57df\u9009\u62e9\u6d77\u5916\uff0c\u8282\u7701\u5f88\u591a\u5fc3\u529b \u673a\u5668\u9700\u8981\u5b89\u88c5 Kubectl\u548cDocker Kubectl\u5b89\u88c5\uff1ahttps://kubernetes.io/docs/tasks/tools/install-kubectl-linux/ \u7248\u672c\u9009\u62e9\uff1a yum list kubectl --showduplicates | sort -r yum install -y kubectl-1.18.20-0 Docker\u5b89\u88c5\uff1ahttps://docs.docker.com/engine/install/centos/ #\u5b89\u88c5minikube curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube # minikube\u542f\u52a8\u96c6\u7fa4\uff0c--image-mirror-country='cn'\u5c31\u662f\u5728\u4e2d\u56fd\u533a\u5b89\u88c5\u96c6\u7fa4\uff0c\u4e0b\u8f7d\u955c\u50cf\u4ece\u963f\u91cc\u4e91\u4e0b\uff0c\u7ecf\u8fc7\u6d4b\u8bd5\uff0c\u53d1\u73b0\u8fd8\u662f\u6709\u5f88\u591a\u955c\u50cf\u4e0b\u8f7d\u4e0d\u4e0b\u6765 # minikube start --image-mirror-country='cn' --force --driver=docker --nodes=2 --cpus=2 --memory=3000MB --network-plugin=cni --cni=flannel --extra-config=kubeadm.pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.18.20 # \u6d77\u5916\u76f4\u63a5\u7528\u4e0b\u9762\u8fd9\u6761\u547d\u4ee4 minikube start --force --driver=docker --nodes=2 --network-plugin=cni --cni=flannel --extra-config=kubeadm.pod-network-cidr=10.244.0.0/16 --kubernetes-version=v1.18.20 #\u5982\u679c\u4e0d\u8bbe\u7f6ecni\uff0c\u540e\u7eed\u6dfb\u52a0\u8282\u70b9\uff0c\u4f1a\u51fa\u73b0Cluster was created without any CNI, adding a node to it might cause broken networking\u3002\u5c31\u662f\u540e\u7eed\u7684\u8282\u70b9\u65e0\u6cd5\u8bbf\u95ee\u96c6\u7fa4\u5185\u7684service #\u6dfb\u52a0\u8282\u70b9\uff0c\u53ef\u4ee5\u4e0d\u6dfb\u52a0\uff0c\u4e0a\u9762\u547d\u4ee4\u5df2\u7ecf\u6dfb\u52a0\u4e86\u4e24\u4e2a\u8282\u70b9 minikube node add \u90e8\u7f72\u5b8c\u6210 \u8f6c\u53d1 service \u7684\u7aef\u53e3\u5230ecs \u7684\u7aef\u53e3 \uff0c-n \u6307\u5b9a\u547d\u540d\u7a7a\u95f4\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u6620\u5c04POD kubectl port-forward -n infra svc/consul-net --address 0.0.0.0 8500:8500 kubectl port-forward -n namespace $POD_NAME --address 0.0.0.0 3306:3306 \u540e\u53f0\u8fd0\u884c nohup kubectl port-forward svc/infra-consul-net --address 0.0.0.0 8500:8500 >>forward-8500.log 2>&1 & \u8bbf\u95eek8s\u9762\u677f kubectl proxy --port=8001 --address='0.0.0.0' --accept-hosts='^.*' --disable-filter=true \u8bbf\u95eedashboard\u5730\u5740 http://ECS\u5730\u5740:8001/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/#/overview?namespace=default \u6d4b\u8bd5\u96c6\u7fa4 # \u521b\u5efadeployment # kubectl create deployment nginx --image=nginx deployment.apps/nginx created #\u6269\u5bb9deployment # kubectl scale deployment nginx --replicas=5 deployment.apps/nginx scaled # \u521b\u5efaservice # kubectl expose deployment nginx --port=80 --type=NodePort service/nginx exposed # kubectl get pods,svc \u6d4b\u8bd5\u5b8c\u96c6\u7fa4\uff0c\u53ef\u4ee5\u91cd\u65b0\u521d\u59cb\u5316\u96c6\u7fa4\uff0c\u7701\u7684\u4e00\u4e2a\u4e2a\u5220\u9664\u8d44\u6e90 #\u505c\u6b62\u96c6\u7fa4 minikube stop #\u5220\u9664\u96c6\u7fa4 minikube delete","title":"ECS\u90e8\u7f72Minikube"},{"location":"n2n/n2n/","text":"n2n \u5185\u7f51\u7a7f\u900f n2n \u53ef\u4ee5\u8fdb\u884c\u5185\u7f51\u7a7f\u900f\uff0c\u628a\u5404\u5730\u7684\u8282\u70b9\u548c\u4e2d\u5fc3\u7ec4\u6210\u4e2a\u5c40\u57df\u7f51 \u4e3b\u673a\u540d n2n\u7248\u672c IP \u865a\u62dfIP supernode 3.1.0 121.121.121.121 agent1 3.1.0 192.168.8.66 192.168.100.3 agent2 3.1.0 192.168.74.128 192.168.100.1 \u5728\u4e00\u53f0\u6709\u516c\u7f51\u5730\u5740\u7684\u4e3b\u673a\u4e0a\u90e8\u7f72 \u201d\u8d85\u7ea7\u4e2d\u5fc3\u201c\uff0c\u5f00\u653e31754\u7aef\u53e3\uff0c\u516c\u7f51\u5730\u5740121.121.121.121 [root@supernode ~]# wget https://github.com/ntop/n2n/releases/download/3.1.0/n2n-3.1.0-1073.x86_64.rpm [root@supernode ~]# yum install epel-release [root@supernode ~]# yum install -y n2n-3.1.0-1073.x86_64.rpm [root@supernode ~]# cd /etc/n2n/ [root@supernode ~]# cp supernode.conf.sample supernode.conf [root@supernode ~]# vim supernode.conf -p=31754 [root@supernode ~]# sudo systemctl start supernode \u8fd9\u6837\u5c31\u542f\u52a8\u8d85\u7ea7\u8282\u70b9 \u7136\u540e\u5ba2\u6237\u7aef\u53bb\u8fde\u63a5\u8d85\u7ea7\u8282\u70b9\uff0c\u5ba2\u6237\u7aef\u4e4b\u95f4\u5c31\u53ef\u4ee5\u4e92\u76f8ping\uff0c\u4e92\u76f8\u8fde\u63a5\u4e86 \u4e0b\u9762\u662fagent1 \u63a5\u5165 \u8d85\u7ea7\u4e2d\u5fc3 [root@agent1 ~]# wget https://github.com/ntop/n2n/releases/download/3.1.0/n2n-3.1.0-1073.x86_64.rpm [root@agent1 ~]# yum install epel-release [root@agent1 ~]# yum install -y n2n-3.1.0-1073.x86_64.rpm [root@agent1 ~]# [root@agent1 ~]# edge -c myinnetwork -k myinsecretpass -a 192.168.100.3 -f -l 121.121.121.121:31754 \u51fa\u73b0\u4e0b\u9762\u8fd9\u884c\u5c31\u6210\u529f\u4e86 21/Dec/2021 20:03:41 [edge_utils.c:2731] [OK] edge <<< ================ >>> supernode agent1 edge -c myinnetwork -k myinsecretpass -a 192.168.100.3 -f -l 121.121.121.121:31754 \u8fd9\u884c\u7684\u610f\u601d\u662f -c \u6307\u5b9a\u7f51\u7edc\u540d\u79f0 -k \u6307\u5b9a\u63a5\u5165\u7684\u5bc6\u7801 -a \u7ed9\u81ea\u5df1\u8bbe\u5b9a\u7684\u865a\u62dfIP -l \u63a5\u5165\u8d85\u7ea7\u4e2d\u5fc3\u7684\u8282\u70b9 \u4e0b\u9762\u662fagent2 \u63a5\u5165 \u8d85\u7ea7\u4e2d\u5fc3 [root@agent2 ~]# wget https://github.com/ntop/n2n/releases/download/3.1.0/n2n-3.1.0-1073.x86_64.rpm [root@agent2 ~]# yum install epel-release [root@agent2 ~]# yum install -y n2n-3.1.0-1073.x86_64.rpm [root@agent2 ~]# [root@agent2 ~]# edge -c myinnetwork -k myinsecretpass -a 192.168.100.1 -f -l 121.121.121.121:31754 \u51fa\u73b0\u4e0b\u9762\u8fd9\u884c\u5c31\u6210\u529f\u4e86 21/Dec/2021 20:03:41 [edge_utils.c:2731] [OK] edge <<< ================ >>> supernode \u67e5\u770bagent2\u7684 IP\u4fe1\u606f [root@agent2 ~]# ip addr 1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000 link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00 inet 127.0.0.1/8 scope host lo valid_lft forever preferred_lft forever inet6 ::1/128 scope host valid_lft forever preferred_lft forever 2: ens33: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000 link/ether 00:0c:29:5e:74:39 brd ff:ff:ff:ff:ff:ff inet 192.168.74.128/24 brd 192.168.74.255 scope global noprefixroute dynamic ens33 valid_lft 1284sec preferred_lft 1284sec inet6 fe80::2976:eaa3:a0b4:f828/64 scope link noprefixroute valid_lft forever preferred_lft forever 3: edge0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1290 qdisc pfifo_fast state UNKNOWN group default qlen 1000 link/ether b6:60:36:ce:7c:fa brd ff:ff:ff:ff:ff:ff inet 192.168.100.1/24 brd 192.168.100.255 scope global edge0 valid_lft forever preferred_lft forever inet6 fe80::b460:36ff:fece:7cfa/64 scope link valid_lft forever preferred_lft forever \u7136\u540eping agent1 \uff0c\u53ef\u4ee5ping\u901a [root@agent2 ~]# ping 192.168.100.3 PING 192.168.100.3 (192.168.100.3) 56(84) bytes of data. 64 bytes from 192.168.100.3: icmp_seq=1 ttl=64 time=0.397 ms 64 bytes from 192.168.100.3: icmp_seq=2 ttl=64 time=0.485 ms ^C --- 192.168.100.3 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1001ms rtt min/avg/max/mdev = 0.397/0.441/0.485/0.044 ms [root@server ~]# \u7136\u540e agent2\u90e8\u7f72nginx\u5bb9\u5668 [root@agent2 ~]# docker run --name nginx -p 80:80 -d nginx 0c32734399d94dae4df9b651741aa1a7e6f6336d8aaf4bb6cb10d934878ceaad [root@agent2 ~]# [root@agent2 ~]# [root@agent2 ~]# docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 0c32734399d9 nginx \"/docker-entrypoint.\u2026\" 2 seconds ago Up 2 seconds 0.0.0.0:80->80/tcp, :::80->80/tcp nginx \u7136\u540e\u5728agent1 \u4e0a\u8fdb\u884c\u8bbf\u95ee\uff0c\u53ef\u4ee5\u8bbf\u95ee\u901a [root@agent1 ~]# curl 192.168.100.1:80 <!DOCTYPE html> <html> <head> <title>Welcome to nginx!</title> <style> html { color-scheme: light dark; } body { width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; } </style> </head> <body> <h1>Welcome to nginx!</h1> <p>If you see this page, the nginx web server is successfully installed and working. Further configuration is required.</p> <p>For online documentation and support please refer to <a href=\"http://nginx.org/\">nginx.org</a>.<br/> Commercial support is available at <a href=\"http://nginx.com/\">nginx.com</a>.</p> <p><em>Thank you for using nginx.</em></p> </body> </html> [root@agent1 ~]#","title":"n2n"},{"location":"pinpoint/pinpoint_install/","text":"Pinpoint\u90e8\u7f72 Pinpoint\u5b98\u65b9Git\u5e93\uff1ahttps://github.com/pinpoint-apm/pinpoint \u5b98\u65b9\u5b89\u88c5\u6307\u5357\uff1ahttps://pinpoint-apm.gitbook.io/pinpoint/getting-started/docker \u4e3b\u673a\u540d Pinpoint\u7248\u672c IP Cpu \u5185\u5b58 centos7 v2.3.0 192.168.70.151 4\u6838 8G \u5ba2\u6237\u7aef\uff1a \u673a\u5668\u90fd\u5173\u95edselinux\u548c\u9632\u706b\u5899 [root@centos7 ~]# yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset [root@centos7 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@centos7 ~]# yum list docker-ce --showduplicates | sort -r [root@centos7 ~]# yum install docker-ce [root@centos7 ~]# systemctl enable --now docker [root@centos7 ~]# sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose [root@centos7 ~]# sudo chmod +x /usr/local/bin/docker-compose [root@centos7 ~]# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose [root@centos7 ~]# docker version Client: Docker Engine - Community Version: 20.10.10 API version: 1.41 Go version: go1.16.9 Git commit: b485636 Built: Mon Oct 25 07:44:50 2021 OS/Arch: linux/amd64 Context: default Experimental: true Server: Docker Engine - Community Engine: Version: 20.10.10 API version: 1.41 (minimum version 1.12) Go version: go1.16.9 Git commit: e2f740d Built: Mon Oct 25 07:43:13 2021 OS/Arch: linux/amd64 Experimental: false containerd: Version: 1.4.11 GitCommit: 5b46e404f6b9f661a205e28d59c982d3634148f8 runc: Version: 1.0.2 GitCommit: v1.0.2-0-g52b36a2 docker-init: Version: 0.19.0 GitCommit: de40ad0 [root@centos7 ~]# docker-compose --version docker-compose version 1.29.2, build 5becea4c [root@centos7 ~]# git clone https://github.com/naver/pinpoint-docker.git [root@centos7 ~]# cd pinpoint-docker/ [root@centos7 ~]# git checkout 2.3.0 [root@centos7 ~]# docker-compose pull \u67e5\u770b\u914d\u7f6e\u6587\u4ef6 [root@centos7 ~]# vim .env \u90e8\u7f72\u542f\u52a8\uff0c\u9700\u8981\u4e0b\u8f7d\u955c\u50cf\uff0c\u5931\u8d25\u4e86\u5c31\u91cd\u8bd5 [root@centos7 ~]# docker-compose up -d \u8bbf\u95ee192.168.70.151:8079","title":"Pinpoint\u5b89\u88c5"},{"location":"pinpoint/pinpoint_install/#pinpoint","text":"Pinpoint\u5b98\u65b9Git\u5e93\uff1ahttps://github.com/pinpoint-apm/pinpoint \u5b98\u65b9\u5b89\u88c5\u6307\u5357\uff1ahttps://pinpoint-apm.gitbook.io/pinpoint/getting-started/docker \u4e3b\u673a\u540d Pinpoint\u7248\u672c IP Cpu \u5185\u5b58 centos7 v2.3.0 192.168.70.151 4\u6838 8G \u5ba2\u6237\u7aef\uff1a \u673a\u5668\u90fd\u5173\u95edselinux\u548c\u9632\u706b\u5899 [root@centos7 ~]# yum install yum-utils device-mapper-persistent-data lvm2 openssl socat conntrack ebtables ipset [root@centos7 ~]# yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@centos7 ~]# yum list docker-ce --showduplicates | sort -r [root@centos7 ~]# yum install docker-ce [root@centos7 ~]# systemctl enable --now docker [root@centos7 ~]# sudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose [root@centos7 ~]# sudo chmod +x /usr/local/bin/docker-compose [root@centos7 ~]# sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose [root@centos7 ~]# docker version Client: Docker Engine - Community Version: 20.10.10 API version: 1.41 Go version: go1.16.9 Git commit: b485636 Built: Mon Oct 25 07:44:50 2021 OS/Arch: linux/amd64 Context: default Experimental: true Server: Docker Engine - Community Engine: Version: 20.10.10 API version: 1.41 (minimum version 1.12) Go version: go1.16.9 Git commit: e2f740d Built: Mon Oct 25 07:43:13 2021 OS/Arch: linux/amd64 Experimental: false containerd: Version: 1.4.11 GitCommit: 5b46e404f6b9f661a205e28d59c982d3634148f8 runc: Version: 1.0.2 GitCommit: v1.0.2-0-g52b36a2 docker-init: Version: 0.19.0 GitCommit: de40ad0 [root@centos7 ~]# docker-compose --version docker-compose version 1.29.2, build 5becea4c [root@centos7 ~]# git clone https://github.com/naver/pinpoint-docker.git [root@centos7 ~]# cd pinpoint-docker/ [root@centos7 ~]# git checkout 2.3.0 [root@centos7 ~]# docker-compose pull \u67e5\u770b\u914d\u7f6e\u6587\u4ef6 [root@centos7 ~]# vim .env \u90e8\u7f72\u542f\u52a8\uff0c\u9700\u8981\u4e0b\u8f7d\u955c\u50cf\uff0c\u5931\u8d25\u4e86\u5c31\u91cd\u8bd5 [root@centos7 ~]# docker-compose up -d \u8bbf\u95ee192.168.70.151:8079","title":"Pinpoint\u90e8\u7f72"},{"location":"prometheus/alertmanager/alertmanager_config/","text":"\u57fa\u672c\u914d\u7f6e Alertmanager \u901a\u8fc7\u547d\u4ee4\u884c\u548c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u5728 \u53ef\u89c6\u5316\u7f16\u8f91\u5668 \u53ef\u4ee5\u5e2e\u52a9\u5efa\u7acb\u8def\u7531\u6811 \u3002\u8fd9\u4e2a\u9875\u9762\u7c98\u8d34alertmanager\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u4f1a\u628a\u544a\u8b66\u7ebf\u8def\u753b\u51fa\u6765 Alertmanager \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u91cd\u65b0\u52a0\u8f7d\u5176\u914d\u7f6e\u3002alertmanager\u8fdb\u7a0b\u53d1\u9001SIGHUP\u4fe1\u53f7\u3002\u6216\u8005\u7ed9altermanager\u521b\u5efa\u7684http\u8bf7\u6c42\u53d1\u9001 -reload \u6bd4\u5982\u8fd9\u6837 curl -X POST \"http://10.102.74.90:9090/-/reload\" \u8981\u6307\u5b9a\u8981\u52a0\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528\u8be5 --config.file \u6807\u5fd7\u3002 ./alertmanager --config.file=alertmanager.yml Alertmanager\u4e3b\u8981\u8d1f\u8d23\u5bf9Prometheus\u4ea7\u751f\u7684\u544a\u8b66\u8fdb\u884c\u7edf\u4e00\u5904\u7406\uff0c\u56e0\u6b64\u5728Alertmanager\u914d\u7f6e\u4e2d\u4e00\u822c\u4f1a\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a \u5168\u5c40\u914d\u7f6e\uff08global\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u7684\u516c\u5171\u53c2\u6570\uff0c\u5982\u5168\u5c40\u7684SMTP\u914d\u7f6e\uff0cSlack\u914d\u7f6e\u7b49\u5185\u5bb9\uff1b \u6a21\u677f\uff08templates\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u544a\u8b66\u901a\u77e5\u65f6\u7684\u6a21\u677f\uff0c\u5982HTML\u6a21\u677f\uff0c\u90ae\u4ef6\u6a21\u677f\u7b49\uff1b \u544a\u8b66\u8def\u7531\uff08route\uff09\uff1a\u6839\u636e\u6807\u7b7e\u5339\u914d\uff0c\u786e\u5b9a\u5f53\u524d\u544a\u8b66\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1b \u63a5\u6536\u4eba\uff08receivers\uff09\uff1a\u63a5\u6536\u4eba\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u90ae\u7bb1\u4e5f\u53ef\u4ee5\u662f\u5fae\u4fe1\uff0cSlack\u6216\u8005Webhook\u7b49\uff0c\u63a5\u6536\u4eba\u4e00\u822c\u914d\u5408\u544a\u8b66\u8def\u7531\u4f7f\u7528\uff1b \u6291\u5236\u89c4\u5219\uff08inhibit_rules\uff09\uff1a\u5408\u7406\u8bbe\u7f6e\u6291\u5236\u89c4\u5219\u53ef\u4ee5\u51cf\u5c11\u5783\u573e\u544a\u8b66\u7684\u4ea7\u751f \u8be5\u6587\u4ef6\u4ee5 YAML \u683c\u5f0f \u7f16\u5199\uff1a <duration> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6301\u7eed\u65f6\u95f4 ((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0) \uff0c\u4f8b\u5982 1d , 1h30m , 5m , 10s <labelname> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32 [a-zA-Z_][a-zA-Z0-9_]* <labelvalue> : \u4e00\u4e32unicode\u5b57\u7b26 <filepath> : \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6709\u6548\u8def\u5f84 <boolean> : \u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u53ef\u4ee5\u53d6\u503c true \u6216 false <string> : \u666e\u901a\u5b57\u7b26\u4e32 <secret> \uff1a\u4f5c\u4e3a\u79d8\u5bc6\u7684\u5e38\u89c4\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u5bc6\u7801 <tmpl_string> : \u4f7f\u7528\u524d\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32 <tmpl_secret> : \u4e00\u4e2a\u5728\u4f7f\u7528\u524d\u88ab\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u4e00\u4e2a\u5bc6\u7801 <int> : \u4e00\u4e2a\u6574\u6570\u503c global: # \u9ed8\u8ba4\u7684SMTP\u53d1\u4ef6\u4eba\u6807\u5934\u5b57\u6bb5\u3002 [ smtp_from: <tmpl_string> ] #\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u9ed8\u8ba4SMTP \u7aef\u53e3\u53f7 [ smtp_smarthost: <string> ] #SMTP\u7684\u4e3b\u673a\u540d [ smtp_hello: <string> | default = \"localhost\" ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u540d\u5b57 [ smtp_auth_username: <string> ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u5bc6\u7801 [ smtp_auth_password: <secret> ] # SMTP \u767b\u5f55ID [ smtp_auth_identity: <string> ] # SMTP \u767b\u5f55\u5bc6\u7801 [ smtp_auth_secret: <secret> ] #\u9ed8\u8ba4\u7684SMTP TLS\u8981\u6c42\u3002 #\u8bf7\u6ce8\u610f\uff0cGo\u4e0d\u652f\u6301\u5230\u8fdc\u7a0bSMTP\u7aef\u70b9\u7684\u672a\u52a0\u5bc6\u8fde\u63a5\u3002 [ smtp_require_tls: <bool> | default = true ] #\u7528\u4e8e\u5ef6\u8fdf\u901a\u77e5\u7684API URL\u3002 [ slack_api_url: <secret> ] [ slack_api_url_file: <filepath> ] [ victorops_api_key: <secret> ] [ victorops_api_url: <string> | default = \"https://alert.victorops.com/integrations/generic/20131114/alert/\" ] [ pagerduty_url: <string> | default = \"https://events.pagerduty.com/v2/enqueue\" ] [ opsgenie_api_key: <secret> ] [ opsgenie_api_url: <string> | default = \"https://api.opsgenie.com/\" ] [ wechat_api_url: <string> | default = \"https://qyapi.weixin.qq.com/cgi-bin/\" ] [ wechat_api_secret: <secret> ] [ wechat_api_corp_id: <string> ] # \u9ed8\u8ba4\u7684HTTP\u5ba2\u6237\u7aef\u914d\u7f6e [ http_config: <http_config> ] #ResolveTimeout\u662falertmanager\u5728\u8b66\u62a5\u6267\u884c\u65f6\u4f7f\u7528\u7684\u9ed8\u8ba4\u503c #\u4e0d\u5305\u62ecEndsAt\uff0c\u5728\u6b64\u65f6\u95f4\u8fc7\u540e\uff0c\u5982\u679c\u8b66\u62a5\u5c1a\u672a\u66f4\u65b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u5176\u58f0\u660e\u4e3a\u5df2\u89e3\u51b3\u3002 #\u8fd9\u5bf9\u6765\u81ea\u666e\u7f57\u7c73\u4fee\u65af\u7684\u8b66\u62a5\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u4eec\u603b\u662f\u5305\u542bEndsAt\u3002 [ resolve_timeout: <duration> | default = 5m ] #\u4ece\u4e2d\u8bfb\u53d6\u81ea\u5b9a\u4e49\u901a\u77e5\u6a21\u677f\u5b9a\u4e49\u7684\u6587\u4ef6\u3002 #\u6700\u540e\u4e00\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u5339\u914d\u5668\uff0c\u4f8b\u5982\u201ctemplates/*.tmpl\u201d\u3002 templates: [ - <filepath> ... ] #\u8def\u7531\u6811\u7684\u6839\u8282\u70b9\u3002 route: <route> #\u901a\u77e5\u63a5\u6536\u8005\u7684\u5217\u8868\u3002 receivers: - <receiver> ... #\u6291\u5236\u89c4\u5219\u5217\u8868\u3002 inhibit_rules: [ - <inhibit_rule> ... ] #\u9759\u97f3\u8def\u7531\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u5217\u8868\u3002 mute_time_intervals: [ - <mute_time_interval> ... ] Route \u8def\u7531\u5757\u5b9a\u4e49\u8def\u7531\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u3002\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5176\u53ef\u9009\u914d\u7f6e\u53c2\u6570\u5c06\u4ece\u5176\u7236\u8282\u70b9\u7ee7\u627f\u3002 \u6bcf\u4e2a\u8b66\u62a5\u5728\u914d\u7f6e\u7684\u9876\u7ea7\u8def\u7531\u5904\u8fdb\u5165\u8def\u7531\u6811\uff0c\u8be5\u8def\u7531\u6811\u5fc5\u987b\u5339\u914d\u6240\u6709\u8b66\u62a5\uff08\u5373\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u7684\u5339\u914d\u5668\uff09\u3002\u7136\u540e\u904d\u5386\u5b50\u8282\u70b9\u3002\u5982\u679c continue \u8bbe\u7f6e\u4e3a false\uff0c\u5b83\u4f1a\u5728\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5b69\u5b50\u4e4b\u540e\u505c\u6b62\u3002\u5982\u679c continue \u5728\u5339\u914d\u8282\u70b9\u4e0a\u4e3a true\uff0c\u5219\u8b66\u62a5\u5c06\u7ee7\u7eed\u4e0e\u540e\u7eed\u5144\u5f1f\u8282\u70b9\u5339\u914d\u3002\u5982\u679c\u8b66\u62a5\u4e0e\u8282\u70b9\u7684\u4efb\u4f55\u5b50\u8282\u70b9\u90fd\u4e0d\u5339\u914d\uff08\u6ca1\u6709\u5339\u914d\u7684\u5b50\u8282\u70b9\u6216\u4e0d\u5b58\u5728\uff09\uff0c\u5219\u6839\u636e\u5f53\u524d\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\u5904\u7406\u8b66\u62a5\u3002 \u7ffb\u8bd1\u81ea\uff1ahttps://prometheus.io/docs/alerting/latest/configuration/#route \u4e2a\u4eba\u8ba4\u4e3a\u8be5\u89e3\u91ca\u5df2\u7ecf\u8fc7\u65f6 [ receiver: <string> ] #\u7528\u4e8e\u5c06\u4f20\u5165\u8b66\u62a5\u5206\u7ec4\u5728\u4e00\u8d77\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff0c #cluster=A\u548calertname=LatencyHigh\u5c06\u51fa\u73b0\u591a\u4e2a\u8b66\u62a5 #\u5206\u6210\u4e00\u7ec4\u3002 # #\u8981\u6309\u6240\u6709\u53ef\u80fd\u7684\u6807\u7b7e\u8fdb\u884c\u805a\u5408\uff0c\u8bf7\u4f7f\u7528\u7279\u6b8a\u503c\u201c\u2026\u201d\u4f5c\u4e3a\u552f\u4e00\u7684\u6807\u7b7e\u540d\u79f0\uff0c\u4f8b\u5982\uff1a #\u5206\u7ec4\u4f9d\u636e\uff1a['\u2026'] #\u8fd9\u5b9e\u9645\u4e0a\u5b8c\u5168\u7981\u7528\u4e86\u805a\u5408\uff0c\u901a\u8fc7\u6240\u6709 #\u6309\u539f\u6837\u53d1\u51fa\u8b66\u62a5\u3002\u8fd9\u4e0d\u53ef\u80fd\u662f\u4f60\u60f3\u8981\u7684\uff0c\u9664\u975e\u4f60\u6709 #\u8b66\u62a5\u91cf\u975e\u5e38\u4f4e\u6216\u4e0a\u6e38\u901a\u77e5\u7cfb\u7edf\u6267\u884c #\u5b83\u81ea\u5df1\u7684\u5206\u7ec4\u3002 [ group_by: '[' <labelname>, ... ']' ] #\u8b66\u62a5\u662f\u5426\u5e94\u7ee7\u7eed\u5339\u914d\u540e\u7eed\u540c\u7ea7\u8282\u70b9\u3002 [ continue: <boolean> | default = false ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u76f8\u7b49\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match: [ <labelname>: <labelvalue>, ... ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match_re: [ <labelname>: <regex>, ... ] #\u8b66\u62a5\u5fc5\u987b\u5b8c\u6210\u4ee5\u5339\u914d\u8282\u70b9\u7684\u5339\u914d\u5668\u5217\u8868\u3002 matchers: [ - <matcher> ... ] #\u53d1\u9001\u7ec4\u901a\u77e5\u7684\u521d\u59cb\u7b49\u5f85\u65f6\u95f4 #\u8b66\u62a5\u6570\u91cf\u3002\u5141\u8bb8\u7b49\u5f85\u7981\u6b62\u8b66\u62a5\u5230\u8fbe\u6216\u6536\u96c6 #\u540c\u4e00\u7ec4\u7684\u66f4\u591a\u521d\u59cb\u8b66\u62a5(\u901a\u5e38\u662f0\u5230\u51e0\u5206\u949f\u3002\uff09 [ group_wait: <duration> | default = 30s ] #\u5728\u53d1\u9001\u6709\u5173\u65b0\u8b66\u62a5\u7684\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u6dfb\u52a0\u5230\u5df2\u53d1\u51fa\u521d\u59cb\u901a\u77e5\u7684\u8b66\u62a5\u7ec4\u4e2d #\u5df2\u7ecf\u53d1\u9001\u4e86(\u901a\u5e38\u7ea65\u5206\u949f\u6216\u4ee5\u4e0a\u3002\uff09 [ group_interval: <duration> | default = 5m ] #\u5982\u679c\u5df2\u7ecf\u53d1\u9001\u4e86\u901a\u77e5\uff0c\u5728\u518d\u6b21\u53d1\u9001\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u5df2\u6210\u529f\u53d1\u9001\u8b66\u62a5(\u901a\u5e38\u7ea63\u5c0f\u65f6\u6216\u4ee5\u4e0a\uff09\u3002 [ repeat_interval: <duration> | default = 4h ] #\u8def\u7531\u5e94\u9759\u97f3\u7684\u65f6\u95f4\u3002\u8fd9\u4e9b\u5fc5\u987b\u4e0e #\u201c\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u201d\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u3002 #\u6b64\u5916\uff0c\u6839\u8282\u70b9\u4e0d\u80fd\u6709\u4efb\u4f55\u9759\u97f3\u65f6\u95f4\u3002 #\u5f53\u8def\u7531\u88ab\u7981\u7528\u65f6\uff0c\u5b83\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u901a\u77e5\uff0c\u4f46\u662f #\u5426\u5219\u6b63\u5e38\u52a8\u4f5c\uff08\u5305\u62ec\u7ed3\u675f\u8def\u7531\u5339\u914d\u8fc7\u7a0b\uff09 #\u5982\u679c\u672a\u8bbe\u7f6e\u201ccontinue\u201d\u9009\u9879\u3002\uff09 mute_time_intervals: [ - <string> ...] #\u96f6\u4e2a\u6216\u591a\u4e2a\u5b50\u8def\u7531\u3002 routes: [ - <route> ... ] \u4f8b\u5b50 #\u5305\u542b\u5b50\u7ea7\u7ee7\u627f\u7684\u6240\u6709\u53c2\u6570\u7684\u6839\u8def\u7531 #\u5982\u679c\u672a\u8986\u76d6\uff0c\u5219\u8fd4\u56de\u8def\u7531\u3002 route: receiver: 'default-receiver' group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [cluster, alertname] #\u4e0e\u4ee5\u4e0b\u5b50\u8def\u7531\u4e0d\u5339\u914d\u7684\u6240\u6709\u8b66\u62a5 #\u5c06\u4fdd\u7559\u5728\u6839\u8282\u70b9\u4e0a\u5e76\u88ab\u5206\u6d3e\u5230\u201cdefault receiver\u201d\u3002 routes: #service=mysql\u6216service=cassandra\u7684\u6240\u6709\u8b66\u62a5 - receiver: 'database-pager' group_wait: 10s matchers: - service=~\"mysql|cassandra\" #\u6240\u6709\u5e26\u6709team=frontend\u6807\u7b7e\u7684\u8b66\u62a5\u90fd\u4e0e\u6b64\u5b50\u8def\u7531\u5339\u914d\u3002 - receiver: 'frontend-pager' group_by: [product, environment] matchers: - team=\"frontend\" \u63a5\u4e0b\u6765\u770b\u4e0b\u5b98\u65b9\u5728git\u5e93\u4e2d\u7684\u4f8b\u5b50 https://github.com/prometheus/alertmanager/blob/main/doc/examples/simple.yml","title":"Alertmanager\u914d\u7f6e"},{"location":"prometheus/alertmanager/alertmanager_config/#_1","text":"","title":""},{"location":"prometheus/alertmanager/alertmanager_config/#_2","text":"Alertmanager \u901a\u8fc7\u547d\u4ee4\u884c\u548c\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u914d\u7f6e\u3002 \u5728 \u53ef\u89c6\u5316\u7f16\u8f91\u5668 \u53ef\u4ee5\u5e2e\u52a9\u5efa\u7acb\u8def\u7531\u6811 \u3002\u8fd9\u4e2a\u9875\u9762\u7c98\u8d34alertmanager\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u4f1a\u628a\u544a\u8b66\u7ebf\u8def\u753b\u51fa\u6765 Alertmanager \u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u91cd\u65b0\u52a0\u8f7d\u5176\u914d\u7f6e\u3002alertmanager\u8fdb\u7a0b\u53d1\u9001SIGHUP\u4fe1\u53f7\u3002\u6216\u8005\u7ed9altermanager\u521b\u5efa\u7684http\u8bf7\u6c42\u53d1\u9001 -reload \u6bd4\u5982\u8fd9\u6837 curl -X POST \"http://10.102.74.90:9090/-/reload\" \u8981\u6307\u5b9a\u8981\u52a0\u8f7d\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u8bf7\u4f7f\u7528\u8be5 --config.file \u6807\u5fd7\u3002 ./alertmanager --config.file=alertmanager.yml Alertmanager\u4e3b\u8981\u8d1f\u8d23\u5bf9Prometheus\u4ea7\u751f\u7684\u544a\u8b66\u8fdb\u884c\u7edf\u4e00\u5904\u7406\uff0c\u56e0\u6b64\u5728Alertmanager\u914d\u7f6e\u4e2d\u4e00\u822c\u4f1a\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a \u5168\u5c40\u914d\u7f6e\uff08global\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e9b\u5168\u5c40\u7684\u516c\u5171\u53c2\u6570\uff0c\u5982\u5168\u5c40\u7684SMTP\u914d\u7f6e\uff0cSlack\u914d\u7f6e\u7b49\u5185\u5bb9\uff1b \u6a21\u677f\uff08templates\uff09\uff1a\u7528\u4e8e\u5b9a\u4e49\u544a\u8b66\u901a\u77e5\u65f6\u7684\u6a21\u677f\uff0c\u5982HTML\u6a21\u677f\uff0c\u90ae\u4ef6\u6a21\u677f\u7b49\uff1b \u544a\u8b66\u8def\u7531\uff08route\uff09\uff1a\u6839\u636e\u6807\u7b7e\u5339\u914d\uff0c\u786e\u5b9a\u5f53\u524d\u544a\u8b66\u5e94\u8be5\u5982\u4f55\u5904\u7406\uff1b \u63a5\u6536\u4eba\uff08receivers\uff09\uff1a\u63a5\u6536\u4eba\u662f\u4e00\u4e2a\u62bd\u8c61\u7684\u6982\u5ff5\uff0c\u5b83\u53ef\u4ee5\u662f\u4e00\u4e2a\u90ae\u7bb1\u4e5f\u53ef\u4ee5\u662f\u5fae\u4fe1\uff0cSlack\u6216\u8005Webhook\u7b49\uff0c\u63a5\u6536\u4eba\u4e00\u822c\u914d\u5408\u544a\u8b66\u8def\u7531\u4f7f\u7528\uff1b \u6291\u5236\u89c4\u5219\uff08inhibit_rules\uff09\uff1a\u5408\u7406\u8bbe\u7f6e\u6291\u5236\u89c4\u5219\u53ef\u4ee5\u51cf\u5c11\u5783\u573e\u544a\u8b66\u7684\u4ea7\u751f \u8be5\u6587\u4ef6\u4ee5 YAML \u683c\u5f0f \u7f16\u5199\uff1a <duration> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6301\u7eed\u65f6\u95f4 ((([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?|0) \uff0c\u4f8b\u5982 1d , 1h30m , 5m , 10s <labelname> : \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5b57\u7b26\u4e32 [a-zA-Z_][a-zA-Z0-9_]* <labelvalue> : \u4e00\u4e32unicode\u5b57\u7b26 <filepath> : \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u6709\u6548\u8def\u5f84 <boolean> : \u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u53ef\u4ee5\u53d6\u503c true \u6216 false <string> : \u666e\u901a\u5b57\u7b26\u4e32 <secret> \uff1a\u4f5c\u4e3a\u79d8\u5bc6\u7684\u5e38\u89c4\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\u5bc6\u7801 <tmpl_string> : \u4f7f\u7528\u524d\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32 <tmpl_secret> : \u4e00\u4e2a\u5728\u4f7f\u7528\u524d\u88ab\u6a21\u677f\u6269\u5c55\u7684\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u4e00\u4e2a\u5bc6\u7801 <int> : \u4e00\u4e2a\u6574\u6570\u503c global: # \u9ed8\u8ba4\u7684SMTP\u53d1\u4ef6\u4eba\u6807\u5934\u5b57\u6bb5\u3002 [ smtp_from: <tmpl_string> ] #\u7528\u4e8e\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u7684\u9ed8\u8ba4SMTP \u7aef\u53e3\u53f7 [ smtp_smarthost: <string> ] #SMTP\u7684\u4e3b\u673a\u540d [ smtp_hello: <string> | default = \"localhost\" ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u540d\u5b57 [ smtp_auth_username: <string> ] #SMTP\u7684\u4e3b\u673a\u767b\u5f55\u5bc6\u7801 [ smtp_auth_password: <secret> ] # SMTP \u767b\u5f55ID [ smtp_auth_identity: <string> ] # SMTP \u767b\u5f55\u5bc6\u7801 [ smtp_auth_secret: <secret> ] #\u9ed8\u8ba4\u7684SMTP TLS\u8981\u6c42\u3002 #\u8bf7\u6ce8\u610f\uff0cGo\u4e0d\u652f\u6301\u5230\u8fdc\u7a0bSMTP\u7aef\u70b9\u7684\u672a\u52a0\u5bc6\u8fde\u63a5\u3002 [ smtp_require_tls: <bool> | default = true ] #\u7528\u4e8e\u5ef6\u8fdf\u901a\u77e5\u7684API URL\u3002 [ slack_api_url: <secret> ] [ slack_api_url_file: <filepath> ] [ victorops_api_key: <secret> ] [ victorops_api_url: <string> | default = \"https://alert.victorops.com/integrations/generic/20131114/alert/\" ] [ pagerduty_url: <string> | default = \"https://events.pagerduty.com/v2/enqueue\" ] [ opsgenie_api_key: <secret> ] [ opsgenie_api_url: <string> | default = \"https://api.opsgenie.com/\" ] [ wechat_api_url: <string> | default = \"https://qyapi.weixin.qq.com/cgi-bin/\" ] [ wechat_api_secret: <secret> ] [ wechat_api_corp_id: <string> ] # \u9ed8\u8ba4\u7684HTTP\u5ba2\u6237\u7aef\u914d\u7f6e [ http_config: <http_config> ] #ResolveTimeout\u662falertmanager\u5728\u8b66\u62a5\u6267\u884c\u65f6\u4f7f\u7528\u7684\u9ed8\u8ba4\u503c #\u4e0d\u5305\u62ecEndsAt\uff0c\u5728\u6b64\u65f6\u95f4\u8fc7\u540e\uff0c\u5982\u679c\u8b66\u62a5\u5c1a\u672a\u66f4\u65b0\uff0c\u5b83\u53ef\u4ee5\u5c06\u5176\u58f0\u660e\u4e3a\u5df2\u89e3\u51b3\u3002 #\u8fd9\u5bf9\u6765\u81ea\u666e\u7f57\u7c73\u4fee\u65af\u7684\u8b66\u62a5\u6ca1\u6709\u5f71\u54cd\uff0c\u56e0\u4e3a\u5b83\u4eec\u603b\u662f\u5305\u542bEndsAt\u3002 [ resolve_timeout: <duration> | default = 5m ] #\u4ece\u4e2d\u8bfb\u53d6\u81ea\u5b9a\u4e49\u901a\u77e5\u6a21\u677f\u5b9a\u4e49\u7684\u6587\u4ef6\u3002 #\u6700\u540e\u4e00\u4e2a\u7ec4\u4ef6\u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26\u5339\u914d\u5668\uff0c\u4f8b\u5982\u201ctemplates/*.tmpl\u201d\u3002 templates: [ - <filepath> ... ] #\u8def\u7531\u6811\u7684\u6839\u8282\u70b9\u3002 route: <route> #\u901a\u77e5\u63a5\u6536\u8005\u7684\u5217\u8868\u3002 receivers: - <receiver> ... #\u6291\u5236\u89c4\u5219\u5217\u8868\u3002 inhibit_rules: [ - <inhibit_rule> ... ] #\u9759\u97f3\u8def\u7531\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u5217\u8868\u3002 mute_time_intervals: [ - <mute_time_interval> ... ]","title":"\u57fa\u672c\u914d\u7f6e"},{"location":"prometheus/alertmanager/alertmanager_config/#route","text":"\u8def\u7531\u5757\u5b9a\u4e49\u8def\u7531\u6811\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u53ca\u5176\u5b50\u8282\u70b9\u3002\u5982\u679c\u672a\u8bbe\u7f6e\uff0c\u5176\u53ef\u9009\u914d\u7f6e\u53c2\u6570\u5c06\u4ece\u5176\u7236\u8282\u70b9\u7ee7\u627f\u3002 \u6bcf\u4e2a\u8b66\u62a5\u5728\u914d\u7f6e\u7684\u9876\u7ea7\u8def\u7531\u5904\u8fdb\u5165\u8def\u7531\u6811\uff0c\u8be5\u8def\u7531\u6811\u5fc5\u987b\u5339\u914d\u6240\u6709\u8b66\u62a5\uff08\u5373\u6ca1\u6709\u4efb\u4f55\u914d\u7f6e\u7684\u5339\u914d\u5668\uff09\u3002\u7136\u540e\u904d\u5386\u5b50\u8282\u70b9\u3002\u5982\u679c continue \u8bbe\u7f6e\u4e3a false\uff0c\u5b83\u4f1a\u5728\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u5b69\u5b50\u4e4b\u540e\u505c\u6b62\u3002\u5982\u679c continue \u5728\u5339\u914d\u8282\u70b9\u4e0a\u4e3a true\uff0c\u5219\u8b66\u62a5\u5c06\u7ee7\u7eed\u4e0e\u540e\u7eed\u5144\u5f1f\u8282\u70b9\u5339\u914d\u3002\u5982\u679c\u8b66\u62a5\u4e0e\u8282\u70b9\u7684\u4efb\u4f55\u5b50\u8282\u70b9\u90fd\u4e0d\u5339\u914d\uff08\u6ca1\u6709\u5339\u914d\u7684\u5b50\u8282\u70b9\u6216\u4e0d\u5b58\u5728\uff09\uff0c\u5219\u6839\u636e\u5f53\u524d\u8282\u70b9\u7684\u914d\u7f6e\u53c2\u6570\u5904\u7406\u8b66\u62a5\u3002 \u7ffb\u8bd1\u81ea\uff1ahttps://prometheus.io/docs/alerting/latest/configuration/#route \u4e2a\u4eba\u8ba4\u4e3a\u8be5\u89e3\u91ca\u5df2\u7ecf\u8fc7\u65f6 [ receiver: <string> ] #\u7528\u4e8e\u5c06\u4f20\u5165\u8b66\u62a5\u5206\u7ec4\u5728\u4e00\u8d77\u7684\u6807\u7b7e\u3002\u4f8b\u5982\uff0c #cluster=A\u548calertname=LatencyHigh\u5c06\u51fa\u73b0\u591a\u4e2a\u8b66\u62a5 #\u5206\u6210\u4e00\u7ec4\u3002 # #\u8981\u6309\u6240\u6709\u53ef\u80fd\u7684\u6807\u7b7e\u8fdb\u884c\u805a\u5408\uff0c\u8bf7\u4f7f\u7528\u7279\u6b8a\u503c\u201c\u2026\u201d\u4f5c\u4e3a\u552f\u4e00\u7684\u6807\u7b7e\u540d\u79f0\uff0c\u4f8b\u5982\uff1a #\u5206\u7ec4\u4f9d\u636e\uff1a['\u2026'] #\u8fd9\u5b9e\u9645\u4e0a\u5b8c\u5168\u7981\u7528\u4e86\u805a\u5408\uff0c\u901a\u8fc7\u6240\u6709 #\u6309\u539f\u6837\u53d1\u51fa\u8b66\u62a5\u3002\u8fd9\u4e0d\u53ef\u80fd\u662f\u4f60\u60f3\u8981\u7684\uff0c\u9664\u975e\u4f60\u6709 #\u8b66\u62a5\u91cf\u975e\u5e38\u4f4e\u6216\u4e0a\u6e38\u901a\u77e5\u7cfb\u7edf\u6267\u884c #\u5b83\u81ea\u5df1\u7684\u5206\u7ec4\u3002 [ group_by: '[' <labelname>, ... ']' ] #\u8b66\u62a5\u662f\u5426\u5e94\u7ee7\u7eed\u5339\u914d\u540e\u7eed\u540c\u7ea7\u8282\u70b9\u3002 [ continue: <boolean> | default = false ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u76f8\u7b49\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match: [ <labelname>: <labelvalue>, ... ] #\u4e0d\u63a8\u8350\uff1a\u4f7f\u7528\u4e0b\u9762\u7684\u5339\u914d\u5668\u3002 #\u8b66\u62a5\u5fc5\u987b\u6ee1\u8db3\u7684\u4e00\u7ec4\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u624d\u80fd\u5339\u914d\u8282\u70b9\u3002 match_re: [ <labelname>: <regex>, ... ] #\u8b66\u62a5\u5fc5\u987b\u5b8c\u6210\u4ee5\u5339\u914d\u8282\u70b9\u7684\u5339\u914d\u5668\u5217\u8868\u3002 matchers: [ - <matcher> ... ] #\u53d1\u9001\u7ec4\u901a\u77e5\u7684\u521d\u59cb\u7b49\u5f85\u65f6\u95f4 #\u8b66\u62a5\u6570\u91cf\u3002\u5141\u8bb8\u7b49\u5f85\u7981\u6b62\u8b66\u62a5\u5230\u8fbe\u6216\u6536\u96c6 #\u540c\u4e00\u7ec4\u7684\u66f4\u591a\u521d\u59cb\u8b66\u62a5(\u901a\u5e38\u662f0\u5230\u51e0\u5206\u949f\u3002\uff09 [ group_wait: <duration> | default = 30s ] #\u5728\u53d1\u9001\u6709\u5173\u65b0\u8b66\u62a5\u7684\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u6dfb\u52a0\u5230\u5df2\u53d1\u51fa\u521d\u59cb\u901a\u77e5\u7684\u8b66\u62a5\u7ec4\u4e2d #\u5df2\u7ecf\u53d1\u9001\u4e86(\u901a\u5e38\u7ea65\u5206\u949f\u6216\u4ee5\u4e0a\u3002\uff09 [ group_interval: <duration> | default = 5m ] #\u5982\u679c\u5df2\u7ecf\u53d1\u9001\u4e86\u901a\u77e5\uff0c\u5728\u518d\u6b21\u53d1\u9001\u901a\u77e5\u4e4b\u524d\u8981\u7b49\u5f85\u591a\u957f\u65f6\u95f4 #\u5df2\u6210\u529f\u53d1\u9001\u8b66\u62a5(\u901a\u5e38\u7ea63\u5c0f\u65f6\u6216\u4ee5\u4e0a\uff09\u3002 [ repeat_interval: <duration> | default = 4h ] #\u8def\u7531\u5e94\u9759\u97f3\u7684\u65f6\u95f4\u3002\u8fd9\u4e9b\u5fc5\u987b\u4e0e #\u201c\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u201d\u90e8\u5206\u4e2d\u5b9a\u4e49\u7684\u9759\u97f3\u65f6\u95f4\u95f4\u9694\u3002 #\u6b64\u5916\uff0c\u6839\u8282\u70b9\u4e0d\u80fd\u6709\u4efb\u4f55\u9759\u97f3\u65f6\u95f4\u3002 #\u5f53\u8def\u7531\u88ab\u7981\u7528\u65f6\uff0c\u5b83\u4e0d\u4f1a\u53d1\u9001\u4efb\u4f55\u901a\u77e5\uff0c\u4f46\u662f #\u5426\u5219\u6b63\u5e38\u52a8\u4f5c\uff08\u5305\u62ec\u7ed3\u675f\u8def\u7531\u5339\u914d\u8fc7\u7a0b\uff09 #\u5982\u679c\u672a\u8bbe\u7f6e\u201ccontinue\u201d\u9009\u9879\u3002\uff09 mute_time_intervals: [ - <string> ...] #\u96f6\u4e2a\u6216\u591a\u4e2a\u5b50\u8def\u7531\u3002 routes: [ - <route> ... ] \u4f8b\u5b50 #\u5305\u542b\u5b50\u7ea7\u7ee7\u627f\u7684\u6240\u6709\u53c2\u6570\u7684\u6839\u8def\u7531 #\u5982\u679c\u672a\u8986\u76d6\uff0c\u5219\u8fd4\u56de\u8def\u7531\u3002 route: receiver: 'default-receiver' group_wait: 30s group_interval: 5m repeat_interval: 4h group_by: [cluster, alertname] #\u4e0e\u4ee5\u4e0b\u5b50\u8def\u7531\u4e0d\u5339\u914d\u7684\u6240\u6709\u8b66\u62a5 #\u5c06\u4fdd\u7559\u5728\u6839\u8282\u70b9\u4e0a\u5e76\u88ab\u5206\u6d3e\u5230\u201cdefault receiver\u201d\u3002 routes: #service=mysql\u6216service=cassandra\u7684\u6240\u6709\u8b66\u62a5 - receiver: 'database-pager' group_wait: 10s matchers: - service=~\"mysql|cassandra\" #\u6240\u6709\u5e26\u6709team=frontend\u6807\u7b7e\u7684\u8b66\u62a5\u90fd\u4e0e\u6b64\u5b50\u8def\u7531\u5339\u914d\u3002 - receiver: 'frontend-pager' group_by: [product, environment] matchers: - team=\"frontend\" \u63a5\u4e0b\u6765\u770b\u4e0b\u5b98\u65b9\u5728git\u5e93\u4e2d\u7684\u4f8b\u5b50 https://github.com/prometheus/alertmanager/blob/main/doc/examples/simple.yml","title":"Route"},{"location":"prometheus/grafana/grafana_dashboard/","text":"Grafana Dashboard Grafana\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u5bf9Prometheus\u7684\u5b8c\u6574\u652f\u6301 Grafana\u53ef\u4ee5\u72ec\u7acb\u90e8\u7f72\uff0c\u5b89\u88c5\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\u3002\u53ef\u4ee5yum\u76f4\u63a5\u5b89\u88c5\u542f\u52a8 \u6211\u6d4b\u8bd5\u7684\u7248\u672c\u4e3aGrafana v6.6.0 \u6dfb\u52a0\u6570\u636e\u6e90 \u542f\u52a8\u540e\uff0c\u8bbf\u95eeGrafana\u7684\u5730\u5740\u540e\uff0c\u9700\u8981\u6dfb\u52a0\u6570\u636e\u6e90\uff0c\u5982\u56fe\uff1a \u6570\u636e\u6e90\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0cGrafana\u53ef\u4ee5\u9488\u5bf9\u591a\u79cd\u6570\u636e\u8fdb\u884c\u51fa\u56fe\uff0c\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff0c\u4f60\u7ed9\u4e00\u6bb5\u6570\u636e\uff0cGrafana\u53ef\u4ee5\u4e3a\u4f60\u628a\u56fe\u5f62\u753b\u51fa\u6765\uff0c\u8fd9\u4e2a\u6570\u636e\u53ef\u4ee5\u662f\u6570\u636e\u5e93\uff0c\u6587\u672c\uff0cAPI\u63a5\u53e3\uff0c\u4efb\u4f55\u53ef\u4ee5\u63d0\u4f9b\u6570\u636e\u7684\u4e1c\u897f\u3002 \u9488\u5bf9Prometheus\u7684\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0c\u6dfb\u52a0\u65f6\u53ea\u9700\u8981\u9009\u62e9Prometheus\uff0c\u8f93\u5165Prometheus\u7684\u5730\u5740\u5373\u53ef\uff0c\u5982\u4e0b\u56fe\uff1a \u6dfb\u52a0\u5b8c\u6210\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5728Grafana\u521b\u5efa\u51fa\u6211\u4eec\u60f3\u8981\u7684\u56fe\u8868\u4e86\u3002","title":"Dashboard"},{"location":"prometheus/grafana/grafana_dashboard/#grafana-dashboard","text":"Grafana\u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u53ef\u89c6\u5316\u5e73\u53f0\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u5bf9Prometheus\u7684\u5b8c\u6574\u652f\u6301 Grafana\u53ef\u4ee5\u72ec\u7acb\u90e8\u7f72\uff0c\u5b89\u88c5\u8d77\u6765\u6bd4\u8f83\u65b9\u4fbf\u3002\u53ef\u4ee5yum\u76f4\u63a5\u5b89\u88c5\u542f\u52a8 \u6211\u6d4b\u8bd5\u7684\u7248\u672c\u4e3aGrafana v6.6.0","title":"Grafana Dashboard"},{"location":"prometheus/grafana/grafana_dashboard/#_1","text":"\u542f\u52a8\u540e\uff0c\u8bbf\u95eeGrafana\u7684\u5730\u5740\u540e\uff0c\u9700\u8981\u6dfb\u52a0\u6570\u636e\u6e90\uff0c\u5982\u56fe\uff1a \u6570\u636e\u6e90\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0cGrafana\u53ef\u4ee5\u9488\u5bf9\u591a\u79cd\u6570\u636e\u8fdb\u884c\u51fa\u56fe\uff0c\u7b80\u5355\u7684\u7406\u89e3\u5c31\u662f\uff0c\u4f60\u7ed9\u4e00\u6bb5\u6570\u636e\uff0cGrafana\u53ef\u4ee5\u4e3a\u4f60\u628a\u56fe\u5f62\u753b\u51fa\u6765\uff0c\u8fd9\u4e2a\u6570\u636e\u53ef\u4ee5\u662f\u6570\u636e\u5e93\uff0c\u6587\u672c\uff0cAPI\u63a5\u53e3\uff0c\u4efb\u4f55\u53ef\u4ee5\u63d0\u4f9b\u6570\u636e\u7684\u4e1c\u897f\u3002 \u9488\u5bf9Prometheus\u7684\u6dfb\u52a0\u6bd4\u8f83\u7b80\u5355\uff0c\u6dfb\u52a0\u65f6\u53ea\u9700\u8981\u9009\u62e9Prometheus\uff0c\u8f93\u5165Prometheus\u7684\u5730\u5740\u5373\u53ef\uff0c\u5982\u4e0b\u56fe\uff1a \u6dfb\u52a0\u5b8c\u6210\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5728Grafana\u521b\u5efa\u51fa\u6211\u4eec\u60f3\u8981\u7684\u56fe\u8868\u4e86\u3002","title":"\u6dfb\u52a0\u6570\u636e\u6e90"},{"location":"prometheus/grafana/grafana_install/","text":"\u90e8\u7f72 \u4e0b\u8f7d\u5730\u5740\uff1a https://grafana.com/grafana/download centos\u7cfb\u5217\u5b89\u88c5\uff1a [root@centos7 ~]# wget https://dl.grafana.com/oss/release/grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# sudo yum install grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# systemctl daemon-reload [root@centos7 ~]# systemctl start grafana-server [root@centos7 ~]# systemctl status grafana-server [root@centos7 ~]# grafana-server -v Version 6.6.0 (commit: 5c11bbdfb4, branch: HEAD) [root@centos7 ~]# sudo systemctl enable grafana-server Created symlink from /etc/systemd/system/multi-user.target.wants/grafana-server.service to /usr/lib/systemd/system/grafana-server.service. [root@centos7 ~]# curl 127.0.0.7:3000 <a href=\"/login\">Found</a>.","title":"Grafana\u90e8\u7f72"},{"location":"prometheus/grafana/grafana_install/#_1","text":"\u4e0b\u8f7d\u5730\u5740\uff1a https://grafana.com/grafana/download centos\u7cfb\u5217\u5b89\u88c5\uff1a [root@centos7 ~]# wget https://dl.grafana.com/oss/release/grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# sudo yum install grafana-6.6.0-1.x86_64.rpm [root@centos7 ~]# systemctl daemon-reload [root@centos7 ~]# systemctl start grafana-server [root@centos7 ~]# systemctl status grafana-server [root@centos7 ~]# grafana-server -v Version 6.6.0 (commit: 5c11bbdfb4, branch: HEAD) [root@centos7 ~]# sudo systemctl enable grafana-server Created symlink from /etc/systemd/system/multi-user.target.wants/grafana-server.service to /usr/lib/systemd/system/grafana-server.service. [root@centos7 ~]# curl 127.0.0.7:3000 <a href=\"/login\">Found</a>.","title":"\u90e8\u7f72"},{"location":"prometheus/grafana/grafana_var/","text":"\u53d8\u91cf\u5b9a\u4e49 Query \u7c7b\u578b\u7684\u53d8\u91cf\u5141\u8bb8\u60a8\u67e5\u8be2 Prometheus \u4ee5\u83b7\u53d6\u6307\u6807\u3001\u6807\u7b7e\u6216\u6807\u7b7e\u503c\u5217\u8868\u3002Prometheus \u6570\u636e\u6e90\u63d2\u4ef6\u63d0\u4f9b\u4ee5\u4e0b\u529f\u80fd\uff0c\u60a8\u53ef\u4ee5\u5728 Query \u8f93\u5165\u5b57\u6bb5\u4e2d\u4f7f\u7528\u3002 \u59d3\u540d \u63cf\u8ff0 label_names() \u8fd4\u56de\u6807\u7b7e\u540d\u79f0\u5217\u8868\u3002 label_values(label) \u8fd4\u56de label \u6bcf\u4e2a\u6307\u6807\u4e2d\u7684\u6807\u7b7e\u503c\u5217\u8868\u3002 label_values(metric, label) \u8fd4\u56de label \u6307\u5b9a\u6307\u6807\u4e2d \u7684\u6807\u7b7e\u503c\u5217\u8868\u3002 metrics(metric) \u8fd4\u56de\u4e0e\u6307\u5b9a metric \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u7684\u6307\u6807\u5217\u8868\u3002 query_result(query) \u8fd4\u56de \u7684 Prometheus \u67e5\u8be2\u7ed3\u679c\u5217\u8868 query \u3002 \u5728\u9762\u677f\u7684\u8bbe\u7f6e\u4e2d\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e9b\u53d8\u91cf\uff0c\u4f9bGrafana\u5927\u5c4f\u4e2d\u7684\u6570\u636e\u516c\u5f0f\u8c03\u7528 \u4f8b\u5982\uff0c\u83b7\u53d6\u96c6\u7fa4\u603b\u5171\u7684\u5185\u5b58\u5927\u5c0f \u672c\u8eabsum(node_memory_MemTotal_bytes)\u662f\u53e5promSQL\uff0c\u9700\u8981\u653e\u8fdb query_result(query) \u4e2d\uff0c\u4f46\u662f\u67e5\u51fa\u6765\u7684\u6570\u636e\u662f\u5e26\u6807\u7b7e\u548c\u65f6\u95f4\u6233\u7684 {} 2792702402560 1631610328000 \uff0c\u8fd9\u65f6\u5019\u9700\u8981\u6b63\u5219/. ([^\\ ] ) .*/\u6765\u8fc7\u6ee4\u51fa\u4e2d\u95f4\u7684\u6570\u5b57 \u5173\u4e8eGrafana\u6dfb\u52a0Prometheus\u6570\u636e\uff0c\u5b98\u7f51\u6587\u6863\u4e3ahttps://grafana.com/docs/grafana/latest/datasources/prometheus/ \u4e2a\u4eba\u535a\u5ba2\u8bb2\u89e3\uff1a https://yunlzheng.gitbook.io/prometheus-book/part-ii-prometheus-jin-jie/grafana/templating https://www.jianshu.com/p/aa50419b4ed3","title":"Grafana\u6dfb\u52a0\u53d8\u91cf"},{"location":"prometheus/prometheus/Exporter_Metrics/","text":"Exporter Metrics\u89e3\u91ca \u5728\u5b98\u65b9\u7684exporter\u4ecb\u7ecd\u9875\u9762\u4e2d\uff0c\u4ecb\u7ecd\u4e86\u7f16\u5199exporter\u516c\u7ea6\u548cMetrics\u7684\u89e3\u91ca\uff0c\u5730\u5740\uff1ahttps://prometheus.io/docs/instrumenting/writing_clientlibs/#labels \u5b98\u65b9\u5b9a\u4e49\u4e86\u4e3b\u89814\u79cd\u6307\u6807(metric type)\uff1aCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u3001Summary\uff08\u6458\u8981\uff09\u3002 \u8bbf\u95ee http://192.168.70.131:9100/metrics \u4f1a\u8fd4\u56de\u5982\u4e0b\u8fd9\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff1a # HELP node_cpu Seconds the cpus spent in each mode. # TYPE node_cpu counter node_cpu{cpu=\"cpu0\",mode=\"idle\"} 362812.7890625 #HELP\u89e3\u91ca\u4e86\u8be5\u6570\u636e\u662f\u4ec0\u4e48 #TYPE\u4f1a\u8bf4\u8be5\u6570\u636e\u662f\u4ec0\u4e48\u6307\u6807 Counter\uff1a\u53ea\u589e\u4e0d\u51cf\u7684\u8ba1\u6570\u5668 Counter\u7c7b\u578b\u7684\u6307\u6807\u5176\u5de5\u4f5c\u65b9\u5f0f\u548c\u8ba1\u6570\u5668\u4e00\u6837\uff0c\u53ea\u589e\u4e0d\u51cf\uff08\u9664\u975e\u7cfb\u7edf\u53d1\u751f\u91cd\u7f6e\uff09\u3002\u5e38\u89c1\u7684\u76d1\u63a7\u6307\u6807\uff0c\u5982http_requests_total\uff0cnode_cpu\u90fd\u662fCounter\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u3002 \u4e00\u822c\u5728\u5b9a\u4e49Counter\u7c7b\u578b\u6307\u6807\u7684\u540d\u79f0\u65f6\u63a8\u8350\u4f7f\u7528_total\u4f5c\u4e3a\u540e\u7f00\u3002 Counter\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u6709\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bb0\u5f55\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u6b21\u6570\uff0c\u901a\u8fc7\u4ee5\u65f6\u5e8f\u7684\u5f62\u5f0f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u4e86\u89e3\u8be5\u4e8b\u4ef6\u4ea7\u751f\u901f\u7387\u7684\u53d8\u5316\u3002 Gauge\uff1a\u53ef\u589e\u53ef\u51cf\u7684\u4eea\u8868\u76d8 \u4e0eCounter\u4e0d\u540c\uff0cGauge\u7c7b\u578b\u7684\u6307\u6807\u4fa7\u91cd\u4e8e\u53cd\u5e94\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\u3002\u56e0\u6b64\u8fd9\u7c7b\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u53ef\u589e\u53ef\u51cf\u3002\u5e38\u89c1\u6307\u6807\u5982\uff1anode_memory_MemFree\uff08\u4e3b\u673a\u5f53\u524d\u7a7a\u95f2\u7684\u5185\u5bb9\u5927\u5c0f\uff09\u3001node_memory_MemAvailable\uff08\u53ef\u7528\u5185\u5b58\u5927\u5c0f\uff09\u90fd\u662fGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807 Histogram\u548cSummary \u9664\u4e86Counter\u548cGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u4ee5\u5916\uff0cPrometheus\u8fd8\u5b9a\u4e49\u4e86Histogram\u548cSummary\u7684\u6307\u6807\u7c7b\u578b\u3002Histogram\u548cSummary\u4e3b\u7528\u7528\u4e8e\u7edf\u8ba1\u548c\u5206\u6790\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002 \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4eba\u4eec\u90fd\u503e\u5411\u4e8e\u4f7f\u7528\u67d0\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982CPU\u7684\u5e73\u5747\u4f7f\u7528\u7387\u3001\u9875\u9762\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u95ee\u9898\u5f88\u660e\u663e\uff0c\u4ee5\u7cfb\u7edfAPI\u8c03\u7528\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u4e3a\u4f8b\uff1a\u5982\u679c\u5927\u591a\u6570API\u8bf7\u6c42\u90fd\u7ef4\u6301\u5728100ms\u7684\u54cd\u5e94\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u800c\u4e2a\u522b\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4\u9700\u89815s\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u67d0\u4e9bWEB\u9875\u9762\u7684\u54cd\u5e94\u65f6\u95f4\u843d\u5230\u4e2d\u4f4d\u6570\u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u957f\u5c3e\u95ee\u9898\u3002 \u4e3a\u4e86\u533a\u5206\u662f\u5e73\u5747\u7684\u6162\u8fd8\u662f\u957f\u5c3e\u7684\u6162\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u6309\u7167\u8bf7\u6c42\u5ef6\u8fdf\u7684\u8303\u56f4\u8fdb\u884c\u5206\u7ec4\u3002\u4f8b\u5982\uff0c\u7edf\u8ba1\u5ef6\u8fdf\u57280~10ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u6709\u591a\u5c11\u800c10~20ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u53c8\u6709\u591a\u5c11\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5feb\u901f\u5206\u6790\u7cfb\u7edf\u6162\u7684\u539f\u56e0\u3002Histogram\u548cSummary\u90fd\u662f\u4e3a\u4e86\u80fd\u591f\u89e3\u51b3\u8fd9\u6837\u95ee\u9898\u7684\u5b58\u5728\uff0c\u901a\u8fc7Histogram\u548cSummary\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3\u76d1\u63a7\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002","title":"Exporter Metrics\u89e3\u91ca"},{"location":"prometheus/prometheus/Exporter_Metrics/#exporter-metrics","text":"\u5728\u5b98\u65b9\u7684exporter\u4ecb\u7ecd\u9875\u9762\u4e2d\uff0c\u4ecb\u7ecd\u4e86\u7f16\u5199exporter\u516c\u7ea6\u548cMetrics\u7684\u89e3\u91ca\uff0c\u5730\u5740\uff1ahttps://prometheus.io/docs/instrumenting/writing_clientlibs/#labels \u5b98\u65b9\u5b9a\u4e49\u4e86\u4e3b\u89814\u79cd\u6307\u6807(metric type)\uff1aCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u3001Summary\uff08\u6458\u8981\uff09\u3002 \u8bbf\u95ee http://192.168.70.131:9100/metrics \u4f1a\u8fd4\u56de\u5982\u4e0b\u8fd9\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff1a # HELP node_cpu Seconds the cpus spent in each mode. # TYPE node_cpu counter node_cpu{cpu=\"cpu0\",mode=\"idle\"} 362812.7890625 #HELP\u89e3\u91ca\u4e86\u8be5\u6570\u636e\u662f\u4ec0\u4e48 #TYPE\u4f1a\u8bf4\u8be5\u6570\u636e\u662f\u4ec0\u4e48\u6307\u6807","title":"Exporter Metrics\u89e3\u91ca"},{"location":"prometheus/prometheus/Exporter_Metrics/#counter","text":"Counter\u7c7b\u578b\u7684\u6307\u6807\u5176\u5de5\u4f5c\u65b9\u5f0f\u548c\u8ba1\u6570\u5668\u4e00\u6837\uff0c\u53ea\u589e\u4e0d\u51cf\uff08\u9664\u975e\u7cfb\u7edf\u53d1\u751f\u91cd\u7f6e\uff09\u3002\u5e38\u89c1\u7684\u76d1\u63a7\u6307\u6807\uff0c\u5982http_requests_total\uff0cnode_cpu\u90fd\u662fCounter\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u3002 \u4e00\u822c\u5728\u5b9a\u4e49Counter\u7c7b\u578b\u6307\u6807\u7684\u540d\u79f0\u65f6\u63a8\u8350\u4f7f\u7528_total\u4f5c\u4e3a\u540e\u7f00\u3002 Counter\u662f\u4e00\u4e2a\u7b80\u5355\u4f46\u6709\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u4f8b\u5982\u6211\u4eec\u53ef\u4ee5\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8bb0\u5f55\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u6b21\u6570\uff0c\u901a\u8fc7\u4ee5\u65f6\u5e8f\u7684\u5f62\u5f0f\u5b58\u50a8\u8fd9\u4e9b\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u8f7b\u677e\u7684\u4e86\u89e3\u8be5\u4e8b\u4ef6\u4ea7\u751f\u901f\u7387\u7684\u53d8\u5316\u3002","title":"Counter\uff1a\u53ea\u589e\u4e0d\u51cf\u7684\u8ba1\u6570\u5668"},{"location":"prometheus/prometheus/Exporter_Metrics/#gauge","text":"\u4e0eCounter\u4e0d\u540c\uff0cGauge\u7c7b\u578b\u7684\u6307\u6807\u4fa7\u91cd\u4e8e\u53cd\u5e94\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001\u3002\u56e0\u6b64\u8fd9\u7c7b\u6307\u6807\u7684\u6837\u672c\u6570\u636e\u53ef\u589e\u53ef\u51cf\u3002\u5e38\u89c1\u6307\u6807\u5982\uff1anode_memory_MemFree\uff08\u4e3b\u673a\u5f53\u524d\u7a7a\u95f2\u7684\u5185\u5bb9\u5927\u5c0f\uff09\u3001node_memory_MemAvailable\uff08\u53ef\u7528\u5185\u5b58\u5927\u5c0f\uff09\u90fd\u662fGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807","title":"Gauge\uff1a\u53ef\u589e\u53ef\u51cf\u7684\u4eea\u8868\u76d8"},{"location":"prometheus/prometheus/Exporter_Metrics/#histogramsummary","text":"\u9664\u4e86Counter\u548cGauge\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\u4ee5\u5916\uff0cPrometheus\u8fd8\u5b9a\u4e49\u4e86Histogram\u548cSummary\u7684\u6307\u6807\u7c7b\u578b\u3002Histogram\u548cSummary\u4e3b\u7528\u7528\u4e8e\u7edf\u8ba1\u548c\u5206\u6790\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002 \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u4eba\u4eec\u90fd\u503e\u5411\u4e8e\u4f7f\u7528\u67d0\u4e9b\u91cf\u5316\u6307\u6807\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982CPU\u7684\u5e73\u5747\u4f7f\u7528\u7387\u3001\u9875\u9762\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u3002\u8fd9\u79cd\u65b9\u5f0f\u7684\u95ee\u9898\u5f88\u660e\u663e\uff0c\u4ee5\u7cfb\u7edfAPI\u8c03\u7528\u7684\u5e73\u5747\u54cd\u5e94\u65f6\u95f4\u4e3a\u4f8b\uff1a\u5982\u679c\u5927\u591a\u6570API\u8bf7\u6c42\u90fd\u7ef4\u6301\u5728100ms\u7684\u54cd\u5e94\u65f6\u95f4\u8303\u56f4\u5185\uff0c\u800c\u4e2a\u522b\u8bf7\u6c42\u7684\u54cd\u5e94\u65f6\u95f4\u9700\u89815s\uff0c\u90a3\u4e48\u5c31\u4f1a\u5bfc\u81f4\u67d0\u4e9bWEB\u9875\u9762\u7684\u54cd\u5e94\u65f6\u95f4\u843d\u5230\u4e2d\u4f4d\u6570\u7684\u60c5\u51b5\uff0c\u800c\u8fd9\u79cd\u73b0\u8c61\u88ab\u79f0\u4e3a\u957f\u5c3e\u95ee\u9898\u3002 \u4e3a\u4e86\u533a\u5206\u662f\u5e73\u5747\u7684\u6162\u8fd8\u662f\u957f\u5c3e\u7684\u6162\uff0c\u6700\u7b80\u5355\u7684\u65b9\u5f0f\u5c31\u662f\u6309\u7167\u8bf7\u6c42\u5ef6\u8fdf\u7684\u8303\u56f4\u8fdb\u884c\u5206\u7ec4\u3002\u4f8b\u5982\uff0c\u7edf\u8ba1\u5ef6\u8fdf\u57280~10ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u6709\u591a\u5c11\u800c10~20ms\u4e4b\u95f4\u7684\u8bf7\u6c42\u6570\u53c8\u6709\u591a\u5c11\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5feb\u901f\u5206\u6790\u7cfb\u7edf\u6162\u7684\u539f\u56e0\u3002Histogram\u548cSummary\u90fd\u662f\u4e3a\u4e86\u80fd\u591f\u89e3\u51b3\u8fd9\u6837\u95ee\u9898\u7684\u5b58\u5728\uff0c\u901a\u8fc7Histogram\u548cSummary\u7c7b\u578b\u7684\u76d1\u63a7\u6307\u6807\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u4e86\u89e3\u76d1\u63a7\u6837\u672c\u7684\u5206\u5e03\u60c5\u51b5\u3002","title":"Histogram\u548cSummary"},{"location":"prometheus/prometheus/function/","text":"\u51fd\u6570 avg_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\u3002 range-vector \uff1a\u8fd9\u4e2a\u4ee3\u8868\u4e00\u6bb5\u65f6\u95f4\u6240\u6709\u7684\u503c\uff0c\u6bd4\u5982\u8fd9\u79cd\uff1anode_procs_running[1m] \u7136\u540e\u901a\u8fc7avg_over_time\u8ba1\u7b971\u5206\u949f\u5185\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982\uff1aavg_over_time(node_procs_running[1m]) max_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5927\u503c\u3002 min_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5c0f\u503c\u3002 sum_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u603b\u548c\u3002 count_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u8ba1\u6570\u3002 quantile_over_time(scalar, range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684 \u03c6 \u5206\u4f4d\u6570 (0 \u2264 \u03c6 \u2264 1)\u3002 stddev_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002 stdvar_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u65b9\u5dee\u3002 last_over_time(range-vector)\uff1a\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u7684\u6700\u8fd1\u70b9\u503c\u3002","title":"Prometheus\u8bed\u6cd5\u51fd\u6570"},{"location":"prometheus/prometheus/function/#_1","text":"","title":"\u51fd\u6570"},{"location":"prometheus/prometheus/function/#avg_over_timerange-vector","text":"range-vector \uff1a\u8fd9\u4e2a\u4ee3\u8868\u4e00\u6bb5\u65f6\u95f4\u6240\u6709\u7684\u503c\uff0c\u6bd4\u5982\u8fd9\u79cd\uff1anode_procs_running[1m] \u7136\u540e\u901a\u8fc7avg_over_time\u8ba1\u7b971\u5206\u949f\u5185\u7684\u5e73\u5747\u503c\uff0c\u4f8b\u5982\uff1aavg_over_time(node_procs_running[1m])","title":"avg_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u5e73\u5747\u503c\u3002"},{"location":"prometheus/prometheus/function/#max_over_timerange-vector","text":"","title":"max_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5927\u503c\u3002"},{"location":"prometheus/prometheus/function/#min_over_timerange-vector","text":"","title":"min_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u70b9\u7684\u6700\u5c0f\u503c\u3002"},{"location":"prometheus/prometheus/function/#sum_over_timerange-vector","text":"","title":"sum_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u603b\u548c\u3002"},{"location":"prometheus/prometheus/function/#count_over_timerange-vector","text":"","title":"count_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u6240\u6709\u503c\u7684\u8ba1\u6570\u3002"},{"location":"prometheus/prometheus/function/#quantile_over_timescalar-range-vector-0-1","text":"","title":"quantile_over_time(scalar, range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684 \u03c6 \u5206\u4f4d\u6570 (0 \u2264 \u03c6 \u2264 1)\u3002"},{"location":"prometheus/prometheus/function/#stddev_over_timerange-vector","text":"","title":"stddev_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u5dee\u3002"},{"location":"prometheus/prometheus/function/#stdvar_over_timerange-vector","text":"","title":"stdvar_over_time(range-vector)\uff1a\u6307\u5b9a\u533a\u95f4\u5185\u503c\u7684\u603b\u4f53\u6807\u51c6\u65b9\u5dee\u3002"},{"location":"prometheus/prometheus/function/#last_over_timerange-vector","text":"","title":"last_over_time(range-vector)\uff1a\u6307\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u7684\u6700\u8fd1\u70b9\u503c\u3002"},{"location":"prometheus/prometheus/kube-state-metrics/","text":"kube-state-metrics \u5e38\u7528\u6307\u6807 \u5730\u5740\uff1ahttps://github.com/kubernetes/kube-state-metrics/tree/master/docs kube_deployment_spec_replicas HELP kube_deployment_spec_replicas Number of desired pods for a deployment. deployment \u7684POD\u7684\u6570\u5b57 kube_deployment_status_replicas # HELP kube_deployment_status_replicas The number of replicas per deployment. deployment \u7684replicas\u7684\u6570\u5b57","title":"K8S kube-state-metrics\u6307\u6807\u8bf4\u660e"},{"location":"prometheus/prometheus/kube-state-metrics/#kube-state-metrics","text":"\u5730\u5740\uff1ahttps://github.com/kubernetes/kube-state-metrics/tree/master/docs kube_deployment_spec_replicas HELP kube_deployment_spec_replicas Number of desired pods for a deployment. deployment \u7684POD\u7684\u6570\u5b57 kube_deployment_status_replicas # HELP kube_deployment_status_replicas The number of replicas per deployment. deployment \u7684replicas\u7684\u6570\u5b57","title":"kube-state-metrics \u5e38\u7528\u6307\u6807"},{"location":"prometheus/prometheus/prometheus/","text":"Prometheus \u670d\u52a1\u7aef\u90e8\u7f72 Prometheus\u662f\u670d\u52a1\u7aef\uff0c\u9ed8\u8ba4\u4e5f\u76d1\u63a7\u81ea\u5df1\uff0c\u8d1f\u8d23\u5b9a\u65f6\u8f6e\u8be2\u91c7\u96c6\u6570\u636e\u3001\u5b58\u50a8\u3001\u5bf9\u5916\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u3001\u544a\u8b66\u89c4\u5219\u68c0\u6d4b \u670d\u52a1\u7aef\uff1a \u4e3b\u673a\u540d prometheus\u7248\u672c IP prometheus v2.15.2 192.168.70.130 \u5ba2\u6237\u7aef\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP node_exporter v0.18.1 192.168.70.131 \u544a\u8b66\u4e2d\u5fc3\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP alertmanager v0.20.0 192.168.70.133 prometheus\u7a0b\u5e8f\u4e0b\u8f7d\u5730\u5740 https://github.com/prometheus/prometheus/releases/tag/v2.15.2 [root@prometheus ~]# tar -zxvf prometheus-2.15.2.linux-amd64.tar.gz prometheus-2.15.2.linux-amd64/ prometheus-2.15.2.linux-amd64/promtool prometheus-2.15.2.linux-amd64/consoles/ prometheus-2.15.2.linux-amd64/consoles/node-cpu.html prometheus-2.15.2.linux-amd64/consoles/index.html.example prometheus-2.15.2.linux-amd64/consoles/node-overview.html prometheus-2.15.2.linux-amd64/consoles/prometheus-overview.html prometheus-2.15.2.linux-amd64/consoles/node-disk.html prometheus-2.15.2.linux-amd64/consoles/node.html prometheus-2.15.2.linux-amd64/consoles/prometheus.html prometheus-2.15.2.linux-amd64/NOTICE prometheus-2.15.2.linux-amd64/LICENSE prometheus-2.15.2.linux-amd64/prometheus.yml prometheus-2.15.2.linux-amd64/prometheus prometheus-2.15.2.linux-amd64/tsdb prometheus-2.15.2.linux-amd64/console_libraries/ prometheus-2.15.2.linux-amd64/console_libraries/menu.lib prometheus-2.15.2.linux-amd64/console_libraries/prom.lib [root@prometheus ~]# mv prometheus-2.15.2.linux-amd64 /usr/local/prometheus [root@prometheus prometheus]# cat prometheus.yml | grep -v '^#' | grep -v '^$' global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e\u3002 evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. #\u9644\u52a0\u76ee\u6807\u62c9\u53d6\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e # scrape_timeout is set to the global default (10s). alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. # job\u540d\u79f0\u4f1a\u589e\u52a0\u5230\u62c9\u53d6\u5230\u7684\u6240\u6709\u91c7\u6837\u70b9\u4e0a\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e2ainstance\u76ee\u6807\u670d\u52a1\u7684host\uff1aport\u6807\u7b7e\u4e5f\u4f1a\u589e\u52a0\u5230\u91c7\u6837\u70b9\u4e0a - job_name: 'prometheus' # metrics_path defaults to '/metrics' # \u76d1\u63a7\u6307\u6807\u8def\u5f84\u9ed8\u8ba4\u8bbf\u95eelocalhost:9090/metrics # scheme defaults to 'http'. # \u76ee\u6807\u9ed8\u8ba4\u4e3ahttp static_configs: - targets: ['localhost:9090'] #\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1 [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 1969 #\u542f\u52a8 \u4e00\u4e9b\u542f\u52a8\u53c2\u6570 [root@prometheus prometheus]# ./prometheus --help usage: prometheus [<flags>] The Prometheus monitoring server Flags: -h, --help \u5c55\u793a\u5e2e\u52a9 --version \u663e\u793a\u7248\u672c --config.file=\"prometheus.yml\" \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 --web.listen-address=\"0.0.0.0:9090\" \u7528\u4e8e\u4fa6\u542c UI\u3001API \u7684\u5730\u5740 --web.read-timeout=5m \u8d85\u65f6\u8bfb\u53d6\u8bf7\u6c42\u548c\u5173\u95ed\u7a7a\u95f2\u8fde\u63a5\u4e4b\u524d\u7684\u6700\u5927\u6301\u7eed\u65f6\u95f4 --web.max-connections=512 \u540c\u65f6\u8fde\u63a5\u7684\u6700\u5927\u6570\u91cf --web.external-url=<URL> \u5916\u90e8\u53ef\u8bbf\u95ee Prometheus \u7684 URL --web.route-prefix=<path> Prefix for the internal routes of web endpoints. Defaults to path of --web.external-url. --web.user-assets=<path> Path to static asset directory, available at /user. --web.enable-lifecycle \u901a\u8fc7 HTTP \u8bf7\u6c42\u542f\u7528\u5173\u95ed\u548c\u91cd\u65b0\u52a0\u8f7d\u3002. \u914d\u7f6e\u8be5\u9009\u9879\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c curl -X POST \"http://xxx.xxx.xx.xxx:9090/-/reload\" \u8fdb\u884c\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e --web.enable-admin-api \u4e3a\u7ba1\u7406\u63a7\u5236\u64cd\u4f5c\u542f\u7528 API \u7aef\u70b9 --web.console.templates=\"consoles\" \u63a7\u5236\u53f0\u6a21\u677f\u76ee\u5f55\u7684\u8def\u5f84\uff0c\u4f4d\u4e8e /consoles\u3002 --web.console.libraries=\"console_libraries\" Path to the console library directory. --web.page-title=\"Prometheus Time Series Collection and Processing Server\" Document title of Prometheus instance. --web.cors.origin=\".*\" Regex for CORS origin. It is fully anchored. Example: 'https?://(domain1|domain2)\\.com' --storage.tsdb.path=\"data/\" tsdb\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5f53\u524ddata/ --storage.tsdb.retention=STORAGE.TSDB.RETENTION \u5b58\u50a8\u6570\u636e\u4fdd\u5b58\u591a\u957f\u65f6\u95f4\u7684\uff0c\u9ed8\u8ba415\u5929\uff0c\u8fd9\u4e2a\u9009\u9879\u5728\u8fd9\u4e2a\u7248\u672c\u5df2\u7ecf\u5f03\u7528\uff0c\u7528storage.tsdb.retention.time\u4ee3\u66ff --storage.tsdb.retention.time=STORAGE.TSDB.RETENTION.TIME \u4fdd\u7559\u65f6\u95f4\u9ed8\u8ba4\u4e3a15d\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1ay\u3001 w\u3001d\u3001h\u3001m\u3001s\u3001ms\u3002 --storage.tsdb.retention.size=STORAGE.TSDB.RETENTION.SIZE [\u5b9e\u9a8c] \u53ef\u4ee5\u4e3a\u5757\u5b58\u50a8\u7684\u6700\u5927\u5b57\u8282\u6570\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1aKB\u3001MB\u3001GB\u3001TB\u3001PB\u3002 \u6b64\u6807\u5fd7\u662f\u5b9e\u9a8c\u6027\u7684\uff0c\u53ef\u4ee5\u5728\u672a\u6765\u7248\u672c\u4e2d\u66f4\u6539\u3002 --storage.tsdb.no-lockfile \u4e0d\u8981\u5728\u6570\u636e\u76ee\u5f55\u4e2d\u521b\u5efa\u9501\u6587\u4ef6 --storage.tsdb.allow-overlapping-blocks [EXPERIMENTAL] Allow overlapping blocks, which in turn enables vertical compaction and vertical query merge. --storage.tsdb.wal-compression Compress the tsdb WAL. --storage.remote.flush-deadline=<duration> How long to wait flushing sample on shutdown or config reload. --storage.remote.read-sample-limit=5e7 Maximum overall number of samples to return via the remote read interface, in a single query. 0 means no limit. This limit is ignored for streamed response types. --storage.remote.read-concurrent-limit=10 Maximum number of concurrent remote read calls. 0 means no limit. --storage.remote.read-max-bytes-in-frame=1048576 Maximum number of bytes in a single frame for streaming remote read response types before marshalling. Note that client might have limit on frame size as well. 1MB as recommended by protobuf by default. --rules.alert.for-outage-tolerance=1h Max time to tolerate prometheus outage for restoring \"for\" state of alert. --rules.alert.for-grace-period=10m Minimum duration between alert and restored \"for\" state. This is maintained only for alerts with configured \"for\" time greater than grace period. --rules.alert.resend-delay=1m Minimum amount of time to wait before resending an alert to Alertmanager. --alertmanager.notification-queue-capacity=10000 The capacity of the queue for pending Alertmanager notifications. --alertmanager.timeout=10s Timeout for sending alerts to Alertmanager. --query.lookback-delta=5m The maximum lookback duration for retrieving metrics during expression evaluations. --query.timeout=2m Maximum time a query may take before being aborted. --query.max-concurrency=20 \u5e76\u53d1\u6267\u884c\u7684\u6700\u5927\u67e5\u8be2\u6570\u3002 --query.max-samples=50000000 Maximum number of samples a single query can load into memory. Note that queries will fail if they try to load more samples than this into memory, so this also limits the number of samples a query can return. --log.level=info Only log messages with the given severity or above. One of: [debug, info, warn, error] --log.format=logfmt Output format of log messages. One of: [logfmt, json] \u8fd9\u5c31\u90e8\u7f72\u5b8c\u6210\u4e86\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/\u5c31\u80fd\u770b\u5230\u76d1\u63a7\u9875\u9762\u3002\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1\uff0c\u90a3\u4e48\u76d1\u63a7\u54ea\u4e9b\u6307\u6807\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/metrics\u5c31\u53ef\u4ee5\u770b\u5230\u4e86\u3002 \u5ba2\u6237\u7aef\u90e8\u7f72 exporter\uff1a\u4ee5http\u7684\u65b9\u5f0f\uff0c\u66b4\u9732\u6536\u96c6\u7684metric\uff0c\u7136\u540ePrometheus server\u4f1a\u5b9a\u671f\u6765\u62c9\u53d6\u6570\u636e\uff0c\u53ef\u5b89\u88c5\u5728\u88ab\u76d1\u63a7\u4e3b\u673a node_exporter\u662fexporter\u7684\u4e00\u79cd\uff0c\u7528\u6765\u76d1\u63a7Linux\u4e3b\u673a\uff0c\u5982\u679c\u76d1\u63a7windows\u4e3b\u673a\uff0c\u7528windows_exporter,\u5730\u5740\u5982\u4e0b https://github.com/prometheus-community/windows_exporter \u90e8\u7f72 node_exporter\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/prometheus/node_exporter/releases/tag/v0.18.1 [root@node_exporter ~]# tar zxvf node_exporter-0.18.1.linux-amd64.tar.gz node_exporter-0.18.1.linux-amd64/ node_exporter-0.18.1.linux-amd64/node_exporter node_exporter-0.18.1.linux-amd64/NOTICE node_exporter-0.18.1.linux-amd64/LICENSE [root@node_exporter ~]# mv node_exporter-0.18.1.linux-amd64 /usr/local/node_exporter [root@node_exporter ~]# cd /usr/local/node_exporter/ [root@node_exporter node_exporter]# nohup ./node_exporter > node_exporter.log 2>&1 & [root@node_exporter node_exporter]# ss -tanp | grep node_exporter LISTEN 0 128 [::]:9100 [::]:* users:((\"node_exporter\",pid=1846,fd=3)) \u4fee\u6539\u670d\u52a1\u7aefPrometheus\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u4f7f\u5176\u914d\u7f6e\u751f\u6548 [root@prometheus prometheus]# cat prometheus.yml # my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# ps -ef | grep prome root 1969 1808 0 11:05 pts/0 00:00:02 ./prometheus --config.file=prometheus.yml root 11775 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# kill -9 1969 [root@prometheus prometheus]# ps -ef | grep prome root 11777 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# ps -ef | grep prome root 11779 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 11786 \u7136\u540e\u67e5\u770bprometheus\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u51fa\u73b0131\u8be5\u673a\u5668 \u544a\u8b66\u4e2d\u5fc3 Alertmanager\u90e8\u7f72 Alertmanager \u7528\u4e8e\u53d1\u9001\u544a\u8b66\uff0c \u662f\u771f\u6b63\u53d1\u9001\u4fe1\u606f\u7ed9\u7528\u6237\u7684\u6a21\u5757\u3002 Alertmanager \u4f1a\u63a5\u53d7Prometheus\u53d1\u9001\u8fc7\u6765\u7684\u8b66\u544a\u4fe1\u606f\uff0c\u518d\u7531Alertmanager\u6765\u53d1\u9001\u3002 [root@alertmanager ~]# tar -zxvf alertmanager-0.20.0.linux-amd64.tar.gz alertmanager-0.20.0.linux-amd64/ alertmanager-0.20.0.linux-amd64/LICENSE alertmanager-0.20.0.linux-amd64/alertmanager alertmanager-0.20.0.linux-amd64/amtool alertmanager-0.20.0.linux-amd64/NOTICE alertmanager-0.20.0.linux-amd64/alertmanager.yml [root@alertmanager ~]# mv alertmanager-0.20.0.linux-amd64 /usr/local/alertmanager [root@alertmanager ~]# cd /usr/local/alertmanager/ [root@alertmanager alertmanager]# cat alertmanager.yml global: resolve_timeout: 5m route: group_by: ['alertname'] group_wait: 10s group_interval: 10s repeat_interval: 1h receiver: 'web.hook' receivers: - name: 'web.hook' webhook_configs: - url: 'http://127.0.0.1:5001/' inhibit_rules: - source_match: severity: 'critical' target_match: severity: 'warning' equal: ['alertname', 'dev', 'instance'] [root@alertmanager alertmanager]# nohup ./alertmanager --config.file=./alertmanager.yml > alertmanager.log 2>&1 & \u7136\u540e\u4fee\u6539prometheus\u914d\u7f6e\uff0c\u914d\u7f6e\u4e00\u4e9b\u544a\u8b66 [root@prometheus prometheus]# cat prometheus.yml global: scrape_interval: 1s evaluation_interval: 1s alerting: alertmanagers: - static_configs: - targets: ['192.168.70.133:9093'] rule_files: - rules/*.yml scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# cat rules/host.yml groups: - name: Host rules: - alert: running expr: node_procs_running > 0 for: 5s labels: serverity: high annotations: summary: \"{{$labels.instance}}: High running\" description: \"{{$labels.instance}}: running is {{$value}}\" [root@prometheus prometheus]# ps -ef | grep prom root 1168 1 0 13:49 ? 00:00:00 /sbin/dhclient -1 -q -lf /var/lib/dhclient/dhclient-f52ff6ca-5e7d-4f00-b4f7-679ef47b77da-ens33.lease -pf /var/run/dhclient-ens33.pid -H prometheus ens33 root 1728 1704 0 13:54 pts/0 00:00:03 ./prometheus --config.file=prometheus.yml root 1847 1704 0 14:55 pts/0 00:00:00 grep --color=auto prom [root@prometheus prometheus]# kill -9 1728 [root@prometheus prometheus]# [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml --web.enable-lifecycle > prometheus.log 2>&1 & \u8fd9\u91cc\u6709\u4e00\u4e9b\u53c2\u6570\u9700\u8981\u660e\u786e\u4e0b\uff1a evaluation_interval \u544a\u8b66\u7684\u68c0\u6d4b\u5468\u671f\uff0c\u5c31\u662f\u544a\u8b66\u7684\u89e6\u53d1\u5468\u671f\uff0c\u6bd4\u5982\u4f60\u5199\u4e86\u4e00\u4e2a\u68c0\u6d4b\u811a\u672c\u6216\u8005rules\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5c31\u662f\u6bcf\u9694\u591a\u957f\u65f6\u95f4\u53bb\u8c03\u7528\u8fd9\u4e2a\u811a\u672c scrape_interval \u76d1\u63a7\u4fe1\u606f\u7684\u62c9\u53d6\u65f6\u95f4\uff0c\u5c31\u662f\u62c9\u53d6metrics\u7684\u5468\u671f\uff0cPrometheus\u662f\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u53bb\u62c9\u53d6target\u4e2d\u7684\u76ee\u6807\u7684metrics \u5728roles\u4e2d expr \u7528\u6765\u89e6\u53d1\u62a5\u8b66\u7684\u516c\u5f0f\uff0c\u53ef\u4ee5\u5728prom\u8f93\u5165\u8fd9\u4e2a\u516c\u5f0f\u67e5\u770b\u5f53\u524d\u503c for \u8fd9\u4e2a\u89e6\u53d1\u6301\u7eed\u4e86\u591a\u4e45\uff0c\u6709\u4e9b\u6307\u6807\u5fc5\u987b\u7ef4\u6301\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u7b97\u5f02\u5e38\uff0c\u5728Prometheus\u4e2d\uff0c\u544a\u8b66\u4e3a3\u79cd\u72b6\u6001\uff0cInactive\u3001Pending\u3001Firing\u4e09\u79cd\uff0cinactive\u5c31\u662f\u6ca1\u6709\u89e6\u53d1\u7684\u544a\u8b66\uff0cPending\u5c31\u662f\u5df2\u7ecf\u89e6\u53d1\u7684\u544a\u8b66\uff0c\u4f46\u662f\u6ca1\u6709\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\uff0cFiring\u5c31\u662f\u5df2\u7ecf\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\u7684\u544a\u8b66\uff0c\u5c31\u662f\u6709\u6548\u544a\u8b66 \u4e0a\u9762\u6211\u76d1\u63a7\u7684\u662f\u4e3b\u673a\u5185\u7684\u6b63\u5728\u8fd0\u884c\u6216\u8005\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u5927\u4e8e0\u5c31\u544a\u8b66\uff0c\u6b63\u5e38\u8fd9\u4e2a\u503c\u662f\u4e00\u76f4\u5927\u4e8e0\u7684 \u67e5\u770bprometheus\u4e0a\u7684\u544a\u8b66\uff1a \u663e\u793a\u5df2\u7ecf\u6210\u529f\u544a\u8b66 \u7136\u540e\u67e5\u770baltermanager\u4e0a\u7684\u544a\u8b66 \u8bbf\u95ee192.168.70.133:9093 info\u5c31\u662frules\u4e2d\u586b\u5199\u7684\u5185\u5bb9\uff0csource\u70b9\u51fb\u4f1a\u8df3\u8f6c\u53bb\u663e\u793aprometheus\u4e2d\u8be5\u516c\u5f0f\u7684\u5b9e\u65f6\u503c\uff0csilence\u5c31\u662f\u521b\u5efa\u4e00\u6761\u8be5\u544a\u8b66\u7684\u9759\u97f3\u89c4\u5219","title":"Alertmanager\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus/#_1","text":"Prometheus\u662f\u670d\u52a1\u7aef\uff0c\u9ed8\u8ba4\u4e5f\u76d1\u63a7\u81ea\u5df1\uff0c\u8d1f\u8d23\u5b9a\u65f6\u8f6e\u8be2\u91c7\u96c6\u6570\u636e\u3001\u5b58\u50a8\u3001\u5bf9\u5916\u63d0\u4f9b\u6570\u636e\u67e5\u8be2\u3001\u544a\u8b66\u89c4\u5219\u68c0\u6d4b \u670d\u52a1\u7aef\uff1a \u4e3b\u673a\u540d prometheus\u7248\u672c IP prometheus v2.15.2 192.168.70.130 \u5ba2\u6237\u7aef\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP node_exporter v0.18.1 192.168.70.131 \u544a\u8b66\u4e2d\u5fc3\uff1a \u4e3b\u673a\u540d node_exporter\u7248\u672c IP alertmanager v0.20.0 192.168.70.133 prometheus\u7a0b\u5e8f\u4e0b\u8f7d\u5730\u5740 https://github.com/prometheus/prometheus/releases/tag/v2.15.2 [root@prometheus ~]# tar -zxvf prometheus-2.15.2.linux-amd64.tar.gz prometheus-2.15.2.linux-amd64/ prometheus-2.15.2.linux-amd64/promtool prometheus-2.15.2.linux-amd64/consoles/ prometheus-2.15.2.linux-amd64/consoles/node-cpu.html prometheus-2.15.2.linux-amd64/consoles/index.html.example prometheus-2.15.2.linux-amd64/consoles/node-overview.html prometheus-2.15.2.linux-amd64/consoles/prometheus-overview.html prometheus-2.15.2.linux-amd64/consoles/node-disk.html prometheus-2.15.2.linux-amd64/consoles/node.html prometheus-2.15.2.linux-amd64/consoles/prometheus.html prometheus-2.15.2.linux-amd64/NOTICE prometheus-2.15.2.linux-amd64/LICENSE prometheus-2.15.2.linux-amd64/prometheus.yml prometheus-2.15.2.linux-amd64/prometheus prometheus-2.15.2.linux-amd64/tsdb prometheus-2.15.2.linux-amd64/console_libraries/ prometheus-2.15.2.linux-amd64/console_libraries/menu.lib prometheus-2.15.2.linux-amd64/console_libraries/prom.lib [root@prometheus ~]# mv prometheus-2.15.2.linux-amd64 /usr/local/prometheus [root@prometheus prometheus]# cat prometheus.yml | grep -v '^#' | grep -v '^$' global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e\u3002 evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. #\u9644\u52a0\u76ee\u6807\u62c9\u53d6\uff0c\u6bcf15s\u62c9\u53d6\u4e00\u6b21\u76ee\u6807\u91c7\u6837\u70b9\u6570\u636e # scrape_timeout is set to the global default (10s). alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. # job\u540d\u79f0\u4f1a\u589e\u52a0\u5230\u62c9\u53d6\u5230\u7684\u6240\u6709\u91c7\u6837\u70b9\u4e0a\uff0c\u540c\u65f6\u8fd8\u6709\u4e00\u4e2ainstance\u76ee\u6807\u670d\u52a1\u7684host\uff1aport\u6807\u7b7e\u4e5f\u4f1a\u589e\u52a0\u5230\u91c7\u6837\u70b9\u4e0a - job_name: 'prometheus' # metrics_path defaults to '/metrics' # \u76d1\u63a7\u6307\u6807\u8def\u5f84\u9ed8\u8ba4\u8bbf\u95eelocalhost:9090/metrics # scheme defaults to 'http'. # \u76ee\u6807\u9ed8\u8ba4\u4e3ahttp static_configs: - targets: ['localhost:9090'] #\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1 [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 1969 #\u542f\u52a8 \u4e00\u4e9b\u542f\u52a8\u53c2\u6570 [root@prometheus prometheus]# ./prometheus --help usage: prometheus [<flags>] The Prometheus monitoring server Flags: -h, --help \u5c55\u793a\u5e2e\u52a9 --version \u663e\u793a\u7248\u672c --config.file=\"prometheus.yml\" \u914d\u7f6e\u6587\u4ef6\u8def\u5f84 --web.listen-address=\"0.0.0.0:9090\" \u7528\u4e8e\u4fa6\u542c UI\u3001API \u7684\u5730\u5740 --web.read-timeout=5m \u8d85\u65f6\u8bfb\u53d6\u8bf7\u6c42\u548c\u5173\u95ed\u7a7a\u95f2\u8fde\u63a5\u4e4b\u524d\u7684\u6700\u5927\u6301\u7eed\u65f6\u95f4 --web.max-connections=512 \u540c\u65f6\u8fde\u63a5\u7684\u6700\u5927\u6570\u91cf --web.external-url=<URL> \u5916\u90e8\u53ef\u8bbf\u95ee Prometheus \u7684 URL --web.route-prefix=<path> Prefix for the internal routes of web endpoints. Defaults to path of --web.external-url. --web.user-assets=<path> Path to static asset directory, available at /user. --web.enable-lifecycle \u901a\u8fc7 HTTP \u8bf7\u6c42\u542f\u7528\u5173\u95ed\u548c\u91cd\u65b0\u52a0\u8f7d\u3002. \u914d\u7f6e\u8be5\u9009\u9879\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c curl -X POST \"http://xxx.xxx.xx.xxx:9090/-/reload\" \u8fdb\u884c\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e --web.enable-admin-api \u4e3a\u7ba1\u7406\u63a7\u5236\u64cd\u4f5c\u542f\u7528 API \u7aef\u70b9 --web.console.templates=\"consoles\" \u63a7\u5236\u53f0\u6a21\u677f\u76ee\u5f55\u7684\u8def\u5f84\uff0c\u4f4d\u4e8e /consoles\u3002 --web.console.libraries=\"console_libraries\" Path to the console library directory. --web.page-title=\"Prometheus Time Series Collection and Processing Server\" Document title of Prometheus instance. --web.cors.origin=\".*\" Regex for CORS origin. It is fully anchored. Example: 'https?://(domain1|domain2)\\.com' --storage.tsdb.path=\"data/\" tsdb\u6570\u636e\u5b58\u50a8\u7684\u76ee\u5f55\uff0c\u9ed8\u8ba4\u5f53\u524ddata/ --storage.tsdb.retention=STORAGE.TSDB.RETENTION \u5b58\u50a8\u6570\u636e\u4fdd\u5b58\u591a\u957f\u65f6\u95f4\u7684\uff0c\u9ed8\u8ba415\u5929\uff0c\u8fd9\u4e2a\u9009\u9879\u5728\u8fd9\u4e2a\u7248\u672c\u5df2\u7ecf\u5f03\u7528\uff0c\u7528storage.tsdb.retention.time\u4ee3\u66ff --storage.tsdb.retention.time=STORAGE.TSDB.RETENTION.TIME \u4fdd\u7559\u65f6\u95f4\u9ed8\u8ba4\u4e3a15d\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1ay\u3001 w\u3001d\u3001h\u3001m\u3001s\u3001ms\u3002 --storage.tsdb.retention.size=STORAGE.TSDB.RETENTION.SIZE [\u5b9e\u9a8c] \u53ef\u4ee5\u4e3a\u5757\u5b58\u50a8\u7684\u6700\u5927\u5b57\u8282\u6570\u3002 \u652f\u6301\u7684\u5355\u4f4d\uff1aKB\u3001MB\u3001GB\u3001TB\u3001PB\u3002 \u6b64\u6807\u5fd7\u662f\u5b9e\u9a8c\u6027\u7684\uff0c\u53ef\u4ee5\u5728\u672a\u6765\u7248\u672c\u4e2d\u66f4\u6539\u3002 --storage.tsdb.no-lockfile \u4e0d\u8981\u5728\u6570\u636e\u76ee\u5f55\u4e2d\u521b\u5efa\u9501\u6587\u4ef6 --storage.tsdb.allow-overlapping-blocks [EXPERIMENTAL] Allow overlapping blocks, which in turn enables vertical compaction and vertical query merge. --storage.tsdb.wal-compression Compress the tsdb WAL. --storage.remote.flush-deadline=<duration> How long to wait flushing sample on shutdown or config reload. --storage.remote.read-sample-limit=5e7 Maximum overall number of samples to return via the remote read interface, in a single query. 0 means no limit. This limit is ignored for streamed response types. --storage.remote.read-concurrent-limit=10 Maximum number of concurrent remote read calls. 0 means no limit. --storage.remote.read-max-bytes-in-frame=1048576 Maximum number of bytes in a single frame for streaming remote read response types before marshalling. Note that client might have limit on frame size as well. 1MB as recommended by protobuf by default. --rules.alert.for-outage-tolerance=1h Max time to tolerate prometheus outage for restoring \"for\" state of alert. --rules.alert.for-grace-period=10m Minimum duration between alert and restored \"for\" state. This is maintained only for alerts with configured \"for\" time greater than grace period. --rules.alert.resend-delay=1m Minimum amount of time to wait before resending an alert to Alertmanager. --alertmanager.notification-queue-capacity=10000 The capacity of the queue for pending Alertmanager notifications. --alertmanager.timeout=10s Timeout for sending alerts to Alertmanager. --query.lookback-delta=5m The maximum lookback duration for retrieving metrics during expression evaluations. --query.timeout=2m Maximum time a query may take before being aborted. --query.max-concurrency=20 \u5e76\u53d1\u6267\u884c\u7684\u6700\u5927\u67e5\u8be2\u6570\u3002 --query.max-samples=50000000 Maximum number of samples a single query can load into memory. Note that queries will fail if they try to load more samples than this into memory, so this also limits the number of samples a query can return. --log.level=info Only log messages with the given severity or above. One of: [debug, info, warn, error] --log.format=logfmt Output format of log messages. One of: [logfmt, json] \u8fd9\u5c31\u90e8\u7f72\u5b8c\u6210\u4e86\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/\u5c31\u80fd\u770b\u5230\u76d1\u63a7\u9875\u9762\u3002\u9ed8\u8ba4\u76d1\u63a7\u81ea\u5df1\uff0c\u90a3\u4e48\u76d1\u63a7\u54ea\u4e9b\u6307\u6807\uff0c\u8bbf\u95eehttp://192.168.70.130:9090/metrics\u5c31\u53ef\u4ee5\u770b\u5230\u4e86\u3002","title":"\u670d\u52a1\u7aef\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus/#_2","text":"exporter\uff1a\u4ee5http\u7684\u65b9\u5f0f\uff0c\u66b4\u9732\u6536\u96c6\u7684metric\uff0c\u7136\u540ePrometheus server\u4f1a\u5b9a\u671f\u6765\u62c9\u53d6\u6570\u636e\uff0c\u53ef\u5b89\u88c5\u5728\u88ab\u76d1\u63a7\u4e3b\u673a node_exporter\u662fexporter\u7684\u4e00\u79cd\uff0c\u7528\u6765\u76d1\u63a7Linux\u4e3b\u673a\uff0c\u5982\u679c\u76d1\u63a7windows\u4e3b\u673a\uff0c\u7528windows_exporter,\u5730\u5740\u5982\u4e0b https://github.com/prometheus-community/windows_exporter \u90e8\u7f72 node_exporter\u4e0b\u8f7d\u5730\u5740\uff1ahttps://github.com/prometheus/node_exporter/releases/tag/v0.18.1 [root@node_exporter ~]# tar zxvf node_exporter-0.18.1.linux-amd64.tar.gz node_exporter-0.18.1.linux-amd64/ node_exporter-0.18.1.linux-amd64/node_exporter node_exporter-0.18.1.linux-amd64/NOTICE node_exporter-0.18.1.linux-amd64/LICENSE [root@node_exporter ~]# mv node_exporter-0.18.1.linux-amd64 /usr/local/node_exporter [root@node_exporter ~]# cd /usr/local/node_exporter/ [root@node_exporter node_exporter]# nohup ./node_exporter > node_exporter.log 2>&1 & [root@node_exporter node_exporter]# ss -tanp | grep node_exporter LISTEN 0 128 [::]:9100 [::]:* users:((\"node_exporter\",pid=1846,fd=3)) \u4fee\u6539\u670d\u52a1\u7aefPrometheus\u914d\u7f6e\uff0c\u7136\u540e\u91cd\u542f\u4f7f\u5176\u914d\u7f6e\u751f\u6548 [root@prometheus prometheus]# cat prometheus.yml # my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: # - \"first_rules.yml\" # - \"second_rules.yml\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# ps -ef | grep prome root 1969 1808 0 11:05 pts/0 00:00:02 ./prometheus --config.file=prometheus.yml root 11775 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# kill -9 1969 [root@prometheus prometheus]# ps -ef | grep prome root 11777 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# ps -ef | grep prome root 11779 1808 0 12:45 pts/0 00:00:00 grep --color=auto prome [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 & [1] 11786 \u7136\u540e\u67e5\u770bprometheus\u7684\u76d1\u63a7\u76ee\u6807\uff0c\u51fa\u73b0131\u8be5\u673a\u5668","title":"\u5ba2\u6237\u7aef\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus/#alertmanager","text":"Alertmanager \u7528\u4e8e\u53d1\u9001\u544a\u8b66\uff0c \u662f\u771f\u6b63\u53d1\u9001\u4fe1\u606f\u7ed9\u7528\u6237\u7684\u6a21\u5757\u3002 Alertmanager \u4f1a\u63a5\u53d7Prometheus\u53d1\u9001\u8fc7\u6765\u7684\u8b66\u544a\u4fe1\u606f\uff0c\u518d\u7531Alertmanager\u6765\u53d1\u9001\u3002 [root@alertmanager ~]# tar -zxvf alertmanager-0.20.0.linux-amd64.tar.gz alertmanager-0.20.0.linux-amd64/ alertmanager-0.20.0.linux-amd64/LICENSE alertmanager-0.20.0.linux-amd64/alertmanager alertmanager-0.20.0.linux-amd64/amtool alertmanager-0.20.0.linux-amd64/NOTICE alertmanager-0.20.0.linux-amd64/alertmanager.yml [root@alertmanager ~]# mv alertmanager-0.20.0.linux-amd64 /usr/local/alertmanager [root@alertmanager ~]# cd /usr/local/alertmanager/ [root@alertmanager alertmanager]# cat alertmanager.yml global: resolve_timeout: 5m route: group_by: ['alertname'] group_wait: 10s group_interval: 10s repeat_interval: 1h receiver: 'web.hook' receivers: - name: 'web.hook' webhook_configs: - url: 'http://127.0.0.1:5001/' inhibit_rules: - source_match: severity: 'critical' target_match: severity: 'warning' equal: ['alertname', 'dev', 'instance'] [root@alertmanager alertmanager]# nohup ./alertmanager --config.file=./alertmanager.yml > alertmanager.log 2>&1 & \u7136\u540e\u4fee\u6539prometheus\u914d\u7f6e\uff0c\u914d\u7f6e\u4e00\u4e9b\u544a\u8b66 [root@prometheus prometheus]# cat prometheus.yml global: scrape_interval: 1s evaluation_interval: 1s alerting: alertmanagers: - static_configs: - targets: ['192.168.70.133:9093'] rule_files: - rules/*.yml scrape_configs: - job_name: 'prometheus' static_configs: - targets: ['localhost:9090'] - job_name: 'linux' static_configs: - targets: [ '192.168.70.131:9100' ] [root@prometheus prometheus]# cat rules/host.yml groups: - name: Host rules: - alert: running expr: node_procs_running > 0 for: 5s labels: serverity: high annotations: summary: \"{{$labels.instance}}: High running\" description: \"{{$labels.instance}}: running is {{$value}}\" [root@prometheus prometheus]# ps -ef | grep prom root 1168 1 0 13:49 ? 00:00:00 /sbin/dhclient -1 -q -lf /var/lib/dhclient/dhclient-f52ff6ca-5e7d-4f00-b4f7-679ef47b77da-ens33.lease -pf /var/run/dhclient-ens33.pid -H prometheus ens33 root 1728 1704 0 13:54 pts/0 00:00:03 ./prometheus --config.file=prometheus.yml root 1847 1704 0 14:55 pts/0 00:00:00 grep --color=auto prom [root@prometheus prometheus]# kill -9 1728 [root@prometheus prometheus]# [1]+ \u5df2\u6740\u6b7b nohup ./prometheus --config.file=prometheus.yml > prometheus.log 2>&1 [root@prometheus prometheus]# [root@prometheus prometheus]# nohup ./prometheus --config.file=prometheus.yml --web.enable-lifecycle > prometheus.log 2>&1 & \u8fd9\u91cc\u6709\u4e00\u4e9b\u53c2\u6570\u9700\u8981\u660e\u786e\u4e0b\uff1a evaluation_interval \u544a\u8b66\u7684\u68c0\u6d4b\u5468\u671f\uff0c\u5c31\u662f\u544a\u8b66\u7684\u89e6\u53d1\u5468\u671f\uff0c\u6bd4\u5982\u4f60\u5199\u4e86\u4e00\u4e2a\u68c0\u6d4b\u811a\u672c\u6216\u8005rules\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5c31\u662f\u6bcf\u9694\u591a\u957f\u65f6\u95f4\u53bb\u8c03\u7528\u8fd9\u4e2a\u811a\u672c scrape_interval \u76d1\u63a7\u4fe1\u606f\u7684\u62c9\u53d6\u65f6\u95f4\uff0c\u5c31\u662f\u62c9\u53d6metrics\u7684\u5468\u671f\uff0cPrometheus\u662f\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\u53bb\u62c9\u53d6target\u4e2d\u7684\u76ee\u6807\u7684metrics \u5728roles\u4e2d expr \u7528\u6765\u89e6\u53d1\u62a5\u8b66\u7684\u516c\u5f0f\uff0c\u53ef\u4ee5\u5728prom\u8f93\u5165\u8fd9\u4e2a\u516c\u5f0f\u67e5\u770b\u5f53\u524d\u503c for \u8fd9\u4e2a\u89e6\u53d1\u6301\u7eed\u4e86\u591a\u4e45\uff0c\u6709\u4e9b\u6307\u6807\u5fc5\u987b\u7ef4\u6301\u4e00\u6bb5\u65f6\u95f4\u624d\u80fd\u7b97\u5f02\u5e38\uff0c\u5728Prometheus\u4e2d\uff0c\u544a\u8b66\u4e3a3\u79cd\u72b6\u6001\uff0cInactive\u3001Pending\u3001Firing\u4e09\u79cd\uff0cinactive\u5c31\u662f\u6ca1\u6709\u89e6\u53d1\u7684\u544a\u8b66\uff0cPending\u5c31\u662f\u5df2\u7ecf\u89e6\u53d1\u7684\u544a\u8b66\uff0c\u4f46\u662f\u6ca1\u6709\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\uff0cFiring\u5c31\u662f\u5df2\u7ecf\u8fbe\u5230for\u89c4\u5b9a\u7684\u6301\u7eed\u65f6\u957f\u7684\u544a\u8b66\uff0c\u5c31\u662f\u6709\u6548\u544a\u8b66 \u4e0a\u9762\u6211\u76d1\u63a7\u7684\u662f\u4e3b\u673a\u5185\u7684\u6b63\u5728\u8fd0\u884c\u6216\u8005\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u5927\u4e8e0\u5c31\u544a\u8b66\uff0c\u6b63\u5e38\u8fd9\u4e2a\u503c\u662f\u4e00\u76f4\u5927\u4e8e0\u7684 \u67e5\u770bprometheus\u4e0a\u7684\u544a\u8b66\uff1a \u663e\u793a\u5df2\u7ecf\u6210\u529f\u544a\u8b66 \u7136\u540e\u67e5\u770baltermanager\u4e0a\u7684\u544a\u8b66 \u8bbf\u95ee192.168.70.133:9093 info\u5c31\u662frules\u4e2d\u586b\u5199\u7684\u5185\u5bb9\uff0csource\u70b9\u51fb\u4f1a\u8df3\u8f6c\u53bb\u663e\u793aprometheus\u4e2d\u8be5\u516c\u5f0f\u7684\u5b9e\u65f6\u503c\uff0csilence\u5c31\u662f\u521b\u5efa\u4e00\u6761\u8be5\u544a\u8b66\u7684\u9759\u97f3\u89c4\u5219","title":"\u544a\u8b66\u4e2d\u5fc3 Alertmanager\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus_k8s/","text":"K8S\u73af\u5883\u4e2d\u90e8\u7f72Prometheus \u627e\u4e00\u53f0\u6709kubectl\u547d\u4ee4\u7684\u673a\u5668\uff0c\u5e76\u80fd\u8fde\u63a5\u5230K8S\u96c6\u7fa4\uff0c\u7136\u540e\u514b\u9686\u5b98\u65b9git\u5e93\uff0c\u56e0\u4e3a\u6211\u7684K8S\u662f1.18\uff0c\u6240\u4ee5\u6211\u8981\u514b\u9686 release-0.5\u7248\u672c [root@centos7 ~]# git clone -b release-0.5 https://github.com/prometheus-operator/kube-prometheus.git \u7136\u540e\u76f4\u63a5\u90e8\u7f72\u5373\u53ef [root@centos7 ~]# kubectl apply -f kube-prometheus/manifests/setup/ [root@centos7 ~]# kubectl apply -f kube-prometheus/manifests/* \u7136\u540e\u5c31\u90e8\u7f72\u5b8c\u6210\u4e86","title":"K8S\u90e8\u7f72"},{"location":"prometheus/prometheus/prometheus_k8s/#k8sprometheus","text":"\u627e\u4e00\u53f0\u6709kubectl\u547d\u4ee4\u7684\u673a\u5668\uff0c\u5e76\u80fd\u8fde\u63a5\u5230K8S\u96c6\u7fa4\uff0c\u7136\u540e\u514b\u9686\u5b98\u65b9git\u5e93\uff0c\u56e0\u4e3a\u6211\u7684K8S\u662f1.18\uff0c\u6240\u4ee5\u6211\u8981\u514b\u9686 release-0.5\u7248\u672c [root@centos7 ~]# git clone -b release-0.5 https://github.com/prometheus-operator/kube-prometheus.git \u7136\u540e\u76f4\u63a5\u90e8\u7f72\u5373\u53ef [root@centos7 ~]# kubectl apply -f kube-prometheus/manifests/setup/ [root@centos7 ~]# kubectl apply -f kube-prometheus/manifests/* \u7136\u540e\u5c31\u90e8\u7f72\u5b8c\u6210\u4e86","title":"K8S\u73af\u5883\u4e2d\u90e8\u7f72Prometheus"},{"location":"prometheus/prometheus/prometheus_rate/","text":"\u4e3a\u4ec0\u4e48rate\u53ef\u4ee5\u8ba1\u7b97CPU\u7684\u4f7f\u7528\u7387 \u5728\u8ba1\u7b97POD\u7684CPU\u4f7f\u7528\u7387\u7684\u65f6\u5019\uff0c\u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8ba1\u7b97\u516c\u5f0f sum (rate (container_cpu_usage_seconds_total{pod_name=~\"$Pod\",namespace=\"$namespace\"}[1m])) by (pod_name) \u53c2\u8003\uff1a https://blog.csdn.net/shm19990131/article/details/107162470 https://www.cnblogs.com/minseo/p/13367692.html https://blog.csdn.net/qq_35753140/article/details/105121525 \u603b\u7ed3\uff1a increase()\u51fd\u6570 increase\u51fd\u6570\u5728Prometheus\u4e2d\uff0c\u662f\u7528\u6765\u9488\u5bf9Counter\u8fd9\u79cd\u6301\u7eed\u589e\u957f\u7684\u6570\u503c\uff0c\u622a\u53d6\u5176\u4e2d\u4e00\u6bb5\u65f6\u95f4\u7684\u589e\u91cf increase(node_cpu[1m])=\u300b\u8fd9\u6837\u5c31\u83b7\u53d6\u4e86CPU\u603b\u4f7f\u7528\u65f6\u95f4\u57281\u5206\u949f\u5185\u7684\u589e\u91cf rate()\u51fd\u6570 \u662f\u4e13\u95e8\u642d\u914dcounter\u7c7b\u578b\u6570\u636e\u4f7f\u7528\u7684\u51fd\u6570 \u5b83\u7684\u529f\u80fd\u662f\u6309\u7167\u8bbe\u7f6e\u4e00\u4e2a\u65f6\u95f4\u6bb5\uff0c\u53d6counter\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u4e2d\u7684\u5e73\u5747\u6bcf\u79d2\u7684\u589e\u91cf rate(metrice[1m]) == increase(metrice[1m])/1m rate\u51fd\u6570\u7b49\u4e8e increase\u7684\u503c\u9664\u4ee5\u65f6\u95f4 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0cCPU\u4f7f\u7528\u7387\u662f\u7edf\u8ba1CPU\u7684\u5728\u4e0d\u540c\u72b6\u6001\u4e0b\u7684CPU\u4f7f\u7528\u65f6\u95f4\u5360\u603b\u65f6\u95f4\u591a\u5c11 \u4f8b\u5982\uff1a cpu0 5\u5206\u949f\u5185\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u7684\u65f6\u95f4\uff1aincrease(node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"}[5m])\uff0cincrease \u7684\u610f\u601d\u662f\u8868\u793a\u589e\u91cf\uff0cnode_cpu_seconds_total \u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u8fd9\u4e2a\u516c\u5f0f\u7684\u7ed3\u679c\u662f\u5f53\u524d\u65f6\u70b9\u7684 node_cpu_seconds_total \u51cf\u53bb5\u5206\u949f\u4e4b\u524d\u7684 node_cpu_seconds_total\uff0c\u4e5f\u5c31\u662f\u8fd95\u5206\u949f\u4e4b\u5185\u5904\u4e8eidle \u72b6\u6001\u7684 cpu \u65f6\u95f4\u3002 cpu0 5\u5206\u949f\u5185\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u7684\u65f6\u95f4\u5360\u6bd4\uff1aincrease(node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"}[5m]) / increase(node_cpu_seconds_total{cpu=\"0\"}[5m])\uff0c\u5206\u6bcd\u5176\u5b9e\u5c31\u662f5\u5206\u949f=300\u79d2\u3002 \u5206\u6bcd\u548c\u5206\u5b50\u90fd\u662fCounter\u7c7b\u578b\u7684\uff0c\u90fd\u662f\u65f6\u95f4 \u90a3\u4e48\u8fd9\u4e2a\u65f6\u95f4\u5360\u6bd4\u5c31\u662fidle\u7684\u4f7f\u7528\u7387\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528rate(node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"}[5m])\u6765\u8868\u793a \u540c\u7406\uff1a container_cpu_usage_seconds_total \u4ee3\u8868\u7684\u662f\u5bb9\u5668\u5360\u7528\u7684CPU\u65f6\u95f4 1\u5206\u949f\u65f6\u95f4\u5185 container_cpu_usage_seconds_total \u6240\u589e\u957f\u7684\u7684\u503c increase(container_cpu_usage_seconds_total[1m]) \u90a3\u4e48\u5bb9\u5668\u76841\u5206\u949fCPU\u4f7f\u7528\u7387\u5e94\u8be5\u662f increase(container_cpu_usage_seconds_total[1m])/[1m] \u90a3\u4e48\u7528rate\u6765\u7b80\u5316\u516c\u5f0f\u90a3\u4e481\u5206\u949fCPU\u4f7f\u7528\u7387\u5c31\u662f rate (container_cpu_usage_seconds_total[1m])","title":"Prometheus\u6307\u6807\u8bb2\u89e3\"\u4e3a\u4ec0\u4e48rate\u53ef\u4ee5\u8ba1\u7b97CPU\u7684\u4f7f\u7528\u7387\""},{"location":"prometheus/prometheus/prometheus_rate/#ratecpu","text":"\u5728\u8ba1\u7b97POD\u7684CPU\u4f7f\u7528\u7387\u7684\u65f6\u5019\uff0c\u5b98\u65b9\u7ed9\u51fa\u4e86\u4e00\u4e2a\u8ba1\u7b97\u516c\u5f0f sum (rate (container_cpu_usage_seconds_total{pod_name=~\"$Pod\",namespace=\"$namespace\"}[1m])) by (pod_name) \u53c2\u8003\uff1a https://blog.csdn.net/shm19990131/article/details/107162470 https://www.cnblogs.com/minseo/p/13367692.html https://blog.csdn.net/qq_35753140/article/details/105121525 \u603b\u7ed3\uff1a increase()\u51fd\u6570 increase\u51fd\u6570\u5728Prometheus\u4e2d\uff0c\u662f\u7528\u6765\u9488\u5bf9Counter\u8fd9\u79cd\u6301\u7eed\u589e\u957f\u7684\u6570\u503c\uff0c\u622a\u53d6\u5176\u4e2d\u4e00\u6bb5\u65f6\u95f4\u7684\u589e\u91cf increase(node_cpu[1m])=\u300b\u8fd9\u6837\u5c31\u83b7\u53d6\u4e86CPU\u603b\u4f7f\u7528\u65f6\u95f4\u57281\u5206\u949f\u5185\u7684\u589e\u91cf rate()\u51fd\u6570 \u662f\u4e13\u95e8\u642d\u914dcounter\u7c7b\u578b\u6570\u636e\u4f7f\u7528\u7684\u51fd\u6570 \u5b83\u7684\u529f\u80fd\u662f\u6309\u7167\u8bbe\u7f6e\u4e00\u4e2a\u65f6\u95f4\u6bb5\uff0c\u53d6counter\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u4e2d\u7684\u5e73\u5747\u6bcf\u79d2\u7684\u589e\u91cf rate(metrice[1m]) == increase(metrice[1m])/1m rate\u51fd\u6570\u7b49\u4e8e increase\u7684\u503c\u9664\u4ee5\u65f6\u95f4 \u5728\u8ba1\u7b97\u673a\u4e2d\uff0cCPU\u4f7f\u7528\u7387\u662f\u7edf\u8ba1CPU\u7684\u5728\u4e0d\u540c\u72b6\u6001\u4e0b\u7684CPU\u4f7f\u7528\u65f6\u95f4\u5360\u603b\u65f6\u95f4\u591a\u5c11 \u4f8b\u5982\uff1a cpu0 5\u5206\u949f\u5185\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u7684\u65f6\u95f4\uff1aincrease(node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"}[5m])\uff0cincrease \u7684\u610f\u601d\u662f\u8868\u793a\u589e\u91cf\uff0cnode_cpu_seconds_total \u662f\u5355\u8c03\u9012\u589e\u7684\uff0c\u8fd9\u4e2a\u516c\u5f0f\u7684\u7ed3\u679c\u662f\u5f53\u524d\u65f6\u70b9\u7684 node_cpu_seconds_total \u51cf\u53bb5\u5206\u949f\u4e4b\u524d\u7684 node_cpu_seconds_total\uff0c\u4e5f\u5c31\u662f\u8fd95\u5206\u949f\u4e4b\u5185\u5904\u4e8eidle \u72b6\u6001\u7684 cpu \u65f6\u95f4\u3002 cpu0 5\u5206\u949f\u5185\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u7684\u65f6\u95f4\u5360\u6bd4\uff1aincrease(node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"}[5m]) / increase(node_cpu_seconds_total{cpu=\"0\"}[5m])\uff0c\u5206\u6bcd\u5176\u5b9e\u5c31\u662f5\u5206\u949f=300\u79d2\u3002 \u5206\u6bcd\u548c\u5206\u5b50\u90fd\u662fCounter\u7c7b\u578b\u7684\uff0c\u90fd\u662f\u65f6\u95f4 \u90a3\u4e48\u8fd9\u4e2a\u65f6\u95f4\u5360\u6bd4\u5c31\u662fidle\u7684\u4f7f\u7528\u7387\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u7528rate(node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"}[5m])\u6765\u8868\u793a \u540c\u7406\uff1a container_cpu_usage_seconds_total \u4ee3\u8868\u7684\u662f\u5bb9\u5668\u5360\u7528\u7684CPU\u65f6\u95f4 1\u5206\u949f\u65f6\u95f4\u5185 container_cpu_usage_seconds_total \u6240\u589e\u957f\u7684\u7684\u503c increase(container_cpu_usage_seconds_total[1m]) \u90a3\u4e48\u5bb9\u5668\u76841\u5206\u949fCPU\u4f7f\u7528\u7387\u5e94\u8be5\u662f increase(container_cpu_usage_seconds_total[1m])/[1m] \u90a3\u4e48\u7528rate\u6765\u7b80\u5316\u516c\u5f0f\u90a3\u4e481\u5206\u949fCPU\u4f7f\u7528\u7387\u5c31\u662f rate (container_cpu_usage_seconds_total[1m])","title":"\u4e3a\u4ec0\u4e48rate\u53ef\u4ee5\u8ba1\u7b97CPU\u7684\u4f7f\u7528\u7387"},{"location":"prometheus/prometheus/prometheus_recording_rule/","text":"recording_rules RECORDING RULES\u662f Prometheus\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u5728\u91c7\u96c6\u4fa7\u9884\u5148\u8ba1\u7b97 \u9700\u8981\u4e9brule_files\u6587\u4ef6\uff0c\u7136\u540e\u5728Prometheus\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e \u914d\u7f6e\u6587\u4ef6\u8be6\u89e3\uff1ahttps://prometheus.io/docs/prometheus/latest/configuration/configuration/ Prometheus\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a rule_files: [ - <filepath_glob> ... ] rule_files\u4e66\u5199\u65b9\u6cd5\uff1ahttps://prometheus.io/docs/prometheus/latest/configuration/recording_rules/ rule_files\u8be6\u89e3 github\u4e0a\u7684\u4f8b\u5b50\uff1ahttps://github.com/helm/charts/blob/master/stable/prometheus-operator/templates/prometheus/rules/k8s.rules.yaml rules: - expr: sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate expr \u662fPrometheus\u7684\u8ba1\u7b97\u65b9\u6cd5 record \u662f\u8ba1\u7b97\u65b9\u6cd5\u7684\u7ed3\u679c\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u6307\u6807 \u52a0\u8f7d\u8fd9\u4e9b\u89c4\u5219\u540e\uff0c\u5728PromSQL\u4e2d namespace:container_cpu_usage_seconds_total:sum_rate \u7b49\u540c\u4e8e sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) \u53ef\u4ee5\u7b80\u5316PromSQL\u7684\u5199\u6cd5 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u6307\u6807\uff0c\u5c31\u53ef\u4ee5\u5728\u754c\u9762\u4e0a\u76f4\u63a5\u67e5\u8be2\u5230\uff1a","title":"Prometheus recording_rules\u529f\u80fd"},{"location":"prometheus/prometheus/prometheus_recording_rule/#recording_rules","text":"RECORDING RULES\u662f Prometheus\u7684\u4e00\u4e2a\u529f\u80fd\uff0c\u5728\u91c7\u96c6\u4fa7\u9884\u5148\u8ba1\u7b97 \u9700\u8981\u4e9brule_files\u6587\u4ef6\uff0c\u7136\u540e\u5728Prometheus\u914d\u7f6e\u6587\u4ef6\u4e2d\u8fdb\u884c\u914d\u7f6e \u914d\u7f6e\u6587\u4ef6\u8be6\u89e3\uff1ahttps://prometheus.io/docs/prometheus/latest/configuration/configuration/ Prometheus\u914d\u7f6e\u6587\u4ef6\u4e2d\uff1a rule_files: [ - <filepath_glob> ... ] rule_files\u4e66\u5199\u65b9\u6cd5\uff1ahttps://prometheus.io/docs/prometheus/latest/configuration/recording_rules/","title":"recording_rules"},{"location":"prometheus/prometheus/prometheus_recording_rule/#rule_files","text":"github\u4e0a\u7684\u4f8b\u5b50\uff1ahttps://github.com/helm/charts/blob/master/stable/prometheus-operator/templates/prometheus/rules/k8s.rules.yaml rules: - expr: sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) record: namespace:container_cpu_usage_seconds_total:sum_rate expr \u662fPrometheus\u7684\u8ba1\u7b97\u65b9\u6cd5 record \u662f\u8ba1\u7b97\u65b9\u6cd5\u7684\u7ed3\u679c\uff0c\u5e76\u91cd\u65b0\u5b9a\u4e49\u6307\u6807 \u52a0\u8f7d\u8fd9\u4e9b\u89c4\u5219\u540e\uff0c\u5728PromSQL\u4e2d namespace:container_cpu_usage_seconds_total:sum_rate \u7b49\u540c\u4e8e sum(rate(container_cpu_usage_seconds_total{job=\"kubelet\", image!=\"\", container_name!=\"\"}[5m])) by (namespace) \u53ef\u4ee5\u7b80\u5316PromSQL\u7684\u5199\u6cd5 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u6307\u6807\uff0c\u5c31\u53ef\u4ee5\u5728\u754c\u9762\u4e0a\u76f4\u63a5\u67e5\u8be2\u5230\uff1a","title":"rule_files\u8be6\u89e3"},{"location":"prometheus/prometheus/query_rules/","text":"metric\u4ecb\u7ecd\uff0cPrometheus\u672c\u8d28\u4e0a\u662f\u65f6\u5e8f\u6570\u636e\u5e93\uff0cPrometheus\u4f1a\u5c06\u6240\u6709\u91c7\u96c6\u5230\u7684\u6837\u672c\u6570\u636e\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u5185\u5b58\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14\u5b9a\u65f6\u4fdd\u5b58\u5230\u786c\u76d8\u4e0a \u6570\u636e\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a \u5728Prometheus\u7684\u4e16\u754c\u91cc\u9762\uff0c\u6240\u6709\u7684\u6570\u503c\u90fd\u662f64 bit\u7684\u3002\u6bcf\u6761\u65f6\u95f4\u5e8f\u5217\u91cc\u9762\u8bb0\u5f55\u7684\u5c31\u662f64 bit Timestamp\uff08\u65f6\u95f4\u6233\uff09\u548c64 bit\u7684Sample Value\uff08\u91c7\u6837\u503c\uff09 \u5728prometheus\u6709\u4e24\u79cd\u67e5\u8be2\u65b9\u5f0f\uff0c\u67e5\u8be2\u4e00\u822c\u662f\u4e0d\u5e26\u65f6\u95f4\u7684\uff0c\u8be5\u4e24\u79cd\u65b9\u5f0f\u5982\u4e0b\uff0c \u67e5\u8be2\u4ec0\u4e48\u6570\u636e\uff0c\u53ea\u8981\u5199\u597dPromQL\uff0c\u5728Prometheus\u66b4\u9732\u76849090\u7aef\u53e3\u7684\u9875\u9762\u4e2d\u67e5\u8be2\u5373\u53ef\u3002 \u76f8\u5173\u8bed\u6cd5\uff1a label\u4e0a\u7684\u5339\u914d\u5668 \u5339\u914d\u5668\u662f\u4f5c\u7528\u4e8e\u6807\u7b7e\u4e0a\u7684\uff0c\u6807\u7b7e\u5339\u914d\u5668\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0cPrometheus\u652f\u6301\u5b8c\u5168\u5339\u914d\u548c\u6b63\u5219\u5339\u914d\u4e24\u79cd\u6a21\u5f0f\u3002 1.\u76f8\u7b49\u5339\u914d\u5668\uff08=\uff09 \u76f8\u7b49\u5339\u914d\u5668\uff08Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u540c\u7684\u6807\u7b7e\u3002\u4e0b\u9762\u4ecb\u7ecd\u7684\u4f8b\u5b50\u4e2d\u5c31\u4f1a\u4f7f\u7528\u76f8\u7b49\u5339\u914d\u5668\u6309\u7167\u6761\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8fc7\u6ee4\u3002 http_requests_total{job=\"HelloWorld\",status=\"200\",method=\"POST\",handler=\"/api/comments\"} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6807\u7b7e\u4e3a\u7a7a\u6216\u8005\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528Label=\"\"\u7684\u5f62\u5f0f\u3002\u5bf9\u4e8e\u4e0d\u5b58\u5728\u7684\u6807\u7b7e\uff0c\u6bd4\u5982demo\u6807\u7b7e\uff0c\u56fe4-7\u6240\u793a\u7684go_gc_duration_seconds_count\u548c\u56fe4-8\u6240\u793a\u7684go_gc_duration_seconds_count{demo=\"\"}\u6548\u679c\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002 2.\u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08\uff01=\uff09 \u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08Negative Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\u7684\u6807\u7b7e\u3002\u5b83\u548c\u76f8\u7b49\u5339\u914d\u5668\u662f\u5b8c\u5168\u76f8\u53cd\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u60f3\u8981\u67e5\u770bjob\u5e76\u4e0d\u662fHelloWorld\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4e0d\u76f8\u7b49\u5339\u914d\u5668\u3002 http_requests_total{job!=\"HelloWorld\"} 3.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08=~\uff09 \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u76f8\u5339\u914d\u7684\u6807\u7b7e\u3002Prometheus\u7684\u6b63\u5219\u8fd0\u7b97\u662f\u5f3a\u6307\u5b9a\u7684\uff0c\u6bd4\u5982\u6b63\u5219\u8868\u8fbe\u5f0fa\u53ea\u4f1a\u5339\u914d\u5230\u5b57\u7b26\u4e32a\uff0c\u800c\u5e76\u4e0d\u4f1a\u5339\u914d\u5230ab\u6216\u8005ba\u6216\u8005abc\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u8fd9\u6837\u7684\u5f3a\u6307\u5b9a\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u524d\u9762\u6216\u8005\u540e\u9762\u52a0\u4e0a\u201c. \u201d\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u8868\u793ajob\u662f\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684HTTP\u8bf7\u6c42\u603b\u6570\u3002 http_requests_total{job=~\"Hello. \"} http_requests_total\u76f4\u63a5\u7b49\u6548\u4e8e{ name =\"http_requests_total\"}\uff0c\u540e\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u548c\u524d\u8005\u4e00\u6837\u76844\u79cd\u5339\u914d\u5668\uff08=\uff0c\uff01=\uff0c=~\uff0c\uff01~\uff09\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u6848\u4f8b\u53ef\u4ee5\u8868\u793a\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684\u6307\u6807\u3002 { name =~\"Hello.*\"} \u5982\u679c\u60f3\u8981\u67e5\u770bjob\u662f\u4ee5Hello\u5f00\u5934\u7684\uff0c\u4e14\u5728\u751f\u4ea7\uff08prod\uff09\u3001\u6d4b\u8bd5\uff08test\uff09\u3001\u9884\u53d1\u5e03\uff08pre\uff09\u7b49\u73af\u5883\u4e0b\u54cd\u5e94\u7ed3\u679c\u4e0d\u662f200\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2\u3002 http_requests_total{job=~\"Hello.*\",env=~\"prod|test|pre\",code!=\"200\"} \u7531\u4e8e\u6240\u6709\u7684PromQL\u8868\u8fbe\u5f0f\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6307\u6807\u540d\u79f0\uff0c\u6216\u8005\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668\uff0c\u56e0\u6b64\u7ed3\u5408Prometheus\u5b98\u65b9\u6587\u6863\uff0c\u53ef\u4ee5\u68b3\u7406\u51fa\u5982\u4e0b\u975e\u6cd5\u793a\u4f8b\u3002 {job=~\".*\"} # \u975e\u6cd5\uff01 {job=\"\"} # \u975e\u6cd5\uff01 {job!=\"\"} # \u975e\u6cd5\uff01 \u76f8\u53cd\uff0c\u5982\u4e0b\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\u3002 {job=~\".+\"} # \u5408\u6cd5\uff01.+\u8868\u793a\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26 {job=~\". \",method=\"get\"} # \u5408\u6cd5\uff01. \u8868\u793a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 {job=\"\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d {job=~\".+\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d 4.\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08\uff01~\uff09 \u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08Negative Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u4e0d\u5339\u914d\u7684\u6807\u7b7e\u3002\u56e0\u4e3aPromQL\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u57fa\u4e8eRE2\u7684\u8bed\u6cd5\uff0c\u4f46\u662fRE2\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\uff01~\u7684\u51fa\u73b0\u662f\u4f5c\u4e3a\u4e00\u79cd\u66ff\u4ee3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u6392\u9664\u6307\u5b9a\u6807\u7b7e\u503c\u7684\u529f\u80fd\u3002\u5728\u4e00\u4e2a\u9009\u62e9\u5668\u5f53\u4e2d\uff0c\u53ef\u4ee5\u9488\u5bf9\u540c\u4e00\u4e2a\u6807\u7b7e\u6765\u4f7f\u7528\u591a\u4e2a\u5339\u914d\u5668\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5b9e\u73b0\u67e5\u627ejob\u540d\u662fnode\u4e14\u5b89\u88c5\u5728/prometheus\u76ee\u5f55\u4e0b\uff0c\u4f46\u662f\u5e76\u4e0d\u5728/prometheus/user\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u5e76\u786e\u5b9a\u5176\u5927\u5c0f\u3002 node_filesystem_size_bytes{job=\"node\",mountpoint=~\"/prometheus/. \", mountpoint!~ \"/prometheus/user/. \"} PromQL\u91c7\u7528\u7684\u662fRE2[1]\u5f15\u64ce\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002RE2\u6765\u6e90\u4e8eGo\u8bed\u8a00\uff0c\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u4e00\u79cd\u7ebf\u6027\u65f6\u95f4\u7684\u6a21\u5f0f\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8ePromQL\u8fd9\u79cd\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u5c31\u50cf\u6211\u4eec\u524d\u6587\u63cf\u8ff0\u7684RE2\u90a3\u6837\uff0c\u5176\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff08\u5411\u524d\u65ad\u8a00\uff09\uff0c\u4e5f\u4e0d\u652f\u6301\u53cd\u5411\u5f15\u7528\uff0c\u540c\u65f6\u8fd8\u7f3a\u5931\u5f88\u591a\u9ad8\u7ea7\u7279\u6027\u3002 \u601d\u8003\u62d3\u5c55 =\u3001\uff01=\u3001=~\u3001\uff01~\u8fd94\u4e2a\u5339\u914d\u5668\u5728\u5b9e\u6218\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u5982\u679c\u9891\u7e41\u4e3a\u6807\u7b7e\u65bd\u52a0\u6b63\u5219\u5339\u914d\u5668\uff0c\u6bd4\u5982HTTP\u72b6\u6001\u7801\u67091xx\u30012xx\u30013xx\u30014xx\u30015xx\uff0c\u5728\u7edf\u8ba1\u6240\u6709\u8fd4\u56de\u503c\u662f5xx\u7684HTTP\u8bf7\u6c42\u65f6\uff0cPromQL\u8bed\u53e5\u5c31\u4f1a\u53d8\u6210http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500\"\uff0cstatus=~\"501\"\uff0cstatus=~\"502\"\uff0cstatus=~\"503\"\uff0cstatus=~\"504\"\uff0cstatus=~\"505\"\uff0cstatus=~\"506\"\u2026} \u4f46\u662f\uff0c\u6211\u4eec\u90fd\u77e5\u90535xx\u4ee3\u8868\u670d\u52a1\u5668\u9519\u8bef\uff0c\u8fd9\u4e9b\u72b6\u6001\u4ee3\u7801\u8868\u793a\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u4e86\u5185\u90e8\u9519\u8bef\u3002\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u6765\u81ea\u670d\u52a1\u5668\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u8bf7\u6c42\u3002 1\uff09500\uff1a\u670d\u52a1\u5668\u9047\u5230\u9519\u8bef\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42\uff08\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\uff09\u3002 2\uff09501\uff1a\u670d\u52a1\u5668\u4e0d\u5177\u5907\u5b8c\u6210\u8bf7\u6c42\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5f53\u670d\u52a1\u5668\u65e0\u6cd5\u8bc6\u522b\u8bf7\u6c42\u65b9\u6cd5\u65f6\u53ef\u80fd\u4f1a\u8fd4\u56de\u6b64\u4ee3\u7801\uff08\u5c1a\u672a\u5b9e\u65bd\uff09\u3002 3\uff09502\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u65e0\u6548\u54cd\u5e94\uff08\u9519\u8bef\u7f51\u5173\uff09\u3002 4\uff09503\uff1a\u670d\u52a1\u5668\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\uff08\u7531\u4e8e\u8d85\u8f7d\u6216\u505c\u673a\u7ef4\u62a4\uff09\uff0c\u901a\u5e38\u53ea\u662f\u6682\u65f6\u72b6\u6001\uff08\u670d\u52a1\u4e0d\u53ef\u7528\uff09\u3002 5\uff09504\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4f46\u662f\u6ca1\u6709\u53ca\u65f6\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff08\u7f51\u5173\u8d85\u65f6\uff09\u3002 6\uff09505\uff1a\u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u4e2d\u6240\u7528\u7684HTTP\u534f\u8bae\u7248\u672c\uff08HTTP\u7248\u672c\u4e0d\u53d7\u652f\u6301\uff09\u3002 7\uff09506\uff1a\u7531\u300a\u900f\u660e\u5185\u5bb9\u534f\u5546\u534f\u8bae\u300b\uff08RFC 2295\uff09\u6269\u5c55\u800c\u6765\uff0c\u4ee3\u8868\u670d\u52a1\u5668\u5b58\u5728\u5185\u90e8\u914d\u7f6e\u9519\u8bef\u3002 8\uff09507\uff1a\u670d\u52a1\u5668\u65e0\u6cd5\u5b58\u50a8\u5b8c\u6210\u8bf7\u6c42\u6240\u5fc5\u9700\u7684\u5185\u5bb9\u3002\u8fd9\u4e2a\u72b6\u51b5\u88ab\u8ba4\u4e3a\u662f\u4e34\u65f6\u7684\u3002 9\uff09509\uff1a\u670d\u52a1\u5668\u8fbe\u5230\u5e26\u5bbd\u9650\u5236\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b98\u65b9\u7684\u72b6\u6001\u7801\uff0c\u4f46\u662f\u4ecd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 10\uff09510\uff1a\u83b7\u53d6\u8d44\u6e90\u6240\u9700\u8981\u7684\u7b56\u7565\u5e76\u6ca1\u6709\u88ab\u6ee1\u8db3\u3002 \u4e3a\u4e86\u6d88\u9664\u8fd9\u6837\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u4f18\u5316\u3002 \u4f18\u5316\u4e00\u3000\u591a\u4e2a\u8868\u8fbe\u5f0f\u4e4b\u95f4\u4f7f\u7528\u201c|\u201d\u8fdb\u884c\u5206\u5272\uff1ahttp_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500|501|502|503|504|505|506|507|509|510\"}\u3002 \u4f18\u5316\u4e8c\u3000\u5c06\u8fd9\u4e9b\u8fd4\u56de\u503c\u5305\u88c5\u4e3a5xx\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u5bf9http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"5xx\"}\u8fdb\u884c\u4f18\u5316\u3002 \u4f18\u5316\u4e09\u3000\u5982\u679c\u8981\u9009\u62e9\u4e0d\u4ee54xx\u5f00\u5934\u7684\u6240\u6709HTTP\u72b6\u6001\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528http_requests_total{status\uff01~\"4..\"}\u3002 \u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668 \u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u8fd4\u56de\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e\u3002\u548c\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4ece\u5f53\u524d\u65f6\u95f4\u5411\u524d\u9009\u62e9\u4e86\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u7684\u6837\u672c\u3002\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u4e3b\u8981\u5728\u9009\u62e9\u5668\u672b\u5c3e\u7684\u65b9\u62ec\u53f7[]\u4e2d\uff0c\u901a\u8fc7\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668\u8fdb\u884c\u5b9a\u4e49\uff0c\u4ee5\u6307\u5b9a\u6bcf\u4e2a\u8fd4\u56de\u7684\u533a\u95f4\u5411\u91cf\u6837\u672c\u503c\u4e2d\u63d0\u53d6\u591a\u957f\u7684\u65f6\u95f4\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u8868\u793a\u6700\u8fd15\u5206\u949f\u5185\u7684\u6240\u6709HTTP\u8bf7\u6c42\u7684\u6837\u672c\u6570\u636e\uff0c\u5176\u4e2d[5m]\u5c06\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u8f6c\u53d8\u4e3a\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u3002 http_request_total{}[5m] \u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u6574\u6570\u6765\u8868\u793a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5355\u4f4d\u4e4b\u4e00\uff1a\u79d2\uff08s\uff09\u3001\u5206\u949f\uff08m\uff09\u3001\u5c0f\u65f6\uff08h\uff09\u3001\u5929\uff08d\uff09\u3001\u5468\uff08w\uff09\u3001\u5e74\uff08y\uff09\u3002\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u5fc5\u987b\u7528\u6574\u6570\u6765\u8868\u793a\u65f6\u95f4\uff0c\u6bd4\u598238 m\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f2 h 15 m\u548c1.5 h\u90fd\u662f\u9519\u8bef\u7684\u3002\u8fd9\u91cc\u7684y\u662f\u5ffd\u7565\u95f0\u5e74\u7684\uff0c\u6c38\u8fdc\u662f60\u00d760\u00d724\u00d7365\u79d2\u3002 \u6848\u4f8b\u4e00\uff1a\u8ba1\u7b972\u5206\u949f\u5185\u7cfb\u7edf\u8fdb\u7a0b\u7684CPU\u4f7f\u7528\u7387\u3002 rate(node_cpu[2m]) \u6848\u4f8b\u4e8c\uff1a\u8ba1\u7b97\u7cfb\u7edfCPU\u7684\u603b\u4f53\u4f7f\u7528\u7387\uff0c\u901a\u8fc7\u6392\u9664\u7cfb\u7edf\u95f2\u7f6e\u7684CPU\u4f7f\u7528\u7387\u5373\u53ef\u83b7\u5f97\u3002 1 - avg without(cpu) (rate(node_cpu{mode=\"idle\"}[2m])) \u6848\u4f8b\u4e09\uff1anode_cpu_seconds_total\u53ef\u4ee5\u83b7\u53d6\u5f53\u524dCPU\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4f7f\u7528avg\u805a\u5408\u67e5\u8be2\u5230\u6570\u636e\u540e\uff0c\u518d\u4f7f\u7528by\u6765\u533a\u5206\u5b9e\u4f8b\uff0c\u8fd9\u6837\u5c31\u80fd\u505a\u5230\u5206\u5b9e\u4f8b\u67e5\u8be2\u5404\u81ea\u7684\u6570\u636e\u3002 avg(irate(node_cpu_seconds_total{job=\"node_srv\"}[5m])) by (instance) \u5b9e\u6218\u62d3\u5c55 1\uff09\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u5f80\u5f80\u548c\u901f\u7387\u51fd\u6570rate\u4e00\u8d77\u4f7f\u7528\u3002\u6bd4\u5982\u5b50\u67e5\u8be2\uff0c\u4ee51\u6b21/\u5206\u949f\u7684\u901f\u7387\u91c7\u96c6\u5173\u4e8ehttp_requests_total\u6307\u6807\u5728\u8fc7\u53bb30\u5206\u949f\u5185\u7684\u6570\u636e\uff0c\u7136\u540e\u8fd4\u56de\u8fd930\u5206\u949f\u5185\u8ddd\u79bb\u5f53\u524d\u65f6\u95f4\u6700\u8fd1\u76845\u5206\u949f\u5185\u7684\u91c7\u96c6\u7ed3\u679c\uff0c\u5982\u4e0b\u6240\u793a\u3002 rate(http_requests_total[5m])[30m:1m] \u6ce8\u610f\uff0c\u4f7f\u7528\u4e0d\u5fc5\u8981\u7684\u5b50\u67e5\u8be2\u6216\u8005\u4e0d\u505c\u5730\u5d4c\u5957\u5b50\u67e5\u8be2\u5e76\u4e0d\u662f\u597d\u7684PromQL\u98ce\u683c\u3002 2\uff09\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e0d\u80fd\u76f4\u63a5\u5c55\u793a\u5728Graph\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5c55\u793a\u5728Console\u89c6\u56fe\u4e2d\u3002 \u504f\u79fb\u91cf\u4fee\u6539\u5668 \u504f\u79fb\u91cf\u4fee\u6539\u5668\u53ef\u4ee5\u8ba9\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u53d1\u751f\u504f\u79fb\uff0c\u5b83\u5141\u8bb8\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u5e76\u5728\u6bcf\u4e2a\u9009\u62e9\u5668\u7684\u57fa\u7840\u4e0a\u5c06\u5176\u5411\u524d\u63a8\u79fb\u3002 \u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u90fd\u53ef\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u57fa\u51c6\u4e0b\u7684\u6837\u672c\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u8981\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u524d5\u5206\u949f\u7684HTTP\u8bf7\u6c42\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8fd9\u6837\u7684\u65b9\u5f0f\u3002 http_request_total{} offset 5m \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u7684\u5173\u952e\u5b57\u5fc5\u987b\u7d27\u8ddf\u5728\u9009\u62e9\u5668{}\u540e\u9762\uff0c\u5982\u4e0b\u7684\u8868\u8fbe\u5f0f\u5206\u522b\u662f\u6b63\u786e\u548c\u9519\u8bef\u7684\u793a\u4f8b\u3002 sum(http_requests_total{method=\"GET\"} offset 5m) // \u6b63\u786e sum(http_requests_total{method=\"GET\"}) offset 5m // \u975e\u6cd5 \u8be5\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\uff0c\u6bd4\u5982\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5176\u4ee5\u6307\u6807http_requests_total 5\u5206\u949f\u524d\u7684\u65f6\u95f4\u70b9\u4e3a\u8d77\u59cb\u9ad8\uff0c\u8fd4\u56de5\u5206\u949f\u4e4b\u5185\u7684HTTP\u8bf7\u6c42\u91cf\u7684\u589e\u957f\u901f\u7387\u3002 rate(http_requests_total[5m] offset 5m) \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u901a\u8fc7\u8c03\u6574\u8ba1\u7b97\u65f6\u95f4\u4e00\u6837\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u5386\u53f2\u6570\u636e\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u4e00\u822c\u53ea\u5bf9\u8c03\u8bd5\u5355\u6761\u8bed\u53e5\u7684\u5386\u53f2\u6570\u636e\u6709\u5e2e\u52a9\u3002\u968f\u7740\u65b0\u6570\u636e\u7684\u5230\u6765\uff0c\u5386\u53f2\u6570\u636e\u4e5f\u4f1a\u4e0d\u65ad\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u5efa\u8bae\u5728Grafana\u4e2d\u76f4\u63a5\u770b\u5386\u53f2\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u3002 Prometheus\u67094\u5927\u6307\u6807\u7c7b\u578b\uff08Metrics Type\uff09\uff0c\u5206\u522b\u662fCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u548cSummary\uff08\u6458\u8981\uff09\u3002\u8fd9\u662f\u5728Prometheus\u5ba2\u6237\u7aef\uff08\u76ee\u524d\u4e3b\u8981\u6709Go\u3001Java\u3001Python\u3001Ruby\u7b49\u8bed\u8a00\u7248\u672c\uff09\u4e2d\u63d0\u4f9b\u76844\u79cd\u6838\u5fc3\u6307\u6807\u7c7b\u578b\uff0c\u4f46\u662fPrometheus\u7684\u670d\u52a1\u7aef\u5e76\u4e0d\u533a\u5206\u6307\u6807\u7c7b\u578b\uff0c\u800c\u662f\u7b80\u5355\u5730\u628a\u8fd9\u4e9b\u6307\u6807\u7edf\u4e00\u89c6\u4e3a\u65e0\u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u672a\u6765\uff0cPrometheus\u5b98\u65b9\u5e94\u8be5\u4f1a\u505a\u51fa\u6539\u53d8 \u805a\u5408\u51fd\u6570\uff1a Prometheus\u8fd8\u63d0\u4f9b\u4e86\u4e0b\u5217\u5185\u7f6e\u7684\u805a\u5408\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u4f5c\u7528\u57df\u77ac\u65f6\u5411\u91cf\u3002\u53ef\u4ee5\u5c06\u77ac\u65f6\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u3002 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u65b9\u5dee) count (\u8ba1\u6570) count_values (\u5bf9value\u8fdb\u884c\u8ba1\u6570) bottomk (\u540en\u6761\u65f6\u5e8f) topk (\u524dn\u6761\u65f6\u5e8f) quantile (\u5206\u4f4d\u6570) \u4f7f\u7528\u805a\u5408\u64cd\u4f5c\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u5176\u4e2d\u53ea\u6709 count_values , quantile , topk , bottomk \u652f\u6301\u53c2\u6570(parameter)\u3002 without\u7528\u4e8e\u4ece\u8ba1\u7b97\u7ed3\u679c\u4e2d\u79fb\u9664\u5217\u4e3e\u7684\u6807\u7b7e\uff0c\u800c\u4fdd\u7559\u5176\u5b83\u6807\u7b7e\u3002by\u5219\u6b63\u597d\u76f8\u53cd\uff0c\u7ed3\u679c\u5411\u91cf\u4e2d\u53ea\u4fdd\u7559\u5217\u51fa\u7684\u6807\u7b7e\uff0c\u5176\u4f59\u6807\u7b7e\u5219\u79fb\u9664\u3002\u901a\u8fc7without\u548cby\u53ef\u4ee5\u6309\u7167\u6837\u672c\u7684\u95ee\u9898\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u3002 \u4f8b\u5982\uff1a sum(http_requests_total) without (instance) \u7b49\u4ef7\u4e8e sum(http_requests_total) by (code,handler,job,method) \u5982\u679c\u53ea\u9700\u8981\u8ba1\u7b97\u6574\u4e2a\u5e94\u7528\u7684HTTP\u8bf7\u6c42\u603b\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a sum(http_requests_total) count_values\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u6837\u672c\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002count_values\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u552f\u4e00\u7684\u6837\u672c\u503c\u8f93\u51fa\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u6807\u7b7e\u3002 \u4f8b\u5982\uff1a count_values(\"count\", http_requests_total) topk\u548cbottomk\u5219\u7528\u4e8e\u5bf9\u6837\u672c\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u5f53\u524d\u6837\u672c\u503c\u524dn\u4f4d\uff0c\u6216\u8005\u540en\u4f4d\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u83b7\u53d6HTTP\u8bf7\u6c42\u6570\u524d5\u4f4d\u7684\u65f6\u5e8f\u6837\u672c\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a topk(5, http_requests_total) quantile\u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u6837\u672c\u6570\u636e\u503c\u7684\u5206\u5e03\u60c5\u51b5quantile(\u03c6, express)\u5176\u4e2d0 \u2264 \u03c6 \u2264 1\u3002 \u4f8b\u5982\uff0c\u5f53\u03c6\u4e3a0.5\u65f6\uff0c\u5373\u8868\u793a\u627e\u5230\u5f53\u524d\u6837\u672c\u6570\u636e\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1a quantile(0.5, http_requests_total)","title":"Prometheus\u76d1\u63a7\u67e5\u8be2\u8bed\u6cd5\u5165\u95e8"},{"location":"prometheus/prometheus/query_rules/#_1","text":"metric\u4ecb\u7ecd\uff0cPrometheus\u672c\u8d28\u4e0a\u662f\u65f6\u5e8f\u6570\u636e\u5e93\uff0cPrometheus\u4f1a\u5c06\u6240\u6709\u91c7\u96c6\u5230\u7684\u6837\u672c\u6570\u636e\u4ee5\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u4fdd\u5b58\u5728\u5185\u5b58\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u4e14\u5b9a\u65f6\u4fdd\u5b58\u5230\u786c\u76d8\u4e0a \u6570\u636e\u7ed3\u6784\u5982\u4e0b\u56fe\uff1a \u5728Prometheus\u7684\u4e16\u754c\u91cc\u9762\uff0c\u6240\u6709\u7684\u6570\u503c\u90fd\u662f64 bit\u7684\u3002\u6bcf\u6761\u65f6\u95f4\u5e8f\u5217\u91cc\u9762\u8bb0\u5f55\u7684\u5c31\u662f64 bit Timestamp\uff08\u65f6\u95f4\u6233\uff09\u548c64 bit\u7684Sample Value\uff08\u91c7\u6837\u503c\uff09 \u5728prometheus\u6709\u4e24\u79cd\u67e5\u8be2\u65b9\u5f0f\uff0c\u67e5\u8be2\u4e00\u822c\u662f\u4e0d\u5e26\u65f6\u95f4\u7684\uff0c\u8be5\u4e24\u79cd\u65b9\u5f0f\u5982\u4e0b\uff0c \u67e5\u8be2\u4ec0\u4e48\u6570\u636e\uff0c\u53ea\u8981\u5199\u597dPromQL\uff0c\u5728Prometheus\u66b4\u9732\u76849090\u7aef\u53e3\u7684\u9875\u9762\u4e2d\u67e5\u8be2\u5373\u53ef\u3002 \u76f8\u5173\u8bed\u6cd5\uff1a","title":""},{"location":"prometheus/prometheus/query_rules/#label","text":"\u5339\u914d\u5668\u662f\u4f5c\u7528\u4e8e\u6807\u7b7e\u4e0a\u7684\uff0c\u6807\u7b7e\u5339\u914d\u5668\u53ef\u4ee5\u5bf9\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u8fc7\u6ee4\uff0cPrometheus\u652f\u6301\u5b8c\u5168\u5339\u914d\u548c\u6b63\u5219\u5339\u914d\u4e24\u79cd\u6a21\u5f0f\u3002","title":"label\u4e0a\u7684\u5339\u914d\u5668"},{"location":"prometheus/prometheus/query_rules/#1","text":"\u76f8\u7b49\u5339\u914d\u5668\uff08Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u5b8c\u5168\u76f8\u540c\u7684\u6807\u7b7e\u3002\u4e0b\u9762\u4ecb\u7ecd\u7684\u4f8b\u5b50\u4e2d\u5c31\u4f1a\u4f7f\u7528\u76f8\u7b49\u5339\u914d\u5668\u6309\u7167\u6761\u4ef6\u8fdb\u884c\u4e00\u7cfb\u5217\u8fc7\u6ee4\u3002 http_requests_total{job=\"HelloWorld\",status=\"200\",method=\"POST\",handler=\"/api/comments\"} \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u6807\u7b7e\u4e3a\u7a7a\u6216\u8005\u4e0d\u5b58\u5728\uff0c\u90a3\u4e48\u4e5f\u53ef\u4ee5\u4f7f\u7528Label=\"\"\u7684\u5f62\u5f0f\u3002\u5bf9\u4e8e\u4e0d\u5b58\u5728\u7684\u6807\u7b7e\uff0c\u6bd4\u5982demo\u6807\u7b7e\uff0c\u56fe4-7\u6240\u793a\u7684go_gc_duration_seconds_count\u548c\u56fe4-8\u6240\u793a\u7684go_gc_duration_seconds_count{demo=\"\"}\u6548\u679c\u5176\u5b9e\u662f\u4e00\u6837\u7684\u3002","title":"1.\u76f8\u7b49\u5339\u914d\u5668\uff08=\uff09"},{"location":"prometheus/prometheus/query_rules/#2","text":"\u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08Negative Equality Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u4e0d\u76f8\u540c\u7684\u6807\u7b7e\u3002\u5b83\u548c\u76f8\u7b49\u5339\u914d\u5668\u662f\u5b8c\u5168\u76f8\u53cd\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5982\u679c\u60f3\u8981\u67e5\u770bjob\u5e76\u4e0d\u662fHelloWorld\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u4e0d\u76f8\u7b49\u5339\u914d\u5668\u3002 http_requests_total{job!=\"HelloWorld\"}","title":"2.\u4e0d\u76f8\u7b49\u5339\u914d\u5668\uff08\uff01=\uff09"},{"location":"prometheus/prometheus/query_rules/#3","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u76f8\u5339\u914d\u7684\u6807\u7b7e\u3002Prometheus\u7684\u6b63\u5219\u8fd0\u7b97\u662f\u5f3a\u6307\u5b9a\u7684\uff0c\u6bd4\u5982\u6b63\u5219\u8868\u8fbe\u5f0fa\u53ea\u4f1a\u5339\u914d\u5230\u5b57\u7b26\u4e32a\uff0c\u800c\u5e76\u4e0d\u4f1a\u5339\u914d\u5230ab\u6216\u8005ba\u6216\u8005abc\u3002\u5982\u679c\u4f60\u4e0d\u60f3\u4f7f\u7528\u8fd9\u6837\u7684\u5f3a\u6307\u5b9a\u529f\u80fd\uff0c\u53ef\u4ee5\u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u524d\u9762\u6216\u8005\u540e\u9762\u52a0\u4e0a\u201c. \u201d\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\u8868\u793ajob\u662f\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684HTTP\u8bf7\u6c42\u603b\u6570\u3002 http_requests_total{job=~\"Hello. \"} http_requests_total\u76f4\u63a5\u7b49\u6548\u4e8e{ name =\"http_requests_total\"}\uff0c\u540e\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u548c\u524d\u8005\u4e00\u6837\u76844\u79cd\u5339\u914d\u5668\uff08=\uff0c\uff01=\uff0c=~\uff0c\uff01~\uff09\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u6848\u4f8b\u53ef\u4ee5\u8868\u793a\u6240\u6709\u4ee5Hello\u5f00\u5934\u7684\u6307\u6807\u3002 { name =~\"Hello.*\"} \u5982\u679c\u60f3\u8981\u67e5\u770bjob\u662f\u4ee5Hello\u5f00\u5934\u7684\uff0c\u4e14\u5728\u751f\u4ea7\uff08prod\uff09\u3001\u6d4b\u8bd5\uff08test\uff09\u3001\u9884\u53d1\u5e03\uff08pre\uff09\u7b49\u73af\u5883\u4e0b\u54cd\u5e94\u7ed3\u679c\u4e0d\u662f200\u7684HTTP\u8bf7\u6c42\u603b\u6570\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u8fdb\u884c\u67e5\u8be2\u3002 http_requests_total{job=~\"Hello.*\",env=~\"prod|test|pre\",code!=\"200\"} \u7531\u4e8e\u6240\u6709\u7684PromQL\u8868\u8fbe\u5f0f\u5fc5\u987b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u6307\u6807\u540d\u79f0\uff0c\u6216\u8005\u81f3\u5c11\u6709\u4e00\u4e2a\u4e0d\u4f1a\u5339\u914d\u5230\u7a7a\u5b57\u7b26\u4e32\u7684\u6807\u7b7e\u8fc7\u6ee4\u5668\uff0c\u56e0\u6b64\u7ed3\u5408Prometheus\u5b98\u65b9\u6587\u6863\uff0c\u53ef\u4ee5\u68b3\u7406\u51fa\u5982\u4e0b\u975e\u6cd5\u793a\u4f8b\u3002 {job=~\".*\"} # \u975e\u6cd5\uff01 {job=\"\"} # \u975e\u6cd5\uff01 {job!=\"\"} # \u975e\u6cd5\uff01 \u76f8\u53cd\uff0c\u5982\u4e0b\u8868\u8fbe\u5f0f\u662f\u5408\u6cd5\u7684\u3002 {job=~\".+\"} # \u5408\u6cd5\uff01.+\u8868\u793a\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26 {job=~\". \",method=\"get\"} # \u5408\u6cd5\uff01. \u8868\u793a\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 {job=\"\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d {job=~\".+\",method=\"post\"} # \u5408\u6cd5\uff01\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5339\u914d","title":"3.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\uff08=~\uff09"},{"location":"prometheus/prometheus/query_rules/#4","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08Negative Regular Expression Matcher\uff09\uff0c\u7528\u4e8e\u9009\u62e9\u4e0e\u63d0\u4f9b\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6b63\u5219\u8fd0\u7b97\u540e\u6240\u5f97\u7ed3\u679c\u4e0d\u5339\u914d\u7684\u6807\u7b7e\u3002\u56e0\u4e3aPromQL\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u57fa\u4e8eRE2\u7684\u8bed\u6cd5\uff0c\u4f46\u662fRE2\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff0c\u6240\u4ee5\uff01~\u7684\u51fa\u73b0\u662f\u4f5c\u4e3a\u4e00\u79cd\u66ff\u4ee3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u57fa\u4e8e\u6b63\u5219\u8868\u8fbe\u5f0f\u6392\u9664\u6307\u5b9a\u6807\u7b7e\u503c\u7684\u529f\u80fd\u3002\u5728\u4e00\u4e2a\u9009\u62e9\u5668\u5f53\u4e2d\uff0c\u53ef\u4ee5\u9488\u5bf9\u540c\u4e00\u4e2a\u6807\u7b7e\u6765\u4f7f\u7528\u591a\u4e2a\u5339\u914d\u5668\u3002\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u53ef\u4ee5\u5b9e\u73b0\u67e5\u627ejob\u540d\u662fnode\u4e14\u5b89\u88c5\u5728/prometheus\u76ee\u5f55\u4e0b\uff0c\u4f46\u662f\u5e76\u4e0d\u5728/prometheus/user\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u5e76\u786e\u5b9a\u5176\u5927\u5c0f\u3002 node_filesystem_size_bytes{job=\"node\",mountpoint=~\"/prometheus/. \", mountpoint!~ \"/prometheus/user/. \"} PromQL\u91c7\u7528\u7684\u662fRE2[1]\u5f15\u64ce\uff0c\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002RE2\u6765\u6e90\u4e8eGo\u8bed\u8a00\uff0c\u5b83\u88ab\u8bbe\u8ba1\u4e3a\u4e00\u79cd\u7ebf\u6027\u65f6\u95f4\u7684\u6a21\u5f0f\uff0c\u975e\u5e38\u9002\u5408\u7528\u4e8ePromQL\u8fd9\u79cd\u65f6\u95f4\u5e8f\u5217\u7684\u65b9\u5f0f\u3002\u4f46\u662f\u5c31\u50cf\u6211\u4eec\u524d\u6587\u63cf\u8ff0\u7684RE2\u90a3\u6837\uff0c\u5176\u4e0d\u652f\u6301\u5411\u524d\u4e0d\u5339\u914d\u8868\u8fbe\u5f0f\uff08\u5411\u524d\u65ad\u8a00\uff09\uff0c\u4e5f\u4e0d\u652f\u6301\u53cd\u5411\u5f15\u7528\uff0c\u540c\u65f6\u8fd8\u7f3a\u5931\u5f88\u591a\u9ad8\u7ea7\u7279\u6027\u3002 \u601d\u8003\u62d3\u5c55 =\u3001\uff01=\u3001=~\u3001\uff01~\u8fd94\u4e2a\u5339\u914d\u5668\u5728\u5b9e\u6218\u4e2d\u975e\u5e38\u6709\u7528\uff0c\u4f46\u662f\u5982\u679c\u9891\u7e41\u4e3a\u6807\u7b7e\u65bd\u52a0\u6b63\u5219\u5339\u914d\u5668\uff0c\u6bd4\u5982HTTP\u72b6\u6001\u7801\u67091xx\u30012xx\u30013xx\u30014xx\u30015xx\uff0c\u5728\u7edf\u8ba1\u6240\u6709\u8fd4\u56de\u503c\u662f5xx\u7684HTTP\u8bf7\u6c42\u65f6\uff0cPromQL\u8bed\u53e5\u5c31\u4f1a\u53d8\u6210http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500\"\uff0cstatus=~\"501\"\uff0cstatus=~\"502\"\uff0cstatus=~\"503\"\uff0cstatus=~\"504\"\uff0cstatus=~\"505\"\uff0cstatus=~\"506\"\u2026} \u4f46\u662f\uff0c\u6211\u4eec\u90fd\u77e5\u90535xx\u4ee3\u8868\u670d\u52a1\u5668\u9519\u8bef\uff0c\u8fd9\u4e9b\u72b6\u6001\u4ee3\u7801\u8868\u793a\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u8bf7\u6c42\u65f6\u53d1\u751f\u4e86\u5185\u90e8\u9519\u8bef\u3002\u8fd9\u4e9b\u9519\u8bef\u53ef\u80fd\u6765\u81ea\u670d\u52a1\u5668\u672c\u8eab\uff0c\u800c\u4e0d\u662f\u8bf7\u6c42\u3002 1\uff09500\uff1a\u670d\u52a1\u5668\u9047\u5230\u9519\u8bef\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42\uff08\u670d\u52a1\u5668\u5185\u90e8\u9519\u8bef\uff09\u3002 2\uff09501\uff1a\u670d\u52a1\u5668\u4e0d\u5177\u5907\u5b8c\u6210\u8bf7\u6c42\u7684\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5f53\u670d\u52a1\u5668\u65e0\u6cd5\u8bc6\u522b\u8bf7\u6c42\u65b9\u6cd5\u65f6\u53ef\u80fd\u4f1a\u8fd4\u56de\u6b64\u4ee3\u7801\uff08\u5c1a\u672a\u5b9e\u65bd\uff09\u3002 3\uff09502\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u65e0\u6548\u54cd\u5e94\uff08\u9519\u8bef\u7f51\u5173\uff09\u3002 4\uff09503\uff1a\u670d\u52a1\u5668\u76ee\u524d\u65e0\u6cd5\u4f7f\u7528\uff08\u7531\u4e8e\u8d85\u8f7d\u6216\u505c\u673a\u7ef4\u62a4\uff09\uff0c\u901a\u5e38\u53ea\u662f\u6682\u65f6\u72b6\u6001\uff08\u670d\u52a1\u4e0d\u53ef\u7528\uff09\u3002 5\uff09504\uff1a\u670d\u52a1\u5668\u4f5c\u4e3a\u7f51\u5173\u6216\u4ee3\u7406\uff0c\u4f46\u662f\u6ca1\u6709\u53ca\u65f6\u4ece\u4e0a\u6e38\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff08\u7f51\u5173\u8d85\u65f6\uff09\u3002 6\uff09505\uff1a\u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u4e2d\u6240\u7528\u7684HTTP\u534f\u8bae\u7248\u672c\uff08HTTP\u7248\u672c\u4e0d\u53d7\u652f\u6301\uff09\u3002 7\uff09506\uff1a\u7531\u300a\u900f\u660e\u5185\u5bb9\u534f\u5546\u534f\u8bae\u300b\uff08RFC 2295\uff09\u6269\u5c55\u800c\u6765\uff0c\u4ee3\u8868\u670d\u52a1\u5668\u5b58\u5728\u5185\u90e8\u914d\u7f6e\u9519\u8bef\u3002 8\uff09507\uff1a\u670d\u52a1\u5668\u65e0\u6cd5\u5b58\u50a8\u5b8c\u6210\u8bf7\u6c42\u6240\u5fc5\u9700\u7684\u5185\u5bb9\u3002\u8fd9\u4e2a\u72b6\u51b5\u88ab\u8ba4\u4e3a\u662f\u4e34\u65f6\u7684\u3002 9\uff09509\uff1a\u670d\u52a1\u5668\u8fbe\u5230\u5e26\u5bbd\u9650\u5236\u3002\u8fd9\u4e0d\u662f\u4e00\u4e2a\u5b98\u65b9\u7684\u72b6\u6001\u7801\uff0c\u4f46\u662f\u4ecd\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002 10\uff09510\uff1a\u83b7\u53d6\u8d44\u6e90\u6240\u9700\u8981\u7684\u7b56\u7565\u5e76\u6ca1\u6709\u88ab\u6ee1\u8db3\u3002 \u4e3a\u4e86\u6d88\u9664\u8fd9\u6837\u7684\u9519\u8bef\uff0c\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u4f18\u5316\u3002 \u4f18\u5316\u4e00\u3000\u591a\u4e2a\u8868\u8fbe\u5f0f\u4e4b\u95f4\u4f7f\u7528\u201c|\u201d\u8fdb\u884c\u5206\u5272\uff1ahttp_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"500|501|502|503|504|505|506|507|509|510\"}\u3002 \u4f18\u5316\u4e8c\u3000\u5c06\u8fd9\u4e9b\u8fd4\u56de\u503c\u5305\u88c5\u4e3a5xx\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5668\u5bf9http_requests_total{job=\"HelloWorld\"\uff0cstatus=~\"5xx\"}\u8fdb\u884c\u4f18\u5316\u3002 \u4f18\u5316\u4e09\u3000\u5982\u679c\u8981\u9009\u62e9\u4e0d\u4ee54xx\u5f00\u5934\u7684\u6240\u6709HTTP\u72b6\u6001\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528http_requests_total{status\uff01~\"4..\"}\u3002","title":"4.\u6b63\u5219\u8868\u8fbe\u5f0f\u76f8\u53cd\u5339\u914d\u5668\uff08\uff01~\uff09"},{"location":"prometheus/prometheus/query_rules/#_2","text":"\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u8fd4\u56de\u4e00\u7ec4\u65f6\u95f4\u5e8f\u5217\uff0c\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u6bb5\u65f6\u95f4\u8303\u56f4\u5185\u7684\u6837\u672c\u6570\u636e\u3002\u548c\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u4e0d\u540c\u7684\u662f\uff0c\u5b83\u4ece\u5f53\u524d\u65f6\u95f4\u5411\u524d\u9009\u62e9\u4e86\u4e00\u5b9a\u65f6\u95f4\u8303\u56f4\u7684\u6837\u672c\u3002\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u4e3b\u8981\u5728\u9009\u62e9\u5668\u672b\u5c3e\u7684\u65b9\u62ec\u53f7[]\u4e2d\uff0c\u901a\u8fc7\u65f6\u95f4\u8303\u56f4\u9009\u62e9\u5668\u8fdb\u884c\u5b9a\u4e49\uff0c\u4ee5\u6307\u5b9a\u6bcf\u4e2a\u8fd4\u56de\u7684\u533a\u95f4\u5411\u91cf\u6837\u672c\u503c\u4e2d\u63d0\u53d6\u591a\u957f\u7684\u65f6\u95f4\u8303\u56f4\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u53ef\u4ee5\u8868\u793a\u6700\u8fd15\u5206\u949f\u5185\u7684\u6240\u6709HTTP\u8bf7\u6c42\u7684\u6837\u672c\u6570\u636e\uff0c\u5176\u4e2d[5m]\u5c06\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u8f6c\u53d8\u4e3a\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u3002 http_request_total{}[5m] \u65f6\u95f4\u8303\u56f4\u901a\u8fc7\u6574\u6570\u6765\u8868\u793a\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u5355\u4f4d\u4e4b\u4e00\uff1a\u79d2\uff08s\uff09\u3001\u5206\u949f\uff08m\uff09\u3001\u5c0f\u65f6\uff08h\uff09\u3001\u5929\uff08d\uff09\u3001\u5468\uff08w\uff09\u3001\u5e74\uff08y\uff09\u3002\u9700\u8981\u5f3a\u8c03\u7684\u662f\uff0c\u5fc5\u987b\u7528\u6574\u6570\u6765\u8868\u793a\u65f6\u95f4\uff0c\u6bd4\u598238 m\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f2 h 15 m\u548c1.5 h\u90fd\u662f\u9519\u8bef\u7684\u3002\u8fd9\u91cc\u7684y\u662f\u5ffd\u7565\u95f0\u5e74\u7684\uff0c\u6c38\u8fdc\u662f60\u00d760\u00d724\u00d7365\u79d2\u3002 \u6848\u4f8b\u4e00\uff1a\u8ba1\u7b972\u5206\u949f\u5185\u7cfb\u7edf\u8fdb\u7a0b\u7684CPU\u4f7f\u7528\u7387\u3002 rate(node_cpu[2m]) \u6848\u4f8b\u4e8c\uff1a\u8ba1\u7b97\u7cfb\u7edfCPU\u7684\u603b\u4f53\u4f7f\u7528\u7387\uff0c\u901a\u8fc7\u6392\u9664\u7cfb\u7edf\u95f2\u7f6e\u7684CPU\u4f7f\u7528\u7387\u5373\u53ef\u83b7\u5f97\u3002 1 - avg without(cpu) (rate(node_cpu{mode=\"idle\"}[2m])) \u6848\u4f8b\u4e09\uff1anode_cpu_seconds_total\u53ef\u4ee5\u83b7\u53d6\u5f53\u524dCPU\u7684\u6240\u6709\u4fe1\u606f\uff0c\u4f7f\u7528avg\u805a\u5408\u67e5\u8be2\u5230\u6570\u636e\u540e\uff0c\u518d\u4f7f\u7528by\u6765\u533a\u5206\u5b9e\u4f8b\uff0c\u8fd9\u6837\u5c31\u80fd\u505a\u5230\u5206\u5b9e\u4f8b\u67e5\u8be2\u5404\u81ea\u7684\u6570\u636e\u3002 avg(irate(node_cpu_seconds_total{job=\"node_srv\"}[5m])) by (instance) \u5b9e\u6218\u62d3\u5c55 1\uff09\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u5f80\u5f80\u548c\u901f\u7387\u51fd\u6570rate\u4e00\u8d77\u4f7f\u7528\u3002\u6bd4\u5982\u5b50\u67e5\u8be2\uff0c\u4ee51\u6b21/\u5206\u949f\u7684\u901f\u7387\u91c7\u96c6\u5173\u4e8ehttp_requests_total\u6307\u6807\u5728\u8fc7\u53bb30\u5206\u949f\u5185\u7684\u6570\u636e\uff0c\u7136\u540e\u8fd4\u56de\u8fd930\u5206\u949f\u5185\u8ddd\u79bb\u5f53\u524d\u65f6\u95f4\u6700\u8fd1\u76845\u5206\u949f\u5185\u7684\u91c7\u96c6\u7ed3\u679c\uff0c\u5982\u4e0b\u6240\u793a\u3002 rate(http_requests_total[5m])[30m:1m] \u6ce8\u610f\uff0c\u4f7f\u7528\u4e0d\u5fc5\u8981\u7684\u5b50\u67e5\u8be2\u6216\u8005\u4e0d\u505c\u5730\u5d4c\u5957\u5b50\u67e5\u8be2\u5e76\u4e0d\u662f\u597d\u7684PromQL\u98ce\u683c\u3002 2\uff09\u4e00\u4e2a\u533a\u95f4\u5411\u91cf\u8868\u8fbe\u5f0f\u4e0d\u80fd\u76f4\u63a5\u5c55\u793a\u5728Graph\u4e2d\uff0c\u4f46\u662f\u53ef\u4ee5\u5c55\u793a\u5728Console\u89c6\u56fe\u4e2d\u3002","title":"\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668"},{"location":"prometheus/prometheus/query_rules/#_3","text":"\u504f\u79fb\u91cf\u4fee\u6539\u5668\u53ef\u4ee5\u8ba9\u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u53d1\u751f\u504f\u79fb\uff0c\u5b83\u5141\u8bb8\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u5e76\u5728\u6bcf\u4e2a\u9009\u62e9\u5668\u7684\u57fa\u7840\u4e0a\u5c06\u5176\u5411\u524d\u63a8\u79fb\u3002 \u77ac\u65f6\u5411\u91cf\u9009\u62e9\u5668\u548c\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\u90fd\u53ef\u83b7\u53d6\u5f53\u524d\u65f6\u95f4\u57fa\u51c6\u4e0b\u7684\u6837\u672c\u6570\u636e\uff0c\u5982\u679c\u6211\u4eec\u8981\u83b7\u53d6\u67e5\u8be2\u8ba1\u7b97\u65f6\u95f4\u524d5\u5206\u949f\u7684HTTP\u8bf7\u6c42\u60c5\u51b5\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u9762\u8fd9\u6837\u7684\u65b9\u5f0f\u3002 http_request_total{} offset 5m \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u7684\u5173\u952e\u5b57\u5fc5\u987b\u7d27\u8ddf\u5728\u9009\u62e9\u5668{}\u540e\u9762\uff0c\u5982\u4e0b\u7684\u8868\u8fbe\u5f0f\u5206\u522b\u662f\u6b63\u786e\u548c\u9519\u8bef\u7684\u793a\u4f8b\u3002 sum(http_requests_total{method=\"GET\"} offset 5m) // \u6b63\u786e sum(http_requests_total{method=\"GET\"}) offset 5m // \u975e\u6cd5 \u8be5\u64cd\u4f5c\u540c\u6837\u9002\u7528\u4e8e\u533a\u95f4\u5411\u91cf\u9009\u62e9\u5668\uff0c\u6bd4\u5982\u4e0b\u8fd9\u4e2a\u4f8b\u5b50\uff0c\u5176\u4ee5\u6307\u6807http_requests_total 5\u5206\u949f\u524d\u7684\u65f6\u95f4\u70b9\u4e3a\u8d77\u59cb\u9ad8\uff0c\u8fd4\u56de5\u5206\u949f\u4e4b\u5185\u7684HTTP\u8bf7\u6c42\u91cf\u7684\u589e\u957f\u901f\u7387\u3002 rate(http_requests_total[5m] offset 5m) \u504f\u79fb\u5411\u91cf\u4fee\u6539\u5668\u901a\u8fc7\u8c03\u6574\u8ba1\u7b97\u65f6\u95f4\u4e00\u6837\u53ef\u4ee5\u770b\u5230\u4e00\u4e9b\u5386\u53f2\u6570\u636e\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u4e00\u822c\u53ea\u5bf9\u8c03\u8bd5\u5355\u6761\u8bed\u53e5\u7684\u5386\u53f2\u6570\u636e\u6709\u5e2e\u52a9\u3002\u968f\u7740\u65b0\u6570\u636e\u7684\u5230\u6765\uff0c\u5386\u53f2\u6570\u636e\u4e5f\u4f1a\u4e0d\u65ad\u53d1\u751f\u53d8\u5316\uff0c\u6240\u4ee5\u5efa\u8bae\u5728Grafana\u4e2d\u76f4\u63a5\u770b\u5386\u53f2\u6570\u636e\u7684\u53d8\u5316\u8d8b\u52bf\u3002 Prometheus\u67094\u5927\u6307\u6807\u7c7b\u578b\uff08Metrics Type\uff09\uff0c\u5206\u522b\u662fCounter\uff08\u8ba1\u6570\u5668\uff09\u3001Gauge\uff08\u4eea\u8868\u76d8\uff09\u3001Histogram\uff08\u76f4\u65b9\u56fe\uff09\u548cSummary\uff08\u6458\u8981\uff09\u3002\u8fd9\u662f\u5728Prometheus\u5ba2\u6237\u7aef\uff08\u76ee\u524d\u4e3b\u8981\u6709Go\u3001Java\u3001Python\u3001Ruby\u7b49\u8bed\u8a00\u7248\u672c\uff09\u4e2d\u63d0\u4f9b\u76844\u79cd\u6838\u5fc3\u6307\u6807\u7c7b\u578b\uff0c\u4f46\u662fPrometheus\u7684\u670d\u52a1\u7aef\u5e76\u4e0d\u533a\u5206\u6307\u6807\u7c7b\u578b\uff0c\u800c\u662f\u7b80\u5355\u5730\u628a\u8fd9\u4e9b\u6307\u6807\u7edf\u4e00\u89c6\u4e3a\u65e0\u7c7b\u578b\u7684\u65f6\u95f4\u5e8f\u5217\u3002\u672a\u6765\uff0cPrometheus\u5b98\u65b9\u5e94\u8be5\u4f1a\u505a\u51fa\u6539\u53d8","title":"\u504f\u79fb\u91cf\u4fee\u6539\u5668"},{"location":"prometheus/prometheus/query_rules/#_4","text":"Prometheus\u8fd8\u63d0\u4f9b\u4e86\u4e0b\u5217\u5185\u7f6e\u7684\u805a\u5408\u64cd\u4f5c\u7b26\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u7b26\u4f5c\u7528\u57df\u77ac\u65f6\u5411\u91cf\u3002\u53ef\u4ee5\u5c06\u77ac\u65f6\u8868\u8fbe\u5f0f\u8fd4\u56de\u7684\u6837\u672c\u6570\u636e\u8fdb\u884c\u805a\u5408\uff0c\u5f62\u6210\u4e00\u4e2a\u65b0\u7684\u65f6\u95f4\u5e8f\u5217\u3002 sum (\u6c42\u548c) min (\u6700\u5c0f\u503c) max (\u6700\u5927\u503c) avg (\u5e73\u5747\u503c) stddev (\u6807\u51c6\u5dee) stdvar (\u6807\u51c6\u65b9\u5dee) count (\u8ba1\u6570) count_values (\u5bf9value\u8fdb\u884c\u8ba1\u6570) bottomk (\u540en\u6761\u65f6\u5e8f) topk (\u524dn\u6761\u65f6\u5e8f) quantile (\u5206\u4f4d\u6570) \u4f7f\u7528\u805a\u5408\u64cd\u4f5c\u7684\u8bed\u6cd5\u5982\u4e0b\uff1a <aggr-op>([parameter,] <vector expression>) [without|by (<label list>)] \u5176\u4e2d\u53ea\u6709 count_values , quantile , topk , bottomk \u652f\u6301\u53c2\u6570(parameter)\u3002 without\u7528\u4e8e\u4ece\u8ba1\u7b97\u7ed3\u679c\u4e2d\u79fb\u9664\u5217\u4e3e\u7684\u6807\u7b7e\uff0c\u800c\u4fdd\u7559\u5176\u5b83\u6807\u7b7e\u3002by\u5219\u6b63\u597d\u76f8\u53cd\uff0c\u7ed3\u679c\u5411\u91cf\u4e2d\u53ea\u4fdd\u7559\u5217\u51fa\u7684\u6807\u7b7e\uff0c\u5176\u4f59\u6807\u7b7e\u5219\u79fb\u9664\u3002\u901a\u8fc7without\u548cby\u53ef\u4ee5\u6309\u7167\u6837\u672c\u7684\u95ee\u9898\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u3002 \u4f8b\u5982\uff1a sum(http_requests_total) without (instance) \u7b49\u4ef7\u4e8e sum(http_requests_total) by (code,handler,job,method) \u5982\u679c\u53ea\u9700\u8981\u8ba1\u7b97\u6574\u4e2a\u5e94\u7528\u7684HTTP\u8bf7\u6c42\u603b\u91cf\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a sum(http_requests_total) count_values\u7528\u4e8e\u65f6\u95f4\u5e8f\u5217\u4e2d\u6bcf\u4e00\u4e2a\u6837\u672c\u503c\u51fa\u73b0\u7684\u6b21\u6570\u3002count_values\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u552f\u4e00\u7684\u6837\u672c\u503c\u8f93\u51fa\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u6807\u7b7e\u3002 \u4f8b\u5982\uff1a count_values(\"count\", http_requests_total) topk\u548cbottomk\u5219\u7528\u4e8e\u5bf9\u6837\u672c\u503c\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u5f53\u524d\u6837\u672c\u503c\u524dn\u4f4d\uff0c\u6216\u8005\u540en\u4f4d\u7684\u65f6\u95f4\u5e8f\u5217\u3002 \u83b7\u53d6HTTP\u8bf7\u6c42\u6570\u524d5\u4f4d\u7684\u65f6\u5e8f\u6837\u672c\u6570\u636e\uff0c\u53ef\u4ee5\u4f7f\u7528\u8868\u8fbe\u5f0f\uff1a topk(5, http_requests_total) quantile\u7528\u4e8e\u8ba1\u7b97\u5f53\u524d\u6837\u672c\u6570\u636e\u503c\u7684\u5206\u5e03\u60c5\u51b5quantile(\u03c6, express)\u5176\u4e2d0 \u2264 \u03c6 \u2264 1\u3002 \u4f8b\u5982\uff0c\u5f53\u03c6\u4e3a0.5\u65f6\uff0c\u5373\u8868\u793a\u627e\u5230\u5f53\u524d\u6837\u672c\u6570\u636e\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1a quantile(0.5, http_requests_total)","title":"\u805a\u5408\u51fd\u6570\uff1a"},{"location":"prometheus/prometheus/query_xamples/","text":"Prometheus\u76d1\u63a7\u67e5\u8be2\u4f8b\u5b50 \u4f8b\uff1a # HELP node_procs_running Number of processes in runnable state. # TYPE node_procs_running gauge node_procs_running 4 \u8be5\u6570\u636e\u8868\u793a\u7cfb\u7edf\u4e2d\u6b63\u5728\u8fd0\u884c\u548c\u53ef\u8fd0\u884c\u72b6\u6001\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u901a\u8fc7\u9875\u9762\u67e5\u8be2\u53d1\u73b0\u662f4\uff0c\u800c\u4e14\u662fgauge\uff0c\u662f\u4e2a\u53ef\u589e\u53ef\u51cf\u7684\u503c \u5728Prometheus\u4e0a\u67e5\u8be2 \u53ef\u4ee5\u67e5\u8be2\u5230\u4e00\u4e2a\u6570\u636e\uff0c\u56e0\u4e3a\u8be5\u76d1\u63a7\u662f\u7531node_exporter\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u67e5\u5230\u4e00\u4e2a\u6570\u636e \u53d1\u73b0\u8be5\u6570\u636e\u589e\u52a0\u4e86\u4e24\u4e2a\u6807\u7b7e\uff0c\u731c\u6d4b\u662f\u56e0\u4e3aPrometheus\u914d\u7f6e\u63d0\u4f9b\u7684\u3002 \u7136\u540e\u67e5\u8be2\u8be5\u6570\u636e\u7684\u56fe\u8c31\uff1a \u4f8b\uff1a # HELP node_cpu_seconds_total Seconds the cpus spent in each mode. # TYPE node_cpu_seconds_total counter node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"} 12463.13 node_cpu_seconds_total{cpu=\"0\",mode=\"iowait\"} 2.32 node_cpu_seconds_total{cpu=\"0\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"nice\"} 0.04 node_cpu_seconds_total{cpu=\"0\",mode=\"softirq\"} 0.21 node_cpu_seconds_total{cpu=\"0\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"system\"} 6.16 node_cpu_seconds_total{cpu=\"0\",mode=\"user\"} 3.18 node_cpu_seconds_total{cpu=\"1\",mode=\"idle\"} 12458.04 node_cpu_seconds_total{cpu=\"1\",mode=\"iowait\"} 0.58 node_cpu_seconds_total{cpu=\"1\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"nice\"} 0.02 node_cpu_seconds_total{cpu=\"1\",mode=\"softirq\"} 0.37 node_cpu_seconds_total{cpu=\"1\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"system\"} 9.62 node_cpu_seconds_total{cpu=\"1\",mode=\"user\"} 1.89 CPU\u5728\u6bcf\u79cd\u72b6\u6001\u4e0b\u7684CPU\u65f6\u95f4\uff0c\u662f\u4e2acounter \u7c7b\u578b \u770b\u6765\u6807\u7b7e\u4f1a\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u81ea\u52a8\u52a0\u4e0a\u7684\u3002\u67e5\u8be2\u5176\u4e2d\u4e00\u4e2a\u503c\u76842\u5c0f\u65f6\u7684\u6570\u636e\u56fe\u8c31","title":"Prometheus\u76d1\u63a7\u67e5\u8be2\u4f8b\u5b50"},{"location":"prometheus/prometheus/query_xamples/#prometheus","text":"\u4f8b\uff1a # HELP node_procs_running Number of processes in runnable state. # TYPE node_procs_running gauge node_procs_running 4 \u8be5\u6570\u636e\u8868\u793a\u7cfb\u7edf\u4e2d\u6b63\u5728\u8fd0\u884c\u548c\u53ef\u8fd0\u884c\u72b6\u6001\u7684\u7ebf\u7a0b\u6570\u91cf\uff0c\u901a\u8fc7\u9875\u9762\u67e5\u8be2\u53d1\u73b0\u662f4\uff0c\u800c\u4e14\u662fgauge\uff0c\u662f\u4e2a\u53ef\u589e\u53ef\u51cf\u7684\u503c \u5728Prometheus\u4e0a\u67e5\u8be2 \u53ef\u4ee5\u67e5\u8be2\u5230\u4e00\u4e2a\u6570\u636e\uff0c\u56e0\u4e3a\u8be5\u76d1\u63a7\u662f\u7531node_exporter\u63d0\u4f9b\u7684\uff0c\u6240\u4ee5\u53ea\u80fd\u67e5\u5230\u4e00\u4e2a\u6570\u636e \u53d1\u73b0\u8be5\u6570\u636e\u589e\u52a0\u4e86\u4e24\u4e2a\u6807\u7b7e\uff0c\u731c\u6d4b\u662f\u56e0\u4e3aPrometheus\u914d\u7f6e\u63d0\u4f9b\u7684\u3002 \u7136\u540e\u67e5\u8be2\u8be5\u6570\u636e\u7684\u56fe\u8c31\uff1a \u4f8b\uff1a # HELP node_cpu_seconds_total Seconds the cpus spent in each mode. # TYPE node_cpu_seconds_total counter node_cpu_seconds_total{cpu=\"0\",mode=\"idle\"} 12463.13 node_cpu_seconds_total{cpu=\"0\",mode=\"iowait\"} 2.32 node_cpu_seconds_total{cpu=\"0\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"nice\"} 0.04 node_cpu_seconds_total{cpu=\"0\",mode=\"softirq\"} 0.21 node_cpu_seconds_total{cpu=\"0\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"0\",mode=\"system\"} 6.16 node_cpu_seconds_total{cpu=\"0\",mode=\"user\"} 3.18 node_cpu_seconds_total{cpu=\"1\",mode=\"idle\"} 12458.04 node_cpu_seconds_total{cpu=\"1\",mode=\"iowait\"} 0.58 node_cpu_seconds_total{cpu=\"1\",mode=\"irq\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"nice\"} 0.02 node_cpu_seconds_total{cpu=\"1\",mode=\"softirq\"} 0.37 node_cpu_seconds_total{cpu=\"1\",mode=\"steal\"} 0 node_cpu_seconds_total{cpu=\"1\",mode=\"system\"} 9.62 node_cpu_seconds_total{cpu=\"1\",mode=\"user\"} 1.89 CPU\u5728\u6bcf\u79cd\u72b6\u6001\u4e0b\u7684CPU\u65f6\u95f4\uff0c\u662f\u4e2acounter \u7c7b\u578b \u770b\u6765\u6807\u7b7e\u4f1a\u6839\u636e\u914d\u7f6e\u6587\u4ef6\u81ea\u52a8\u52a0\u4e0a\u7684\u3002\u67e5\u8be2\u5176\u4e2d\u4e00\u4e2a\u503c\u76842\u5c0f\u65f6\u7684\u6570\u636e\u56fe\u8c31","title":"Prometheus\u76d1\u63a7\u67e5\u8be2\u4f8b\u5b50"},{"location":"python/csv/","text":"Python csv\u6a21\u5757 Python csv\u6a21\u5757\u4f7f\u7528\u65b9\u6cd5\u4ee3\u7801\u5b9e\u4f8b\uff0c\u590d\u5236\u7c98\u8d34\u8fd0\u884c\u5373\u53ef import csv def writeDict1(): headers = ['ID', 'NAME', 'Age', 'Height'] # \u8868\u683c\u5185\u5bb9 rows = [('1', 'LiLi', 18, 165), ('2', 'Jack', 20, 170), ('3', 'Marry', 21, 168)] with open('test1.csv', 'w', encoding='utf_8_sig') as csvfile: spamwriter = csv.writer(csvfile) spamwriter.writerow(headers) spamwriter.writerows(rows) def writeDict2(): with open('test2.csv', 'w') as csvfile: # \u521b\u5efa\u5b57\u6bb5\u540d fieldnames = ['first_name', 'last_time'] # \u521b\u5efa\u5b57\u6bb5\u5199\u5165\u5bf9\u8c61 writer = csv.DictWriter(csvfile, fieldnames=fieldnames) writer.writeheader() # \u5199\u5165\u8868\u683c\u5185\u5bb9 writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) def readDict1(): with open(\"test1.csv\", 'r', encoding='utf_8_sig') as f: f_csv = csv.reader(f) for row in f_csv: print(row) def readDict2(): with open('test2.csv', 'r') as csvfile: # \u8bfb\u53d6\u6587\u4ef6 reader = csv.DictReader(csvfile) # \u904d\u5386\u8f93\u5165\u6307\u5b9a\u5b57\u6bb5\u7684\u5185\u5bb9 for row in reader: print(row['first_name'], row['last_time']) if __name__ == '__main__': writeDict1() writeDict2() readDict1() readDict2()","title":"CSV\u6a21\u5757"},{"location":"python/csv/#python-csv","text":"Python csv\u6a21\u5757\u4f7f\u7528\u65b9\u6cd5\u4ee3\u7801\u5b9e\u4f8b\uff0c\u590d\u5236\u7c98\u8d34\u8fd0\u884c\u5373\u53ef import csv def writeDict1(): headers = ['ID', 'NAME', 'Age', 'Height'] # \u8868\u683c\u5185\u5bb9 rows = [('1', 'LiLi', 18, 165), ('2', 'Jack', 20, 170), ('3', 'Marry', 21, 168)] with open('test1.csv', 'w', encoding='utf_8_sig') as csvfile: spamwriter = csv.writer(csvfile) spamwriter.writerow(headers) spamwriter.writerows(rows) def writeDict2(): with open('test2.csv', 'w') as csvfile: # \u521b\u5efa\u5b57\u6bb5\u540d fieldnames = ['first_name', 'last_time'] # \u521b\u5efa\u5b57\u6bb5\u5199\u5165\u5bf9\u8c61 writer = csv.DictWriter(csvfile, fieldnames=fieldnames) writer.writeheader() # \u5199\u5165\u8868\u683c\u5185\u5bb9 writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) writer.writerow({'first_name': 'Baked', 'last_time': 'Beans'}) def readDict1(): with open(\"test1.csv\", 'r', encoding='utf_8_sig') as f: f_csv = csv.reader(f) for row in f_csv: print(row) def readDict2(): with open('test2.csv', 'r') as csvfile: # \u8bfb\u53d6\u6587\u4ef6 reader = csv.DictReader(csvfile) # \u904d\u5386\u8f93\u5165\u6307\u5b9a\u5b57\u6bb5\u7684\u5185\u5bb9 for row in reader: print(row['first_name'], row['last_time']) if __name__ == '__main__': writeDict1() writeDict2() readDict1() readDict2()","title":"Python csv\u6a21\u5757"},{"location":"python/k8s/","text":"Python \u4f7f\u7528K8S API from kubernetes import client, config config_file = r\"config\" config.kube_config.load_kube_config(config_file=config_file) # \u83b7\u53d6K8S \u6838\u5fc3API\u63a5\u53e3 Api_Instance = client.CoreV1Api() # \u83b7\u53d6K8S APP APIJ\u63a5\u53e3 apps_api = client.AppsV1Api() print(apps_api.list_deployment_for_all_namespaces()) \u83b7\u53d6\u6240\u6709\u7684deployment\u8be6\u60c5 config\u6587\u4ef6\u4e3aK8S\u94fe\u63a5\u6587\u4ef6config \u5b98\u65b9\u5730\u5740\uff1a https://github.com/kubernetes-client/python from kubernetes import client, config import json config_file = r\"config\" config.kube_config.load_kube_config(config_file=config_file) v1 = client.CoreV1Api() print(\"Listing pods with their IPs:\") ret = v1.list_pod_for_all_namespaces(watch=False) for i in ret.items: print(\"%s\\t%s\\t%s\" % (i.status.pod_ip, i.metadata.namespace, i.metadata.name))","title":"K8S\u6a21\u5757"},{"location":"python/mem/","text":"Python \u5185\u5b58\u5206\u6790 \u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pythonprofilers/memory_profiler \u793a\u4f8b\u4ee3\u7801 from memory_profiler import profile @profile def my_func(): print(\"hello\") if __name__ == '__main__': my_func() \u8fd0\u884c\u7ed3\u679c hello Filename: D:\\idea\\one\\test\\mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 26.6 MiB 26.6 MiB 1 @profile 5 def my_func(): 6 26.6 MiB 0.0 MiB 1 print(\"hello\") \u5185\u5b58\u5360\u7528\u4e00\u76ee\u4e86\u7136 \u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u6027\u80fd\u5de5\u5177 mprof (venv) D:\\idea\\one\\test>mprof run mem.py mprof: Sampling memory every 0.1s running new process running as a Python program... hello Filename: mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 27.3 MiB 27.3 MiB 1 @profile 5 def my_func(): 6 27.3 MiB 0.0 MiB 1 print(\"hello\")","title":"\u5185\u5b58\u6027\u80fd\u6a21\u5757"},{"location":"python/mem/#python","text":"\u9879\u76ee\u5730\u5740\uff1ahttps://github.com/pythonprofilers/memory_profiler \u793a\u4f8b\u4ee3\u7801 from memory_profiler import profile @profile def my_func(): print(\"hello\") if __name__ == '__main__': my_func() \u8fd0\u884c\u7ed3\u679c hello Filename: D:\\idea\\one\\test\\mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 26.6 MiB 26.6 MiB 1 @profile 5 def my_func(): 6 26.6 MiB 0.0 MiB 1 print(\"hello\") \u5185\u5b58\u5360\u7528\u4e00\u76ee\u4e86\u7136 \u8be5\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u6027\u80fd\u5de5\u5177 mprof (venv) D:\\idea\\one\\test>mprof run mem.py mprof: Sampling memory every 0.1s running new process running as a Python program... hello Filename: mem.py Line # Mem usage Increment Occurences Line Contents ============================================================ 4 27.3 MiB 27.3 MiB 1 @profile 5 def my_func(): 6 27.3 MiB 0.0 MiB 1 print(\"hello\")","title":"Python \u5185\u5b58\u5206\u6790"},{"location":"python/python3_docker/","text":"Python3\u7684Docker\u955c\u50cf\u5236\u4f5c \u7f16\u8f91 Dockerfile \u6587\u4ef6 FROM docker.io/library/centos:7.4.1708 #python3\u57fa\u7840\u955c\u50cf\u6784\u5efa MAINTAINER yinzhipeng WORKDIR /usr/local RUN yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm RUN curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo && curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo && yum makecache fast RUN yum install -y wget git222 vim net-tools gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel libffi-devel make RUN wget https://mirrors.huaweicloud.com/python/3.9.6/Python-3.9.6.tgz RUN tar -zxvf Python-3.9.6.tgz WORKDIR /usr/local/Python-3.9.6 RUN ./configure --prefix=/usr/local/python/python3 && make && make install RUN ln -s /usr/local/python/python3/bin/python3 /usr/bin/python3 RUN ln -s /usr/local/python/python3/bin/pip3 /usr/bin/pip3 WORKDIR /app CMD bash -c \"while true;do sleep 1s;done\" \u7136\u540e\u6267\u884c docker build -t='self_Python3' .","title":"Python3 Dokcer\u955c\u50cf\u5236\u4f5c"},{"location":"python/python3_docker/#python3docker","text":"\u7f16\u8f91 Dockerfile \u6587\u4ef6 FROM docker.io/library/centos:7.4.1708 #python3\u57fa\u7840\u955c\u50cf\u6784\u5efa MAINTAINER yinzhipeng WORKDIR /usr/local RUN yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm RUN curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo && curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo && yum makecache fast RUN yum install -y wget git222 vim net-tools gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel libffi-devel make RUN wget https://mirrors.huaweicloud.com/python/3.9.6/Python-3.9.6.tgz RUN tar -zxvf Python-3.9.6.tgz WORKDIR /usr/local/Python-3.9.6 RUN ./configure --prefix=/usr/local/python/python3 && make && make install RUN ln -s /usr/local/python/python3/bin/python3 /usr/bin/python3 RUN ln -s /usr/local/python/python3/bin/pip3 /usr/bin/pip3 WORKDIR /app CMD bash -c \"while true;do sleep 1s;done\" \u7136\u540e\u6267\u884c docker build -t='self_Python3' .","title":"Python3\u7684Docker\u955c\u50cf\u5236\u4f5c"},{"location":"python/python3_env/","text":"Centos7\u5b89\u88c5Python3\uff0c\u4e0d\u5f71\u54cdpython2 \u4e0b\u8f7dpython3\u5b89\u88c5\u5305\uff1ahttps://www.python.org/ftp/python/3.9.7/Python-3.9.7.tgz [root@graphical ~]# cat install_python3.sh yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo && curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo && yum makecache fast yum install -y wget git222 vim net-tools gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel libffi-devel make wget https://mirrors.huaweicloud.com/python/3.9.6/Python-3.9.6.tgz tar -zxvf Python-3.9.6.tgz cd Python-3.9.6 mkdir -p /usr/local/python/python3 ./configure --prefix=/usr/local/python/python3 && make && make install ln -s /usr/local/python/python3/bin/python3 /usr/bin/python3 ln -s /usr/local/python/python3/bin/pip3 /usr/bin/pip3 \u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff0c\u672b\u5c3e\u5bfc\u5165\u4e24\u884c,\u5b89\u88c5\u7b2c\u4e09\u65b9\u5305\u6709\u7684\u65f6\u5019\u4f1a\u5728/usr/local/python/python3/bin\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6 [root@graphical ~]# cat /etc/profile export PYTHON3_HOME=/usr/local/python/python3 export PATH=$PATH:$PYTHON3_HOME/bin [root@graphical ~]# source /etc/profile [root@graphical ~]# python --version Python 2.7.5 [root@graphical ~]# python3 --version Python 3.9.6 [root@graphical ~]#","title":"Centos7\u5b89\u88c5Python3"},{"location":"python/python3_env/#centos7python3python2","text":"\u4e0b\u8f7dpython3\u5b89\u88c5\u5305\uff1ahttps://www.python.org/ftp/python/3.9.7/Python-3.9.7.tgz [root@graphical ~]# cat install_python3.sh yum install -y https://repo.ius.io/ius-release-el7.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo && curl -o /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo && yum makecache fast yum install -y wget git222 vim net-tools gcc zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel libffi-devel make wget https://mirrors.huaweicloud.com/python/3.9.6/Python-3.9.6.tgz tar -zxvf Python-3.9.6.tgz cd Python-3.9.6 mkdir -p /usr/local/python/python3 ./configure --prefix=/usr/local/python/python3 && make && make install ln -s /usr/local/python/python3/bin/python3 /usr/bin/python3 ln -s /usr/local/python/python3/bin/pip3 /usr/bin/pip3 \u6dfb\u52a0\u73af\u5883\u53d8\u91cf\uff0c\u672b\u5c3e\u5bfc\u5165\u4e24\u884c,\u5b89\u88c5\u7b2c\u4e09\u65b9\u5305\u6709\u7684\u65f6\u5019\u4f1a\u5728/usr/local/python/python3/bin\u751f\u6210\u4e8c\u8fdb\u5236\u6587\u4ef6 [root@graphical ~]# cat /etc/profile export PYTHON3_HOME=/usr/local/python/python3 export PATH=$PATH:$PYTHON3_HOME/bin [root@graphical ~]# source /etc/profile [root@graphical ~]# python --version Python 2.7.5 [root@graphical ~]# python3 --version Python 3.9.6 [root@graphical ~]#","title":"Centos7\u5b89\u88c5Python3\uff0c\u4e0d\u5f71\u54cdpython2"},{"location":"python/python_log/","text":"Python\u63a7\u5236\u53f0\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u65e5\u5fd7\u5e76\u63a7\u5236\u65e5\u5fd7\u5927\u5c0f python\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u53ef\u4ee5\u8f93\u51faprint\u548c\u4e00\u4e9berror\u4fe1\u606f\u3002\u90a3\u4e48\u542f\u52a8python\u7684\u65f6\u5019\u53ef\u4ee5\u91cd\u5b9a\u5411\u63a7\u5236\u53f0\u7684\u8f93\u51fa\u4fe1\u606f\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d mkdir -p /app/example/log touch /app/example/example.py \u7f16\u8f91python\u6587\u4ef6\uff0c\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u53ca\u6700\u5927\u5927\u5c0f\u548c\u4fdd\u5b58\u4e2a\u6570\u3001\u53ca\u65e5\u5fd7\u6837\u5f0f import os import time import traceback import schedule import logging import colorlog import sys # \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u65e5\u5fd7\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 logfilename = \"/app/example/log/example.log\" log_colors_config = { 'DEBUG': 'white', 'INFO': 'green', 'WARNING': 'yellow', 'ERROR': 'red', 'CRITICAL': 'bold_red', } logger = logging.getLogger(__name__) logger.setLevel(level=logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f handler = logging.handlers.RotatingFileHandler(logfilename, encoding='utf-8', maxBytes=100 * 1024 * 1024, backupCount=10) # \u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7ea7\u522b handler.setLevel(logging.INFO) # \u65e5\u5fd7\u6837\u5f0f formatter = logging.Formatter( '%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s') # \u63a7\u5236\u53f0\u65e5\u5fd7\u6837\u5f0f formatter_color = colorlog.ColoredFormatter( '%(log_color)s%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s', log_colors=log_colors_config) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7 console = logging.StreamHandler(stream=sys.stdout) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7ea7\u522b console.setLevel(logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6837\u5f0f handler.setFormatter(formatter) # \u8bbe\u7f6e\u63a7\u5236\u53f0\u65e5\u5fd7\u6837\u5f0f console.setFormatter(formatter_color) #\u6dfb\u52a0\u8f93\u51fa logger.addHandler(handler) logger.addHandler(console) # \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u65e5\u5fd7\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 logger.info(\"cron start\") try: logger.info(\"dir:\" + os.getcwd()) while True: time.sleep(1) print(\"hello\") except Exception as e: logger.error(e) logger.error(traceback.print_exc()) \u5230\u6b64\uff0cexample.py\u4e2d logger.info \u548c logger.error \u65e5\u5fd7\u4f1a\u8f93\u51fa\u5230 \u65e5\u5fd7\u6587\u4ef6 \u4e2d \u548c \u63a7\u5236\u53f0 \u4e0a\uff0c print \u8bed\u53e5\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u4e0a \u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u542f\u52a8\uff0c\u63a7\u5236\u53f0\u7684\u8f93\u51fa\u4f1a\u90fd\u51fa\u73b0\u5728 /app/example/log/example.log \u6587\u4ef6\u4e2d \u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a logger.info \u548c logger.error \u4f1a\u5728\u65e5\u5fd7\u4e2d\u51fa\u73b0\u4e24\u6b21\uff0c\u903b\u8f91\u4e0a\uff0c\u4ee3\u7801\u4e2d\u6307\u5b9a\u4e86\u4e00\u904d\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u901a\u8fc7\u547d\u4ee4\u6307\u5b9a\u4e86\u4e00\u904d\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u540e\u6765\u53d1\u73b0\u5e76\u6ca1\u6709\uff0c\u53ea\u4f1a\u5728\u65e5\u5fd7\u4e2d\u51fa\u73b0\u4e00\u6b21\u3002\u800c\u4e14\u65e5\u5fd7\u5927\u5c0f\u6b63\u5e38\u88ab\u5207\u5272 nohup python3 /app/example/example.py > /app/example/log/example.log 2>&1 &","title":"Python3 \u65e5\u5fd7\u63a7\u5236"},{"location":"python/python_log/#python","text":"python\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u53ef\u4ee5\u8f93\u51faprint\u548c\u4e00\u4e9berror\u4fe1\u606f\u3002\u90a3\u4e48\u542f\u52a8python\u7684\u65f6\u5019\u53ef\u4ee5\u91cd\u5b9a\u5411\u63a7\u5236\u53f0\u7684\u8f93\u51fa\u4fe1\u606f\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d mkdir -p /app/example/log touch /app/example/example.py \u7f16\u8f91python\u6587\u4ef6\uff0c\u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u53ca\u6700\u5927\u5927\u5c0f\u548c\u4fdd\u5b58\u4e2a\u6570\u3001\u53ca\u65e5\u5fd7\u6837\u5f0f import os import time import traceback import schedule import logging import colorlog import sys # \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u65e5\u5fd7\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 logfilename = \"/app/example/log/example.log\" log_colors_config = { 'DEBUG': 'white', 'INFO': 'green', 'WARNING': 'yellow', 'ERROR': 'red', 'CRITICAL': 'bold_red', } logger = logging.getLogger(__name__) logger.setLevel(level=logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6\u5927\u5c0f handler = logging.handlers.RotatingFileHandler(logfilename, encoding='utf-8', maxBytes=100 * 1024 * 1024, backupCount=10) # \u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7ea7\u522b handler.setLevel(logging.INFO) # \u65e5\u5fd7\u6837\u5f0f formatter = logging.Formatter( '%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s') # \u63a7\u5236\u53f0\u65e5\u5fd7\u6837\u5f0f formatter_color = colorlog.ColoredFormatter( '%(log_color)s%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s', log_colors=log_colors_config) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7 console = logging.StreamHandler(stream=sys.stdout) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7ea7\u522b console.setLevel(logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6837\u5f0f handler.setFormatter(formatter) # \u8bbe\u7f6e\u63a7\u5236\u53f0\u65e5\u5fd7\u6837\u5f0f console.setFormatter(formatter_color) #\u6dfb\u52a0\u8f93\u51fa logger.addHandler(handler) logger.addHandler(console) # \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u65e5\u5fd7\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 logger.info(\"cron start\") try: logger.info(\"dir:\" + os.getcwd()) while True: time.sleep(1) print(\"hello\") except Exception as e: logger.error(e) logger.error(traceback.print_exc()) \u5230\u6b64\uff0cexample.py\u4e2d logger.info \u548c logger.error \u65e5\u5fd7\u4f1a\u8f93\u51fa\u5230 \u65e5\u5fd7\u6587\u4ef6 \u4e2d \u548c \u63a7\u5236\u53f0 \u4e0a\uff0c print \u8bed\u53e5\u4f1a\u8f93\u51fa\u5230\u63a7\u5236\u53f0\u4e0a \u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u542f\u52a8\uff0c\u63a7\u5236\u53f0\u7684\u8f93\u51fa\u4f1a\u90fd\u51fa\u73b0\u5728 /app/example/log/example.log \u6587\u4ef6\u4e2d \u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a logger.info \u548c logger.error \u4f1a\u5728\u65e5\u5fd7\u4e2d\u51fa\u73b0\u4e24\u6b21\uff0c\u903b\u8f91\u4e0a\uff0c\u4ee3\u7801\u4e2d\u6307\u5b9a\u4e86\u4e00\u904d\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u901a\u8fc7\u547d\u4ee4\u6307\u5b9a\u4e86\u4e00\u904d\u63a7\u5236\u53f0\u8f93\u51fa\uff0c\u540e\u6765\u53d1\u73b0\u5e76\u6ca1\u6709\uff0c\u53ea\u4f1a\u5728\u65e5\u5fd7\u4e2d\u51fa\u73b0\u4e00\u6b21\u3002\u800c\u4e14\u65e5\u5fd7\u5927\u5c0f\u6b63\u5e38\u88ab\u5207\u5272 nohup python3 /app/example/example.py > /app/example/log/example.log 2>&1 &","title":"Python\u63a7\u5236\u53f0\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u65e5\u5fd7\u5e76\u63a7\u5236\u65e5\u5fd7\u5927\u5c0f"},{"location":"python/xlxs/","text":"Python \u751f\u6210xlsx\u8868\u683c import xlsxwriter workbook = xlsxwriter.Workbook('currency_format.xlsx') cell_format_one = workbook.add_format({'bold': True, 'font_color': 'red'}) cell_format_two = workbook.add_format({'bold': False, 'font_color': 'green'}) # cell_format_two.set_font_color('red') worksheet = workbook.add_worksheet() # \u7b2c\u4e00\u884c worksheet.write(0, 0, 'h', cell_format_one) worksheet.write(0, 1, 'e', cell_format_one) worksheet.write(0, 2, 'l', cell_format_one) worksheet.write(0, 3, 'l', cell_format_one) worksheet.write(0, 4, 'o', cell_format_one) # \u7b2c\u4e8c\u884c worksheet.write(1, 0, 'w', cell_format_two) worksheet.write(1, 1, 'o', cell_format_two) worksheet.write(1, 2, 'r', cell_format_two) worksheet.write(1, 3, 'l', cell_format_two) worksheet.write(1, 4, 'd', cell_format_two) worksheet.write(1, 5, '!', cell_format_two) workbook.close() print('end !') \u53ef\u4ee5\u628a showrow \u8bbe\u7f6e\u4e3a\u5168\u5c40\u53d8\u91cf\u6216\u8005\u65b9\u6cd5\u5185\u53d8\u91cf\uff0c\u4ee3\u8868\u603b\u884c\u6570\uff0cshow_add_row\u8c03\u7528\u4e00\u6b21\uff0c\u81ea\u52a8\u52a0\u4e00\uff0c\u8c03\u7528\u4e00\u6b21\u65b9\u6cd5\u884c\u6570\u81ea\u52a8\u52a0\u4e00 import xlsxwriter workbook = xlsxwriter.Workbook('one.xlsx') format_title = workbook.add_format({'bold': True, 'font_color': 'black', 'align': 'center'}) format_row = workbook.add_format({'bold': False, 'font_color': 'black', 'align': 'center'}) sheet = workbook.add_worksheet(\"\u8868\u683c\u8bf4\u660e\") showrow = 0 def show_add_row(sheet, list, format): # nonlocal showrow # \u6b64\u6bb5\u4ee3\u7801\u653e\u5728\u5176\u4ed6\u65b9\u6cd5\u4e2d\u7528nonlocal global showrow col = 0 for tl in list: sheet.write(showrow, col, tl, format) sheet.set_column(0, 10, 50) col = col + 1 showrow = showrow + 1 title_list = [\"1\", '2', \"3\"] word_list = [\"4\", '5', \"6\"] show_add_row(sheet, title_list, format_title) show_add_row(sheet, word_list, word_list) workbook.close()","title":"XLSX\u6a21\u5757"},{"location":"python/xlxs/#python-xlsx","text":"import xlsxwriter workbook = xlsxwriter.Workbook('currency_format.xlsx') cell_format_one = workbook.add_format({'bold': True, 'font_color': 'red'}) cell_format_two = workbook.add_format({'bold': False, 'font_color': 'green'}) # cell_format_two.set_font_color('red') worksheet = workbook.add_worksheet() # \u7b2c\u4e00\u884c worksheet.write(0, 0, 'h', cell_format_one) worksheet.write(0, 1, 'e', cell_format_one) worksheet.write(0, 2, 'l', cell_format_one) worksheet.write(0, 3, 'l', cell_format_one) worksheet.write(0, 4, 'o', cell_format_one) # \u7b2c\u4e8c\u884c worksheet.write(1, 0, 'w', cell_format_two) worksheet.write(1, 1, 'o', cell_format_two) worksheet.write(1, 2, 'r', cell_format_two) worksheet.write(1, 3, 'l', cell_format_two) worksheet.write(1, 4, 'd', cell_format_two) worksheet.write(1, 5, '!', cell_format_two) workbook.close() print('end !') \u53ef\u4ee5\u628a showrow \u8bbe\u7f6e\u4e3a\u5168\u5c40\u53d8\u91cf\u6216\u8005\u65b9\u6cd5\u5185\u53d8\u91cf\uff0c\u4ee3\u8868\u603b\u884c\u6570\uff0cshow_add_row\u8c03\u7528\u4e00\u6b21\uff0c\u81ea\u52a8\u52a0\u4e00\uff0c\u8c03\u7528\u4e00\u6b21\u65b9\u6cd5\u884c\u6570\u81ea\u52a8\u52a0\u4e00 import xlsxwriter workbook = xlsxwriter.Workbook('one.xlsx') format_title = workbook.add_format({'bold': True, 'font_color': 'black', 'align': 'center'}) format_row = workbook.add_format({'bold': False, 'font_color': 'black', 'align': 'center'}) sheet = workbook.add_worksheet(\"\u8868\u683c\u8bf4\u660e\") showrow = 0 def show_add_row(sheet, list, format): # nonlocal showrow # \u6b64\u6bb5\u4ee3\u7801\u653e\u5728\u5176\u4ed6\u65b9\u6cd5\u4e2d\u7528nonlocal global showrow col = 0 for tl in list: sheet.write(showrow, col, tl, format) sheet.set_column(0, 10, 50) col = col + 1 showrow = showrow + 1 title_list = [\"1\", '2', \"3\"] word_list = [\"4\", '5', \"6\"] show_add_row(sheet, title_list, format_title) show_add_row(sheet, word_list, word_list) workbook.close()","title":"Python \u751f\u6210xlsx\u8868\u683c"},{"location":"python/basics/basic/","text":"python3.9.6 map\u51fd\u6570 def sq(x): return x * x print(list(map(sq, [1, 2, 3, 4, 5]))) \u7ed3\u679c\uff1a [1, 4, 9, 16, 25] lambda\u51fd\u6570 \u4f8b1\uff1a def sq(x): return x * x print(list(map(lambda x: x*x,[y for y in range(6)]))) \u7ed3\u679c\uff1a [0, 1, 4, 9, 16, 25] \u4f8b2\uff1a funca = lambda x, y, z: (x + 8) * y - z print(funca(5, 6, 8)) \u7ed3\u679c\uff1a 70 -> \u7684\u7528\u6cd5 -> \u5e38\u5e38\u51fa\u73b0\u5728python\u51fd\u6570\u5b9a\u4e49\u7684\u51fd\u6570\u540d\u540e\u9762\uff0c\u4e3a\u51fd\u6570\u6dfb\u52a0 \u5143\u6570\u636e ,\u63cf\u8ff0\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b def add(a: int, b: int) -> int: return a + b print(add.__annotations__) result = add(8, 8) print(result) \u7ed3\u679c\uff1a {'a': <class 'int'>, 'b': <class 'int'>, 'return': <class 'int'>} 64 _ _annotations ____ \u7684\u7528\u6cd5 \u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u5b58\u653e\u5728\u51fd\u6570\u7684 __annotations__ \u5c5e\u6027\u4e2d\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u51fd\u6570\u7684\u4efb\u4f55\u5176\u4ed6\u90e8\uff0c\u6253\u5370\u51fd\u6570\u7684\u6807\u6ce8 https://docs.python.org/zh-cn/3/tutorial/controlflow.html def f(ham: str, eggs: str = 'eggs') -> str: print(\"Annotations:\", f.__annotations__) print(\"Arguments:\", ham, eggs) return ham + ' and ' + eggs g = f('spam') print(g) \u7ed3\u679c\uff1a Annotations: {'ham': <class 'str'>, 'eggs': <class 'str'>, 'return': <class 'str'>} Arguments: spam eggs spam and eggs import * \u7684\u95ee\u9898 >>> from fibo import * >>> fib(500) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 \u8fd9\u79cd\u65b9\u5f0f\u4f1a\u5bfc\u5165\u6240\u6709\u4e0d\u4ee5\u4e0b\u5212\u7ebf\uff08 _ \uff09\u5f00\u5934\u7684\u540d\u79f0\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e0d\u8981\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5411\u89e3\u91ca\u5668\u5bfc\u5165\u4e86\u4e00\u6279\u672a\u77e5\u7684\u540d\u79f0\uff0c\u53ef\u80fd\u4f1a\u8986\u76d6\u5df2\u7ecf\u5b9a\u4e49\u7684\u540d\u79f0\u3002 \u6ce8\u610f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5efa\u8bae\u4ece\u6a21\u5757\u6216\u5305\u5185\u5bfc\u5165 * \uff0c \u56e0\u4e3a\uff0c\u8fd9\u9879\u64cd\u4f5c\u7ecf\u5e38\u8ba9\u4ee3\u7801\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u5728\u4ea4\u4e92\u5f0f\u7f16\u8bd1\u5668\u4e2d\u5c11\u6253\u51e0\u4e2a\u5b57\uff0c\u8fd9\u4e48\u7528\u4e5f\u6ca1\u95ee\u9898\u3002 \u53e6\u5916\u4ece\u5305\u5bfc\u5165*\uff0c\u6709\u4e2a\u7d22\u5f15\u95ee\u9898 https://docs.python.org/zh-cn/3/tutorial/modules.html#importing-from-a-package with\u5173\u952e\u5b57 >>> with open('workfile') as f: ... read_data = f.read() >>> # We can check that the file has been automatically closed. >>> f.closed True \u5982\u679c\u6ca1\u6709\u4f7f\u7528 [ with ]\u5173\u952e\u5b57\uff0c\u5219\u5e94\u8c03\u7528 f.close() \u5173\u95ed\u6587\u4ef6\uff0c\u5373\u53ef\u91ca\u653e\u6587\u4ef6\u5360\u7528\u7684\u7cfb\u7edf\u8d44\u6e90\u3002 \u8c03\u7528 f.write() \u65f6\uff0c\u672a\u4f7f\u7528 with \u5173\u952e\u5b57\uff0c\u6216\u672a\u8c03\u7528 f.close() \uff0c\u5373\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u9000\u51fa\uff0c\u4e5f \u53ef\u80fd \u5bfc\u81f4 f.write() \u7684\u53c2\u6570\u6ca1\u6709\u5b8c\u5168\u5199\u5165\u78c1\u76d8\u3002 \u901a\u8fc7 [ with ] \u8bed\u53e5\uff0c\u6216\u8c03\u7528 f.close() \u5173\u95ed\u6587\u4ef6\u5bf9\u8c61\u540e\uff0c\u518d\u6b21\u4f7f\u7528\u8be5\u6587\u4ef6\u5bf9\u8c61\u5c06\u4f1a\u5931\u8d25\u3002 >>> >>> f.close() >>> f.read() Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: I/O operation on closed file. \u6587\u4ef6\u8bfb\u53d6\u591a\u884c \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u591a\u884c\u65f6\uff0c\u53ef\u4ee5\u7528\u5faa\u73af\u904d\u5386\u6574\u4e2a\u6587\u4ef6\u5bf9\u8c61\u3002\u8fd9\u79cd\u64cd\u4f5c\u80fd\u9ad8\u6548\u5229\u7528\u5185\u5b58\uff0c\u5feb\u901f\uff0c\u4e14\u4ee3\u7801\u7b80\u5355\uff1a >>> >>> for line in f: ... print(line, end='') ... This is the first line of the file. Second line of the file \u5982\u9700\u4ee5\u5217\u8868\u5f62\u5f0f\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u884c\uff0c\u53ef\u4ee5\u7528 list(f) \u6216 f.readlines() \u3002 \u64cd\u4f5c\u6587\u672cseek f.seek(offset, whence) \u53ef\u4ee5\u6539\u53d8\u6587\u4ef6\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u5411\u53c2\u8003\u70b9\u6dfb\u52a0 offset \u8ba1\u7b97\u4f4d\u7f6e\uff1b\u53c2\u8003\u70b9\u7531 whence \u53c2\u6570\u6307\u5b9a\u3002 whence \u503c\u4e3a 0 \u65f6\uff0c\u8868\u793a\u4ece\u6587\u4ef6\u5f00\u5934\u8ba1\u7b97\uff0c1 \u8868\u793a\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\uff0c2 \u8868\u793a\u4f7f\u7528\u6587\u4ef6\u672b\u5c3e\u4f5c\u4e3a\u53c2\u8003\u70b9\u3002\u7701\u7565 whence \u65f6\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u5373\u4f7f\u7528\u6587\u4ef6\u5f00\u5934\u4f5c\u4e3a\u53c2\u8003\u70b9\u3002 >>> >>> f = open('workfile', 'rb+') >>> f.write(b'0123456789abcdef') 16 >>> f.seek(5) # Go to the 6th byte in the file 5 >>> f.read(1) b'5' >>> f.seek(-3, 2) # Go to the 3rd byte before the end 13 >>> f.read(1) b'd' \u5728\u6587\u672c\u6587\u4ef6\uff08\u6a21\u5f0f\u5b57\u7b26\u4e32\u672a\u4f7f\u7528 b \u65f6\u6253\u5f00\u7684\u6587\u4ef6\uff09\u4e2d\uff0c\u53ea\u5141\u8bb8\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u641c\u7d22\uff08\u4f7f\u7528 seek(0, 2) \u641c\u7d22\u5230\u6587\u4ef6\u672b\u5c3e\u662f\u4e2a\u4f8b\u5916\uff09\uff0c\u552f\u4e00\u6709\u6548\u7684 offset \u503c\u662f\u80fd\u4ece f.tell() \u4e2d\u8fd4\u56de\u7684\uff0c\u6216 0\u3002\u5176\u4ed6 offset \u503c\u90fd\u4f1a\u4ea7\u751f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002 \u6587\u4ef6\u5bf9\u8c61\u8fd8\u652f\u6301 isatty() \u548c truncate() \u7b49\u65b9\u6cd5\uff0c\u4f46\u4e0d\u5e38\u7528\uff1b\u6587\u4ef6\u5bf9\u8c61\u7684\u5b8c\u6574\u6307\u5357\u8be6\u89c1\u5e93\u53c2\u8003\u3002 \u64cd\u4f5cjson Python \u652f\u6301 JSON (JavaScript Object Notation) \u8fd9\u79cd\u6d41\u884c\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c\u7528\u6237\u65e0\u9700\u6ca1\u5b8c\u6ca1\u4e86\u5730\u7f16\u5199\u3001\u8c03\u8bd5\u4ee3\u7801\uff0c\u624d\u80fd\u628a\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u5230\u6587\u4ef6\u3002[ json ] \u6807\u51c6\u6a21\u5757\u91c7\u7528 Python \u6570\u636e\u5c42\u6b21\u7ed3\u6784\uff0c\u5e76\u5c06\u4e4b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\uff1b\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a serializing \uff08\u5e8f\u5217\u5316\uff09\u3002\u4ece\u5b57\u7b26\u4e32\u8868\u793a\u4e2d\u91cd\u5efa\u6570\u636e\u79f0\u4e3a deserializing \uff08\u89e3\u5e8f\u5316\uff09\u3002\u5728\u5e8f\u5217\u5316\u548c\u89e3\u5e8f\u5316\u4e4b\u95f4\uff0c\u8868\u793a\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u5df2\u7ecf\u5b58\u50a8\u5728\u6587\u4ef6\u6216\u6570\u636e\u4e2d\uff0c\u6216\u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u53d1\u9001\u5230\u8fdc\u65b9 \u7684\u673a\u5668\u3002 \u6ce8\u89e3 JSON \u683c\u5f0f\u901a\u5e38\u7528\u4e8e\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u4ea4\u6362\u3002\u7a0b\u5e8f\u5458\u65e9\u5df2\u5bf9\u5b83\u8033\u719f\u80fd\u8be6\uff0c\u53ef\u8c13\u662f\u4ea4\u4e92\u64cd\u4f5c\u7684\u4e0d\u4e8c\u4e4b\u9009\u3002 \u53ea\u9700\u4e00\u884c\u7b80\u5355\u7684\u4ee3\u7801\u5373\u53ef\u67e5\u770b\u67d0\u4e2a\u5bf9\u8c61\u7684 JSON \u5b57\u7b26\u4e32\u8868\u73b0\u5f62\u5f0f\uff1a >>> >>> import json >>> x = [1, 'simple', 'list'] >>> json.dumps(x) '[1, \"simple\", \"list\"]' [ dumps() ] \u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u53d8\u4f53\uff0c [ dump() ]\uff0c\u5b83\u53ea\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a text file \u3002\u56e0\u6b64\uff0c\u5982\u679c f \u662f text file \u5bf9\u8c61\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a json.dump(x, f) \u8981\u518d\u6b21\u89e3\u7801\u5bf9\u8c61\uff0c\u5982\u679c f \u662f\u5df2\u6253\u5f00\u3001\u4f9b\u8bfb\u53d6\u7684 text file \u5bf9\u8c61\uff1a x = json.load(f) \u8fd9\u79cd\u7b80\u5355\u7684\u5e8f\u5217\u5316\u6280\u672f\u53ef\u4ee5\u5904\u7406\u5217\u8868\u548c\u5b57\u5178\uff0c\u4f46\u5728 JSON \u4e2d\u5e8f\u5217\u5316\u4efb\u610f\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5219\u9700\u8981\u4ed8\u51fa\u989d\u5916\u52aa\u529b\u3002[ json ] \u6a21\u5757\u7684\u53c2\u8003\u5305\u542b\u5bf9\u6b64\u7684\u89e3\u91ca\u3002 \u53e5\u6cd5\u9519\u8bef \u53e5\u6cd5\u9519\u8bef\u53c8\u79f0\u89e3\u6790\u9519\u8bef\uff0c\u662f\u5b66\u4e60 Python \u65f6\u6700\u5e38\u89c1\u7684\u9519\u8bef\uff1a >>> >>> while True print('Hello world') File \"<stdin>\", line 1 while True print('Hello world') ^ SyntaxError: invalid syntax \u89e3\u6790\u5668\u4f1a\u590d\u73b0\u51fa\u73b0\u53e5\u6cd5\u9519\u8bef\u7684\u4ee3\u7801\u884c\uff0c\u5e76\u7528\u5c0f\u201c\u7bad\u5934\u201d\u6307\u5411\u884c\u91cc\u68c0\u6d4b\u5230\u7684\u7b2c\u4e00\u4e2a\u9519\u8bef\u3002\u9519\u8bef\u662f\u7531\u7bad\u5934 \u4e0a\u65b9 \u7684 token \u89e6\u53d1\u7684\uff08\u81f3\u5c11\u662f\u5728\u8fd9\u91cc\u68c0\u6d4b\u51fa\u7684\uff09\uff1a\u672c\u4f8b\u4e2d\uff0c\u5728 [ print() ]\u51fd\u6570\u4e2d\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u56e0\u4e3a\uff0c\u5728\u5b83\u524d\u9762\u7f3a\u5c11\u5192\u53f7\uff08 ':' \uff09 \u3002\u9519\u8bef\u4fe1\u606f\u8fd8\u8f93\u51fa\u6587\u4ef6\u540d\u4e0e\u884c\u53f7\uff0c\u5728\u4f7f\u7528\u811a\u672c\u6587\u4ef6\u65f6\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u53bb\u54ea\u91cc\u67e5\u9519\u3002 \u89e6\u53d1\u5f02\u5e38 [ raise ] \u8bed\u53e5\u652f\u6301\u5f3a\u5236\u89e6\u53d1\u6307\u5b9a\u7684\u5f02\u5e38\u3002\u4f8b\u5982\uff1a >>> >>> raise NameError('HiThere') Traceback (most recent call last): File \"<stdin>\", line 1, in <module> NameError: HiThere [ raise ] \u552f\u4e00\u7684\u53c2\u6570\u5c31\u662f\u8981\u89e6\u53d1\u7684\u5f02\u5e38\u3002\u8fd9\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u5f02\u5e38\u5b9e\u4f8b\u6216\u5f02\u5e38\u7c7b\uff08\u6d3e\u751f\u81ea [ Exception ] \u7c7b\uff09\u3002\u5982\u679c\u4f20\u9012\u7684\u662f\u5f02\u5e38\u7c7b\uff0c\u5c06\u901a\u8fc7\u8c03\u7528\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u6765\u9690\u5f0f\u5b9e\u4f8b\u5316\uff1a raise ValueError # shorthand for 'raise ValueError()' \u5982\u679c\u53ea\u60f3\u5224\u65ad\u662f\u5426\u89e6\u53d1\u4e86\u5f02\u5e38\uff0c\u4f46\u5e76\u4e0d\u6253\u7b97\u5904\u7406\u8be5\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u7684 [ raise ]\u8bed\u53e5\u91cd\u65b0\u89e6\u53d1\u5f02\u5e38\uff1a >>> >>> try: ... raise NameError('HiThere') ... except NameError: ... print('An exception flew by!') ... raise ... An exception flew by! Traceback (most recent call last): File \"<stdin>\", line 2, in <module> NameError: HiThere \u5f02\u5e38\u94fe [ raise ] \u8bed\u53e5\u652f\u6301\u53ef\u9009\u7684 [ from ]\u5b50\u53e5\uff0c\u8be5\u5b50\u53e5\u7528\u4e8e\u542f\u7528\u94fe\u5f0f\u5f02\u5e38\u3002 \u4f8b\u5982\uff1a # exc must be exception instance or None. raise RuntimeError from exc \u8f6c\u6362\u5f02\u5e38\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff1a >>> >>> def func(): ... raise ConnectionError ... >>> try: ... func() ... except ConnectionError as exc: ... raise RuntimeError('Failed to open database') from exc ... Traceback (most recent call last): File \"<stdin>\", line 2, in <module> File \"<stdin>\", line 2, in func ConnectionError The above exception was the direct cause of the following exception: Traceback (most recent call last): File \"<stdin>\", line 4, in <module> RuntimeError: Failed to open database \u5f02\u5e38\u94fe\u4f1a\u5728 [ except ]\u6216 [ finally ] \u5b50\u53e5\u5185\u90e8\u5f15\u53d1\u5f02\u5e38\u65f6\u81ea\u52a8\u751f\u6210\u3002 \u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 from None \u8fd9\u6837\u7684\u5199\u6cd5\u6765\u7981\u7528: >>> >>> try: ... open('database.sqlite') ... except OSError: ... raise RuntimeError from None ... Traceback (most recent call last): File \"<stdin>\", line 4, in <module> RuntimeError \u5f02\u5e38\u94fe\u673a\u5236\u8be6\u89c1 \u5185\u7f6e\u5f02\u5e38 \u3002 \u7c7b\u7684\u6784\u9020\u51fd\u6570 \u5f53\u7136\uff0c __init__() \u65b9\u6cd5\u8fd8\u53ef\u4ee5\u6709\u989d\u5916\u53c2\u6570\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u7075\u6d3b\u6027\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63d0\u4f9b\u7ed9\u7c7b\u5b9e\u4f8b\u5316\u8fd0\u7b97\u7b26\u7684\u53c2\u6570\u5c06\u88ab\u4f20\u9012\u7ed9 __init__() \u3002 \u4f8b\u5982\uff0c: >>> >>> class Complex: ... def __init__(self, realpart, imagpart): ... self.r = realpart ... self.i = imagpart ... >>> x = Complex(3.0, -4.5) >>> x.r, x.i (3.0, -4.5) \u7c7b\u4e2d\u79c1\u6709\u53d8\u91cf class A(object): def __init__(self): self.__data = [] # \u7ffb\u8bd1\u6210 self._A__data=[] def add(self, item): self.__data.append(item) # \u7ffb\u8bd1\u6210 self._A__data.append(item) def printData(self): print(self.__data) # \u7ffb\u8bd1\u6210 self._A__data a = A() a.add('hello') a.add('python') a.printData() # print a.__data #\u5916\u754c\u4e0d\u80fd\u8bbf\u95ee\u79c1\u6709\u53d8\u91cf AttributeError: 'A' object has no attribute '__data' print(a._A__data) # \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5728\u5916\u9762\u4e5f\u80fd\u591f\u8bbf\u95ee\u201c\u79c1\u6709\u201d\u53d8\u91cf\uff1b\u8fd9\u4e00\u70b9\u5728\u8c03\u8bd5\u4e2d\u662f\u6bd4\u8f83\u6709\u7528\u7684\uff01 \u7ed3\u679c\uff1a ['hello', 'python'] ['hello', 'python'] \u8fed\u4ee3\u5668 \u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u5927\u591a\u6570\u5bb9\u5668\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f7f\u7528 [ for ] \u8bed\u53e5: for element in [1, 2, 3]: print(element) for element in (1, 2, 3): print(element) for key in {'one':1, 'two':2}: print(key) for char in \"123\": print(char) for line in open(\"myfile.txt\"): print(line, end='') \u8fd9\u79cd\u8bbf\u95ee\u98ce\u683c\u6e05\u6670\u3001\u7b80\u6d01\u53c8\u65b9\u4fbf\u3002 \u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u975e\u5e38\u666e\u904d\u5e76\u4f7f\u5f97 Python \u6210\u4e3a\u4e00\u4e2a\u7edf\u4e00\u7684\u6574\u4f53\u3002 \u5728\u5e55\u540e\uff0c[ for ]\u8bed\u53e5\u4f1a\u5728\u5bb9\u5668\u5bf9\u8c61\u4e0a\u8c03\u7528 [ iter() ]\u3002 \u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5b9a\u4e49\u4e86 [ __next__() ] \u65b9\u6cd5\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u6b64\u65b9\u6cd5\u5c06\u9010\u4e00\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u3002 \u5f53\u5143\u7d20\u7528\u5c3d\u65f6\uff0c[ __next__() ] \u5c06\u5f15\u53d1 [ StopIteration ] \u5f02\u5e38\u6765\u901a\u77e5\u7ec8\u6b62 for \u5faa\u73af\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [ next() ] \u5185\u7f6e\u51fd\u6570\u6765\u8c03\u7528 [ __next__() ]\u65b9\u6cd5\uff1b\u8fd9\u4e2a\u4f8b\u5b50\u663e\u793a\u4e86\u5b83\u7684\u8fd0\u4f5c\u65b9\u5f0f: >>> >>> s = 'abc' >>> it = iter(s) >>> it <iterator object at 0x00A1DB50> >>> next(it) 'a' >>> next(it) 'b' >>> next(it) 'c' >>> next(it) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> next(it) StopIteration \u770b\u8fc7\u8fed\u4ee3\u5668\u534f\u8bae\u7684\u5e55\u540e\u673a\u5236\uff0c\u7ed9\u4f60\u7684\u7c7b\u6dfb\u52a0\u8fed\u4ee3\u5668\u884c\u4e3a\u5c31\u5f88\u5bb9\u6613\u4e86\u3002 \u5b9a\u4e49\u4e00\u4e2a __iter__() \u65b9\u6cd5\u6765\u8fd4\u56de\u4e00\u4e2a\u5e26\u6709 [ __next__() ] \u65b9\u6cd5\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u7c7b\u5df2\u5b9a\u4e49\u4e86 __next__() \uff0c\u5219 __iter__() \u53ef\u4ee5\u7b80\u5355\u5730\u8fd4\u56de self : class Reverse: \"\"\"Iterator for looping over a sequence backwards.\"\"\" def __init__(self, data): self.data = data self.index = len(data) def __iter__(self): return self def __next__(self): if self.index == 0: raise StopIteration self.index = self.index - 1 return self.data[self.index] >>> >>> rev = Reverse('spam') >>> iter(rev) <__main__.Reverse object at 0x00A1DB50> >>> for char in rev: ... print(char) ... m a p s \u751f\u6210\u5668 \u751f\u6210\u5668 \u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u8fed\u4ee3\u5668\u7684\u7b80\u5355\u800c\u5f3a\u5927\u7684\u5de5\u5177\u3002 \u5b83\u4eec\u7684\u5199\u6cd5\u7c7b\u4f3c\u4e8e\u6807\u51c6\u7684\u51fd\u6570\uff0c\u4f46\u5f53\u5b83\u4eec\u8981\u8fd4\u56de\u6570\u636e\u65f6\u4f1a\u4f7f\u7528 [ yield ]\u8bed\u53e5\u3002 \u6bcf\u6b21\u5728\u751f\u6210\u5668\u4e0a\u8c03\u7528 [ next() ] \u65f6\uff0c\u5b83\u4f1a\u4ece\u4e0a\u6b21\u79bb\u5f00\u7684\u4f4d\u7f6e\u6062\u590d\u6267\u884c\uff08\u5b83\u4f1a\u8bb0\u4f4f\u4e0a\u6b21\u6267\u884c\u8bed\u53e5\u65f6\u7684\u6240\u6709\u6570\u636e\u503c\uff09\u3002 \u4e00\u4e2a\u663e\u793a\u5982\u4f55\u975e\u5e38\u5bb9\u6613\u5730\u521b\u5efa\u751f\u6210\u5668\u7684\u793a\u4f8b\u5982\u4e0b: def reverse(data): for index in range(len(data)-1, -1, -1): yield data[index] >>> >>> for char in reverse('golf'): ... print(char) ... f l o g \u53ef\u4ee5\u7528\u751f\u6210\u5668\u6765\u5b8c\u6210\u7684\u64cd\u4f5c\u540c\u6837\u53ef\u4ee5\u7528\u524d\u4e00\u8282\u6240\u63cf\u8ff0\u7684\u57fa\u4e8e\u7c7b\u7684\u8fed\u4ee3\u5668\u6765\u5b8c\u6210\u3002 \u4f46\u751f\u6210\u5668\u7684\u5199\u6cd5\u66f4\u4e3a\u7d27\u51d1\uff0c\u56e0\u4e3a\u5b83\u4f1a\u81ea\u52a8\u521b\u5efa __iter__() \u548c [ __next__() ] \u65b9\u6cd5\u3002 \u53e6\u4e00\u4e2a\u5173\u952e\u7279\u6027\u5728\u4e8e\u5c40\u90e8\u53d8\u91cf\u548c\u6267\u884c\u72b6\u6001\u4f1a\u5728\u6bcf\u6b21\u8c03\u7528\u4e4b\u95f4\u81ea\u52a8\u4fdd\u5b58\u3002 \u8fd9\u4f7f\u5f97\u8be5\u51fd\u6570\u76f8\u6bd4\u4f7f\u7528 self.index \u548c self.data \u8fd9\u79cd\u5b9e\u4f8b\u53d8\u91cf\u7684\u65b9\u5f0f\u66f4\u6613\u7f16\u5199\u4e14\u66f4\u4e3a\u6e05\u6670\u3002 \u9664\u4e86\u4f1a\u81ea\u52a8\u521b\u5efa\u65b9\u6cd5\u548c\u4fdd\u5b58\u7a0b\u5e8f\u72b6\u6001\uff0c\u5f53\u751f\u6210\u5668\u7ec8\u7ed3\u65f6\uff0c\u5b83\u4eec\u8fd8\u4f1a\u81ea\u52a8\u5f15\u53d1 [ StopIteration ]\u3002 \u8fd9\u4e9b\u7279\u6027\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4f7f\u5f97\u521b\u5efa\u8fed\u4ee3\u5668\u80fd\u4e0e\u7f16\u5199\u5e38\u89c4\u51fd\u6570\u4e00\u6837\u5bb9\u6613\u3002 \u6027\u80fd\u6d4b\u91cf \u4e00\u4e9bPython\u7528\u6237\u5bf9\u4e86\u89e3\u540c\u4e00\u95ee\u9898\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u76f8\u5bf9\u6027\u80fd\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3\u3002 Python\u63d0\u4f9b\u4e86\u4e00\u79cd\u53ef\u4ee5\u7acb\u5373\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u7684\u6d4b\u91cf\u5de5\u5177\u3002 \u4f8b\u5982\uff0c\u5143\u7ec4\u5c01\u5305\u548c\u62c6\u5305\u529f\u80fd\u76f8\u6bd4\u4f20\u7edf\u7684\u4ea4\u6362\u53c2\u6570\u53ef\u80fd\u66f4\u5177\u5438\u5f15\u529b\u3002[ timeit ]\u6a21\u5757\u53ef\u4ee5\u5feb\u901f\u6f14\u793a\u5728\u8fd0\u884c\u6548\u7387\u65b9\u9762\u4e00\u5b9a\u7684\u4f18\u52bf: >>> >>> from timeit import Timer >>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit() 0.57535828626024577 >>> Timer('a,b = b,a', 'a=1; b=2').timeit() 0.54962537085770791 \u4e0e [ timeit ]\u7684\u7cbe\u7ec6\u7c92\u5ea6\u7ea7\u522b\u76f8\u53cd\uff0c [ profile ] \u6a21\u5757\u63d0\u4f9b\u4e86\u7528\u4e8e\u5728\u8f83\u5927\u7684\u4ee3\u7801\u5757\u4e2d\u8bc6\u522b\u65f6\u95f4\u5173\u952e\u90e8\u5206\u7684\u5de5\u5177\u3002 \u67e5\u770b\u5305\u5185\u5bf9\u8c61 import flask print(dir(flask)) \u5355\u5143\u6d4b\u8bd5 def average(values): \"\"\"Computes the arithmetic mean of a list of numbers. >>> print(average([20, 30, 70])) 45.0 \"\"\" return sum(values) / len(values) result = average([20, 30, 70]) print(result) import doctest doctest.testmod() \u5728\u5f15\u53f7\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u60f3\u8ba9\u8fd9\u4e2a\u65b9\u6cd5\u7ed3\u679c\u7b49\u4e8e45 \u8fd0\u884c\u7ed3\u679c\uff1a 40.0 ********************************************************************** File \"D:\\idea\\zkh-infra-web\\tar\\test\\flask_learn\\unit_test.py\", line 4, in __main__.average Failed example: print(average([20, 30, 70])) Expected: 45.0 Got: 40.0 ********************************************************************** 1 items had failures: 1 of 1 in __main__.average ***Test Failed*** 1 failures. \u7531\u4e8e\u8fd0\u884c\u7ed3\u679c\u4e3a40\uff0c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u6240\u4ee5\u62a5\u9519 \u65b9\u6cd5\u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570 >>> x = 42 >>> def spam(a, b=x): ... print(a, b) ... >>> spam(1) 1 42 >>> x = 23 # Has no effect >>> spam(1) 1 42 >>> classmethod \u7684\u4f7f\u7528\u65b9\u6cd5 #!/usr/bin/python # -*- coding: UTF-8 -*- class A(object): bar = 1 def func1(self): print ('foo') @classmethod def func2(cls): print ('func2') print (cls.bar) cls().func1() # \u8c03\u7528 foo \u65b9\u6cd5 A.func2() # \u4e0d\u9700\u8981\u5b9e\u4f8b\u5316 \u7ed3\u679c\uff1a func2 1 foo Python\u67093\u79cd\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\uff08staticmethod\uff09\uff0c\u7c7b\u65b9\u6cd5\uff08classmethod\uff09\u548c\u5b9e\u4f8b\u65b9\u6cd5\u3002\u4e0b\u9762\u7528\u4ee3\u7801\u4e3e\u4f8b\u3002 \u5bf9\u4e8e\u4e00\u822c\u7684\u51fd\u6570foo(x)\uff0c\u5b83\u8ddf\u7c7b\u548c\u7c7b\u7684\u5b9e\u4f8b\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u76f4\u63a5\u8c03\u7528foo(x)\u5373\u53ef\u3002 # -*- coding:utf-8 -*- def foo(x): print(\"running foo(%s)\" % x) foo(\"test\") \u5728\u7c7bA\u91cc\u9762\u7684\u5b9e\u4f8b\u65b9\u6cd5foo(self, x)\uff0c \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fself \uff0c\u6211\u4eec\u9700\u8981\u6709\u4e00\u4e2aA\u7684\u5b9e\u4f8b\uff0c\u624d\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 # -*- coding:utf-8 -*- class A: def foo(self, x): print(\"running foo(%s, %s)\" % (self, x)) # A.foo(x) \u8fd9\u6837\u4f1a\u62a5\u9519 a = A() a.foo(\"test\") \u5f53\u6211\u4eec\u9700\u8981\u548c\u7c7b\u76f4\u63a5\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u4e0d\u9700\u8981\u548c\u5b9e\u4f8b\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u7c7b\u65b9\u6cd5\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u7c7b\u65b9\u6cd5\u4e0e\u5b9e\u4f8b\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u662f\u4f20\u9012\u7684\u4e0d\u662f\u7c7b\u7684\u5b9e\u4f8b\uff0c\u800c\u662f\u7c7b\u672c\u8eab\uff0c \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fcls \u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u7684\u5b9e\u4f8b\u8c03\u7528\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\u7c7b\u540d\u6765\u8c03\u7528\u3002 # -*- coding:utf-8 -*- class A: class_attr = \"attr\" def __init__(self): pass @classmethod def class_foo(cls): print(\"running class_foo(%s)\" % (cls.class_attr)) a = A() a.class_foo() A.class_foo() \u9759\u6001\u65b9\u6cd5\u7c7b\u4f3c\u666e\u901a\u65b9\u6cd5\uff0c\u53c2\u6570\u91cc\u9762\u4e0d\u7528self\u3002\u8fd9\u4e9b\u65b9\u6cd5\u548c\u7c7b\u76f8\u5173\uff0c\u4f46\u662f\u53c8\u4e0d\u9700\u8981\u7c7b\u548c\u5b9e\u4f8b\u4e2d\u7684\u4efb\u4f55\u4fe1\u606f\u3001\u5c5e\u6027\u7b49\u7b49\u3002\u5982\u679c\u628a\u8fd9\u4e9b\u65b9\u6cd5\u5199\u5230\u7c7b\u5916\u9762\uff0c\u8fd9\u6837\u5c31\u628a\u548c\u7c7b\u76f8\u5173\u7684\u4ee3\u7801\u5206\u6563\u5230\u7c7b\u5916\uff0c\u4f7f\u5f97\u4e4b\u540e\u5bf9\u4e8e\u4ee3\u7801\u7684\u7406\u89e3\u548c\u7ef4\u62a4\u90fd\u662f\u5de8\u5927\u7684\u969c\u788d\u3002\u800c\u9759\u6001\u65b9\u6cd5\u5c31\u662f\u7528\u6765\u89e3\u51b3\u8fd9\u4e00\u7c7b\u95ee\u9898\u7684\u3002 \u6bd4\u5982\u6211\u4eec\u68c0\u67e5\u662f\u5426\u5f00\u542f\u4e86\u65e5\u5fd7\u529f\u80fd\uff0c\u8fd9\u4e2a\u548c\u7c7b\u76f8\u5173\uff0c\u4f46\u662f\u8ddf\u7c7b\u7684\u5c5e\u6027\u548c\u5b9e\u4f8b\u90fd\u6ca1\u6709\u5173\u7cfb\u3002 # -*- coding:utf-8 -*- log_enabled = True class A: class_attr = \"attr\" def __init__(self): pass @staticmethod def static_foo(): if log_enabled: print(\"log is enabled\") else: print(\"log is disabled\") A.static_foo() @staticmethod\u4e0d\u9700\u8981\u8868\u793a\u81ea\u8eab\u5bf9\u8c61\u7684self\u548c\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\uff0c\u5c31\u8ddf\u4f7f\u7528\u51fd\u6570\u4e00\u6837\u3002 @classmethod\u4e5f\u4e0d\u9700\u8981self\u53c2\u6570\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u662f\u8868\u793a\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\u3002 \u5982\u679c\u5728@staticmethod\u4e2d\u8981\u8c03\u7528\u5230\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e9b\u5c5e\u6027\u65b9\u6cd5\uff0c\u53ea\u80fd\u76f4\u63a5\u7c7b\u540d.\u5c5e\u6027\u540d\u6216\u7c7b\u540d.\u65b9\u6cd5\u540d\u3002 \u800c@classmethod\u56e0\u4e3a\u6301\u6709cls\u53c2\u6570\uff0c\u53ef\u4ee5\u6765\u8c03\u7528\u7c7b\u7684\u5c5e\u6027\uff0c\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7b49\uff0c\u907f\u514d\u786c\u7f16\u7801\u3002","title":"Python\u4e00\u4e9b\u8bed\u6cd5"},{"location":"python/basics/basic/#map","text":"def sq(x): return x * x print(list(map(sq, [1, 2, 3, 4, 5]))) \u7ed3\u679c\uff1a [1, 4, 9, 16, 25]","title":"map\u51fd\u6570"},{"location":"python/basics/basic/#lambda","text":"\u4f8b1\uff1a def sq(x): return x * x print(list(map(lambda x: x*x,[y for y in range(6)]))) \u7ed3\u679c\uff1a [0, 1, 4, 9, 16, 25] \u4f8b2\uff1a funca = lambda x, y, z: (x + 8) * y - z print(funca(5, 6, 8)) \u7ed3\u679c\uff1a 70","title":"lambda\u51fd\u6570"},{"location":"python/basics/basic/#-","text":"-> \u5e38\u5e38\u51fa\u73b0\u5728python\u51fd\u6570\u5b9a\u4e49\u7684\u51fd\u6570\u540d\u540e\u9762\uff0c\u4e3a\u51fd\u6570\u6dfb\u52a0 \u5143\u6570\u636e ,\u63cf\u8ff0\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b def add(a: int, b: int) -> int: return a + b print(add.__annotations__) result = add(8, 8) print(result) \u7ed3\u679c\uff1a {'a': <class 'int'>, 'b': <class 'int'>, 'return': <class 'int'>} 64","title":"-&gt; \u7684\u7528\u6cd5"},{"location":"python/basics/basic/#__annotations____","text":"\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u5b58\u653e\u5728\u51fd\u6570\u7684 __annotations__ \u5c5e\u6027\u4e2d\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5f71\u54cd\u51fd\u6570\u7684\u4efb\u4f55\u5176\u4ed6\u90e8\uff0c\u6253\u5370\u51fd\u6570\u7684\u6807\u6ce8 https://docs.python.org/zh-cn/3/tutorial/controlflow.html def f(ham: str, eggs: str = 'eggs') -> str: print(\"Annotations:\", f.__annotations__) print(\"Arguments:\", ham, eggs) return ham + ' and ' + eggs g = f('spam') print(g) \u7ed3\u679c\uff1a Annotations: {'ham': <class 'str'>, 'eggs': <class 'str'>, 'return': <class 'str'>} Arguments: spam eggs spam and eggs","title":"__annotations____  \u7684\u7528\u6cd5"},{"location":"python/basics/basic/#import","text":">>> from fibo import * >>> fib(500) 0 1 1 2 3 5 8 13 21 34 55 89 144 233 377 \u8fd9\u79cd\u65b9\u5f0f\u4f1a\u5bfc\u5165\u6240\u6709\u4e0d\u4ee5\u4e0b\u5212\u7ebf\uff08 _ \uff09\u5f00\u5934\u7684\u540d\u79f0\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u4e0d\u8981\u7528\u8fd9\u4e2a\u529f\u80fd\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5411\u89e3\u91ca\u5668\u5bfc\u5165\u4e86\u4e00\u6279\u672a\u77e5\u7684\u540d\u79f0\uff0c\u53ef\u80fd\u4f1a\u8986\u76d6\u5df2\u7ecf\u5b9a\u4e49\u7684\u540d\u79f0\u3002 \u6ce8\u610f\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5efa\u8bae\u4ece\u6a21\u5757\u6216\u5305\u5185\u5bfc\u5165 * \uff0c \u56e0\u4e3a\uff0c\u8fd9\u9879\u64cd\u4f5c\u7ecf\u5e38\u8ba9\u4ee3\u7801\u53d8\u5f97\u96be\u4ee5\u7406\u89e3\u3002\u4e0d\u8fc7\uff0c\u4e3a\u4e86\u5728\u4ea4\u4e92\u5f0f\u7f16\u8bd1\u5668\u4e2d\u5c11\u6253\u51e0\u4e2a\u5b57\uff0c\u8fd9\u4e48\u7528\u4e5f\u6ca1\u95ee\u9898\u3002 \u53e6\u5916\u4ece\u5305\u5bfc\u5165*\uff0c\u6709\u4e2a\u7d22\u5f15\u95ee\u9898 https://docs.python.org/zh-cn/3/tutorial/modules.html#importing-from-a-package","title":"import * \u7684\u95ee\u9898"},{"location":"python/basics/basic/#with","text":">>> with open('workfile') as f: ... read_data = f.read() >>> # We can check that the file has been automatically closed. >>> f.closed True \u5982\u679c\u6ca1\u6709\u4f7f\u7528 [ with ]\u5173\u952e\u5b57\uff0c\u5219\u5e94\u8c03\u7528 f.close() \u5173\u95ed\u6587\u4ef6\uff0c\u5373\u53ef\u91ca\u653e\u6587\u4ef6\u5360\u7528\u7684\u7cfb\u7edf\u8d44\u6e90\u3002 \u8c03\u7528 f.write() \u65f6\uff0c\u672a\u4f7f\u7528 with \u5173\u952e\u5b57\uff0c\u6216\u672a\u8c03\u7528 f.close() \uff0c\u5373\u4f7f\u7a0b\u5e8f\u6b63\u5e38\u9000\u51fa\uff0c\u4e5f \u53ef\u80fd \u5bfc\u81f4 f.write() \u7684\u53c2\u6570\u6ca1\u6709\u5b8c\u5168\u5199\u5165\u78c1\u76d8\u3002 \u901a\u8fc7 [ with ] \u8bed\u53e5\uff0c\u6216\u8c03\u7528 f.close() \u5173\u95ed\u6587\u4ef6\u5bf9\u8c61\u540e\uff0c\u518d\u6b21\u4f7f\u7528\u8be5\u6587\u4ef6\u5bf9\u8c61\u5c06\u4f1a\u5931\u8d25\u3002 >>> >>> f.close() >>> f.read() Traceback (most recent call last): File \"<stdin>\", line 1, in <module> ValueError: I/O operation on closed file.","title":"with\u5173\u952e\u5b57"},{"location":"python/basics/basic/#_1","text":"\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u591a\u884c\u65f6\uff0c\u53ef\u4ee5\u7528\u5faa\u73af\u904d\u5386\u6574\u4e2a\u6587\u4ef6\u5bf9\u8c61\u3002\u8fd9\u79cd\u64cd\u4f5c\u80fd\u9ad8\u6548\u5229\u7528\u5185\u5b58\uff0c\u5feb\u901f\uff0c\u4e14\u4ee3\u7801\u7b80\u5355\uff1a >>> >>> for line in f: ... print(line, end='') ... This is the first line of the file. Second line of the file \u5982\u9700\u4ee5\u5217\u8868\u5f62\u5f0f\u8bfb\u53d6\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u884c\uff0c\u53ef\u4ee5\u7528 list(f) \u6216 f.readlines() \u3002","title":"\u6587\u4ef6\u8bfb\u53d6\u591a\u884c"},{"location":"python/basics/basic/#seek","text":"f.seek(offset, whence) \u53ef\u4ee5\u6539\u53d8\u6587\u4ef6\u5bf9\u8c61\u7684\u4f4d\u7f6e\u3002\u901a\u8fc7\u5411\u53c2\u8003\u70b9\u6dfb\u52a0 offset \u8ba1\u7b97\u4f4d\u7f6e\uff1b\u53c2\u8003\u70b9\u7531 whence \u53c2\u6570\u6307\u5b9a\u3002 whence \u503c\u4e3a 0 \u65f6\uff0c\u8868\u793a\u4ece\u6587\u4ef6\u5f00\u5934\u8ba1\u7b97\uff0c1 \u8868\u793a\u4f7f\u7528\u5f53\u524d\u6587\u4ef6\u4f4d\u7f6e\uff0c2 \u8868\u793a\u4f7f\u7528\u6587\u4ef6\u672b\u5c3e\u4f5c\u4e3a\u53c2\u8003\u70b9\u3002\u7701\u7565 whence \u65f6\uff0c\u5176\u9ed8\u8ba4\u503c\u4e3a 0\uff0c\u5373\u4f7f\u7528\u6587\u4ef6\u5f00\u5934\u4f5c\u4e3a\u53c2\u8003\u70b9\u3002 >>> >>> f = open('workfile', 'rb+') >>> f.write(b'0123456789abcdef') 16 >>> f.seek(5) # Go to the 6th byte in the file 5 >>> f.read(1) b'5' >>> f.seek(-3, 2) # Go to the 3rd byte before the end 13 >>> f.read(1) b'd' \u5728\u6587\u672c\u6587\u4ef6\uff08\u6a21\u5f0f\u5b57\u7b26\u4e32\u672a\u4f7f\u7528 b \u65f6\u6253\u5f00\u7684\u6587\u4ef6\uff09\u4e2d\uff0c\u53ea\u5141\u8bb8\u76f8\u5bf9\u4e8e\u6587\u4ef6\u5f00\u5934\u641c\u7d22\uff08\u4f7f\u7528 seek(0, 2) \u641c\u7d22\u5230\u6587\u4ef6\u672b\u5c3e\u662f\u4e2a\u4f8b\u5916\uff09\uff0c\u552f\u4e00\u6709\u6548\u7684 offset \u503c\u662f\u80fd\u4ece f.tell() \u4e2d\u8fd4\u56de\u7684\uff0c\u6216 0\u3002\u5176\u4ed6 offset \u503c\u90fd\u4f1a\u4ea7\u751f\u672a\u5b9a\u4e49\u7684\u884c\u4e3a\u3002 \u6587\u4ef6\u5bf9\u8c61\u8fd8\u652f\u6301 isatty() \u548c truncate() \u7b49\u65b9\u6cd5\uff0c\u4f46\u4e0d\u5e38\u7528\uff1b\u6587\u4ef6\u5bf9\u8c61\u7684\u5b8c\u6574\u6307\u5357\u8be6\u89c1\u5e93\u53c2\u8003\u3002","title":"\u64cd\u4f5c\u6587\u672cseek"},{"location":"python/basics/basic/#json","text":"Python \u652f\u6301 JSON (JavaScript Object Notation) \u8fd9\u79cd\u6d41\u884c\u6570\u636e\u4ea4\u6362\u683c\u5f0f\uff0c\u7528\u6237\u65e0\u9700\u6ca1\u5b8c\u6ca1\u4e86\u5730\u7f16\u5199\u3001\u8c03\u8bd5\u4ee3\u7801\uff0c\u624d\u80fd\u628a\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\u4fdd\u5b58\u5230\u6587\u4ef6\u3002[ json ] \u6807\u51c6\u6a21\u5757\u91c7\u7528 Python \u6570\u636e\u5c42\u6b21\u7ed3\u6784\uff0c\u5e76\u5c06\u4e4b\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\u8868\u793a\u5f62\u5f0f\uff1b\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a serializing \uff08\u5e8f\u5217\u5316\uff09\u3002\u4ece\u5b57\u7b26\u4e32\u8868\u793a\u4e2d\u91cd\u5efa\u6570\u636e\u79f0\u4e3a deserializing \uff08\u89e3\u5e8f\u5316\uff09\u3002\u5728\u5e8f\u5217\u5316\u548c\u89e3\u5e8f\u5316\u4e4b\u95f4\uff0c\u8868\u793a\u5bf9\u8c61\u7684\u5b57\u7b26\u4e32\u53ef\u80fd\u5df2\u7ecf\u5b58\u50a8\u5728\u6587\u4ef6\u6216\u6570\u636e\u4e2d\uff0c\u6216\u901a\u8fc7\u7f51\u7edc\u8fde\u63a5\u53d1\u9001\u5230\u8fdc\u65b9 \u7684\u673a\u5668\u3002 \u6ce8\u89e3 JSON \u683c\u5f0f\u901a\u5e38\u7528\u4e8e\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u4ea4\u6362\u3002\u7a0b\u5e8f\u5458\u65e9\u5df2\u5bf9\u5b83\u8033\u719f\u80fd\u8be6\uff0c\u53ef\u8c13\u662f\u4ea4\u4e92\u64cd\u4f5c\u7684\u4e0d\u4e8c\u4e4b\u9009\u3002 \u53ea\u9700\u4e00\u884c\u7b80\u5355\u7684\u4ee3\u7801\u5373\u53ef\u67e5\u770b\u67d0\u4e2a\u5bf9\u8c61\u7684 JSON \u5b57\u7b26\u4e32\u8868\u73b0\u5f62\u5f0f\uff1a >>> >>> import json >>> x = [1, 'simple', 'list'] >>> json.dumps(x) '[1, \"simple\", \"list\"]' [ dumps() ] \u51fd\u6570\u8fd8\u6709\u4e00\u4e2a\u53d8\u4f53\uff0c [ dump() ]\uff0c\u5b83\u53ea\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a text file \u3002\u56e0\u6b64\uff0c\u5982\u679c f \u662f text file \u5bf9\u8c61\uff0c\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a json.dump(x, f) \u8981\u518d\u6b21\u89e3\u7801\u5bf9\u8c61\uff0c\u5982\u679c f \u662f\u5df2\u6253\u5f00\u3001\u4f9b\u8bfb\u53d6\u7684 text file \u5bf9\u8c61\uff1a x = json.load(f) \u8fd9\u79cd\u7b80\u5355\u7684\u5e8f\u5217\u5316\u6280\u672f\u53ef\u4ee5\u5904\u7406\u5217\u8868\u548c\u5b57\u5178\uff0c\u4f46\u5728 JSON \u4e2d\u5e8f\u5217\u5316\u4efb\u610f\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5219\u9700\u8981\u4ed8\u51fa\u989d\u5916\u52aa\u529b\u3002[ json ] \u6a21\u5757\u7684\u53c2\u8003\u5305\u542b\u5bf9\u6b64\u7684\u89e3\u91ca\u3002","title":"\u64cd\u4f5cjson"},{"location":"python/basics/basic/#_2","text":"\u53e5\u6cd5\u9519\u8bef\u53c8\u79f0\u89e3\u6790\u9519\u8bef\uff0c\u662f\u5b66\u4e60 Python \u65f6\u6700\u5e38\u89c1\u7684\u9519\u8bef\uff1a >>> >>> while True print('Hello world') File \"<stdin>\", line 1 while True print('Hello world') ^ SyntaxError: invalid syntax \u89e3\u6790\u5668\u4f1a\u590d\u73b0\u51fa\u73b0\u53e5\u6cd5\u9519\u8bef\u7684\u4ee3\u7801\u884c\uff0c\u5e76\u7528\u5c0f\u201c\u7bad\u5934\u201d\u6307\u5411\u884c\u91cc\u68c0\u6d4b\u5230\u7684\u7b2c\u4e00\u4e2a\u9519\u8bef\u3002\u9519\u8bef\u662f\u7531\u7bad\u5934 \u4e0a\u65b9 \u7684 token \u89e6\u53d1\u7684\uff08\u81f3\u5c11\u662f\u5728\u8fd9\u91cc\u68c0\u6d4b\u51fa\u7684\uff09\uff1a\u672c\u4f8b\u4e2d\uff0c\u5728 [ print() ]\u51fd\u6570\u4e2d\u68c0\u6d4b\u5230\u9519\u8bef\uff0c\u56e0\u4e3a\uff0c\u5728\u5b83\u524d\u9762\u7f3a\u5c11\u5192\u53f7\uff08 ':' \uff09 \u3002\u9519\u8bef\u4fe1\u606f\u8fd8\u8f93\u51fa\u6587\u4ef6\u540d\u4e0e\u884c\u53f7\uff0c\u5728\u4f7f\u7528\u811a\u672c\u6587\u4ef6\u65f6\uff0c\u5c31\u53ef\u4ee5\u77e5\u9053\u53bb\u54ea\u91cc\u67e5\u9519\u3002","title":"\u53e5\u6cd5\u9519\u8bef"},{"location":"python/basics/basic/#_3","text":"[ raise ] \u8bed\u53e5\u652f\u6301\u5f3a\u5236\u89e6\u53d1\u6307\u5b9a\u7684\u5f02\u5e38\u3002\u4f8b\u5982\uff1a >>> >>> raise NameError('HiThere') Traceback (most recent call last): File \"<stdin>\", line 1, in <module> NameError: HiThere [ raise ] \u552f\u4e00\u7684\u53c2\u6570\u5c31\u662f\u8981\u89e6\u53d1\u7684\u5f02\u5e38\u3002\u8fd9\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u5f02\u5e38\u5b9e\u4f8b\u6216\u5f02\u5e38\u7c7b\uff08\u6d3e\u751f\u81ea [ Exception ] \u7c7b\uff09\u3002\u5982\u679c\u4f20\u9012\u7684\u662f\u5f02\u5e38\u7c7b\uff0c\u5c06\u901a\u8fc7\u8c03\u7528\u6ca1\u6709\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u6765\u9690\u5f0f\u5b9e\u4f8b\u5316\uff1a raise ValueError # shorthand for 'raise ValueError()' \u5982\u679c\u53ea\u60f3\u5224\u65ad\u662f\u5426\u89e6\u53d1\u4e86\u5f02\u5e38\uff0c\u4f46\u5e76\u4e0d\u6253\u7b97\u5904\u7406\u8be5\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528\u66f4\u7b80\u5355\u7684 [ raise ]\u8bed\u53e5\u91cd\u65b0\u89e6\u53d1\u5f02\u5e38\uff1a >>> >>> try: ... raise NameError('HiThere') ... except NameError: ... print('An exception flew by!') ... raise ... An exception flew by! Traceback (most recent call last): File \"<stdin>\", line 2, in <module> NameError: HiThere","title":"\u89e6\u53d1\u5f02\u5e38"},{"location":"python/basics/basic/#_4","text":"[ raise ] \u8bed\u53e5\u652f\u6301\u53ef\u9009\u7684 [ from ]\u5b50\u53e5\uff0c\u8be5\u5b50\u53e5\u7528\u4e8e\u542f\u7528\u94fe\u5f0f\u5f02\u5e38\u3002 \u4f8b\u5982\uff1a # exc must be exception instance or None. raise RuntimeError from exc \u8f6c\u6362\u5f02\u5e38\u65f6\uff0c\u8fd9\u79cd\u65b9\u5f0f\u5f88\u6709\u7528\u3002\u4f8b\u5982\uff1a >>> >>> def func(): ... raise ConnectionError ... >>> try: ... func() ... except ConnectionError as exc: ... raise RuntimeError('Failed to open database') from exc ... Traceback (most recent call last): File \"<stdin>\", line 2, in <module> File \"<stdin>\", line 2, in func ConnectionError The above exception was the direct cause of the following exception: Traceback (most recent call last): File \"<stdin>\", line 4, in <module> RuntimeError: Failed to open database \u5f02\u5e38\u94fe\u4f1a\u5728 [ except ]\u6216 [ finally ] \u5b50\u53e5\u5185\u90e8\u5f15\u53d1\u5f02\u5e38\u65f6\u81ea\u52a8\u751f\u6210\u3002 \u8fd9\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 from None \u8fd9\u6837\u7684\u5199\u6cd5\u6765\u7981\u7528: >>> >>> try: ... open('database.sqlite') ... except OSError: ... raise RuntimeError from None ... Traceback (most recent call last): File \"<stdin>\", line 4, in <module> RuntimeError \u5f02\u5e38\u94fe\u673a\u5236\u8be6\u89c1 \u5185\u7f6e\u5f02\u5e38 \u3002","title":"\u5f02\u5e38\u94fe"},{"location":"python/basics/basic/#_5","text":"\u5f53\u7136\uff0c __init__() \u65b9\u6cd5\u8fd8\u53ef\u4ee5\u6709\u989d\u5916\u53c2\u6570\u4ee5\u5b9e\u73b0\u66f4\u9ad8\u7075\u6d3b\u6027\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u63d0\u4f9b\u7ed9\u7c7b\u5b9e\u4f8b\u5316\u8fd0\u7b97\u7b26\u7684\u53c2\u6570\u5c06\u88ab\u4f20\u9012\u7ed9 __init__() \u3002 \u4f8b\u5982\uff0c: >>> >>> class Complex: ... def __init__(self, realpart, imagpart): ... self.r = realpart ... self.i = imagpart ... >>> x = Complex(3.0, -4.5) >>> x.r, x.i (3.0, -4.5)","title":"\u7c7b\u7684\u6784\u9020\u51fd\u6570"},{"location":"python/basics/basic/#_6","text":"class A(object): def __init__(self): self.__data = [] # \u7ffb\u8bd1\u6210 self._A__data=[] def add(self, item): self.__data.append(item) # \u7ffb\u8bd1\u6210 self._A__data.append(item) def printData(self): print(self.__data) # \u7ffb\u8bd1\u6210 self._A__data a = A() a.add('hello') a.add('python') a.printData() # print a.__data #\u5916\u754c\u4e0d\u80fd\u8bbf\u95ee\u79c1\u6709\u53d8\u91cf AttributeError: 'A' object has no attribute '__data' print(a._A__data) # \u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5728\u5916\u9762\u4e5f\u80fd\u591f\u8bbf\u95ee\u201c\u79c1\u6709\u201d\u53d8\u91cf\uff1b\u8fd9\u4e00\u70b9\u5728\u8c03\u8bd5\u4e2d\u662f\u6bd4\u8f83\u6709\u7528\u7684\uff01 \u7ed3\u679c\uff1a ['hello', 'python'] ['hello', 'python']","title":"\u7c7b\u4e2d\u79c1\u6709\u53d8\u91cf"},{"location":"python/basics/basic/#_7","text":"\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u60a8\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u5927\u591a\u6570\u5bb9\u5668\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f7f\u7528 [ for ] \u8bed\u53e5: for element in [1, 2, 3]: print(element) for element in (1, 2, 3): print(element) for key in {'one':1, 'two':2}: print(key) for char in \"123\": print(char) for line in open(\"myfile.txt\"): print(line, end='') \u8fd9\u79cd\u8bbf\u95ee\u98ce\u683c\u6e05\u6670\u3001\u7b80\u6d01\u53c8\u65b9\u4fbf\u3002 \u8fed\u4ee3\u5668\u7684\u4f7f\u7528\u975e\u5e38\u666e\u904d\u5e76\u4f7f\u5f97 Python \u6210\u4e3a\u4e00\u4e2a\u7edf\u4e00\u7684\u6574\u4f53\u3002 \u5728\u5e55\u540e\uff0c[ for ]\u8bed\u53e5\u4f1a\u5728\u5bb9\u5668\u5bf9\u8c61\u4e0a\u8c03\u7528 [ iter() ]\u3002 \u8be5\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5b9a\u4e49\u4e86 [ __next__() ] \u65b9\u6cd5\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u6b64\u65b9\u6cd5\u5c06\u9010\u4e00\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u3002 \u5f53\u5143\u7d20\u7528\u5c3d\u65f6\uff0c[ __next__() ] \u5c06\u5f15\u53d1 [ StopIteration ] \u5f02\u5e38\u6765\u901a\u77e5\u7ec8\u6b62 for \u5faa\u73af\u3002 \u4f60\u53ef\u4ee5\u4f7f\u7528 [ next() ] \u5185\u7f6e\u51fd\u6570\u6765\u8c03\u7528 [ __next__() ]\u65b9\u6cd5\uff1b\u8fd9\u4e2a\u4f8b\u5b50\u663e\u793a\u4e86\u5b83\u7684\u8fd0\u4f5c\u65b9\u5f0f: >>> >>> s = 'abc' >>> it = iter(s) >>> it <iterator object at 0x00A1DB50> >>> next(it) 'a' >>> next(it) 'b' >>> next(it) 'c' >>> next(it) Traceback (most recent call last): File \"<stdin>\", line 1, in <module> next(it) StopIteration \u770b\u8fc7\u8fed\u4ee3\u5668\u534f\u8bae\u7684\u5e55\u540e\u673a\u5236\uff0c\u7ed9\u4f60\u7684\u7c7b\u6dfb\u52a0\u8fed\u4ee3\u5668\u884c\u4e3a\u5c31\u5f88\u5bb9\u6613\u4e86\u3002 \u5b9a\u4e49\u4e00\u4e2a __iter__() \u65b9\u6cd5\u6765\u8fd4\u56de\u4e00\u4e2a\u5e26\u6709 [ __next__() ] \u65b9\u6cd5\u7684\u5bf9\u8c61\u3002 \u5982\u679c\u7c7b\u5df2\u5b9a\u4e49\u4e86 __next__() \uff0c\u5219 __iter__() \u53ef\u4ee5\u7b80\u5355\u5730\u8fd4\u56de self : class Reverse: \"\"\"Iterator for looping over a sequence backwards.\"\"\" def __init__(self, data): self.data = data self.index = len(data) def __iter__(self): return self def __next__(self): if self.index == 0: raise StopIteration self.index = self.index - 1 return self.data[self.index] >>> >>> rev = Reverse('spam') >>> iter(rev) <__main__.Reverse object at 0x00A1DB50> >>> for char in rev: ... print(char) ... m a p s","title":"\u8fed\u4ee3\u5668"},{"location":"python/basics/basic/#_8","text":"\u751f\u6210\u5668 \u662f\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u8fed\u4ee3\u5668\u7684\u7b80\u5355\u800c\u5f3a\u5927\u7684\u5de5\u5177\u3002 \u5b83\u4eec\u7684\u5199\u6cd5\u7c7b\u4f3c\u4e8e\u6807\u51c6\u7684\u51fd\u6570\uff0c\u4f46\u5f53\u5b83\u4eec\u8981\u8fd4\u56de\u6570\u636e\u65f6\u4f1a\u4f7f\u7528 [ yield ]\u8bed\u53e5\u3002 \u6bcf\u6b21\u5728\u751f\u6210\u5668\u4e0a\u8c03\u7528 [ next() ] \u65f6\uff0c\u5b83\u4f1a\u4ece\u4e0a\u6b21\u79bb\u5f00\u7684\u4f4d\u7f6e\u6062\u590d\u6267\u884c\uff08\u5b83\u4f1a\u8bb0\u4f4f\u4e0a\u6b21\u6267\u884c\u8bed\u53e5\u65f6\u7684\u6240\u6709\u6570\u636e\u503c\uff09\u3002 \u4e00\u4e2a\u663e\u793a\u5982\u4f55\u975e\u5e38\u5bb9\u6613\u5730\u521b\u5efa\u751f\u6210\u5668\u7684\u793a\u4f8b\u5982\u4e0b: def reverse(data): for index in range(len(data)-1, -1, -1): yield data[index] >>> >>> for char in reverse('golf'): ... print(char) ... f l o g \u53ef\u4ee5\u7528\u751f\u6210\u5668\u6765\u5b8c\u6210\u7684\u64cd\u4f5c\u540c\u6837\u53ef\u4ee5\u7528\u524d\u4e00\u8282\u6240\u63cf\u8ff0\u7684\u57fa\u4e8e\u7c7b\u7684\u8fed\u4ee3\u5668\u6765\u5b8c\u6210\u3002 \u4f46\u751f\u6210\u5668\u7684\u5199\u6cd5\u66f4\u4e3a\u7d27\u51d1\uff0c\u56e0\u4e3a\u5b83\u4f1a\u81ea\u52a8\u521b\u5efa __iter__() \u548c [ __next__() ] \u65b9\u6cd5\u3002 \u53e6\u4e00\u4e2a\u5173\u952e\u7279\u6027\u5728\u4e8e\u5c40\u90e8\u53d8\u91cf\u548c\u6267\u884c\u72b6\u6001\u4f1a\u5728\u6bcf\u6b21\u8c03\u7528\u4e4b\u95f4\u81ea\u52a8\u4fdd\u5b58\u3002 \u8fd9\u4f7f\u5f97\u8be5\u51fd\u6570\u76f8\u6bd4\u4f7f\u7528 self.index \u548c self.data \u8fd9\u79cd\u5b9e\u4f8b\u53d8\u91cf\u7684\u65b9\u5f0f\u66f4\u6613\u7f16\u5199\u4e14\u66f4\u4e3a\u6e05\u6670\u3002 \u9664\u4e86\u4f1a\u81ea\u52a8\u521b\u5efa\u65b9\u6cd5\u548c\u4fdd\u5b58\u7a0b\u5e8f\u72b6\u6001\uff0c\u5f53\u751f\u6210\u5668\u7ec8\u7ed3\u65f6\uff0c\u5b83\u4eec\u8fd8\u4f1a\u81ea\u52a8\u5f15\u53d1 [ StopIteration ]\u3002 \u8fd9\u4e9b\u7279\u6027\u7ed3\u5408\u5728\u4e00\u8d77\uff0c\u4f7f\u5f97\u521b\u5efa\u8fed\u4ee3\u5668\u80fd\u4e0e\u7f16\u5199\u5e38\u89c4\u51fd\u6570\u4e00\u6837\u5bb9\u6613\u3002","title":"\u751f\u6210\u5668"},{"location":"python/basics/basic/#_9","text":"\u4e00\u4e9bPython\u7528\u6237\u5bf9\u4e86\u89e3\u540c\u4e00\u95ee\u9898\u7684\u4e0d\u540c\u65b9\u6cd5\u7684\u76f8\u5bf9\u6027\u80fd\u4ea7\u751f\u4e86\u6d53\u539a\u7684\u5174\u8da3\u3002 Python\u63d0\u4f9b\u4e86\u4e00\u79cd\u53ef\u4ee5\u7acb\u5373\u56de\u7b54\u8fd9\u4e9b\u95ee\u9898\u7684\u6d4b\u91cf\u5de5\u5177\u3002 \u4f8b\u5982\uff0c\u5143\u7ec4\u5c01\u5305\u548c\u62c6\u5305\u529f\u80fd\u76f8\u6bd4\u4f20\u7edf\u7684\u4ea4\u6362\u53c2\u6570\u53ef\u80fd\u66f4\u5177\u5438\u5f15\u529b\u3002[ timeit ]\u6a21\u5757\u53ef\u4ee5\u5feb\u901f\u6f14\u793a\u5728\u8fd0\u884c\u6548\u7387\u65b9\u9762\u4e00\u5b9a\u7684\u4f18\u52bf: >>> >>> from timeit import Timer >>> Timer('t=a; a=b; b=t', 'a=1; b=2').timeit() 0.57535828626024577 >>> Timer('a,b = b,a', 'a=1; b=2').timeit() 0.54962537085770791 \u4e0e [ timeit ]\u7684\u7cbe\u7ec6\u7c92\u5ea6\u7ea7\u522b\u76f8\u53cd\uff0c [ profile ] \u6a21\u5757\u63d0\u4f9b\u4e86\u7528\u4e8e\u5728\u8f83\u5927\u7684\u4ee3\u7801\u5757\u4e2d\u8bc6\u522b\u65f6\u95f4\u5173\u952e\u90e8\u5206\u7684\u5de5\u5177\u3002","title":"\u6027\u80fd\u6d4b\u91cf"},{"location":"python/basics/basic/#_10","text":"import flask print(dir(flask))","title":"\u67e5\u770b\u5305\u5185\u5bf9\u8c61"},{"location":"python/basics/basic/#_11","text":"def average(values): \"\"\"Computes the arithmetic mean of a list of numbers. >>> print(average([20, 30, 70])) 45.0 \"\"\" return sum(values) / len(values) result = average([20, 30, 70]) print(result) import doctest doctest.testmod() \u5728\u5f15\u53f7\u4e2d\uff0c\u5355\u5143\u6d4b\u8bd5\u60f3\u8ba9\u8fd9\u4e2a\u65b9\u6cd5\u7ed3\u679c\u7b49\u4e8e45 \u8fd0\u884c\u7ed3\u679c\uff1a 40.0 ********************************************************************** File \"D:\\idea\\zkh-infra-web\\tar\\test\\flask_learn\\unit_test.py\", line 4, in __main__.average Failed example: print(average([20, 30, 70])) Expected: 45.0 Got: 40.0 ********************************************************************** 1 items had failures: 1 of 1 in __main__.average ***Test Failed*** 1 failures. \u7531\u4e8e\u8fd0\u884c\u7ed3\u679c\u4e3a40\uff0c\u4e0d\u7b26\u5408\u9884\u671f\uff0c\u6240\u4ee5\u62a5\u9519","title":"\u5355\u5143\u6d4b\u8bd5"},{"location":"python/basics/basic/#_12","text":">>> x = 42 >>> def spam(a, b=x): ... print(a, b) ... >>> spam(1) 1 42 >>> x = 23 # Has no effect >>> spam(1) 1 42 >>>","title":"\u65b9\u6cd5\u8bbe\u7f6e\u9ed8\u8ba4\u53c2\u6570"},{"location":"python/basics/basic/#classmethod","text":"#!/usr/bin/python # -*- coding: UTF-8 -*- class A(object): bar = 1 def func1(self): print ('foo') @classmethod def func2(cls): print ('func2') print (cls.bar) cls().func1() # \u8c03\u7528 foo \u65b9\u6cd5 A.func2() # \u4e0d\u9700\u8981\u5b9e\u4f8b\u5316 \u7ed3\u679c\uff1a func2 1 foo Python\u67093\u79cd\u65b9\u6cd5\uff0c\u9759\u6001\u65b9\u6cd5\uff08staticmethod\uff09\uff0c\u7c7b\u65b9\u6cd5\uff08classmethod\uff09\u548c\u5b9e\u4f8b\u65b9\u6cd5\u3002\u4e0b\u9762\u7528\u4ee3\u7801\u4e3e\u4f8b\u3002 \u5bf9\u4e8e\u4e00\u822c\u7684\u51fd\u6570foo(x)\uff0c\u5b83\u8ddf\u7c7b\u548c\u7c7b\u7684\u5b9e\u4f8b\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb\uff0c\u76f4\u63a5\u8c03\u7528foo(x)\u5373\u53ef\u3002 # -*- coding:utf-8 -*- def foo(x): print(\"running foo(%s)\" % x) foo(\"test\") \u5728\u7c7bA\u91cc\u9762\u7684\u5b9e\u4f8b\u65b9\u6cd5foo(self, x)\uff0c \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fself \uff0c\u6211\u4eec\u9700\u8981\u6709\u4e00\u4e2aA\u7684\u5b9e\u4f8b\uff0c\u624d\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 # -*- coding:utf-8 -*- class A: def foo(self, x): print(\"running foo(%s, %s)\" % (self, x)) # A.foo(x) \u8fd9\u6837\u4f1a\u62a5\u9519 a = A() a.foo(\"test\") \u5f53\u6211\u4eec\u9700\u8981\u548c\u7c7b\u76f4\u63a5\u8fdb\u884c\u4ea4\u4e92\uff0c\u800c\u4e0d\u9700\u8981\u548c\u5b9e\u4f8b\u8fdb\u884c\u4ea4\u4e92\u65f6\uff0c\u7c7b\u65b9\u6cd5\u662f\u6700\u597d\u7684\u9009\u62e9\u3002\u7c7b\u65b9\u6cd5\u4e0e\u5b9e\u4f8b\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u4f46\u662f\u4f20\u9012\u7684\u4e0d\u662f\u7c7b\u7684\u5b9e\u4f8b\uff0c\u800c\u662f\u7c7b\u672c\u8eab\uff0c \u7b2c\u4e00\u4e2a\u53c2\u6570\u662fcls \u3002 \u6211\u4eec\u53ef\u4ee5\u7528\u7c7b\u7684\u5b9e\u4f8b\u8c03\u7528\u7c7b\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528\u7c7b\u540d\u6765\u8c03\u7528\u3002 # -*- coding:utf-8 -*- class A: class_attr = \"attr\" def __init__(self): pass @classmethod def class_foo(cls): print(\"running class_foo(%s)\" % (cls.class_attr)) a = A() a.class_foo() A.class_foo() \u9759\u6001\u65b9\u6cd5\u7c7b\u4f3c\u666e\u901a\u65b9\u6cd5\uff0c\u53c2\u6570\u91cc\u9762\u4e0d\u7528self\u3002\u8fd9\u4e9b\u65b9\u6cd5\u548c\u7c7b\u76f8\u5173\uff0c\u4f46\u662f\u53c8\u4e0d\u9700\u8981\u7c7b\u548c\u5b9e\u4f8b\u4e2d\u7684\u4efb\u4f55\u4fe1\u606f\u3001\u5c5e\u6027\u7b49\u7b49\u3002\u5982\u679c\u628a\u8fd9\u4e9b\u65b9\u6cd5\u5199\u5230\u7c7b\u5916\u9762\uff0c\u8fd9\u6837\u5c31\u628a\u548c\u7c7b\u76f8\u5173\u7684\u4ee3\u7801\u5206\u6563\u5230\u7c7b\u5916\uff0c\u4f7f\u5f97\u4e4b\u540e\u5bf9\u4e8e\u4ee3\u7801\u7684\u7406\u89e3\u548c\u7ef4\u62a4\u90fd\u662f\u5de8\u5927\u7684\u969c\u788d\u3002\u800c\u9759\u6001\u65b9\u6cd5\u5c31\u662f\u7528\u6765\u89e3\u51b3\u8fd9\u4e00\u7c7b\u95ee\u9898\u7684\u3002 \u6bd4\u5982\u6211\u4eec\u68c0\u67e5\u662f\u5426\u5f00\u542f\u4e86\u65e5\u5fd7\u529f\u80fd\uff0c\u8fd9\u4e2a\u548c\u7c7b\u76f8\u5173\uff0c\u4f46\u662f\u8ddf\u7c7b\u7684\u5c5e\u6027\u548c\u5b9e\u4f8b\u90fd\u6ca1\u6709\u5173\u7cfb\u3002 # -*- coding:utf-8 -*- log_enabled = True class A: class_attr = \"attr\" def __init__(self): pass @staticmethod def static_foo(): if log_enabled: print(\"log is enabled\") else: print(\"log is disabled\") A.static_foo() @staticmethod\u4e0d\u9700\u8981\u8868\u793a\u81ea\u8eab\u5bf9\u8c61\u7684self\u548c\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\uff0c\u5c31\u8ddf\u4f7f\u7528\u51fd\u6570\u4e00\u6837\u3002 @classmethod\u4e5f\u4e0d\u9700\u8981self\u53c2\u6570\uff0c\u4f46\u7b2c\u4e00\u4e2a\u53c2\u6570\u9700\u8981\u662f\u8868\u793a\u81ea\u8eab\u7c7b\u7684cls\u53c2\u6570\u3002 \u5982\u679c\u5728@staticmethod\u4e2d\u8981\u8c03\u7528\u5230\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e9b\u5c5e\u6027\u65b9\u6cd5\uff0c\u53ea\u80fd\u76f4\u63a5\u7c7b\u540d.\u5c5e\u6027\u540d\u6216\u7c7b\u540d.\u65b9\u6cd5\u540d\u3002 \u800c@classmethod\u56e0\u4e3a\u6301\u6709cls\u53c2\u6570\uff0c\u53ef\u4ee5\u6765\u8c03\u7528\u7c7b\u7684\u5c5e\u6027\uff0c\u7c7b\u7684\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u5bf9\u8c61\u7b49\uff0c\u907f\u514d\u786c\u7f16\u7801\u3002","title":"classmethod \u7684\u4f7f\u7528\u65b9\u6cd5"},{"location":"python/basics/mypy/","text":"Mypy\u662fPython\u7684\u53ef\u9009\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u5668\u3002\u60a8\u53ef\u4ee5\u5728Python\u7a0b\u5e8f\u4e2d\u6dfb\u52a0\u7c7b\u578b\u63d0\u793a\uff08PEP 484\uff09\uff0c\u5e76\u4f7f\u7528mypy\u8fdb\u884c\u9759\u6001\u7c7b\u578b\u68c0\u67e5\u3002\u67e5\u627e\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\uff0c\u751a\u81f3\u4e0d\u8fd0\u884c\u5b83\u4eec\uff01 \u5b89\u88c5 pip3 install mypy Test\u7ee7\u627fABC 1. class ABC(object): def prt(self): print(self) print(self.__class__) class Test(ABC): def prt(self): print(self) print(self.__class__) def prc(self): print(\"abc\") g: \"ABC\" = Test() g.prt() \u8fd0\u884c\u7ed3\u679c: (venv) D:\\idea\\flask_learn>mypy learn.py Success: no issues found in 1 source file 2 class ABC(object): def prt(self): print(self) print(self.__class__) class Test(ABC): def prt(self): print(self) print(self.__class__) def prc(self): print(\"abc\") g: \"ABC\" = Test() g.prc() \u8fd0\u884c\u7ed3\u679c\uff1a (venv) D:\\idea\\flask_learn>mypy learn.py learn.py:18: error: \"ABC\" has no attribute \"prc\" Found 1 error in 1 file (checked 1 source file) 3 class Person(object): # \u5b9a\u4e49\u4e00\u4e2a\u7236\u7c7b def talk(self): # \u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5 print(\"person is talking....\") class Chinese(Person): # \u5b9a\u4e49\u4e00\u4e2a\u5b50\u7c7b\uff0c \u7ee7\u627fPerson\u7c7b def walk(self): # \u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u5176\u81ea\u8eab\u7684\u65b9\u6cd5 print('is walking...') g: \"Person\" = Chinese() g.walk() \u8fd0\u884c\u7ed3\u679c\uff1a (venv) D:\\idea\\flask_learn>mypy learn.py learn.py:14: error: \"Person\" has no attribute \"walk\" Found 1 error in 1 file (checked 1 source file) \u5e73\u65f6\u6211\u4eec\u4ee3\u7801\u5927\u6982\u90fd\u662f\u4e0b\u9762\u7684\u6837\u5b50 # \u53c2\u6570name\u7684\u7c7b\u578b\u662f\u672a\u77e5\u7684 # \u8fd4\u56de\u7684\u7c7b\u578b\u4e5f\u662f\u672a\u77e5\u7684 def greeting(name): return 'Hello ' + name \u7a0d\u5fae\u4fee\u6539\u4e00\u4e9b # \u53c2\u6570name\u540e\u9762\u8ddf\u4e86:str \u4ee3\u8868name\u671f\u671b\u662fstr\u7c7b\u578b # \u53c2\u6570\u62ec\u53f7\u540e\u9762\u8ddf\u4e86->str\u4ee3\u8868\u8fd4\u56de\u7c7b\u578b\u4e3astr\u7c7b\u578b def greeting(name: str) -> str: return 'Hello ' + name x: str = 'xxx' # \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u4e3astr\u7c7b\u578b greeting(x) # Hello xxx greeting(123) # TypeError: can only concatenate str (not \"int\") to str \u5230\u76ee\u524d\u4e3a\u6b62\u4ec5\u6709str\u3001float\u7b49\u57fa\u672c\u7c7b\u578b\uff0c\u4f7f\u7528list\u3001tuple\u590d\u6742\u7c7b\u578b\u9700\u8981\u5f15\u7528typing\u4e2d\u7684\u7c7b\u578b LIST \u6570\u7ec4\u7c7b\u578b from typing import List # \u53c2\u6570names\u4e3alist\u7c7b\u578b\u5e76\u4e14\u5143\u7d20\u90fd\u662fstr\u7c7b\u578b # \u8fd4\u56de\u4e3aNone def greet_all(names: List[str]) -> None: for name in names: print('Hello ' + name) names = [\"Alice\", \"Bob\", \"Charlie\"] ages = [10, 20, 30] greet_all(names) # Ok! greet_all(ages) #\u51fa\u9519\u4e86 Error due to incompatible types Dict \u5b57\u5178\u7c7b\u578b from typing import Dict # Dict[int, str] int\u4ee3\u8868key\u7c7b\u578b\uff0c str\u4ee3\u8868val\u7c7b\u578b def test(t: Dict[int, str]) -> Dict: return t test({1: '234'}) # {1: '234'} Iterable \u53ef\u4ee5\u8fed\u4ee3\u7c7b\u578b\u5305\u62ec List\u3001Set\u3001Tuple\u3001Str\u3001Dict def greeting(names: Iterable[str]) -> None: for name in names: print(name) greeting(['aaa', 'bbb']) # list aaa bbb greeting(('ccc', 'ddd')) # tuple ccc ddd greeting({'eee', 'fff'}) # set eee fff greeting({'ggg': 'hhh'}) # dict ggg greeting('123') # str 1 2 3 greeting(678) # error: Argument 1 to \"greeting\" has incompatible type \"int\"; expected \"Iterable[str]\" Union \u63a5\u53d7\u591a\u4e2a\u6307\u5b9a\u7c7b\u578b\uff0c\u4f46\u4e0d\u63a5\u53d7\u9664\u6b64\u5916\u7684\u7c7b\u578b from typing import Union # user_id \u53ea\u80fd\u4e3aint\u6216\u8005str def normalize_id(user_id: Union[int, str]) -> str: if isinstance(user_id, int): return 'user-{}'.format(100000 + user_id) else: return user_id normalize_id(1) # user-100001 normalize_id('2') # 2 Optional \u53ef\u9009\u7c7b\u578b\uff0c\u7ed9\u53c2\u6570\u8bbe\u7f6e\u9ed8\u8ba4\u503c from typing import Optional # Optional[str]\u53ea\u662fUnion [str\uff0cNone]\u7684\u7b80\u5199\u6216\u522b\u540d\u3002\u5b83\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u5e2e\u52a9\u529f\u80fd\u7b7e\u540d\u770b\u8d77\u6765\u66f4\u6e05\u6d01 # Optional[str, int] \u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u7c7b\u578b, \u8fd9\u6837\u662f\u4e0d\u6b63\u786e\u7684 def greeting(name: Optional[str] = None) -> str: if name is None: name = 'stranger' return 'Hello, ' + name greeting() # Hello, stranger greeting('123') # Hello, 123 Any \u6709\u65f6\u5019\u6211\u4eec\u4e0d\u786e\u5b9a\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u5230Any from typing import Any def greeting(name: Any = None) -> str: if name is None: name = 'stranger' return 'Hello, ' + str(name) greeting() # Hello, stranger greeting('123') # Hello, 123 greeting(234) # Hello, 234 greeting([345]) # Hello, [345] TypeVar \u81ea\u5b9a\u4e49\u7c7b\u578b from typing import TypeVar T = TypeVar('T') # \u4efb\u610f\u7c7b\u578b A = TypeVar('A', int, str) # A\u7c7b\u578b\u53ea\u80fd\u4e3aint\u6216str def test(t: A) -> None: print(t) test(1)","title":"mypy"},{"location":"python/basics/mypy/#list","text":"\u6570\u7ec4\u7c7b\u578b from typing import List # \u53c2\u6570names\u4e3alist\u7c7b\u578b\u5e76\u4e14\u5143\u7d20\u90fd\u662fstr\u7c7b\u578b # \u8fd4\u56de\u4e3aNone def greet_all(names: List[str]) -> None: for name in names: print('Hello ' + name) names = [\"Alice\", \"Bob\", \"Charlie\"] ages = [10, 20, 30] greet_all(names) # Ok! greet_all(ages) #\u51fa\u9519\u4e86 Error due to incompatible types","title":"LIST"},{"location":"python/basics/mypy/#dict","text":"\u5b57\u5178\u7c7b\u578b from typing import Dict # Dict[int, str] int\u4ee3\u8868key\u7c7b\u578b\uff0c str\u4ee3\u8868val\u7c7b\u578b def test(t: Dict[int, str]) -> Dict: return t test({1: '234'}) # {1: '234'}","title":"Dict"},{"location":"python/basics/mypy/#iterable","text":"\u53ef\u4ee5\u8fed\u4ee3\u7c7b\u578b\u5305\u62ec List\u3001Set\u3001Tuple\u3001Str\u3001Dict def greeting(names: Iterable[str]) -> None: for name in names: print(name) greeting(['aaa', 'bbb']) # list aaa bbb greeting(('ccc', 'ddd')) # tuple ccc ddd greeting({'eee', 'fff'}) # set eee fff greeting({'ggg': 'hhh'}) # dict ggg greeting('123') # str 1 2 3 greeting(678) # error: Argument 1 to \"greeting\" has incompatible type \"int\"; expected \"Iterable[str]\"","title":"Iterable"},{"location":"python/basics/mypy/#union","text":"\u63a5\u53d7\u591a\u4e2a\u6307\u5b9a\u7c7b\u578b\uff0c\u4f46\u4e0d\u63a5\u53d7\u9664\u6b64\u5916\u7684\u7c7b\u578b from typing import Union # user_id \u53ea\u80fd\u4e3aint\u6216\u8005str def normalize_id(user_id: Union[int, str]) -> str: if isinstance(user_id, int): return 'user-{}'.format(100000 + user_id) else: return user_id normalize_id(1) # user-100001 normalize_id('2') # 2","title":"Union"},{"location":"python/basics/mypy/#optional","text":"\u53ef\u9009\u7c7b\u578b\uff0c\u7ed9\u53c2\u6570\u8bbe\u7f6e\u9ed8\u8ba4\u503c from typing import Optional # Optional[str]\u53ea\u662fUnion [str\uff0cNone]\u7684\u7b80\u5199\u6216\u522b\u540d\u3002\u5b83\u4e3b\u8981\u662f\u4e3a\u4e86\u65b9\u4fbf\u5e2e\u52a9\u529f\u80fd\u7b7e\u540d\u770b\u8d77\u6765\u66f4\u6e05\u6d01 # Optional[str, int] \u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u7c7b\u578b, \u8fd9\u6837\u662f\u4e0d\u6b63\u786e\u7684 def greeting(name: Optional[str] = None) -> str: if name is None: name = 'stranger' return 'Hello, ' + name greeting() # Hello, stranger greeting('123') # Hello, 123","title":"Optional"},{"location":"python/basics/mypy/#any","text":"\u6709\u65f6\u5019\u6211\u4eec\u4e0d\u786e\u5b9a\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u5230Any from typing import Any def greeting(name: Any = None) -> str: if name is None: name = 'stranger' return 'Hello, ' + str(name) greeting() # Hello, stranger greeting('123') # Hello, 123 greeting(234) # Hello, 234 greeting([345]) # Hello, [345]","title":"Any"},{"location":"python/basics/mypy/#typevar","text":"\u81ea\u5b9a\u4e49\u7c7b\u578b from typing import TypeVar T = TypeVar('T') # \u4efb\u610f\u7c7b\u578b A = TypeVar('A', int, str) # A\u7c7b\u578b\u53ea\u80fd\u4e3aint\u6216str def test(t: A) -> None: print(t) test(1)","title":"TypeVar"},{"location":"python/basics/class/class/","text":"\u7c7b\u7684\u7ee7\u627f class Person(object): # \u5b9a\u4e49\u4e00\u4e2a\u7236\u7c7b def talk(self): # \u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5 print(\"person is talking....\") class Chinese(Person): # \u5b9a\u4e49\u4e00\u4e2a\u5b50\u7c7b\uff0c \u7ee7\u627fPerson\u7c7b def walk(self): # \u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u5176\u81ea\u8eab\u7684\u65b9\u6cd5 print('is walking...') c = Chinese() c.talk() # \u8c03\u7528\u7ee7\u627f\u7684Person\u7c7b\u7684\u65b9\u6cd5 c.walk() # \u8c03\u7528\u672c\u8eab\u7684\u65b9\u6cd5 # \u8f93\u51fa person is talking.... is walking... \u6784\u9020\u51fd\u6570\u7684\u7ee7\u627f \u7ecf\u5178\u7c7b\u7684\u5199\u6cd5\uff1a \u7236\u7c7b\u540d\u79f0.__init__(self,\u53c2\u65701\uff0c\u53c2\u65702\uff0c...) \u65b0\u5f0f\u7c7b\u7684\u5199\u6cd5\uff1a super(\u5b50\u7c7b\uff0cself).__init__(\u53c2\u65701\uff0c\u53c2\u65702\uff0c....) class Person(object): def __init__(self, name, age): self.name = name self.age = age self.weight = 'weight' def talk(self): print(\"person is talking....\") class Chinese(Person): def __init__(self, name, age, language): # \u5148\u7ee7\u627f\uff0c\u5728\u91cd\u6784 Person.__init__(self, name, age) #\u7ee7\u627f\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210\uff1asuper(Chinese,self).__init__(name,age) self.language = language # \u5b9a\u4e49\u7c7b\u7684\u672c\u8eab\u5c5e\u6027 def walk(self): print('is walking...') class American(Person): pass c = Chinese('bigberg', 22, 'Chinese') \u5b50\u7c7b\u5bf9\u7236\u7c7b\u65b9\u6cd5\u7684\u91cd\u5199 class Person(object): def __init__(self, name, age): self.name = name self.age = age self.weight = 'weight' def talk(self): print(\"person is talking....\") class Chinese(Person): def __init__(self, name, age, language): Person.__init__(self, name, age) self.language = language print(self.name, self.age, self.weight, self.language) def talk(self): # \u5b50\u7c7b \u91cd\u6784\u65b9\u6cd5 print('%s is speaking chinese' % self.name) def walk(self): print('is walking...') c = Chinese('bigberg', 22, 'Chinese') c.talk() # \u8f93\u51fa bigberg 22 weight Chinese bigberg is speaking chinese \u7c7b\u7ee7\u627f\u7684\u4e8b\u4f8b class SchoolMember(object): '''\u5b66\u4e60\u6210\u5458\u57fa\u7c7b''' member = 0 def __init__(self, name, age, sex): self.name = name self.age = age self.sex = sex self.enroll() def enroll(self): '\u6ce8\u518c' print('just enrolled a new school member [%s].' % self.name) SchoolMember.member += 1 def tell(self): print('----%s----' % self.name) for k, v in self.__dict__.items(): print(k, v) print('----end-----') def __del__(self): print('\u5f00\u9664\u4e86[%s]' % self.name) SchoolMember.member -= 1 class Teacher(SchoolMember): '\u6559\u5e08' def __init__(self, name, age, sex, salary, course): SchoolMember.__init__(self, name, age, sex) self.salary = salary self.course = course def teaching(self): print('Teacher [%s] is teaching [%s]' % (self.name, self.course)) class Student(SchoolMember): '\u5b66\u751f' def __init__(self, name, age, sex, course, tuition): SchoolMember.__init__(self, name, age, sex) self.course = course self.tuition = tuition self.amount = 0 def pay_tuition(self, amount): print('student [%s] has just paied [%s]' % (self.name, amount)) self.amount += amount t1 = Teacher('Wusir', 28, 'M', 3000, 'python') t1.tell() s1 = Student('haitao', 38, 'M', 'python', 30000) s1.tell() s2 = Student('lichuang', 12, 'M', 'python', 11000) print(SchoolMember.member) del s2 print(SchoolMember.member) # \u8f93\u51fa ----end----- just enrolled a new school member [haitao]. ----haitao---- age 38 sex M name haitao amount 0 course python tuition 30000 ----end----- just enrolled a new school member [lichuang]. 3 \u5f00\u9664\u4e86[lichuang] 2 \u5f00\u9664\u4e86[Wusir] \u5f00\u9664\u4e86[haitao]","title":"\u7c7b\u7684\u7ee7\u627f"},{"location":"python/basics/class/class/#_1","text":"class Person(object): # \u5b9a\u4e49\u4e00\u4e2a\u7236\u7c7b def talk(self): # \u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5 print(\"person is talking....\") class Chinese(Person): # \u5b9a\u4e49\u4e00\u4e2a\u5b50\u7c7b\uff0c \u7ee7\u627fPerson\u7c7b def walk(self): # \u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u5176\u81ea\u8eab\u7684\u65b9\u6cd5 print('is walking...') c = Chinese() c.talk() # \u8c03\u7528\u7ee7\u627f\u7684Person\u7c7b\u7684\u65b9\u6cd5 c.walk() # \u8c03\u7528\u672c\u8eab\u7684\u65b9\u6cd5 # \u8f93\u51fa person is talking.... is walking...","title":"\u7c7b\u7684\u7ee7\u627f"},{"location":"python/basics/class/class/#_2","text":"\u7ecf\u5178\u7c7b\u7684\u5199\u6cd5\uff1a \u7236\u7c7b\u540d\u79f0.__init__(self,\u53c2\u65701\uff0c\u53c2\u65702\uff0c...) \u65b0\u5f0f\u7c7b\u7684\u5199\u6cd5\uff1a super(\u5b50\u7c7b\uff0cself).__init__(\u53c2\u65701\uff0c\u53c2\u65702\uff0c....) class Person(object): def __init__(self, name, age): self.name = name self.age = age self.weight = 'weight' def talk(self): print(\"person is talking....\") class Chinese(Person): def __init__(self, name, age, language): # \u5148\u7ee7\u627f\uff0c\u5728\u91cd\u6784 Person.__init__(self, name, age) #\u7ee7\u627f\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u5199\u6210\uff1asuper(Chinese,self).__init__(name,age) self.language = language # \u5b9a\u4e49\u7c7b\u7684\u672c\u8eab\u5c5e\u6027 def walk(self): print('is walking...') class American(Person): pass c = Chinese('bigberg', 22, 'Chinese')","title":"\u6784\u9020\u51fd\u6570\u7684\u7ee7\u627f"},{"location":"python/basics/class/class/#_3","text":"class Person(object): def __init__(self, name, age): self.name = name self.age = age self.weight = 'weight' def talk(self): print(\"person is talking....\") class Chinese(Person): def __init__(self, name, age, language): Person.__init__(self, name, age) self.language = language print(self.name, self.age, self.weight, self.language) def talk(self): # \u5b50\u7c7b \u91cd\u6784\u65b9\u6cd5 print('%s is speaking chinese' % self.name) def walk(self): print('is walking...') c = Chinese('bigberg', 22, 'Chinese') c.talk() # \u8f93\u51fa bigberg 22 weight Chinese bigberg is speaking chinese","title":"\u5b50\u7c7b\u5bf9\u7236\u7c7b\u65b9\u6cd5\u7684\u91cd\u5199"},{"location":"python/basics/class/class/#_4","text":"class SchoolMember(object): '''\u5b66\u4e60\u6210\u5458\u57fa\u7c7b''' member = 0 def __init__(self, name, age, sex): self.name = name self.age = age self.sex = sex self.enroll() def enroll(self): '\u6ce8\u518c' print('just enrolled a new school member [%s].' % self.name) SchoolMember.member += 1 def tell(self): print('----%s----' % self.name) for k, v in self.__dict__.items(): print(k, v) print('----end-----') def __del__(self): print('\u5f00\u9664\u4e86[%s]' % self.name) SchoolMember.member -= 1 class Teacher(SchoolMember): '\u6559\u5e08' def __init__(self, name, age, sex, salary, course): SchoolMember.__init__(self, name, age, sex) self.salary = salary self.course = course def teaching(self): print('Teacher [%s] is teaching [%s]' % (self.name, self.course)) class Student(SchoolMember): '\u5b66\u751f' def __init__(self, name, age, sex, course, tuition): SchoolMember.__init__(self, name, age, sex) self.course = course self.tuition = tuition self.amount = 0 def pay_tuition(self, amount): print('student [%s] has just paied [%s]' % (self.name, amount)) self.amount += amount t1 = Teacher('Wusir', 28, 'M', 3000, 'python') t1.tell() s1 = Student('haitao', 38, 'M', 'python', 30000) s1.tell() s2 = Student('lichuang', 12, 'M', 'python', 11000) print(SchoolMember.member) del s2 print(SchoolMember.member) # \u8f93\u51fa ----end----- just enrolled a new school member [haitao]. ----haitao---- age 38 sex M name haitao amount 0 course python tuition 30000 ----end----- just enrolled a new school member [lichuang]. 3 \u5f00\u9664\u4e86[lichuang] 2 \u5f00\u9664\u4e86[Wusir] \u5f00\u9664\u4e86[haitao]","title":"\u7c7b\u7ee7\u627f\u7684\u4e8b\u4f8b"},{"location":"python/basics/class/class_var/","text":"Python \u7c7b\u53d8\u91cf\u4e0e\u5b9e\u4f8b\u53d8\u91cf \u7c7b\u53d8\u91cf\uff1a \u7c7b\u53d8\u91cf\u5b9a\u4e49\u5728\u7c7b\u4e2d\u4e14\u5728\u51fd\u6570\u4f53\u4e4b\u5916\u3002\u7c7b\u53d8\u91cf\u901a\u5e38\u4e0d\u4f5c\u4e3a\u5b9e\u4f8b\u53d8\u91cf\u4f7f\u7528\u3002\u7c7b\u53d8\u91cf\u5728\u6574\u4e2a\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u4e2d\u662f\u516c\u7528\u7684\u3002 \u5b9e\u4f8b\u53d8\u91cf\uff1a \u5b9a\u4e49\u5728\u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\uff0c\u7528 self \u7ed1\u5b9a\u5230\u5b9e\u4f8b\u4e0a\uff0c\u53ea\u4f5c\u7528\u4e8e\u5f53\u524d\u5b9e\u4f8b\u7684\u7c7b\u3002 \u8bbf\u95ee\u65b9\u5f0f \u7c7b\u53d8\u91cf\uff1a \u5728\u7c7b\u5185\u90e8\u548c\u5916\u90e8\uff0c\u7c7b\u53d8\u91cf\u90fd\u7528 \u7c7b\u540d.\u7c7b\u53d8\u91cf \u7684\u5f62\u5f0f\u8bbf\u95ee\u3002\u5728\u7c7b\u5185\u90e8\uff0c\u4e5f\u53ef\u4ee5\u7528 self.\u7c7b\u53d8\u91cf \u6765\u8bbf\u95ee\u7c7b\u53d8\u91cf\uff0c\u4f46\u6b64\u65f6\u5b83\u7684\u542b\u4e49\u5df2\u7ecf\u53d8\u4e86\uff0c\u5b9e\u9645\u4e0a\u5b83\u5df2\u7ecf\u6210\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u53d8\u91cf\u3002\u5728\u5b9e\u4f8b\u53d8\u91cf\u6ca1\u6709\u88ab\u91cd\u65b0\u8d4b\u503c\u65f6\uff0c\u7528 self.\u7c7b\u53d8\u91cf \u624d\u80fd\u8bbf\u95ee\u5230\u6b63\u786e\u7684\u503c\u3002\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5b9e\u4f8b\u53d8\u91cf\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u7684\u503c\uff0c\u5c31\u50cf\u5c40\u90e8\u53d8\u91cf\u5c4f\u853d\u6389\u5168\u5c40\u53d8\u91cf\u7684\u503c\u4e00\u6837\u3002\u6240\u4ee5\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u4e0d\u5c06\u7c7b\u53d8\u91cf\u4f5c\u4e3a\u5b9e\u4f8b\u53d8\u91cf\u4f7f\u7528\u7684\u3002 \u5b9e\u4f8b\u53d8\u91cf\uff1a \u5728\u7c7b\u5185\u90e8\uff0c\u5b9e\u4f8b\u53d8\u91cf\u7528 self.\u5b9e\u4f8b\u53d8\u91cf \u7684\u5f62\u5f0f\u8bbf\u95ee\uff1b\u5728\u7c7b\u5916\u90e8\uff0c\u7528 \u5b9e\u4f8b\u540d.\u5b9e\u4f8b\u53d8\u91cf \u7684\u5f62\u5f0f\u8bbf\u95ee\u3002\u5b9e\u4f8b\u53d8\u91cf\u662f\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5b9e\u4f8b\u4e0a\u7684\u53d8\u91cf\uff0c\u5b83\u53ea\u5c5e\u4e8e\u8fd9\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u4e00\u70b9\u533a\u522b\u4e8e\u7c7b\u53d8\u91cf\uff0c\u7c7b\u53d8\u91cf\u662f\u6240\u6709\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u6240\u5171\u4eab\u7684\u3002 self \u7b80\u4ecb \u7c7b\u7684\u65b9\u6cd5\u4e0e\u666e\u901a\u7684\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u7279\u522b\u7684\u533a\u522b \u2014\u2014 \u5b83\u4eec\u5fc5\u987b\u6709\u4e00\u4e2a\u989d\u5916\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u540d\u79f0\uff0c\u4f46\u662f\u5728\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u5019\u4f60\u4e0d\u4e3a\u8fd9\u4e2a\u53c2\u6570\u8d4b\u503c\uff0cPython \u4f1a\u63d0\u4f9b\u8fd9\u4e2a\u503c\u3002\u8fd9\u4e2a\u7279\u522b\u7684\u53d8\u91cf\u6307\u5bf9\u8c61\u672c\u8eab\uff0c\u6309\u7167\u60ef\u4f8b\u5b83\u7684\u540d\u79f0\u662f self\u3002\u867d\u7136\u4f60\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u53c2\u6570\u4efb\u4f55\u540d\u79f0\uff0c\u4f46\u662f \u5f3a\u70c8\u5efa\u8bae \u4f60\u4f7f\u7528 self \u8fd9\u4e2a\u540d\u79f0\u3002 \u5b9e\u9645\u4e0a\uff0c\u5b9e\u4f8b\u53d8\u91cf\u5c31\u662f\u4e00\u4e2a\u7528 self \u4fee\u9970\u7684\u53d8\u91cf\u3002self \u5c06\u4e00\u4e2a\u53d8\u91cf\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u5b9e\u4f8b\u4e0a\uff0c\u8fd9\u6837\u5b83\u5c31\u5c5e\u4e8e\u8fd9\u5b9e\u4f8b\u81ea\u5df1\u3002 class A(object): va = \"10\" def foo(self): print(\"A.va=\" + A.va) print(\"self.va=\" + self.va) self.va = \"40\" print(\"A.va=\" + A.va) print(\"self.va=\" + self.va) va = \"20\" print(\"va=\"+va) A.va = \"15\" print(\"A.va=\"+A.va) print(\"self.v=\"+self.va) obj1 = A() obj2 = A() obj1.foo() print(A.va) print(obj1.va) print(obj2.va) \u7ed3\u679c\uff1a A.va=10 self.va=10 A.va=10 self.va=40 va=20 A.va=15 self.v=40 15 40 15 \u5206\u6790\u7a0b\u5e8f\u7ed3\u679c\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7c7b\u53d8\u91cf\u53ef\u4ee5\u7528\u7c7b\u540d\u6216\u8005self\u7684\u5f62\u5f0f\u8bbf\u95ee\u3002\u5f53 self.\u7c7b\u53d8\u91cf \u88ab\u91cd\u65b0\u8d4b\u503c\u65f6\uff0c\u5b83\u7684\u503c\u5c31\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f46\u7c7b\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u968f\u4e4b\u53d8\u5316\u3002\u65b9\u6cd5\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u3002\u7c7b\u53d8\u91cf\u662f\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u7684\uff0c\u800c\u5b9e\u4f8b\u53d8\u91cf\u53ea\u5c5e\u4e8e\u5bf9\u8c61\u81ea\u5df1\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u5b9e\u4f8b\u53d8\u91cf\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u503c\u3002 \u8981\u70b9\u603b\u7ed3 1\u3001\u7c7b\u53d8\u91cf\u53ef\u4ee5\u7528 \u7c7b\u540d.\u7c7b\u53d8\u91cf \u548c self.\u7c7b\u53d8\u91cf \u4e24\u79cd\u65b9\u5f0f\u8bbf\u95ee\uff0c\u540e\u8005\u4e00\u822c\u60c5\u51b5\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 2\u3001\u7c7b\u53d8\u91cf\u662f\u6240\u6709\u5bf9\u8c61\u6240\u5171\u4eab\u7684\uff0c\u65e0\u8bba\u4efb\u4f55\u65f6\u5019\u90fd\u5efa\u8bae\u7528\u7c7b\u540d\u7684\u65b9\u5f0f\u8bbf\u95ee\u7c7b\u53d8\u91cf\u3002 3\u3001\u5b9e\u4f8b\u53d8\u91cf\u5728\u7c7b\u5185\u90e8\u7528 self \u8bbf\u95ee\uff0c\u5728\u7c7b\u5916\u90e8\u7528\u5b9e\u4f8b\u540d\u8bbf\u95ee\u3002 4\u3001\u7c7b\u53d8\u91cf\u901a\u8fc7 self \u8bbf\u95ee\u65f6\u5219\u88ab\u8f6c\u5316\u4e3a\u5b9e\u4f8b\u53d8\u91cf\uff0c\u88ab\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684\u5b9e\u4f8b\u4e0a\uff0c\u5176\u503c\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u3002 5\u3001\u901a\u8fc7\u5bf9\u5b9e\u4f8b\u53d8\u91cf\uff08self\uff09\u7684\u5f62\u5f0f\u5bf9\u7c7b\u53d8\u91cf\u91cd\u65b0\u8d4b\u503c\u540e\uff0c\u7c7b\u53d8\u91cf\u7684\u503c\u4e0d\u968f\u4e4b\u53d8\u5316\u3002 6\u3001\u65b9\u6cd5\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u3002 7\u3001\u540c\u4e00\u5b9e\u4f8b\u53d8\u91cf\u5728\u4e0d\u540c\u7684\u5b9e\u4f8b\u4e2d\u53ef\u80fd\u62e5\u6709\u4e0d\u540c\u7684\u503c\u3002 http://kuanghy.github.io/2015/12/19/python-variable","title":"\u7c7b\u53d8\u91cf\u4e0e\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python/basics/class/class_var/#python","text":"\u7c7b\u53d8\u91cf\uff1a \u7c7b\u53d8\u91cf\u5b9a\u4e49\u5728\u7c7b\u4e2d\u4e14\u5728\u51fd\u6570\u4f53\u4e4b\u5916\u3002\u7c7b\u53d8\u91cf\u901a\u5e38\u4e0d\u4f5c\u4e3a\u5b9e\u4f8b\u53d8\u91cf\u4f7f\u7528\u3002\u7c7b\u53d8\u91cf\u5728\u6574\u4e2a\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u4e2d\u662f\u516c\u7528\u7684\u3002 \u5b9e\u4f8b\u53d8\u91cf\uff1a \u5b9a\u4e49\u5728\u65b9\u6cd5\u4e2d\u7684\u53d8\u91cf\uff0c\u7528 self \u7ed1\u5b9a\u5230\u5b9e\u4f8b\u4e0a\uff0c\u53ea\u4f5c\u7528\u4e8e\u5f53\u524d\u5b9e\u4f8b\u7684\u7c7b\u3002","title":"Python \u7c7b\u53d8\u91cf\u4e0e\u5b9e\u4f8b\u53d8\u91cf"},{"location":"python/basics/class/class_var/#_1","text":"\u7c7b\u53d8\u91cf\uff1a \u5728\u7c7b\u5185\u90e8\u548c\u5916\u90e8\uff0c\u7c7b\u53d8\u91cf\u90fd\u7528 \u7c7b\u540d.\u7c7b\u53d8\u91cf \u7684\u5f62\u5f0f\u8bbf\u95ee\u3002\u5728\u7c7b\u5185\u90e8\uff0c\u4e5f\u53ef\u4ee5\u7528 self.\u7c7b\u53d8\u91cf \u6765\u8bbf\u95ee\u7c7b\u53d8\u91cf\uff0c\u4f46\u6b64\u65f6\u5b83\u7684\u542b\u4e49\u5df2\u7ecf\u53d8\u4e86\uff0c\u5b9e\u9645\u4e0a\u5b83\u5df2\u7ecf\u6210\u4e86\u4e00\u4e2a\u5b9e\u4f8b\u53d8\u91cf\u3002\u5728\u5b9e\u4f8b\u53d8\u91cf\u6ca1\u6709\u88ab\u91cd\u65b0\u8d4b\u503c\u65f6\uff0c\u7528 self.\u7c7b\u53d8\u91cf \u624d\u80fd\u8bbf\u95ee\u5230\u6b63\u786e\u7684\u503c\u3002\u7b80\u5355\u7684\u8bf4\u5c31\u662f\u5b9e\u4f8b\u53d8\u91cf\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u7684\u503c\uff0c\u5c31\u50cf\u5c40\u90e8\u53d8\u91cf\u5c4f\u853d\u6389\u5168\u5c40\u53d8\u91cf\u7684\u503c\u4e00\u6837\u3002\u6240\u4ee5\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u4e0d\u5c06\u7c7b\u53d8\u91cf\u4f5c\u4e3a\u5b9e\u4f8b\u53d8\u91cf\u4f7f\u7528\u7684\u3002 \u5b9e\u4f8b\u53d8\u91cf\uff1a \u5728\u7c7b\u5185\u90e8\uff0c\u5b9e\u4f8b\u53d8\u91cf\u7528 self.\u5b9e\u4f8b\u53d8\u91cf \u7684\u5f62\u5f0f\u8bbf\u95ee\uff1b\u5728\u7c7b\u5916\u90e8\uff0c\u7528 \u5b9e\u4f8b\u540d.\u5b9e\u4f8b\u53d8\u91cf \u7684\u5f62\u5f0f\u8bbf\u95ee\u3002\u5b9e\u4f8b\u53d8\u91cf\u662f\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5b9e\u4f8b\u4e0a\u7684\u53d8\u91cf\uff0c\u5b83\u53ea\u5c5e\u4e8e\u8fd9\u4e2a\u5b9e\u4f8b\u3002\u8fd9\u4e00\u70b9\u533a\u522b\u4e8e\u7c7b\u53d8\u91cf\uff0c\u7c7b\u53d8\u91cf\u662f\u6240\u6709\u6765\u81ea\u4e8e\u540c\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u6240\u5171\u4eab\u7684\u3002","title":"\u8bbf\u95ee\u65b9\u5f0f"},{"location":"python/basics/class/class_var/#self","text":"\u7c7b\u7684\u65b9\u6cd5\u4e0e\u666e\u901a\u7684\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u7279\u522b\u7684\u533a\u522b \u2014\u2014 \u5b83\u4eec\u5fc5\u987b\u6709\u4e00\u4e2a\u989d\u5916\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u540d\u79f0\uff0c\u4f46\u662f\u5728\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u7684\u65f6\u5019\u4f60\u4e0d\u4e3a\u8fd9\u4e2a\u53c2\u6570\u8d4b\u503c\uff0cPython \u4f1a\u63d0\u4f9b\u8fd9\u4e2a\u503c\u3002\u8fd9\u4e2a\u7279\u522b\u7684\u53d8\u91cf\u6307\u5bf9\u8c61\u672c\u8eab\uff0c\u6309\u7167\u60ef\u4f8b\u5b83\u7684\u540d\u79f0\u662f self\u3002\u867d\u7136\u4f60\u53ef\u4ee5\u7ed9\u8fd9\u4e2a\u53c2\u6570\u4efb\u4f55\u540d\u79f0\uff0c\u4f46\u662f \u5f3a\u70c8\u5efa\u8bae \u4f60\u4f7f\u7528 self \u8fd9\u4e2a\u540d\u79f0\u3002 \u5b9e\u9645\u4e0a\uff0c\u5b9e\u4f8b\u53d8\u91cf\u5c31\u662f\u4e00\u4e2a\u7528 self \u4fee\u9970\u7684\u53d8\u91cf\u3002self \u5c06\u4e00\u4e2a\u53d8\u91cf\u7ed1\u5b9a\u5230\u4e00\u4e2a\u7279\u5b9a\u7684\u5b9e\u4f8b\u4e0a\uff0c\u8fd9\u6837\u5b83\u5c31\u5c5e\u4e8e\u8fd9\u5b9e\u4f8b\u81ea\u5df1\u3002 class A(object): va = \"10\" def foo(self): print(\"A.va=\" + A.va) print(\"self.va=\" + self.va) self.va = \"40\" print(\"A.va=\" + A.va) print(\"self.va=\" + self.va) va = \"20\" print(\"va=\"+va) A.va = \"15\" print(\"A.va=\"+A.va) print(\"self.v=\"+self.va) obj1 = A() obj2 = A() obj1.foo() print(A.va) print(obj1.va) print(obj2.va) \u7ed3\u679c\uff1a A.va=10 self.va=10 A.va=10 self.va=40 va=20 A.va=15 self.v=40 15 40 15 \u5206\u6790\u7a0b\u5e8f\u7ed3\u679c\u6211\u4eec\u53d1\u73b0\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u7c7b\u53d8\u91cf\u53ef\u4ee5\u7528\u7c7b\u540d\u6216\u8005self\u7684\u5f62\u5f0f\u8bbf\u95ee\u3002\u5f53 self.\u7c7b\u53d8\u91cf \u88ab\u91cd\u65b0\u8d4b\u503c\u65f6\uff0c\u5b83\u7684\u503c\u5c31\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u4f46\u7c7b\u53d8\u91cf\u7684\u503c\u4e0d\u4f1a\u968f\u4e4b\u53d8\u5316\u3002\u65b9\u6cd5\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u3002\u7c7b\u53d8\u91cf\u662f\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u7684\uff0c\u800c\u5b9e\u4f8b\u53d8\u91cf\u53ea\u5c5e\u4e8e\u5bf9\u8c61\u81ea\u5df1\uff0c\u6bcf\u4e2a\u5b9e\u4f8b\u7684\u5b9e\u4f8b\u53d8\u91cf\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u503c\u3002","title":"self \u7b80\u4ecb"},{"location":"python/basics/class/class_var/#_2","text":"1\u3001\u7c7b\u53d8\u91cf\u53ef\u4ee5\u7528 \u7c7b\u540d.\u7c7b\u53d8\u91cf \u548c self.\u7c7b\u53d8\u91cf \u4e24\u79cd\u65b9\u5f0f\u8bbf\u95ee\uff0c\u540e\u8005\u4e00\u822c\u60c5\u51b5\u4e0d\u5efa\u8bae\u4f7f\u7528\u3002 2\u3001\u7c7b\u53d8\u91cf\u662f\u6240\u6709\u5bf9\u8c61\u6240\u5171\u4eab\u7684\uff0c\u65e0\u8bba\u4efb\u4f55\u65f6\u5019\u90fd\u5efa\u8bae\u7528\u7c7b\u540d\u7684\u65b9\u5f0f\u8bbf\u95ee\u7c7b\u53d8\u91cf\u3002 3\u3001\u5b9e\u4f8b\u53d8\u91cf\u5728\u7c7b\u5185\u90e8\u7528 self \u8bbf\u95ee\uff0c\u5728\u7c7b\u5916\u90e8\u7528\u5b9e\u4f8b\u540d\u8bbf\u95ee\u3002 4\u3001\u7c7b\u53d8\u91cf\u901a\u8fc7 self \u8bbf\u95ee\u65f6\u5219\u88ab\u8f6c\u5316\u4e3a\u5b9e\u4f8b\u53d8\u91cf\uff0c\u88ab\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684\u5b9e\u4f8b\u4e0a\uff0c\u5176\u503c\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u3002 5\u3001\u901a\u8fc7\u5bf9\u5b9e\u4f8b\u53d8\u91cf\uff08self\uff09\u7684\u5f62\u5f0f\u5bf9\u7c7b\u53d8\u91cf\u91cd\u65b0\u8d4b\u503c\u540e\uff0c\u7c7b\u53d8\u91cf\u7684\u503c\u4e0d\u968f\u4e4b\u53d8\u5316\u3002 6\u3001\u65b9\u6cd5\u5185\u7684\u5c40\u90e8\u53d8\u91cf\u4f1a\u5c4f\u853d\u6389\u7c7b\u53d8\u91cf\u548c\u5b9e\u4f8b\u53d8\u91cf\u3002 7\u3001\u540c\u4e00\u5b9e\u4f8b\u53d8\u91cf\u5728\u4e0d\u540c\u7684\u5b9e\u4f8b\u4e2d\u53ef\u80fd\u62e5\u6709\u4e0d\u540c\u7684\u503c\u3002 http://kuanghy.github.io/2015/12/19/python-variable","title":"\u8981\u70b9\u603b\u7ed3"},{"location":"python/flask/flask_init/","text":"Flask\u6846\u67b6 \u4e00\u4e2a\u57fa\u4e8epython\u7684\uff0c\u7b80\u5355\u5feb\u901f\u7684WEB\u6846\u67b6 GitHub\u5730\u5740\uff1ahttps://github.com/pallets/flask \u5b98\u65b9\u6587\u6863\uff1ahttps://flask.palletsprojects.com/en/2.0.x/ Flask g \u5bf9\u8c61 1.\u4ec0\u4e48\u662fg\u5bf9\u8c61\u3002 1.\u5728flask\u4e2d\uff0c\u6709\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u7684g\u5bf9\u8c61\uff0cg\u7684\u5168\u79f0\u7684\u4e3aglobal\u3002 2.g\u5bf9\u8c61\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u7684\u6240\u6709\u7684\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u90fd\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002 2.g\u5bf9\u8c61\u548csession\u7684\u533a\u522b \u5728\u6211\u770b\u6765\uff0c\u6700\u5927\u7684\u533a\u522b\u662f\uff0csession\u5bf9\u8c61\u662f\u53ef\u4ee5\u8de8request\u7684\uff0c\u53ea\u8981session\u8fd8\u672a\u5931\u6548\uff0c\u4e0d\u540c\u7684request\u7684\u8bf7\u6c42\u4f1a\u83b7\u53d6\u5230\u540c\u4e00\u4e2asession\uff0c\u4f46\u662fg\u5bf9\u8c61\u4e0d\u662f\uff0cg\u5bf9\u8c61\u4e0d\u9700\u8981\u7ba1\u8fc7\u671f\u65f6\u95f4\uff0c\u8bf7\u6c42\u4e00\u6b21\u5c31g\u5bf9\u8c61\u5c31\u6539\u53d8\u4e86\u4e00\u6b21\uff0c\u6216\u8005\u91cd\u65b0\u8d4b\u503c\u4e86\u4e00\u6b21 \u4e5f\u5c31\u662fsession\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u8fd9\u4e2a\u7f51\u7ad9\u968f\u610f\u90fd\u53ef\u4ee5\u7528 \u800c g\u53ea\u80fd\u662f\u8fd9\u6b21\u7684\u8bf7\u6c42\u5982\u679c\u91cd\u5b9a\u5411\u4e4b\u540e\u5c31\u4f1a\u6539\u53d8 flask_g.py from flask import Flask, g, request from util import login_log app = Flask(__name__) @app.route('/login/', methods=['GET', 'POST']) def login(): username = request.args.get('username') if username == 'key': g.username = username login_log() return '\u606d\u559c\u60a8\uff01\u767b\u5f55\u6210\u529f' else: return '\u767b\u5f55\u540d\u6216\u5bc6\u7801\u9519\u8bef!' if __name__ == '__main__': app.run() util.py from flask import g def login_log(): print('\u767b\u5f55\u540d\u4e3a: {}'.format(g.username)) \u542f\u52a8flask_g.py \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:5000/login/?username=key \u63a7\u5236\u53f0\u8f93\u51fa \u767b\u5f55\u540d\u4e3a: key g\u5bf9\u8c61\u7684\u4f7f\u7528\u6848\u4f8b\uff1ahttps://vimsky.com/examples/detail/python-method-flask.g.html Flask Request\u5bf9\u8c61 \u6765\u81ea\u5ba2\u6237\u7aef\u7f51\u9875\u7684\u6570\u636e\u4f5c\u4e3a\u5168\u5c40\u8bf7\u6c42\u5bf9\u8c61\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u4e3a\u4e86\u5904\u7406\u8bf7\u6c42\u6570\u636e\uff0c\u5e94\u8be5\u4eceFlask\u6a21\u5757\u5bfc\u5165\u3002 Request\u5bf9\u8c61\u7684\u91cd\u8981\u5c5e\u6027\u5982\u4e0b\u6240\u5217\uff1a Form - \u5b83\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61\uff0c\u5305\u542b\u8868\u5355\u53c2\u6570\u53ca\u5176\u503c\u7684\u952e\u548c\u503c\u5bf9\u3002 args - \u89e3\u6790\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u5b83\u662f\u95ee\u53f7\uff08\uff1f\uff09\u4e4b\u540e\u7684URL\u7684\u4e00\u90e8\u5206\u3002 Cookies - \u4fdd\u5b58Cookie\u540d\u79f0\u548c\u503c\u7684\u5b57\u5178\u5bf9\u8c61\u3002 files - \u4e0e\u4e0a\u4f20\u6587\u4ef6\u6709\u5173\u7684\u6570\u636e\u3002 method - \u5f53\u524d\u8bf7\u6c42\u65b9\u6cd5\u3002 \u5c5e\u6027\u540d \u89e3\u91ca form \u4e00\u4e2a\u4ecePOST\u548cPUT\u8bf7\u6c42\u89e3\u6790\u7684 MultiDict\uff08\u4e00\u952e\u591a\u503c\u5b57\u5178\uff09\u3002 args MultiDict\uff0c\u8981\u64cd\u4f5c URL \uff08\u5982 ?key=value \uff09\u4e2d\u63d0\u4ea4\u7684\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528 args \u5c5e\u6027:searchword = request.args.get('key', '') values CombinedMultiDict\uff0c\u5185\u5bb9\u662fform\u548cargs\u3002 \u53ef\u4ee5\u4f7f\u7528values\u66ff\u4ee3form\u548cargs\u3002 cookies \u8bf7\u6c42\u7684cookies\uff0c\u7c7b\u578b\u662fdict\u3002 stream \u5728\u53ef\u77e5\u7684mimetype\u4e0b\uff0c\u5982\u679c\u8fdb\u6765\u7684\u8868\u5355\u6570\u636e\u65e0\u6cd5\u89e3\u7801\uff0c\u4f1a\u6ca1\u6709\u4efb\u4f55\u6539\u52a8\u7684\u4fdd\u5b58\u5230\u8fd9\u4e2a stream \u4ee5\u4f9b\u4f7f\u7528\u3002\u5f88\u591a\u65f6\u5019\uff0c\u5f53\u8bf7\u6c42\u7684\u6570\u636e\u8f6c\u6362\u4e3astring\u65f6\uff0c\u4f7f\u7528data\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u8fd9\u4e2astream\u53ea\u8fd4\u56de\u6570\u636e\u4e00\u6b21\u3002 headers \u8bf7\u6c42\u5934\uff0c\u5b57\u5178\u7c7b\u578b\u3002 data \u5305\u542b\u4e86\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u9664\u975e\u662f\u4e00\u4e2aFlask\u65e0\u6cd5\u5904\u7406\u7684mimetype\u3002 files MultiDict\uff0c\u5e26\u6709\u901a\u8fc7POST\u6216PUT\u8bf7\u6c42\u4e0a\u4f20\u7684\u6587\u4ef6\u3002 environ WSGI\u9690\u542b\u7684\u73af\u5883\u914d\u7f6e\u3002 method \u8bf7\u6c42\u65b9\u6cd5\uff0c\u6bd4\u5982POST\u3001GET\u3002 path \u83b7\u53d6\u8bf7\u6c42\u6587\u4ef6\u8def\u5f84\uff1a/myapplication/page.html base_url \u83b7\u53d6\u57df\u540d\u4e0e\u8bf7\u6c42\u6587\u4ef6\u8def\u5f84\uff1ahttp://www.baidu.com/myapplication/page.html url \u83b7\u53d6\u5168\u90e8url\uff1ahttp://www.baidu.com/myapplication/page.html?id=1&edit=edit url_root \u83b7\u53d6\u57df\u540d\uff1ahttp://www.baidu.com/ is_xhr \u5982\u679c\u8bf7\u6c42\u662f\u4e00\u4e2a\u6765\u81eaJavaScript XMLHttpRequest\u7684\u89e6\u53d1\uff0c\u5219\u8fd4\u56deTrue\uff0c\u8fd9\u4e2a\u53ea\u5de5\u4f5c\u5728\u652f\u6301X-Requested-With\u5934\u7684\u5e93\u5e76\u4e14\u8bbe\u7f6e\u4e86XMLHttpRequest\u3002 blueprint \u84dd\u56fe\u540d\u5b57\u3002 endpoint endpoint\u5339\u914d\u8bf7\u6c42\uff0c\u8fd9\u4e2a\u4e0eview_args\u76f8\u7ed3\u5408\uff0c\u53ef\u662f\u7528\u4e8e\u91cd\u6784\u76f8\u540c\u6216\u4fee\u6539URL\u3002\u5f53\u5339\u914d\u7684\u65f6\u5019\u53d1\u751f\u5f02\u5e38\uff0c\u4f1a\u8fd4\u56deNone\u3002 json \u5982\u679cmimetype\u662fapplication/json\uff0c\u8fd9\u4e2a\u53c2\u6570\u5c06\u4f1a\u89e3\u6790JSON\u6570\u636e\uff0c\u5982\u679c\u4e0d\u662f\u5219\u8fd4\u56deNone\u3002 \u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u66ff\u4ee3get_json()\u65b9\u6cd5\u3002 max_content_length \u53ea\u8bfb\uff0c\u8fd4\u56deMAX_CONTENT_LENGTH\u7684\u914d\u7f6e\u952e\u3002 module \u5982\u679c\u8bf7\u6c42\u662f\u53d1\u9001\u5230\u4e00\u4e2a\u5b9e\u9645\u7684\u6a21\u5757\uff0c\u5219\u8be5\u53c2\u6570\u8fd4\u56de\u5f53\u524d\u6a21\u5757\u7684\u540d\u79f0\u3002\u8fd9\u662f\u5f03\u7528\u7684\u529f\u80fd\uff0c\u4f7f\u7528blueprints\u66ff\u4ee3\u3002 routing_exception = None \u5982\u679c\u5339\u914dURL\u5931\u8d25\uff0c\u8fd9\u4e2a\u5f02\u5e38\u5c06\u4f1a/\u5df2\u7ecf\u629b\u51fa\u4f5c\u4e3a\u8bf7\u6c42\u5904\u7406\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u901a\u5e38\u7528\u4e8eNotFound\u5f02\u5e38\u6216\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002 Flask Response\u5bf9\u8c61 https://blog.csdn.net/qq_42666483/article/details/82526765","title":"Flask"},{"location":"python/flask/flask_init/#flask","text":"\u4e00\u4e2a\u57fa\u4e8epython\u7684\uff0c\u7b80\u5355\u5feb\u901f\u7684WEB\u6846\u67b6 GitHub\u5730\u5740\uff1ahttps://github.com/pallets/flask \u5b98\u65b9\u6587\u6863\uff1ahttps://flask.palletsprojects.com/en/2.0.x/","title":"Flask\u6846\u67b6"},{"location":"python/flask/flask_init/#flask-g","text":"","title":"Flask g \u5bf9\u8c61"},{"location":"python/flask/flask_init/#1g","text":"1.\u5728flask\u4e2d\uff0c\u6709\u4e00\u4e2a\u4e13\u95e8\u7528\u6765\u5b58\u50a8\u7528\u6237\u4fe1\u606f\u7684g\u5bf9\u8c61\uff0cg\u7684\u5168\u79f0\u7684\u4e3aglobal\u3002 2.g\u5bf9\u8c61\u5728\u4e00\u6b21\u8bf7\u6c42\u4e2d\u7684\u6240\u6709\u7684\u4ee3\u7801\u7684\u5730\u65b9\uff0c\u90fd\u662f\u53ef\u4ee5\u4f7f\u7528\u7684\u3002","title":"1.\u4ec0\u4e48\u662fg\u5bf9\u8c61\u3002"},{"location":"python/flask/flask_init/#2gsession","text":"\u5728\u6211\u770b\u6765\uff0c\u6700\u5927\u7684\u533a\u522b\u662f\uff0csession\u5bf9\u8c61\u662f\u53ef\u4ee5\u8de8request\u7684\uff0c\u53ea\u8981session\u8fd8\u672a\u5931\u6548\uff0c\u4e0d\u540c\u7684request\u7684\u8bf7\u6c42\u4f1a\u83b7\u53d6\u5230\u540c\u4e00\u4e2asession\uff0c\u4f46\u662fg\u5bf9\u8c61\u4e0d\u662f\uff0cg\u5bf9\u8c61\u4e0d\u9700\u8981\u7ba1\u8fc7\u671f\u65f6\u95f4\uff0c\u8bf7\u6c42\u4e00\u6b21\u5c31g\u5bf9\u8c61\u5c31\u6539\u53d8\u4e86\u4e00\u6b21\uff0c\u6216\u8005\u91cd\u65b0\u8d4b\u503c\u4e86\u4e00\u6b21 \u4e5f\u5c31\u662fsession\u53ef\u4ee5\u5728\u6211\u4eec\u7684\u8fd9\u4e2a\u7f51\u7ad9\u968f\u610f\u90fd\u53ef\u4ee5\u7528 \u800c g\u53ea\u80fd\u662f\u8fd9\u6b21\u7684\u8bf7\u6c42\u5982\u679c\u91cd\u5b9a\u5411\u4e4b\u540e\u5c31\u4f1a\u6539\u53d8 flask_g.py from flask import Flask, g, request from util import login_log app = Flask(__name__) @app.route('/login/', methods=['GET', 'POST']) def login(): username = request.args.get('username') if username == 'key': g.username = username login_log() return '\u606d\u559c\u60a8\uff01\u767b\u5f55\u6210\u529f' else: return '\u767b\u5f55\u540d\u6216\u5bc6\u7801\u9519\u8bef!' if __name__ == '__main__': app.run() util.py from flask import g def login_log(): print('\u767b\u5f55\u540d\u4e3a: {}'.format(g.username)) \u542f\u52a8flask_g.py \u6d4f\u89c8\u5668\u8bbf\u95ee http://127.0.0.1:5000/login/?username=key \u63a7\u5236\u53f0\u8f93\u51fa \u767b\u5f55\u540d\u4e3a: key g\u5bf9\u8c61\u7684\u4f7f\u7528\u6848\u4f8b\uff1ahttps://vimsky.com/examples/detail/python-method-flask.g.html","title":"2.g\u5bf9\u8c61\u548csession\u7684\u533a\u522b"},{"location":"python/flask/flask_init/#flask-request","text":"\u6765\u81ea\u5ba2\u6237\u7aef\u7f51\u9875\u7684\u6570\u636e\u4f5c\u4e3a\u5168\u5c40\u8bf7\u6c42\u5bf9\u8c61\u53d1\u9001\u5230\u670d\u52a1\u5668\u3002\u4e3a\u4e86\u5904\u7406\u8bf7\u6c42\u6570\u636e\uff0c\u5e94\u8be5\u4eceFlask\u6a21\u5757\u5bfc\u5165\u3002 Request\u5bf9\u8c61\u7684\u91cd\u8981\u5c5e\u6027\u5982\u4e0b\u6240\u5217\uff1a Form - \u5b83\u662f\u4e00\u4e2a\u5b57\u5178\u5bf9\u8c61\uff0c\u5305\u542b\u8868\u5355\u53c2\u6570\u53ca\u5176\u503c\u7684\u952e\u548c\u503c\u5bf9\u3002 args - \u89e3\u6790\u67e5\u8be2\u5b57\u7b26\u4e32\u7684\u5185\u5bb9\uff0c\u5b83\u662f\u95ee\u53f7\uff08\uff1f\uff09\u4e4b\u540e\u7684URL\u7684\u4e00\u90e8\u5206\u3002 Cookies - \u4fdd\u5b58Cookie\u540d\u79f0\u548c\u503c\u7684\u5b57\u5178\u5bf9\u8c61\u3002 files - \u4e0e\u4e0a\u4f20\u6587\u4ef6\u6709\u5173\u7684\u6570\u636e\u3002 method - \u5f53\u524d\u8bf7\u6c42\u65b9\u6cd5\u3002 \u5c5e\u6027\u540d \u89e3\u91ca form \u4e00\u4e2a\u4ecePOST\u548cPUT\u8bf7\u6c42\u89e3\u6790\u7684 MultiDict\uff08\u4e00\u952e\u591a\u503c\u5b57\u5178\uff09\u3002 args MultiDict\uff0c\u8981\u64cd\u4f5c URL \uff08\u5982 ?key=value \uff09\u4e2d\u63d0\u4ea4\u7684\u53c2\u6570\u53ef\u4ee5\u4f7f\u7528 args \u5c5e\u6027:searchword = request.args.get('key', '') values CombinedMultiDict\uff0c\u5185\u5bb9\u662fform\u548cargs\u3002 \u53ef\u4ee5\u4f7f\u7528values\u66ff\u4ee3form\u548cargs\u3002 cookies \u8bf7\u6c42\u7684cookies\uff0c\u7c7b\u578b\u662fdict\u3002 stream \u5728\u53ef\u77e5\u7684mimetype\u4e0b\uff0c\u5982\u679c\u8fdb\u6765\u7684\u8868\u5355\u6570\u636e\u65e0\u6cd5\u89e3\u7801\uff0c\u4f1a\u6ca1\u6709\u4efb\u4f55\u6539\u52a8\u7684\u4fdd\u5b58\u5230\u8fd9\u4e2a stream \u4ee5\u4f9b\u4f7f\u7528\u3002\u5f88\u591a\u65f6\u5019\uff0c\u5f53\u8bf7\u6c42\u7684\u6570\u636e\u8f6c\u6362\u4e3astring\u65f6\uff0c\u4f7f\u7528data\u662f\u6700\u597d\u7684\u65b9\u5f0f\u3002\u8fd9\u4e2astream\u53ea\u8fd4\u56de\u6570\u636e\u4e00\u6b21\u3002 headers \u8bf7\u6c42\u5934\uff0c\u5b57\u5178\u7c7b\u578b\u3002 data \u5305\u542b\u4e86\u8bf7\u6c42\u7684\u6570\u636e\uff0c\u5e76\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u9664\u975e\u662f\u4e00\u4e2aFlask\u65e0\u6cd5\u5904\u7406\u7684mimetype\u3002 files MultiDict\uff0c\u5e26\u6709\u901a\u8fc7POST\u6216PUT\u8bf7\u6c42\u4e0a\u4f20\u7684\u6587\u4ef6\u3002 environ WSGI\u9690\u542b\u7684\u73af\u5883\u914d\u7f6e\u3002 method \u8bf7\u6c42\u65b9\u6cd5\uff0c\u6bd4\u5982POST\u3001GET\u3002 path \u83b7\u53d6\u8bf7\u6c42\u6587\u4ef6\u8def\u5f84\uff1a/myapplication/page.html base_url \u83b7\u53d6\u57df\u540d\u4e0e\u8bf7\u6c42\u6587\u4ef6\u8def\u5f84\uff1ahttp://www.baidu.com/myapplication/page.html url \u83b7\u53d6\u5168\u90e8url\uff1ahttp://www.baidu.com/myapplication/page.html?id=1&edit=edit url_root \u83b7\u53d6\u57df\u540d\uff1ahttp://www.baidu.com/ is_xhr \u5982\u679c\u8bf7\u6c42\u662f\u4e00\u4e2a\u6765\u81eaJavaScript XMLHttpRequest\u7684\u89e6\u53d1\uff0c\u5219\u8fd4\u56deTrue\uff0c\u8fd9\u4e2a\u53ea\u5de5\u4f5c\u5728\u652f\u6301X-Requested-With\u5934\u7684\u5e93\u5e76\u4e14\u8bbe\u7f6e\u4e86XMLHttpRequest\u3002 blueprint \u84dd\u56fe\u540d\u5b57\u3002 endpoint endpoint\u5339\u914d\u8bf7\u6c42\uff0c\u8fd9\u4e2a\u4e0eview_args\u76f8\u7ed3\u5408\uff0c\u53ef\u662f\u7528\u4e8e\u91cd\u6784\u76f8\u540c\u6216\u4fee\u6539URL\u3002\u5f53\u5339\u914d\u7684\u65f6\u5019\u53d1\u751f\u5f02\u5e38\uff0c\u4f1a\u8fd4\u56deNone\u3002 json \u5982\u679cmimetype\u662fapplication/json\uff0c\u8fd9\u4e2a\u53c2\u6570\u5c06\u4f1a\u89e3\u6790JSON\u6570\u636e\uff0c\u5982\u679c\u4e0d\u662f\u5219\u8fd4\u56deNone\u3002 \u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u66ff\u4ee3get_json()\u65b9\u6cd5\u3002 max_content_length \u53ea\u8bfb\uff0c\u8fd4\u56deMAX_CONTENT_LENGTH\u7684\u914d\u7f6e\u952e\u3002 module \u5982\u679c\u8bf7\u6c42\u662f\u53d1\u9001\u5230\u4e00\u4e2a\u5b9e\u9645\u7684\u6a21\u5757\uff0c\u5219\u8be5\u53c2\u6570\u8fd4\u56de\u5f53\u524d\u6a21\u5757\u7684\u540d\u79f0\u3002\u8fd9\u662f\u5f03\u7528\u7684\u529f\u80fd\uff0c\u4f7f\u7528blueprints\u66ff\u4ee3\u3002 routing_exception = None \u5982\u679c\u5339\u914dURL\u5931\u8d25\uff0c\u8fd9\u4e2a\u5f02\u5e38\u5c06\u4f1a/\u5df2\u7ecf\u629b\u51fa\u4f5c\u4e3a\u8bf7\u6c42\u5904\u7406\u7684\u4e00\u90e8\u5206\u3002\u8fd9\u901a\u5e38\u7528\u4e8eNotFound\u5f02\u5e38\u6216\u7c7b\u4f3c\u7684\u60c5\u51b5\u3002","title":"Flask Request\u5bf9\u8c61"},{"location":"python/flask/flask_init/#flask-response","text":"https://blog.csdn.net/qq_42666483/article/details/82526765","title":"Flask Response\u5bf9\u8c61"},{"location":"python/shedule/run_in_back/","text":"shedule\u6a21\u5757 \u8ba9\u4efb\u52a1\u5728\u540e\u53f0\u8fd0\u884c https://schedule.readthedocs.io/en/stable/background-execution.html import threading import time import schedule def run_continuously(interval=1): \"\"\"Continuously run, while executing pending jobs at each elapsed time interval. @return cease_continuous_run: threading. Event which can be set to cease continuous run. Please note that it is *intended behavior that run_continuously() does not run missed jobs*. For example, if you've registered a job that should run every minute and you set a continuous run interval of one hour then your job won't be run 60 times at each interval but only once. \"\"\" cease_continuous_run = threading.Event() class ScheduleThread(threading.Thread): @classmethod def run(cls): while not cease_continuous_run.is_set(): schedule.run_pending() time.sleep(interval) continuous_thread = ScheduleThread() continuous_thread.start() return cease_continuous_run def background_job(): print('Hello from the background thread') schedule.every().second.do(background_job) # Start the background thread stop_run_continuously = run_continuously() # Do some other things... time.sleep(10) # Stop the background thread stop_run_continuously.set()","title":"\u540e\u53f0\u6267\u884c"},{"location":"python/shedule/run_in_back/#shedule","text":"\u8ba9\u4efb\u52a1\u5728\u540e\u53f0\u8fd0\u884c https://schedule.readthedocs.io/en/stable/background-execution.html import threading import time import schedule def run_continuously(interval=1): \"\"\"Continuously run, while executing pending jobs at each elapsed time interval. @return cease_continuous_run: threading. Event which can be set to cease continuous run. Please note that it is *intended behavior that run_continuously() does not run missed jobs*. For example, if you've registered a job that should run every minute and you set a continuous run interval of one hour then your job won't be run 60 times at each interval but only once. \"\"\" cease_continuous_run = threading.Event() class ScheduleThread(threading.Thread): @classmethod def run(cls): while not cease_continuous_run.is_set(): schedule.run_pending() time.sleep(interval) continuous_thread = ScheduleThread() continuous_thread.start() return cease_continuous_run def background_job(): print('Hello from the background thread') schedule.every().second.do(background_job) # Start the background thread stop_run_continuously = run_continuously() # Do some other things... time.sleep(10) # Stop the background thread stop_run_continuously.set()","title":"shedule\u6a21\u5757"},{"location":"python/shedule/see_cron/","text":"schedule \u65e5\u5fd7\u663e\u793a\u4e0b\u6b21\u4efb\u52a1\u6267\u884c\u65f6\u95f4 https://schedule.readthedocs.io/en/stable/examples.html schedule\u8fdb\u884c\u5b9a\u65f6\u4efb\u52a1\u7ba1\u7406\u975e\u5e38\u597d\u7528\uff0c\u901a\u8fc7 get_jobs \u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u7684\u5b9a\u65f6\u4efb\u52a1\u8be6\u60c5\uff0c\u53ef\u4ee5\u5728\u5b50\u7ebf\u7a0b\u4e2d\uff0c\u4e0d\u65ad\u6253\u5370\u5b9a\u65f6\u4efb\u52a1\u7684\u8be6\u60c5 import schedule import threading import time import colorlog import logging.handlers import sys # \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u65e5\u5fd7\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 logfilename = \"learn_schedule_catch.log\" log_colors_config = { 'DEBUG': 'white', 'INFO': 'green', 'WARNING': 'yellow', 'ERROR': 'red', 'CRITICAL': 'bold_red', } logger = logging.getLogger(__name__) logger.setLevel(level=logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6 handler = logging.handlers.RotatingFileHandler(logfilename, encoding='utf-8', maxBytes=100 * 1024 * 1024, backupCount=10) # \u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7ea7\u522b handler.setLevel(logging.INFO) # \u65e5\u5fd7\u6837\u5f0f formatter = logging.Formatter( '%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s') # \u63a7\u5236\u53f0\u65e5\u5fd7\u6837\u5f0f formatter_color = colorlog.ColoredFormatter( '%(log_color)s%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s', log_colors=log_colors_config) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7 console = logging.StreamHandler(stream=sys.stdout) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7ea7\u522b console.setLevel(logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6837\u5f0f handler.setFormatter(formatter) console.setFormatter(formatter_color) logger.addHandler(handler) logger.addHandler(console) #\u9700\u8981\u5b9a\u65f6\u6267\u884c\u7684\u4efb\u52a1 def job(): logger.info(\"I'm working...\") #\u8bbe\u7f6e\u4e3a1\u5206\u949f\u4e00\u6b21 schedule.every(1).minute.do(job) #\u67e5\u770b\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u6b7b\u5faa\u73af def see_cron(): while True: time.sleep(10) all_jobs = schedule.get_jobs() logger.info(all_jobs) #\u540e\u53f0\u6267\u884csee_cron t1 = threading.Thread(target=see_cron) #\u8ba9\u8fd9\u4e2a\u4efb\u52a1\u968f\u4e3b\u7ebf\u7a0b\u9000\u51fa\u800c\u9000\u51fa t1.setDaemon(True) t1.start() #\u6253\u5f00\u5b9a\u65f6\u4efb\u52a1\u8fdb\u7a0b while True: schedule.run_pending() time.sleep(1) \u7ed3\u679c\uff1a 2021-11-10 16:25:45,195-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:25:55,198-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:26:05,206-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:26:15,209-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:26:15,261-__main__-learn_schedule_catch.py-[line:44]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: I'm working...","title":"schedule\u65e5\u5fd7\u663e\u793a\u4e0b\u6b21\u4efb\u52a1\u6267\u884c\u65f6\u95f4"},{"location":"python/shedule/see_cron/#schedule","text":"https://schedule.readthedocs.io/en/stable/examples.html schedule\u8fdb\u884c\u5b9a\u65f6\u4efb\u52a1\u7ba1\u7406\u975e\u5e38\u597d\u7528\uff0c\u901a\u8fc7 get_jobs \u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u7684\u5b9a\u65f6\u4efb\u52a1\u8be6\u60c5\uff0c\u53ef\u4ee5\u5728\u5b50\u7ebf\u7a0b\u4e2d\uff0c\u4e0d\u65ad\u6253\u5370\u5b9a\u65f6\u4efb\u52a1\u7684\u8be6\u60c5 import schedule import threading import time import colorlog import logging.handlers import sys # \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u65e5\u5fd7\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014 logfilename = \"learn_schedule_catch.log\" log_colors_config = { 'DEBUG': 'white', 'INFO': 'green', 'WARNING': 'yellow', 'ERROR': 'red', 'CRITICAL': 'bold_red', } logger = logging.getLogger(__name__) logger.setLevel(level=logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6587\u4ef6 handler = logging.handlers.RotatingFileHandler(logfilename, encoding='utf-8', maxBytes=100 * 1024 * 1024, backupCount=10) # \u8f93\u51fa\u5230\u6587\u4ef6\u7684\u65e5\u5fd7\u7ea7\u522b handler.setLevel(logging.INFO) # \u65e5\u5fd7\u6837\u5f0f formatter = logging.Formatter( '%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s') # \u63a7\u5236\u53f0\u65e5\u5fd7\u6837\u5f0f formatter_color = colorlog.ColoredFormatter( '%(log_color)s%(asctime)s-%(name)s-%(filename)s-[line:%(lineno)d]-%(levelname)s-[\u65e5\u5fd7\u4fe1\u606f]: %(message)s', log_colors=log_colors_config) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7 console = logging.StreamHandler(stream=sys.stdout) # \u63a7\u5236\u53f0\u7684\u65e5\u5fd7\u7ea7\u522b console.setLevel(logging.DEBUG) # \u8bbe\u7f6e\u65e5\u5fd7\u6837\u5f0f handler.setFormatter(formatter) console.setFormatter(formatter_color) logger.addHandler(handler) logger.addHandler(console) #\u9700\u8981\u5b9a\u65f6\u6267\u884c\u7684\u4efb\u52a1 def job(): logger.info(\"I'm working...\") #\u8bbe\u7f6e\u4e3a1\u5206\u949f\u4e00\u6b21 schedule.every(1).minute.do(job) #\u67e5\u770b\u4efb\u52a1\u6267\u884c\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u6b7b\u5faa\u73af def see_cron(): while True: time.sleep(10) all_jobs = schedule.get_jobs() logger.info(all_jobs) #\u540e\u53f0\u6267\u884csee_cron t1 = threading.Thread(target=see_cron) #\u8ba9\u8fd9\u4e2a\u4efb\u52a1\u968f\u4e3b\u7ebf\u7a0b\u9000\u51fa\u800c\u9000\u51fa t1.setDaemon(True) t1.start() #\u6253\u5f00\u5b9a\u65f6\u4efb\u52a1\u8fdb\u7a0b while True: schedule.run_pending() time.sleep(1) \u7ed3\u679c\uff1a 2021-11-10 16:25:45,195-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:25:55,198-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:26:05,206-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:26:15,209-__main__-learn_schedule_catch.py-[line:56]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: [Every 1 minute do job() (last run: [never], next run: 2021-11-10 16:26:15)] 2021-11-10 16:26:15,261-__main__-learn_schedule_catch.py-[line:44]-INFO-[\u65e5\u5fd7\u4fe1\u606f]: I'm working...","title":"schedule  \u65e5\u5fd7\u663e\u793a\u4e0b\u6b21\u4efb\u52a1\u6267\u884c\u65f6\u95f4"},{"location":"python/threading/join/","text":"join\u7684\u4f5c\u7528 \u603b\u7ed3 join\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u963b\u585e\u4e3b\u8fdb\u7a0b\uff08\u6321\u4f4f\uff0c\u65e0\u6cd5\u6267\u884cjoin\u4ee5\u540e\u7684\u8bed\u53e5\uff09\uff0c\u4e13\u6ce8\u6267\u884c\u591a\u7ebf\u7a0b\u3002 \u591a\u7ebf\u7a0b\u591ajoin\u7684\u60c5\u51b5\u4e0b\uff0c\u4f9d\u6b21\u6267\u884c\u5404\u7ebf\u7a0b\u7684join\u65b9\u6cd5\uff0c\u524d\u5934\u4e00\u4e2a\u7ed3\u675f\u4e86\u624d\u80fd\u6267\u884c\u540e\u9762\u4e00\u4e2a\u3002 \u65e0\u53c2\u6570\uff0c\u5219\u7b49\u5f85\u5230\u8be5\u7ebf\u7a0b\u7ed3\u675f\uff0c\u624d\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\u7684join\u3002 \u8bbe\u7f6e\u53c2\u6570\u540e\uff0c\u5219\u7b49\u5f85\u8be5\u7ebf\u7a0b\u8fd9\u4e48\u957f\u65f6\u95f4\u5c31\u4e0d\u7ba1\u5b83\u4e86\uff08\u800c\u8be5\u7ebf\u7a0b\u5e76\u6ca1\u6709\u7ed3\u675f\uff09\u3002\u4e0d\u7ba1\u7684\u610f\u601d\u5c31\u662f\u53ef\u4ee5\u6267\u884c\u540e\u9762\u7684\u4e3b\u8fdb\u7a0b\u4e86\u3002 Join & Daemon join \u5b57\u9762\u610f\u601d\uff1a \u8054\u5408 daemon \u5b57\u9762\u610f\u601d\uff1a \u5b88\u62a4 \u6b63\u5e38\u7684\u591a\u7ebf\u7a0b\uff0cA\u5f00\u542f\u4e86B\uff0cA\u548cB\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\uff0c\u4e92\u4e0d\u5e72\u6270 \u4e3b\u7ebf\u7a0bA\u4e2d\uff0c\u521b\u5efa\u4e86\u5b50\u7ebf\u7a0bB\uff0c\u5e76\u4e14\u5728\u4e3b\u7ebf\u7a0bA\u4e2d\u8c03\u7528\u4e86 B.setDaemon() \uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u8ba9B\u5b88\u62a4A\uff0cA\u8fdb\u7a0b\u7ed3\u675f\u4e86\uff0c\u5c31\u4e0d\u7ba1\u5b50\u7ebf\u7a0bB\u662f\u5426\u5b8c\u6210\uff0c\u4e00\u5e76\u548c\u4e3b\u7ebf\u7a0bA\u9000\u51fa\u3002\u8fd9\u5c31\u662f setDaemon \u65b9\u6cd5\u7684\u542b\u4e49 \u4e3b\u7ebf\u7a0bA\u4e2d\uff0c\u521b\u5efa\u4e86\u5b50\u7ebf\u7a0bB\uff0c\u5e76\u4e14\u5728\u4e3b\u7ebf\u7a0bA\u4e2d\u8c03\u7528\u4e86 B.join() \uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u8ba9B\u8054\u5408A\uff0cA\u8fdb\u7a0b\u7ed3\u675f\u4e86\uff0c\u5c31\u4f1a\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85B\uff0c\u7b49\u5f85B\u7ed3\u675f\uff0cA\u624d\u9000\u51fa \u4e0b\u9762\u4ec5\u4ee5\u591a\u7ebf\u7a0b\u4e3a\u4f8b\uff1a \u9996\u5148\u9700\u8981\u660e\u786e\u51e0\u4e2a\u6982\u5ff5\uff1a \u5f53\u4e00\u4e2a\u8fdb\u7a0b\u542f\u52a8\u4e4b\u540e\uff0c\u4f1a\u9ed8\u8ba4\u4ea7\u751f\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143\uff0c\u5f53\u8bbe\u7f6e\u591a\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u521b\u5efa\u591a\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5728python\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff08\u5176\u5b9e\u5c31\u662f setDaemon(False) \uff0c\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u81ea\u5df1\u7684\u4efb\u52a1\u4ee5\u540e\uff0c\u5c31\u9000\u51fa\u4e86\uff0c\u6b64\u65f6\u5b50\u7ebf\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u76f4\u5230\u81ea\u5df1\u7684\u4efb\u52a1\u7ed3\u675f\uff0c\u4f8b\u5b50\u89c1\u4e0b\u9762\u4e00\u3002 \u5f53\u6211\u4eec\u4f7f\u7528 setDaemon(True) \u65b9\u6cd5\uff0c\u8bbe\u7f6e\u5b50\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4e00\u65e6\u6267\u884c\u7ed3\u675f\uff0c\u5219\u5168\u90e8\u7ebf\u7a0b\u5168\u90e8\u88ab\u7ec8\u6b62\u6267\u884c\uff0c\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u5c31\u662f\uff0c\u5b50\u7ebf\u7a0b\u7684\u4efb\u52a1\u8fd8\u6ca1\u6709\u5b8c\u5168\u6267\u884c\u7ed3\u675f\uff0c\u5c31\u88ab\u8feb\u505c\u6b62\uff0c\u4f8b\u5b50\u89c1\u4e0b\u9762\u4e8c\u3002 \u6b64\u65f6join\u7684\u4f5c\u7528\u5c31\u51f8\u663e\u51fa\u6765\u4e86\uff0cjoin\u6240\u5b8c\u6210\u7684\u5de5\u4f5c\u5c31\u662f\u7ebf\u7a0b\u540c\u6b65\uff0c\u5373\u4e3b\u7ebf\u7a0b\u4efb\u52a1\u7ed3\u675f\u4e4b\u540e\uff0c\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u4e00\u76f4\u7b49\u5f85\u5176\u4ed6\u7684\u5b50\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u4e4b\u540e\uff0c\u4e3b\u7ebf\u7a0b\u5728\u7ec8\u6b62\uff0c\u4f8b\u5b50\u89c1\u4e0b\u9762\u4e09\u3002 \u4e00\uff1aPython\u591a\u7ebf\u7a0b\u7684\u9ed8\u8ba4\u60c5\u51b5 import threading import time def run(): time.sleep(2) print('\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57\u662f\uff1a ', threading.current_thread().name) time.sleep(2) if __name__ == '__main__': start_time = time.time() print('\u8fd9\u662f\u4e3b\u7ebf\u7a0b\uff1a', threading.current_thread().name) thread_list = [] for i in range(5): t = threading.Thread(target=run) thread_list.append(t) for t in thread_list: t.start() print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff01' , threading.current_thread().name) print('\u4e00\u5171\u7528\u65f6\uff1a', time.time()-start_time) \u5176\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u5173\u952e\u70b9\uff1a \u6211\u4eec\u7684\u8ba1\u65f6\u662f\u5bf9\u4e3b\u7ebf\u7a0b\u8ba1\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u8ba1\u65f6\u968f\u4e4b\u7ed3\u675f\uff0c\u6253\u5370\u51fa\u4e3b\u7ebf\u7a0b\u7684\u7528\u65f6\u3002 \u4e3b\u7ebf\u7a0b\u7684\u4efb\u52a1\u5b8c\u6210\u4e4b\u540e\uff0c\u4e3b\u7ebf\u7a0b\u968f\u4e4b\u7ed3\u675f\uff0c\u5b50\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u76f4\u5230\u5168\u90e8\u7684\u5b50\u7ebf\u7a0b\u7684\u4efb\u52a1\u5168\u90e8\u7ed3\u675f\uff0c\u7a0b\u5e8f\u7ed3\u675f\u3002 \u4e8c\uff1a\u8bbe\u7f6e\u5b88\u62a4\u7ebf\u7a0b import threading import time def run(): time.sleep(2) print('\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57\u662f\uff1a ', threading.current_thread().name) time.sleep(2) if __name__ == '__main__': start_time = time.time() print('\u8fd9\u662f\u4e3b\u7ebf\u7a0b\uff1a', threading.current_thread().name) thread_list = [] for i in range(5): t = threading.Thread(target=run) thread_list.append(t) for t in thread_list: t.setDaemon(True) t.start() print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4e86\uff01' , threading.current_thread().name) print('\u4e00\u5171\u7528\u65f6\uff1a', time.time()-start_time) \u5176\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u6ce8\u610f\u8bf7\u786e\u4fddsetDaemon()\u5728start()\u4e4b\u524d\u3002 \u5173\u952e\u70b9\uff1a \u975e\u5e38\u660e\u663e\u7684\u770b\u5230\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4ee5\u540e\uff0c\u5b50\u7ebf\u7a0b\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u6267\u884c\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5c31\u9000\u51fa\u4e86\u3002 \u4e09\uff1ajoin\u7684\u4f5c\u7528 import threading import time def run(): time.sleep(2) print('\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57\u662f\uff1a ', threading.current_thread().name) time.sleep(2) if __name__ == '__main__': start_time = time.time() print('\u8fd9\u662f\u4e3b\u7ebf\u7a0b\uff1a', threading.current_thread().name) thread_list = [] for i in range(5): t = threading.Thread(target=run) thread_list.append(t) for t in thread_list: t.setDaemon(True) t.start() for t in thread_list: t.join() print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4e86\uff01' , threading.current_thread().name) print('\u4e00\u5171\u7528\u65f6\uff1a', time.time()-start_time) \u5176\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u5173\u952e\u70b9\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u4e3b\u7ebf\u7a0b\u4e00\u76f4\u7b49\u5f85\u5168\u90e8\u7684\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u540e\uff0c\u4e3b\u7ebf\u7a0b\u81ea\u8eab\u624d\u7ed3\u675f\uff0c\u7a0b\u5e8f\u9000\u51fa\u3002","title":"join\u7684\u4f5c\u7528"},{"location":"python/threading/join/#join","text":"","title":"join\u7684\u4f5c\u7528"},{"location":"python/threading/join/#_1","text":"join\u65b9\u6cd5\u7684\u4f5c\u7528\u662f\u963b\u585e\u4e3b\u8fdb\u7a0b\uff08\u6321\u4f4f\uff0c\u65e0\u6cd5\u6267\u884cjoin\u4ee5\u540e\u7684\u8bed\u53e5\uff09\uff0c\u4e13\u6ce8\u6267\u884c\u591a\u7ebf\u7a0b\u3002 \u591a\u7ebf\u7a0b\u591ajoin\u7684\u60c5\u51b5\u4e0b\uff0c\u4f9d\u6b21\u6267\u884c\u5404\u7ebf\u7a0b\u7684join\u65b9\u6cd5\uff0c\u524d\u5934\u4e00\u4e2a\u7ed3\u675f\u4e86\u624d\u80fd\u6267\u884c\u540e\u9762\u4e00\u4e2a\u3002 \u65e0\u53c2\u6570\uff0c\u5219\u7b49\u5f85\u5230\u8be5\u7ebf\u7a0b\u7ed3\u675f\uff0c\u624d\u5f00\u59cb\u6267\u884c\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\u7684join\u3002 \u8bbe\u7f6e\u53c2\u6570\u540e\uff0c\u5219\u7b49\u5f85\u8be5\u7ebf\u7a0b\u8fd9\u4e48\u957f\u65f6\u95f4\u5c31\u4e0d\u7ba1\u5b83\u4e86\uff08\u800c\u8be5\u7ebf\u7a0b\u5e76\u6ca1\u6709\u7ed3\u675f\uff09\u3002\u4e0d\u7ba1\u7684\u610f\u601d\u5c31\u662f\u53ef\u4ee5\u6267\u884c\u540e\u9762\u7684\u4e3b\u8fdb\u7a0b\u4e86\u3002 Join & Daemon join \u5b57\u9762\u610f\u601d\uff1a \u8054\u5408 daemon \u5b57\u9762\u610f\u601d\uff1a \u5b88\u62a4 \u6b63\u5e38\u7684\u591a\u7ebf\u7a0b\uff0cA\u5f00\u542f\u4e86B\uff0cA\u548cB\u662f\u4e24\u4e2a\u72ec\u7acb\u7684\u7ebf\u7a0b\uff0c\u4e92\u4e0d\u5e72\u6270 \u4e3b\u7ebf\u7a0bA\u4e2d\uff0c\u521b\u5efa\u4e86\u5b50\u7ebf\u7a0bB\uff0c\u5e76\u4e14\u5728\u4e3b\u7ebf\u7a0bA\u4e2d\u8c03\u7528\u4e86 B.setDaemon() \uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u8ba9B\u5b88\u62a4A\uff0cA\u8fdb\u7a0b\u7ed3\u675f\u4e86\uff0c\u5c31\u4e0d\u7ba1\u5b50\u7ebf\u7a0bB\u662f\u5426\u5b8c\u6210\uff0c\u4e00\u5e76\u548c\u4e3b\u7ebf\u7a0bA\u9000\u51fa\u3002\u8fd9\u5c31\u662f setDaemon \u65b9\u6cd5\u7684\u542b\u4e49 \u4e3b\u7ebf\u7a0bA\u4e2d\uff0c\u521b\u5efa\u4e86\u5b50\u7ebf\u7a0bB\uff0c\u5e76\u4e14\u5728\u4e3b\u7ebf\u7a0bA\u4e2d\u8c03\u7528\u4e86 B.join() \uff0c\u6211\u7684\u7406\u89e3\u5c31\u662f\u8ba9B\u8054\u5408A\uff0cA\u8fdb\u7a0b\u7ed3\u675f\u4e86\uff0c\u5c31\u4f1a\u8fdb\u5165\u963b\u585e\u72b6\u6001\u7b49\u5f85B\uff0c\u7b49\u5f85B\u7ed3\u675f\uff0cA\u624d\u9000\u51fa \u4e0b\u9762\u4ec5\u4ee5\u591a\u7ebf\u7a0b\u4e3a\u4f8b\uff1a \u9996\u5148\u9700\u8981\u660e\u786e\u51e0\u4e2a\u6982\u5ff5\uff1a \u5f53\u4e00\u4e2a\u8fdb\u7a0b\u542f\u52a8\u4e4b\u540e\uff0c\u4f1a\u9ed8\u8ba4\u4ea7\u751f\u4e00\u4e2a\u4e3b\u7ebf\u7a0b\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u662f\u7a0b\u5e8f\u6267\u884c\u6d41\u7684\u6700\u5c0f\u5355\u5143\uff0c\u5f53\u8bbe\u7f6e\u591a\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4f1a\u521b\u5efa\u591a\u4e2a\u5b50\u7ebf\u7a0b\uff0c\u5728python\u4e2d\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff08\u5176\u5b9e\u5c31\u662f setDaemon(False) \uff0c\u4e3b\u7ebf\u7a0b\u6267\u884c\u5b8c\u81ea\u5df1\u7684\u4efb\u52a1\u4ee5\u540e\uff0c\u5c31\u9000\u51fa\u4e86\uff0c\u6b64\u65f6\u5b50\u7ebf\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u76f4\u5230\u81ea\u5df1\u7684\u4efb\u52a1\u7ed3\u675f\uff0c\u4f8b\u5b50\u89c1\u4e0b\u9762\u4e00\u3002 \u5f53\u6211\u4eec\u4f7f\u7528 setDaemon(True) \u65b9\u6cd5\uff0c\u8bbe\u7f6e\u5b50\u7ebf\u7a0b\u4e3a\u5b88\u62a4\u7ebf\u7a0b\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u4e00\u65e6\u6267\u884c\u7ed3\u675f\uff0c\u5219\u5168\u90e8\u7ebf\u7a0b\u5168\u90e8\u88ab\u7ec8\u6b62\u6267\u884c\uff0c\u53ef\u80fd\u51fa\u73b0\u7684\u60c5\u51b5\u5c31\u662f\uff0c\u5b50\u7ebf\u7a0b\u7684\u4efb\u52a1\u8fd8\u6ca1\u6709\u5b8c\u5168\u6267\u884c\u7ed3\u675f\uff0c\u5c31\u88ab\u8feb\u505c\u6b62\uff0c\u4f8b\u5b50\u89c1\u4e0b\u9762\u4e8c\u3002 \u6b64\u65f6join\u7684\u4f5c\u7528\u5c31\u51f8\u663e\u51fa\u6765\u4e86\uff0cjoin\u6240\u5b8c\u6210\u7684\u5de5\u4f5c\u5c31\u662f\u7ebf\u7a0b\u540c\u6b65\uff0c\u5373\u4e3b\u7ebf\u7a0b\u4efb\u52a1\u7ed3\u675f\u4e4b\u540e\uff0c\u8fdb\u5165\u963b\u585e\u72b6\u6001\uff0c\u4e00\u76f4\u7b49\u5f85\u5176\u4ed6\u7684\u5b50\u7ebf\u7a0b\u6267\u884c\u7ed3\u675f\u4e4b\u540e\uff0c\u4e3b\u7ebf\u7a0b\u5728\u7ec8\u6b62\uff0c\u4f8b\u5b50\u89c1\u4e0b\u9762\u4e09\u3002","title":"\u603b\u7ed3"},{"location":"python/threading/join/#python","text":"import threading import time def run(): time.sleep(2) print('\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57\u662f\uff1a ', threading.current_thread().name) time.sleep(2) if __name__ == '__main__': start_time = time.time() print('\u8fd9\u662f\u4e3b\u7ebf\u7a0b\uff1a', threading.current_thread().name) thread_list = [] for i in range(5): t = threading.Thread(target=run) thread_list.append(t) for t in thread_list: t.start() print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff01' , threading.current_thread().name) print('\u4e00\u5171\u7528\u65f6\uff1a', time.time()-start_time) \u5176\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u5173\u952e\u70b9\uff1a \u6211\u4eec\u7684\u8ba1\u65f6\u662f\u5bf9\u4e3b\u7ebf\u7a0b\u8ba1\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\uff0c\u8ba1\u65f6\u968f\u4e4b\u7ed3\u675f\uff0c\u6253\u5370\u51fa\u4e3b\u7ebf\u7a0b\u7684\u7528\u65f6\u3002 \u4e3b\u7ebf\u7a0b\u7684\u4efb\u52a1\u5b8c\u6210\u4e4b\u540e\uff0c\u4e3b\u7ebf\u7a0b\u968f\u4e4b\u7ed3\u675f\uff0c\u5b50\u7ebf\u7a0b\u7ee7\u7eed\u6267\u884c\u81ea\u5df1\u7684\u4efb\u52a1\uff0c\u76f4\u5230\u5168\u90e8\u7684\u5b50\u7ebf\u7a0b\u7684\u4efb\u52a1\u5168\u90e8\u7ed3\u675f\uff0c\u7a0b\u5e8f\u7ed3\u675f\u3002","title":"\u4e00\uff1aPython\u591a\u7ebf\u7a0b\u7684\u9ed8\u8ba4\u60c5\u51b5"},{"location":"python/threading/join/#_2","text":"import threading import time def run(): time.sleep(2) print('\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57\u662f\uff1a ', threading.current_thread().name) time.sleep(2) if __name__ == '__main__': start_time = time.time() print('\u8fd9\u662f\u4e3b\u7ebf\u7a0b\uff1a', threading.current_thread().name) thread_list = [] for i in range(5): t = threading.Thread(target=run) thread_list.append(t) for t in thread_list: t.setDaemon(True) t.start() print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4e86\uff01' , threading.current_thread().name) print('\u4e00\u5171\u7528\u65f6\uff1a', time.time()-start_time) \u5176\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff0c\u6ce8\u610f\u8bf7\u786e\u4fddsetDaemon()\u5728start()\u4e4b\u524d\u3002 \u5173\u952e\u70b9\uff1a \u975e\u5e38\u660e\u663e\u7684\u770b\u5230\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4ee5\u540e\uff0c\u5b50\u7ebf\u7a0b\u8fd8\u6ca1\u6709\u6765\u5f97\u53ca\u6267\u884c\uff0c\u6574\u4e2a\u7a0b\u5e8f\u5c31\u9000\u51fa\u4e86\u3002","title":"\u4e8c\uff1a\u8bbe\u7f6e\u5b88\u62a4\u7ebf\u7a0b"},{"location":"python/threading/join/#join_1","text":"import threading import time def run(): time.sleep(2) print('\u5f53\u524d\u7ebf\u7a0b\u7684\u540d\u5b57\u662f\uff1a ', threading.current_thread().name) time.sleep(2) if __name__ == '__main__': start_time = time.time() print('\u8fd9\u662f\u4e3b\u7ebf\u7a0b\uff1a', threading.current_thread().name) thread_list = [] for i in range(5): t = threading.Thread(target=run) thread_list.append(t) for t in thread_list: t.setDaemon(True) t.start() for t in thread_list: t.join() print('\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u4e86\uff01' , threading.current_thread().name) print('\u4e00\u5171\u7528\u65f6\uff1a', time.time()-start_time) \u5176\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a \u5173\u952e\u70b9\uff1a \u53ef\u4ee5\u770b\u5230\uff0c\u4e3b\u7ebf\u7a0b\u4e00\u76f4\u7b49\u5f85\u5168\u90e8\u7684\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u540e\uff0c\u4e3b\u7ebf\u7a0b\u81ea\u8eab\u624d\u7ed3\u675f\uff0c\u7a0b\u5e8f\u9000\u51fa\u3002","title":"\u4e09\uff1ajoin\u7684\u4f5c\u7528"},{"location":"python/threading/thread/","text":"\u901a\u8fc7\u7ee7\u627f\u5b9e\u73b0\u591a\u7ebf\u7a0b \u4e00\uff0c\u5b9e\u73b0run\u65b9\u6cd5 \u5148\u770b\u4e0d\u5e26init\u65b9\u6cd5\u7684 import time import threading class MyThread(threading.Thread): def run(self): time.sleep(1) a = 1 + 1 print(a) for _ in range(5): th = MyThread() th.start() \u7ed3\u679c\uff1a 2 2 2 2 2 \u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u7ee7\u627f threading.Thread \u7c7b\uff0c\u91cc\u9762\u53ea\u9700\u8981\u5b9a\u4e49 run \u65b9\u6cd5 run \u65b9\u6cd5\u76f8\u5f53\u4e8e\u4e4b\u524d\u4f20\u5165 Thread \u7684\u90a3\u4e2a\u51fd\u6570\uff0c\u6ce8\u610f\u53ea\u80fd\u7528 run \u8fd9\u4e2a\u540d\u5b57\uff0c\u4e0d\u7528\u663e\u5f0f\u8c03\u7528\uff0c\u7ebf\u7a0b start() \u65f6\u4f1a\u81ea\u52a8\u8c03\u7528 run \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\u65f6\u4e0d\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\u8c03\u7528 start join \u7b49\u65b9\u6cd5 Thread \u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528 start join run \u7b49\u65b9\u6cd5\uff0c\u5176\u5b9e\u5f53\u65f6\u8c03\u7528 start \u5c31\u662f\u81ea\u52a8\u8c03\u7528\u4e86 run \u3002\u8fd9\u91cc\u53ea\u4e0d\u8fc7\u662f\u5728\u65b0\u7c7b\u4e2d\u91cd\u5199\u4e86 run \u65b9\u6cd5\uff0c\u7ebf\u7a0b\u8c03\u7528 start \u65f6\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u8fd9\u4e2a run \u4e8c\uff0c\u7528\u521d\u59cb\u5316\u65b9\u6cd5\u5b9e\u73b0\u4f20\u53c2 \u5e26\u521d\u59cb\u5316\u65b9\u6cd5\u7684\uff0c\u4e0a\u9762\u6bcf\u6b21\u8fd0\u884c\u7684 run \u90fd\u662f\u4e00\u6837\u7684\uff0c\u771f\u6b63\u4f7f\u7528\u65f6\u5f88\u5c11\u4f1a\u8fd9\u6837\u7528\uff0c\u6709\u65f6\u4f1a\u9700\u8981\u4f20\u5165\u4e00\u4e9b\u533a\u522b\u6027\u7684\u53c2\u6570\uff0c\u8fd9\u5c31\u9700\u8981\u5b9a\u4e49\u7c7b\u7684 __init__ \u4e86 import threading import requests from bs4 import BeautifulSoup class MyThread(threading.Thread): def __init__(self, i): threading.Thread.__init__(self) self.i = i def run(self): print(self.i) for i in range(10): th = MyThread(i) th.start() \u7ed3\u679c\uff1a 0 1 2 3 4 5 6 7 8 9 \u4e09\uff0c\u8c03\u7528Thrad\u5bf9\u8c61\u7684\u65b9\u6cd5 Thread \u51fd\u6570\u7684\u53c2\u6570\u3002\u521d\u59cb\u5316\u7ebf\u7a0b\u65f6\u4f20\u5165\u4e00\u4e9b\u53c2\u6570\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u5728 __init__ \u4e2d\u5b9a\u4e49 Thread \u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u8fd9\u91cc\u53ef\u4ee5\u7528 self \u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5 threading.activeCount() \u7b49\u76f4\u63a5\u8c03\u7528\u7684\u53d8\u91cf\u3002\u5728\u8fd9\u91cc\u4f9d\u7136\u53ef\u4ee5\u8c03\u7528 \u6240\u4ee5\u7528\u7c7b\u7684\u65b9\u6cd5\u4e0d\u4f1a\u6709\u4efb\u4f55\u9650\u5236\uff0c\u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50 import time import threading class MyThread(threading.Thread): def __init__(self, name): threading.Thread.__init__(self) self.name = name # \u8fd9\u6837\u5c31\u76f8\u5f53\u4e8eThread\u4e2d\u7684name\u53c2\u6570\u4e86 def run(self): a = 1 + 1 print(threading.currentThread().name) time.sleep(1) print(self.name) time.sleep(1) print(self.is_alive()) # \u672a\u663e\u5f0f\u5b9a\u4e49\u8fc7\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528 t = time.time() ths = [MyThread('thread {}'.format(i)) for i in range(3)] print(\"len(ths):\"+str(len(ths))) for th in ths: th.start() print(\"threading.activeCount:\"+str(threading.activeCount())) for th in ths: th.join() print(time.time() - t) \u56db\uff0c\u7ed9run\u65b9\u6cd5\u4f20\u5165\u5199\u597d\u7684\u65b9\u6cd5 \u4e4b\u524d\u662f\u76f4\u63a5\u7528 run \u5b9a\u4e49\u8ba1\u7b97\u51fd\u6570\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u4e00\u4e2a\u8ba1\u7b97\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f20\u5165\u7684\u65b9\u5f0f\u800c\u4e0d\u662f\u6539\u5199\u6210 run import threading def gettitle(page): print(\"page:\"+str(page)) class MyThread(threading.Thread): def __init__(self, target, **args): threading.Thread.__init__(self) self.target = target self.args = args def run(self): self.target(**self.args) for i in range(10): th = MyThread(gettitle, page = i) th.start() \u7ed3\u679c\uff1a page:0 page:1 page:2 page:3 page:4 page:5 page:6 page:7 page:8 page:9","title":"\u901a\u8fc7\u7ee7\u627f\u5b9e\u73b0\u591a\u7ebf\u7a0b"},{"location":"python/threading/thread/#_1","text":"","title":"\u901a\u8fc7\u7ee7\u627f\u5b9e\u73b0\u591a\u7ebf\u7a0b"},{"location":"python/threading/thread/#run","text":"\u5148\u770b\u4e0d\u5e26init\u65b9\u6cd5\u7684 import time import threading class MyThread(threading.Thread): def run(self): time.sleep(1) a = 1 + 1 print(a) for _ in range(5): th = MyThread() th.start() \u7ed3\u679c\uff1a 2 2 2 2 2 \u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u7ee7\u627f threading.Thread \u7c7b\uff0c\u91cc\u9762\u53ea\u9700\u8981\u5b9a\u4e49 run \u65b9\u6cd5 run \u65b9\u6cd5\u76f8\u5f53\u4e8e\u4e4b\u524d\u4f20\u5165 Thread \u7684\u90a3\u4e2a\u51fd\u6570\uff0c\u6ce8\u610f\u53ea\u80fd\u7528 run \u8fd9\u4e2a\u540d\u5b57\uff0c\u4e0d\u7528\u663e\u5f0f\u8c03\u7528\uff0c\u7ebf\u7a0b start() \u65f6\u4f1a\u81ea\u52a8\u8c03\u7528 run \u521b\u5efa\u7c7b\u7684\u5b9e\u4f8b\u65f6\u4e0d\u9700\u8981\u4f20\u5165\u53c2\u6570\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\u8c03\u7528 start join \u7b49\u65b9\u6cd5 Thread \u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528 start join run \u7b49\u65b9\u6cd5\uff0c\u5176\u5b9e\u5f53\u65f6\u8c03\u7528 start \u5c31\u662f\u81ea\u52a8\u8c03\u7528\u4e86 run \u3002\u8fd9\u91cc\u53ea\u4e0d\u8fc7\u662f\u5728\u65b0\u7c7b\u4e2d\u91cd\u5199\u4e86 run \u65b9\u6cd5\uff0c\u7ebf\u7a0b\u8c03\u7528 start \u65f6\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\u8fd9\u4e2a run","title":"\u4e00\uff0c\u5b9e\u73b0run\u65b9\u6cd5"},{"location":"python/threading/thread/#_2","text":"\u5e26\u521d\u59cb\u5316\u65b9\u6cd5\u7684\uff0c\u4e0a\u9762\u6bcf\u6b21\u8fd0\u884c\u7684 run \u90fd\u662f\u4e00\u6837\u7684\uff0c\u771f\u6b63\u4f7f\u7528\u65f6\u5f88\u5c11\u4f1a\u8fd9\u6837\u7528\uff0c\u6709\u65f6\u4f1a\u9700\u8981\u4f20\u5165\u4e00\u4e9b\u533a\u522b\u6027\u7684\u53c2\u6570\uff0c\u8fd9\u5c31\u9700\u8981\u5b9a\u4e49\u7c7b\u7684 __init__ \u4e86 import threading import requests from bs4 import BeautifulSoup class MyThread(threading.Thread): def __init__(self, i): threading.Thread.__init__(self) self.i = i def run(self): print(self.i) for i in range(10): th = MyThread(i) th.start() \u7ed3\u679c\uff1a 0 1 2 3 4 5 6 7 8 9","title":"\u4e8c\uff0c\u7528\u521d\u59cb\u5316\u65b9\u6cd5\u5b9e\u73b0\u4f20\u53c2"},{"location":"python/threading/thread/#thrad","text":"Thread \u51fd\u6570\u7684\u53c2\u6570\u3002\u521d\u59cb\u5316\u7ebf\u7a0b\u65f6\u4f20\u5165\u4e00\u4e9b\u53c2\u6570\uff0c\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u5728 __init__ \u4e2d\u5b9a\u4e49 Thread \u5bf9\u8c61\u7684\u65b9\u6cd5\u3002\u8fd9\u91cc\u53ef\u4ee5\u7528 self \u76f4\u63a5\u8c03\u7528\u8fd9\u4e9b\u65b9\u6cd5 threading.activeCount() \u7b49\u76f4\u63a5\u8c03\u7528\u7684\u53d8\u91cf\u3002\u5728\u8fd9\u91cc\u4f9d\u7136\u53ef\u4ee5\u8c03\u7528 \u6240\u4ee5\u7528\u7c7b\u7684\u65b9\u6cd5\u4e0d\u4f1a\u6709\u4efb\u4f55\u9650\u5236\uff0c\u4e0b\u9762\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50 import time import threading class MyThread(threading.Thread): def __init__(self, name): threading.Thread.__init__(self) self.name = name # \u8fd9\u6837\u5c31\u76f8\u5f53\u4e8eThread\u4e2d\u7684name\u53c2\u6570\u4e86 def run(self): a = 1 + 1 print(threading.currentThread().name) time.sleep(1) print(self.name) time.sleep(1) print(self.is_alive()) # \u672a\u663e\u5f0f\u5b9a\u4e49\u8fc7\u5c31\u53ef\u4ee5\u76f4\u63a5\u7528 t = time.time() ths = [MyThread('thread {}'.format(i)) for i in range(3)] print(\"len(ths):\"+str(len(ths))) for th in ths: th.start() print(\"threading.activeCount:\"+str(threading.activeCount())) for th in ths: th.join() print(time.time() - t)","title":"\u4e09\uff0c\u8c03\u7528Thrad\u5bf9\u8c61\u7684\u65b9\u6cd5"},{"location":"python/threading/thread/#run_1","text":"\u4e4b\u524d\u662f\u76f4\u63a5\u7528 run \u5b9a\u4e49\u8ba1\u7b97\u51fd\u6570\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u4e00\u4e2a\u8ba1\u7b97\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u7528\u4f20\u5165\u7684\u65b9\u5f0f\u800c\u4e0d\u662f\u6539\u5199\u6210 run import threading def gettitle(page): print(\"page:\"+str(page)) class MyThread(threading.Thread): def __init__(self, target, **args): threading.Thread.__init__(self) self.target = target self.args = args def run(self): self.target(**self.args) for i in range(10): th = MyThread(gettitle, page = i) th.start() \u7ed3\u679c\uff1a page:0 page:1 page:2 page:3 page:4 page:5 page:6 page:7 page:8 page:9","title":"\u56db\uff0c\u7ed9run\u65b9\u6cd5\u4f20\u5165\u5199\u597d\u7684\u65b9\u6cd5"},{"location":"python/threading/thread_event/","text":"threading.Event() \u901a\u8fc7threading.Event()\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u7ba1\u7406\u6807\u5fd7\uff0c\u8be5\u6807\u5fd7\uff08event\uff09\u9ed8\u8ba4\u4e3aFalse\uff0cevent\u5bf9\u8c61\u4e3b\u8981\u6709\u56db\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8c03\u7528\uff1a event.wait(timeout=None)\uff1a\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\u53c2\u6570\uff0c\u8d85\u65f6\u540e\uff0c\u7ebf\u7a0b\u4f1a\u505c\u6b62\u963b\u585e\u7ee7\u7eed\u6267\u884c\uff1b event.set()\uff1a\u5c06event\u7684\u6807\u5fd7\u8bbe\u7f6e\u4e3aTrue\uff0c\u8c03\u7528wait\u65b9\u6cd5\u7684\u6240\u6709\u7ebf\u7a0b\u5c06\u88ab\u5524\u9192\uff1b event.clear()\uff1a\u5c06event\u7684\u6807\u5fd7\u8bbe\u7f6e\u4e3aFalse\uff0c\u8c03\u7528wait\u65b9\u6cd5\u7684\u6240\u6709\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\uff1b event.isSet()\uff1a\u5224\u65adevent\u7684\u6807\u5fd7\u662f\u5426\u4e3aTrue\u3002 import threading import time event = threading.Event() def func(): # \u7b49\u5f85\u4e8b\u4ef6\uff0c\u8fdb\u5165\u7b49\u5f85\u963b\u585e\u72b6\u6001 print('%s wait for event...' % threading.currentThread().getName()) print(\"event.is_set():\"+str(event.is_set())) event.wait() # \u6536\u5230\u4e8b\u4ef6\u540e\u8fdb\u5165\u8fd0\u884c\u72b6\u6001 print('%s recv event.' % threading.currentThread().getName()) print(\"event.is_set():\"+str(event.is_set())) t1 = threading.Thread(target=func) t2 = threading.Thread(target=func) t1.start() t2.start() time.sleep(2) # \u53d1\u9001\u4e8b\u4ef6\u901a\u77e5 print('MainThread set event..............') event.set() \u7ed3\u679c\uff1a Thread-1 wait for event... event.is_set():False Thread-2 wait for event... event.is_set():False MainThread set event.............. Thread-2 recv event. event.is_set():True Thread-1 recv event. event.is_set():True \u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 0 \u7528\u7ee7\u627f\u65b9\u5f0f\u5b9e\u73b0 import threading import time class MyThread(threading.Thread): event = threading.Event() def run(self): # \u7b49\u5f85\u4e8b\u4ef6\uff0c\u8fdb\u5165\u7b49\u5f85\u963b\u585e\u72b6\u6001 print('%s wait for event...' % threading.currentThread().getName()) print(\"event.is_set():\" + str(MyThread.event.is_set())) MyThread.event.wait() # \u6536\u5230\u4e8b\u4ef6\u540e\u8fdb\u5165\u8fd0\u884c\u72b6\u6001 print('%s recv event.' % threading.currentThread().getName()) print(\"event.is_set():\" + str(MyThread.event.is_set())) t1 = MyThread() t2 = MyThread() t1.start() t2.start() time.sleep(2) # \u53d1\u9001\u4e8b\u4ef6\u901a\u77e5 print('MainThread set event..............') MyThread.event.set() \u7ed3\u679c\uff1a Thread-1 wait for event... event.is_set():False Thread-2 wait for event... event.is_set():False MainThread set event.............. Thread-2 recv event. event.is_set():True Thread-1 recv event. event.is_set():True \u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 0","title":"threading.Event()"},{"location":"python/threading/thread_event/#threadingevent","text":"\u901a\u8fc7threading.Event()\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4e8b\u4ef6\u7ba1\u7406\u6807\u5fd7\uff0c\u8be5\u6807\u5fd7\uff08event\uff09\u9ed8\u8ba4\u4e3aFalse\uff0cevent\u5bf9\u8c61\u4e3b\u8981\u6709\u56db\u79cd\u65b9\u6cd5\u53ef\u4ee5\u8c03\u7528\uff1a event.wait(timeout=None)\uff1a\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86timeout\u53c2\u6570\uff0c\u8d85\u65f6\u540e\uff0c\u7ebf\u7a0b\u4f1a\u505c\u6b62\u963b\u585e\u7ee7\u7eed\u6267\u884c\uff1b event.set()\uff1a\u5c06event\u7684\u6807\u5fd7\u8bbe\u7f6e\u4e3aTrue\uff0c\u8c03\u7528wait\u65b9\u6cd5\u7684\u6240\u6709\u7ebf\u7a0b\u5c06\u88ab\u5524\u9192\uff1b event.clear()\uff1a\u5c06event\u7684\u6807\u5fd7\u8bbe\u7f6e\u4e3aFalse\uff0c\u8c03\u7528wait\u65b9\u6cd5\u7684\u6240\u6709\u7ebf\u7a0b\u5c06\u88ab\u963b\u585e\uff1b event.isSet()\uff1a\u5224\u65adevent\u7684\u6807\u5fd7\u662f\u5426\u4e3aTrue\u3002 import threading import time event = threading.Event() def func(): # \u7b49\u5f85\u4e8b\u4ef6\uff0c\u8fdb\u5165\u7b49\u5f85\u963b\u585e\u72b6\u6001 print('%s wait for event...' % threading.currentThread().getName()) print(\"event.is_set():\"+str(event.is_set())) event.wait() # \u6536\u5230\u4e8b\u4ef6\u540e\u8fdb\u5165\u8fd0\u884c\u72b6\u6001 print('%s recv event.' % threading.currentThread().getName()) print(\"event.is_set():\"+str(event.is_set())) t1 = threading.Thread(target=func) t2 = threading.Thread(target=func) t1.start() t2.start() time.sleep(2) # \u53d1\u9001\u4e8b\u4ef6\u901a\u77e5 print('MainThread set event..............') event.set() \u7ed3\u679c\uff1a Thread-1 wait for event... event.is_set():False Thread-2 wait for event... event.is_set():False MainThread set event.............. Thread-2 recv event. event.is_set():True Thread-1 recv event. event.is_set():True \u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 0","title":"threading.Event()"},{"location":"python/threading/thread_event/#_1","text":"import threading import time class MyThread(threading.Thread): event = threading.Event() def run(self): # \u7b49\u5f85\u4e8b\u4ef6\uff0c\u8fdb\u5165\u7b49\u5f85\u963b\u585e\u72b6\u6001 print('%s wait for event...' % threading.currentThread().getName()) print(\"event.is_set():\" + str(MyThread.event.is_set())) MyThread.event.wait() # \u6536\u5230\u4e8b\u4ef6\u540e\u8fdb\u5165\u8fd0\u884c\u72b6\u6001 print('%s recv event.' % threading.currentThread().getName()) print(\"event.is_set():\" + str(MyThread.event.is_set())) t1 = MyThread() t2 = MyThread() t1.start() t2.start() time.sleep(2) # \u53d1\u9001\u4e8b\u4ef6\u901a\u77e5 print('MainThread set event..............') MyThread.event.set() \u7ed3\u679c\uff1a Thread-1 wait for event... event.is_set():False Thread-2 wait for event... event.is_set():False MainThread set event.............. Thread-2 recv event. event.is_set():True Thread-1 recv event. event.is_set():True \u8fdb\u7a0b\u5df2\u7ed3\u675f\uff0c\u9000\u51fa\u4ee3\u7801\u4e3a 0","title":"\u7528\u7ee7\u627f\u65b9\u5f0f\u5b9e\u73b0"},{"location":"rancher/rancher_instatll/","text":"rancher\u5b89\u88c5 \u7248\u672c2.6.3 [root@server ~] yum install -y yum-utils device-mapper-persistent-data lvm2 wget [root@server ~] yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@server ~] yum makecache fast [root@server ~] yum install docker-ce-19.03.15-3.el7 docker-ce-cli-19.03.15-3.el7 -y [root@server ~] systemctl enable docker && systemctl restart docker [root@server ~] sudo docker run -d --restart=unless-stopped --privileged -p 80:80 -p 443:443 rancher/rancher \u8bbf\u95ee \u672c\u673a80\u7aef\u53e3","title":"Rancher\u5b89\u88c5"},{"location":"rancher/rancher_instatll/#rancher","text":"\u7248\u672c2.6.3 [root@server ~] yum install -y yum-utils device-mapper-persistent-data lvm2 wget [root@server ~] yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo [root@server ~] yum makecache fast [root@server ~] yum install docker-ce-19.03.15-3.el7 docker-ce-cli-19.03.15-3.el7 -y [root@server ~] systemctl enable docker && systemctl restart docker [root@server ~] sudo docker run -d --restart=unless-stopped --privileged -p 80:80 -p 443:443 rancher/rancher \u8bbf\u95ee \u672c\u673a80\u7aef\u53e3","title":"rancher\u5b89\u88c5"},{"location":"soft/p99/","text":"P99 p99 1.403 \u8868\u793a\u8fc7\u53bb\u768410\u79d2\u5185\u6700\u6162\u76841%\u8bf7\u6c42\u7684\u5e73\u5747\u5ef6\u65f6\u4e3a1.403\u79d2 p95 1.403 \u8868\u793a\u8fc7\u53bb\u768410\u79d2\u5185\u6700\u6162\u76845%\u8bf7\u6c42\u7684\u5e73\u5747\u5ef6\u65f6\u4e3a1.403\u79d2 p90 1.403 \u8868\u793a\u8fc7\u53bb\u768410\u79d2\u5185\u6700\u6162\u768410%\u8bf7\u6c42\u7684\u5e73\u5747\u5ef6\u65f6\u4e3a1.403\u79d2","title":"P99"},{"location":"soft/p99/#p99","text":"","title":"P99"},{"location":"soft/p99/#p99-1403","text":"\u8868\u793a\u8fc7\u53bb\u768410\u79d2\u5185\u6700\u6162\u76841%\u8bf7\u6c42\u7684\u5e73\u5747\u5ef6\u65f6\u4e3a1.403\u79d2","title":"p99 1.403"},{"location":"soft/p99/#p95-1403","text":"\u8868\u793a\u8fc7\u53bb\u768410\u79d2\u5185\u6700\u6162\u76845%\u8bf7\u6c42\u7684\u5e73\u5747\u5ef6\u65f6\u4e3a1.403\u79d2","title":"p95 1.403"},{"location":"soft/p99/#p90-1403","text":"\u8868\u793a\u8fc7\u53bb\u768410\u79d2\u5185\u6700\u6162\u768410%\u8bf7\u6c42\u7684\u5e73\u5747\u5ef6\u65f6\u4e3a1.403\u79d2","title":"p90 1.403"},{"location":"soft/url/","text":"\u6709\u8da3\u547d\u4ee4\u96c6\u5408 \u5173\u4e8ecpu\u4e2dST\u7684\u89e3\u91ca\uff1ahttps://www.cnblogs.com/xiaobaozi-95/p/10641237.html df\u6e90\u7801\u5730\u5740\uff1ahttps://github.com/coreutils/coreutils/blob/master/src/df.c coreutils\u6e90\u7801\u5730\u5740\uff0ccoreutils\u662flinux\u57fa\u672c\u547d\u4ee4\u96c6\u5408\uff0c\u6bd4\u5982chmod,ls,df,wc\u7b49\uff1ahttps://github.com/coreutils/coreutils Linux hdparm\u547d\u4ee4\uff0c\u6d4b\u8bd5\u78c1\u76d8\u7528\u7684\uff1ahttps://www.runoob.com/linux/linux-comm-hdparm.html sar\u547d\u4ee4\u6e90\u7801\u5730\u5740\uff0csar\u5c5e\u4e8esysstat\u5de5\u5177\u5305\u4e2d\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u8fd8\u6709\u5176\u4ed6linux\u6700\u5e38\u7528\u5176\u4ed6\u6027\u80fd\u547d\u4ee4\uff0c\u6bd4\u5982iostat\u7b49\uff1ahttp://sebastien.godard.pagesperso-orange.fr/documentation.html tsar\u6e90\u7801\u5730\u5740\uff1ahttps://github.com/alibaba/tsar/blob/master/info.md sar\u6ce8\u91ca\u89e3\u91ca\u6bd4\u8f83\u5168\u7684\u4e66\u7b7e\uff1ahttps://blog.csdn.net/liyongbing1122/article/details/89517282?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase#8.%20%E7%BB%9F%E8%AE%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%20sar%20-n%C2%A0 cpu \u4e2d\u65ad\u7684\u89e3\u91ca\uff1ahttps://www.cnblogs.com/bamanzi/p/linux-irq-and-cpu-affinity.html \u5185\u5b58cgroup\u7684\u89e3\u91ca\uff1ahttps://blog.csdn.net/zsj100213/article/details/89151442 \u5012\u53d9\u8f93\u51fa\u6bcf\u884c\u5185\u5bb9\u7684\u547d\u4ee4rev https://blog.csdn.net/weixin_34130389/article/details/93254255 usleep \u6307\u5b9a\u7761\u5fae\u5999\u7ea7\u547d\u4ee4 https://www.cnblogs.com/f-ck-need-u/p/7427262.html \u4f7f\u7528\u5916\u90e8\u547d\u4ee4command https://blog.csdn.net/fickyou/article/details/72911217 run-parts \u547d\u4ee4http://www.ttlsa.com/linux-command/linux-crontab-run-parts/ \u4f7f\u7528shell\u5185\u7f6e\u547d\u4ee4 https://blog.csdn.net/yexiangCSDN/article/details/82797488 \u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u547d\u4ee4 https://ipcmen.com/compgen shell\u4e2d\u7684\u547d\u4ee4\u8865\u5168\u529f\u80fd https://www.cnblogs.com/xulei13140106/p/5946359.html \u521b\u5efa\u6570\u7ec4\u7684\u547d\u4ee4 https://www.cnblogs.com/ChinaGo/p/10627368.html shell\u4e2d\u5feb\u901f\u5207\u6362\u76ee\u5f55 https://linux.cn/article-8558-1.html shell\u4e2d\u521b\u5efa\u53ea\u8bfb\u53d8\u91cf https://blog.csdn.net/yexiangCSDN/article/details/82797946 \u7ed9shell\u589e\u5f3a\u7684\u547d\u4ee4 https://blog.csdn.net/u010003835/article/details/80760946 shell\u7684\u6682\u505c\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-suspend.html shell \u4e2d\u6355\u6349\u4fe1\u53f7\u7684\u547d\u4ee4 https://www.cnblogs.com/FengGeBlog/p/10407221.html type \u547d\u4ee4 https://ipcmen.com/type typeset https://www.cnblogs.com/alog9/p/11982073.html setlogcons https://www.runoob.com/linux/linux-comm-setconsole.html rdate\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-rdate.html fbset https://www.runoob.com/linux/linux-comm-fbset.html powertop https://linux.cn/article-10560-1.html paste\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-paste.html paste\u547d\u4ee4 http://c.biancheng.net/linux/paste.html \u8fdb\u7a0b\u5185\u5b58\u5206\u6790\u5de5\u5177 pmap https://www.cnblogs.com/ggjucheng/p/3348439.html \u7ed9\u6587\u672c\u53eb\u884c\u53f7nl https://www.cnblogs.com/xqzt/p/5414547.html \u91ca\u653e\u4e0d\u4f7f\u7528\u7684\u865a\u62df\u7ec8\u7aef deallocvt\u547d\u4ee4 https://www.cnblogs.com/fanweisheng/p/11080744.html fsfreeze -f \u76ee\u5f55\u540d fsfreeze -u \u76ee\u5f55\u540d \u9501\u6587\u4ef6\u7cfb\u7edf\uff0c-f\u9501\uff0c-u\u89e3\u9501 \u5b57\u7b26\u96c6\u8f6c\u7801\u5de5\u5177 iconv\u547d\u4ee4 https://www.cnblogs.com/wqbin/p/11719952.html \u6279\u91cf\u4fee\u6539\u8d26\u53f7\u5bc6\u7801 chpasswd\u547d\u4ee4 https://blog.csdn.net/chengxuyuanyonghu/article/details/45694783 \u5220\u9664\u7528\u6237\u7684\u6240\u6709\u6587\u4ef6 deluser\u547d\u4ee4 https://blog.csdn.net/u014801157/article/details/50932747/ \u6309\u884c\u5206\u9694\u6587\u4ef6 split\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-split.html \u5207\u6362\u7ec8\u7aef chvt\u547d\u4ee4 http://linux.51yip.com/search/chvt od\u547d\u4ee4 8\u8fdb\u5236\u663e\u793a\u6587\u672c\uff0cxxd 16\u8fdb\u5236\u663e\u793a\u6587\u672c \u6587\u4ef6\u5b8c\u6574\u6027\u6821\u9a8c cksum\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-cksum.html \u6307\u5b9a\u6587\u672c\u5bbd\u5ea6\u547d\u4ee4 fold\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-fold.html \u7c89\u788e\u6587\u4ef6 shred https://blog.csdn.net/boomjane_testingblog/article/details/60579470 USE\u663e\u793a\u547d\u4ee4 lsusb https://blog.csdn.net/robertsong2004/article/details/46619629 \u4e3b\u673aID hostid https://zhidao.baidu.com/question/1733466640850464947.html pwdx \u67e5\u770b\u8fdb\u7a0b\u7684\u542f\u52a8\u76ee\u5f55 https://blog.csdn.net/dingding_ting/article/details/84952954 \u8d28\u56e0\u6570\u5206\u89e3 factor https://www.geek-share.com/detail/2750670155.html tr\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-tr.html \u4f38\u7f29\u4e00\u4e2a\u6587\u4ef6 truncate http://linux.51yip.com/search/truncate \u811a\u672c\u4e92\u65a5 flock\u547d\u4ee4 https://www.jianshu.com/p/fe5f0cf59f2d fuser\u547d\u4ee4 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u6587\u4ef6\u7cfb\u7edf\u88ab\u54ea\u4e2a\u8fdb\u7a0b\u5360\u7528 https://blog.51cto.com/12107790/2321296 \u5c06\u5236\u8868\u7b26\u90fd\u8f6c\u6362\u6210\u7a7a\u683c expand\u547d\u4ee4 https://www.cnblogs.com/Spiro-K/p/6361948.html \u5c06\u7a7a\u683c\u90fd\u8f6c\u6362\u6210\u5236\u8868\u7b26 unexpand\u547d\u4ee4 https://ipcmen.com/unexpand getconf\u547d\u4ee4 https://blog.csdn.net/bytxl/article/details/9296435 \u968f\u673a\u751f\u6210\u5bc6\u7801 mkpasswd https://www.cnblogs.com/xiaoyongzhuo/p/7444303.html \u663e\u793acpu\u4e2a\u6570 nproc\u547d\u4ee4 https://idc.wanyunshuju.com/cym/623.html comm\u547d\u4ee4 \u6bd4\u8f83\u6570\u636e https://www.runoob.com/linux/linux-comm-comm.html readlink\u547d\u4ee4\u548crealpath\u547d\u4ee4\u5219\u5141\u8bb8\u4f60\u89e3\u6790\u6587\u4ef6\u4e4b\u95f4\u7684\u8fd9\u4e9b\u94fe\u63a5 https://www.cnblogs.com/kelamoyujuzhen/p/10119706.html pidof \u67e5\u627e\u67d0\u4e2a\u540d\u5b57\u7684\u8fdb\u7a0b https://blog.csdn.net/ygm_linux/article/details/40184413 ssh\u8fdc\u7a0b\u6267\u884c\u672c\u673a\u811a\u672c https://blog.csdn.net/yinzhipeng123/article/details/108366460 docker\u6267\u884c\u5bbf\u4e3b\u673a\u811a\u672c https://blog.csdn.net/yinzhipeng123/article/details/108366299 Python\u5236\u4f5cnmtui\u7c7b\u4f3c\u7684\u56fe\u5f62 https://www.cnblogs.com/Xjng/p/3869869.html python \u8d85\u7ea7\u597d\u7528\u591a\u7ebf\u7a0b\u5305\uff0c\u65e0\u8111\u5f00\u591a\u7ebf\u7a0b \uff0cpython \u4e8c\u4e09\u7248\u672c\u90fd\u884c https://docs.python.org/zh-cn/3.6/library/multiprocessing.html","title":"\u5e38\u7528\u5730\u5740"},{"location":"soft/url/#_1","text":"\u5173\u4e8ecpu\u4e2dST\u7684\u89e3\u91ca\uff1ahttps://www.cnblogs.com/xiaobaozi-95/p/10641237.html df\u6e90\u7801\u5730\u5740\uff1ahttps://github.com/coreutils/coreutils/blob/master/src/df.c coreutils\u6e90\u7801\u5730\u5740\uff0ccoreutils\u662flinux\u57fa\u672c\u547d\u4ee4\u96c6\u5408\uff0c\u6bd4\u5982chmod,ls,df,wc\u7b49\uff1ahttps://github.com/coreutils/coreutils Linux hdparm\u547d\u4ee4\uff0c\u6d4b\u8bd5\u78c1\u76d8\u7528\u7684\uff1ahttps://www.runoob.com/linux/linux-comm-hdparm.html sar\u547d\u4ee4\u6e90\u7801\u5730\u5740\uff0csar\u5c5e\u4e8esysstat\u5de5\u5177\u5305\u4e2d\u7684\u4e00\u4e2a\u5de5\u5177\uff0c\u8fd8\u6709\u5176\u4ed6linux\u6700\u5e38\u7528\u5176\u4ed6\u6027\u80fd\u547d\u4ee4\uff0c\u6bd4\u5982iostat\u7b49\uff1ahttp://sebastien.godard.pagesperso-orange.fr/documentation.html tsar\u6e90\u7801\u5730\u5740\uff1ahttps://github.com/alibaba/tsar/blob/master/info.md sar\u6ce8\u91ca\u89e3\u91ca\u6bd4\u8f83\u5168\u7684\u4e66\u7b7e\uff1ahttps://blog.csdn.net/liyongbing1122/article/details/89517282?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase#8.%20%E7%BB%9F%E8%AE%A1%E7%BD%91%E7%BB%9C%E4%BF%A1%E6%81%AF%20sar%20-n%C2%A0 cpu \u4e2d\u65ad\u7684\u89e3\u91ca\uff1ahttps://www.cnblogs.com/bamanzi/p/linux-irq-and-cpu-affinity.html \u5185\u5b58cgroup\u7684\u89e3\u91ca\uff1ahttps://blog.csdn.net/zsj100213/article/details/89151442 \u5012\u53d9\u8f93\u51fa\u6bcf\u884c\u5185\u5bb9\u7684\u547d\u4ee4rev https://blog.csdn.net/weixin_34130389/article/details/93254255 usleep \u6307\u5b9a\u7761\u5fae\u5999\u7ea7\u547d\u4ee4 https://www.cnblogs.com/f-ck-need-u/p/7427262.html \u4f7f\u7528\u5916\u90e8\u547d\u4ee4command https://blog.csdn.net/fickyou/article/details/72911217 run-parts \u547d\u4ee4http://www.ttlsa.com/linux-command/linux-crontab-run-parts/ \u4f7f\u7528shell\u5185\u7f6e\u547d\u4ee4 https://blog.csdn.net/yexiangCSDN/article/details/82797488 \u5217\u51fa\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u547d\u4ee4 https://ipcmen.com/compgen shell\u4e2d\u7684\u547d\u4ee4\u8865\u5168\u529f\u80fd https://www.cnblogs.com/xulei13140106/p/5946359.html \u521b\u5efa\u6570\u7ec4\u7684\u547d\u4ee4 https://www.cnblogs.com/ChinaGo/p/10627368.html shell\u4e2d\u5feb\u901f\u5207\u6362\u76ee\u5f55 https://linux.cn/article-8558-1.html shell\u4e2d\u521b\u5efa\u53ea\u8bfb\u53d8\u91cf https://blog.csdn.net/yexiangCSDN/article/details/82797946 \u7ed9shell\u589e\u5f3a\u7684\u547d\u4ee4 https://blog.csdn.net/u010003835/article/details/80760946 shell\u7684\u6682\u505c\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-suspend.html shell \u4e2d\u6355\u6349\u4fe1\u53f7\u7684\u547d\u4ee4 https://www.cnblogs.com/FengGeBlog/p/10407221.html type \u547d\u4ee4 https://ipcmen.com/type typeset https://www.cnblogs.com/alog9/p/11982073.html setlogcons https://www.runoob.com/linux/linux-comm-setconsole.html rdate\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-rdate.html fbset https://www.runoob.com/linux/linux-comm-fbset.html powertop https://linux.cn/article-10560-1.html paste\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-paste.html paste\u547d\u4ee4 http://c.biancheng.net/linux/paste.html \u8fdb\u7a0b\u5185\u5b58\u5206\u6790\u5de5\u5177 pmap https://www.cnblogs.com/ggjucheng/p/3348439.html \u7ed9\u6587\u672c\u53eb\u884c\u53f7nl https://www.cnblogs.com/xqzt/p/5414547.html \u91ca\u653e\u4e0d\u4f7f\u7528\u7684\u865a\u62df\u7ec8\u7aef deallocvt\u547d\u4ee4 https://www.cnblogs.com/fanweisheng/p/11080744.html fsfreeze -f \u76ee\u5f55\u540d fsfreeze -u \u76ee\u5f55\u540d \u9501\u6587\u4ef6\u7cfb\u7edf\uff0c-f\u9501\uff0c-u\u89e3\u9501 \u5b57\u7b26\u96c6\u8f6c\u7801\u5de5\u5177 iconv\u547d\u4ee4 https://www.cnblogs.com/wqbin/p/11719952.html \u6279\u91cf\u4fee\u6539\u8d26\u53f7\u5bc6\u7801 chpasswd\u547d\u4ee4 https://blog.csdn.net/chengxuyuanyonghu/article/details/45694783 \u5220\u9664\u7528\u6237\u7684\u6240\u6709\u6587\u4ef6 deluser\u547d\u4ee4 https://blog.csdn.net/u014801157/article/details/50932747/ \u6309\u884c\u5206\u9694\u6587\u4ef6 split\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-split.html \u5207\u6362\u7ec8\u7aef chvt\u547d\u4ee4 http://linux.51yip.com/search/chvt od\u547d\u4ee4 8\u8fdb\u5236\u663e\u793a\u6587\u672c\uff0cxxd 16\u8fdb\u5236\u663e\u793a\u6587\u672c \u6587\u4ef6\u5b8c\u6574\u6027\u6821\u9a8c cksum\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-cksum.html \u6307\u5b9a\u6587\u672c\u5bbd\u5ea6\u547d\u4ee4 fold\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-fold.html \u7c89\u788e\u6587\u4ef6 shred https://blog.csdn.net/boomjane_testingblog/article/details/60579470 USE\u663e\u793a\u547d\u4ee4 lsusb https://blog.csdn.net/robertsong2004/article/details/46619629 \u4e3b\u673aID hostid https://zhidao.baidu.com/question/1733466640850464947.html pwdx \u67e5\u770b\u8fdb\u7a0b\u7684\u542f\u52a8\u76ee\u5f55 https://blog.csdn.net/dingding_ting/article/details/84952954 \u8d28\u56e0\u6570\u5206\u89e3 factor https://www.geek-share.com/detail/2750670155.html tr\u547d\u4ee4 https://www.runoob.com/linux/linux-comm-tr.html \u4f38\u7f29\u4e00\u4e2a\u6587\u4ef6 truncate http://linux.51yip.com/search/truncate \u811a\u672c\u4e92\u65a5 flock\u547d\u4ee4 https://www.jianshu.com/p/fe5f0cf59f2d fuser\u547d\u4ee4 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u6587\u4ef6\u7cfb\u7edf\u88ab\u54ea\u4e2a\u8fdb\u7a0b\u5360\u7528 https://blog.51cto.com/12107790/2321296 \u5c06\u5236\u8868\u7b26\u90fd\u8f6c\u6362\u6210\u7a7a\u683c expand\u547d\u4ee4 https://www.cnblogs.com/Spiro-K/p/6361948.html \u5c06\u7a7a\u683c\u90fd\u8f6c\u6362\u6210\u5236\u8868\u7b26 unexpand\u547d\u4ee4 https://ipcmen.com/unexpand getconf\u547d\u4ee4 https://blog.csdn.net/bytxl/article/details/9296435 \u968f\u673a\u751f\u6210\u5bc6\u7801 mkpasswd https://www.cnblogs.com/xiaoyongzhuo/p/7444303.html \u663e\u793acpu\u4e2a\u6570 nproc\u547d\u4ee4 https://idc.wanyunshuju.com/cym/623.html comm\u547d\u4ee4 \u6bd4\u8f83\u6570\u636e https://www.runoob.com/linux/linux-comm-comm.html readlink\u547d\u4ee4\u548crealpath\u547d\u4ee4\u5219\u5141\u8bb8\u4f60\u89e3\u6790\u6587\u4ef6\u4e4b\u95f4\u7684\u8fd9\u4e9b\u94fe\u63a5 https://www.cnblogs.com/kelamoyujuzhen/p/10119706.html pidof \u67e5\u627e\u67d0\u4e2a\u540d\u5b57\u7684\u8fdb\u7a0b https://blog.csdn.net/ygm_linux/article/details/40184413 ssh\u8fdc\u7a0b\u6267\u884c\u672c\u673a\u811a\u672c https://blog.csdn.net/yinzhipeng123/article/details/108366460 docker\u6267\u884c\u5bbf\u4e3b\u673a\u811a\u672c https://blog.csdn.net/yinzhipeng123/article/details/108366299 Python\u5236\u4f5cnmtui\u7c7b\u4f3c\u7684\u56fe\u5f62 https://www.cnblogs.com/Xjng/p/3869869.html python \u8d85\u7ea7\u597d\u7528\u591a\u7ebf\u7a0b\u5305\uff0c\u65e0\u8111\u5f00\u591a\u7ebf\u7a0b \uff0cpython \u4e8c\u4e09\u7248\u672c\u90fd\u884c https://docs.python.org/zh-cn/3.6/library/multiprocessing.html","title":"\u6709\u8da3\u547d\u4ee4\u96c6\u5408"},{"location":"soft/url_code/","text":"URL\u5728\u7ebf\u7f16\u7801\u8f6c\u6362\u5de5\u5177 Git\u514b\u9686\u901a\u8fc7 git clone http://username:password@remote \u53d1\u73b0\u4e0d\u597d\u4f7f\uff0c\u53d1\u73b0\u662f\u8d26\u53f7\u5bc6\u7801\u4e2d\u6709\u7279\u6b8a\u5b57\u7b26 \u6587\u7ae0\uff1ahttps://blog.csdn.net/pcyph/article/details/45010609 URL\u5728\u7ebf\u7f16\u7801\u8f6c\u6362\u5de5\u5177\uff1ahttp://tools.jb51.net/static/encodetxt/urlencode_decode/index.html","title":"URL\u5728\u7ebf\u7f16\u7801\u8f6c\u6362\u5de5\u5177"},{"location":"soft/url_code/#url","text":"Git\u514b\u9686\u901a\u8fc7 git clone http://username:password@remote \u53d1\u73b0\u4e0d\u597d\u4f7f\uff0c\u53d1\u73b0\u662f\u8d26\u53f7\u5bc6\u7801\u4e2d\u6709\u7279\u6b8a\u5b57\u7b26 \u6587\u7ae0\uff1ahttps://blog.csdn.net/pcyph/article/details/45010609 URL\u5728\u7ebf\u7f16\u7801\u8f6c\u6362\u5de5\u5177\uff1ahttp://tools.jb51.net/static/encodetxt/urlencode_decode/index.html","title":"URL\u5728\u7ebf\u7f16\u7801\u8f6c\u6362\u5de5\u5177"},{"location":"yum/ius/","text":"IUS\u6e90 IUS \u662f\u4e00\u4e2a yum \u5b58\u50a8\u5e93\uff0c\u53ef\u4e3a RHEL \u548c CentOS \u63d0\u4f9b\u8f83\u65b0\u7248\u672c\u7684\u7cbe\u9009\u8f6f\u4ef6\u3002 \u5b89\u88c5 RHEL/CentOS 7 yum install \\ https://repo.ius.io/ius-release-el7.rpm \\ https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \u5b98\u7f51\u5730\u5740\uff1a https://ius.io/","title":"ius\u6e90"},{"location":"yum/ius/#ius","text":"IUS \u662f\u4e00\u4e2a yum \u5b58\u50a8\u5e93\uff0c\u53ef\u4e3a RHEL \u548c CentOS \u63d0\u4f9b\u8f83\u65b0\u7248\u672c\u7684\u7cbe\u9009\u8f6f\u4ef6\u3002 \u5b89\u88c5","title":"IUS\u6e90"},{"location":"yum/ius/#rhelcentos-7","text":"yum install \\ https://repo.ius.io/ius-release-el7.rpm \\ https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \u5b98\u7f51\u5730\u5740\uff1a https://ius.io/","title":"RHEL/CentOS 7"}]}