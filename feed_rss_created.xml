<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Thu, 28 Nov 2024 07:20:25 -0000</pubDate> <lastBuildDate>Thu, 28 Nov 2024 07:20:25 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>线程名字的含义</title> <description>&lt;h2&gt;区分内核线程&lt;/h2&gt;&lt;p&gt;在 Linux 中，进程名后面带有方括号 &lt;code&gt;[]&lt;/code&gt; 的表示该进程是 &lt;strong&gt;内核线程&lt;/strong&gt;（kernel thread）。&lt;/p&gt;&lt;h3&gt;为什么带方括号：&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;[ ] &lt;strong&gt;内核线程&lt;/strong&gt;：内核线程是由操作系统内核启动的进程，它们直接在内核空间运行，不涉及用户空间。内核线程的名称通常会用方括号括起来，以...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E8%BF%9B%E7%A8%8B%E5%90%8D%E5%AD%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:45 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E8%BF%9B%E7%A8%8B%E5%90%8D%E5%AD%97/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E8%BF%9B%E7%A8%8B%E5%90%8D%E5%AD%97/</guid> </item> <item> <title>Linux常用文件系统优缺点</title> <description>&lt;p&gt;不同的文件系统有不同的设计目标和适用场景，影响文件存储和管理的效率、性能以及扩展性。以下是几个常见的 Linux 文件系统及其优缺点：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;ext4 (Fourth Extended File System)&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;优点：&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;广泛支持&lt;/strong&gt;：ext4 是 Linux 系统中最常用的文...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BC%98%E7%BC%BA%E7%82%B9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:41 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BC%98%E7%BC%BA%E7%82%B9/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E4%BC%98%E7%BC%BA%E7%82%B9/</guid> </item> <item> <title>jbd2线程</title> <description>&lt;p&gt;&lt;code&gt;jbd2&lt;/code&gt; 是 Linux 内核中的 &lt;strong&gt;Journaling Block Device 2&lt;/strong&gt; 的缩写，它是用于 &lt;strong&gt;ext4 文件系统&lt;/strong&gt; 的日志进程。具体来说，&lt;code&gt;jbd2&lt;/code&gt; 是负责管理文件系统日志的守护进程，主要用于 &lt;strong&gt;确保文件系统的一致性&lt;/strong&gt;，尤其在发生意外断电或系统崩溃时，能够帮助文件系统恢复到一致...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/jbd2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:41 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/jbd2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/jbd2/</guid> </item> <item> <title>fio命令</title> <description>&lt;h1&gt;FIO命令&lt;/h1&gt;&lt;p&gt;以下是 &lt;code&gt;fio&lt;/code&gt; 命令的帮助信息翻译：&lt;/p&gt;&lt;p&gt;```fio-3.35fio [选项] [作业选项] &amp;lt;作业文件(s)&amp;gt; --debug=选项 启用调试日志。可以是以下之一或多个： process, file, io, mem...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/fio/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:40 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/fio/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/fio/</guid> </item> <item> <title>dd命令</title> <description>&lt;h1&gt;DD命令&lt;/h1&gt;&lt;p&gt;以下是 &lt;code&gt;dd&lt;/code&gt; 命令帮助信息的中文翻译：&lt;/p&gt;&lt;p&gt;```bash用法: dd [操作数]... 或: dd 选项复制文件，按操作数转换和格式化。&lt;/p&gt;&lt;p&gt;bs=字节数 每次读写最多字节数（默认为512）；会覆盖 ibs 和 obs 设置 cbs=字节数 每次转换字...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/dd%E5%91%BD%E4%BB%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:40 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/dd%E5%91%BD%E4%BB%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/dd%E5%91%BD%E4%BB%A4/</guid> </item> <item> <title>partitions</title> <description>&lt;p&gt;&lt;code&gt;cat /proc/partitions&lt;/code&gt; 输出的每一列表示系统中所有块设备和分区的详细信息。具体解释如下：&lt;/p&gt;&lt;p&gt;&lt;code&gt;textmajor minor #blocks name&lt;/code&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;[ ] &lt;strong&gt;major&lt;/strong&gt;：&lt;strong&gt;主设备号&lt;/strong&gt;。这是系统用来识别设备驱动程序的号码。每个块设备（例如硬盘、分区、RAI...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/0proc0partitions/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:39 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/0proc0partitions/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/0proc0partitions/</guid> </item> <item> <title>rsync</title> <description>&lt;p&gt;```bashrsync 版本 3.2.3 协议版本 31版权 (C) 1996-2020 由 Andrew Tridgell, Wayne Davison 及其他人提供官方网站: https://rsync.samba.org/功能： 64 位文件，64 位索引节点，64 位时间戳，64 位长整...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/rsync/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:38 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/rsync/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/rsync/</guid> </item> <item> <title>mq对比</title> <description>&lt;p&gt;RabbitMQ 和 RocketMQ 是两种流行的消息队列，它们适用于不同的场景，各有优缺点。以下是它们的详细对比：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. RabbitMQ&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;成熟和稳定&lt;/strong&gt;：&lt;/li&gt;&lt;li&gt;开发时间长，拥有广泛的社区支持和插件生态。&lt;/li&gt;&lt;li&gt;经验证的 AMQP 协议...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 28 Nov 2024 07:20:29 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/</guid> </item> <item> <title>HDFS</title> <description>&lt;p&gt;在 &lt;strong&gt;HDFS&lt;/strong&gt; 中查看文件，可以使用一系列的命令，主要通过 &lt;code&gt;hdfs dfs&lt;/code&gt; 命令来实现。以下是一些常用的 HDFS 文件查看命令：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;查看 HDFS 上的文件&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;你可以使用 &lt;code&gt;hdfs dfs -ls&lt;/code&gt; 命令来列出 HDFS 上的文件和目录。命令格式如下：&lt;/p&gt;&lt;p&gt;```bashhd...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/HDFS/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 27 Nov 2024 20:19:47 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/HDFS/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/HDFS/</guid> </item> <item> <title>KVM排查</title> <description>&lt;p&gt;在使用 KVM（Kernel-based Virtual Machine）时，当虚拟机异常时，以下是一些常用的命令，可以帮助排查问题：&lt;/p&gt;&lt;h3&gt;1. 查看虚拟机状态&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;&lt;code&gt;virsh list --all&lt;/code&gt;&lt;/strong&gt;：列出所有虚拟机的状态（运行中、关闭等）。&lt;/li&gt;&lt;li&gt;**`virsh domstate &amp;lt;VM_NA...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM%E6%8E%92%E6%9F%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 27 Nov 2024 20:19:47 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM%E6%8E%92%E6%9F%A5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM%E6%8E%92%E6%9F%A5/</guid> </item> <item> <title>Ansible</title> <description>&lt;p&gt;&lt;strong&gt;Ansible&lt;/strong&gt; 是一个开源的自动化工具，主要用于配置管理、应用部署、任务自动化和多节点管理。它的核心优势是简洁、易于使用且具有强大的功能。Ansible 使用 &lt;strong&gt;Playbooks&lt;/strong&gt; 来描述系统配置和自动化任务，并通过 &lt;strong&gt;SSH&lt;/strong&gt; 协议无代理地在多个服务器上执行命令。&lt;/p&gt;&lt;h3&gt;**Ansible...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 27 Nov 2024 20:19:47 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible/</guid> </item> <item> <title>查询硬件信息-ipmitool</title> <description>&lt;p&gt;```bashipmitool 版本 1.8.18-csv&lt;/p&gt;&lt;p&gt;用法: ipmitool [选项...] &amp;lt;命令&amp;gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt; -h 显示帮助信息 -V 显示版本信息 -v 启用详细模式（可以多次使用）&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/ipm/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 27 Nov 2024 20:19:47 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/ipm/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/ipm/</guid> </item> <item> <title>时序数据库</title> <description>&lt;p&gt;Prometheus 使用的是一种专门为时序数据（time-series data）设计的数据库，通常被称为 &lt;strong&gt;Prometheus 时序数据库（Prometheus TSDB）&lt;/strong&gt;。该数据库是 Prometheus 的核心组成部分，用于存储和管理从各个目标抓取的指标数据。&lt;/p&gt;&lt;h3&gt;Prometheus 数据...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/TSDB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 25 Nov 2024 10:46:03 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/TSDB/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/TSDB/</guid> </item> <item> <title>机器夯住原因</title> <description>&lt;p&gt;机器“夯住”通常是指设备或系统停止响应、卡住或出现宕机现象，常见原因包括以下几类：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;硬件问题&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;过热&lt;/strong&gt;：CPU、GPU 或其他关键硬件过热可能导致系统卡死。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;硬盘故障&lt;/strong&gt;：机械硬盘或 SSD 的读写问题可能会让系统陷入死机状态。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;内存故障&lt;/strong&gt;：损坏或不兼容的内存模...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E6%9C%BA%E5%99%A8%E5%A4%AF%E4%BD%8F%E5%8E%9F%E5%9B%A0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 25 Nov 2024 10:46:03 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E6%9C%BA%E5%99%A8%E5%A4%AF%E4%BD%8F%E5%8E%9F%E5%9B%A0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E6%9C%BA%E5%99%A8%E5%A4%AF%E4%BD%8F%E5%8E%9F%E5%9B%A0/</guid> </item> <item> <title>KVM</title> <description>&lt;p&gt;二进制转换（Binary Translation）是虚拟化技术的一种，用于在不同架构的硬件上运行非本地机器代码或优化本地代码执行。以下是一些与二进制转换相关的典型技术栈和工具：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;基于 CPU 虚拟化的二进制转换&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这种方法主要用于在不支持硬件虚拟化的系统上运行虚拟机。&lt;/p&gt;&lt;p&gt;-...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM/</guid> </item> <item> <title>CNI</title> <description>&lt;p&gt;在 Kubernetes 中，&lt;strong&gt;CNI 网络模型&lt;/strong&gt;（&lt;strong&gt;Container Network Interface&lt;/strong&gt;）是 Kubernetes 用来管理容器网络的一种插件标准，它定义了如何将容器接入网络，以及如何配置网络功能（如 IP 分配、流量控制等）。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;CNI 的基本概念&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/CNI/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/CNI/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/CNI/</guid> </item> <item> <title>Controller</title> <description>&lt;p&gt;在 Kubernetes (K8S) 中，&lt;strong&gt;Controller&lt;/strong&gt; 是控制循环的一部分，它持续监视集群状态并确保系统实际状态与期望状态一致。Kubernetes 提供了多种内置的 Controller，每种都有特定的功能，用于管理不同类型的资源。&lt;/p&gt;&lt;p&gt;以下是 Kubernetes 中常见的 Controller...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Controller/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Controller/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Controller/</guid> </item> <item> <title>Secret</title> <description>&lt;h1&gt;Secret&lt;/h1&gt;&lt;p&gt;在 Kubernetes 中，可以通过以下几种方式创建 Secret：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;使用命令行创建（推荐简单场景）&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;创建基于字符串的 Secret&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;kubectl create secret&lt;/code&gt; 命令：&lt;/p&gt;&lt;p&gt;```bashkubectl crea...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Secret/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Secret/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Secret/</guid> </item> <item> <title>StatefulSet_Mysql</title> <description>&lt;p&gt;以下是使用 &lt;strong&gt;StatefulSet&lt;/strong&gt; 部署 MySQL 的完整示例，包含持久化存储、服务暴露等内容。StatefulSet 是部署 MySQL 等有状态应用的最佳实践。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 准备 MySQL 的 Persistent Volume Claim (PVC)&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Statefu...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/StatefulSet_Mysql/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/StatefulSet_Mysql/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/StatefulSet_Mysql/</guid> </item> <item> <title>prometheus概念</title> <description>&lt;p&gt;Prometheus 是一个开源的监控和报警系统，专门用于记录时序数据（如指标）并提供高效的查询语言（PromQL）来分析这些数据。它最初由 Google 开发，后来成为了云原生计算基金会（CNCF）的一个项目，广泛应用于云原生环境中的应用程序和基础设施监控。&lt;/p&gt;&lt;h3&gt;Prometheus 主要组件&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;*...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/prome/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/prome/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/prome/</guid> </item> </channel></rss>