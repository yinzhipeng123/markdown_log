<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Tue, 11 Mar 2025 07:33:10 -0000</pubDate> <lastBuildDate>Tue, 11 Mar 2025 07:33:10 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>Memcachevsredis</title> <description>&lt;p&gt;Redis 和 Memcache 都是内存缓存系统，但它们在功能、数据结构、持久化等方面有许多不同。下面是它们的核心区别： &lt;/p&gt;&lt;p&gt;| 特性 | &lt;strong&gt;Redis&lt;/strong&gt; | &lt;strong&gt;Memcache&lt;/strong&gt; ||---------------|---------|------------|| **数据...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/memcache/memcachevsredis/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 11 Mar 2025 07:33:11 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/memcache/memcachevsredis/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/memcache/memcachevsredis/</guid> </item> <item> <title>Memcache</title> <description></description><link>https://yinzhipeng123.github.io/markdown_log/database/memcache/memcache/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 11 Mar 2025 07:33:11 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/memcache/memcache/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/memcache/memcache/</guid> </item> <item> <title>数据库连接命令</title> <description>&lt;p&gt;&lt;code&gt;mysql -h &amp;lt;服务器地址&amp;gt; -P &amp;lt;端口号&amp;gt; -u &amp;lt;用户名&amp;gt; -p&lt;/code&gt;&lt;/p&gt;&lt;h3&gt;直接输入密码（不推荐）&lt;/h3&gt;&lt;p&gt;如果你想在命令中直接提供密码（不安全，可能会被记录到历史记录中），可以这样做：&lt;/p&gt;&lt;p&gt;```mysql -h 192.168.1.100 -P 3306 -u root -p&#39;你的密码...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E5%91%BD%E4%BB%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E5%91%BD%E4%BB%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E5%91%BD%E4%BB%A4/</guid> </item> <item> <title>查询物理机交换机信息</title> <description>&lt;p&gt;```bashifconfig | awk &#39;/flags/ &amp;amp;&amp;amp; !/lo/ {split($1, a, &#34;:&#34;); print a[1]}&#39; | xargs -I{} sh -c &#39;echo &#34;===== 网卡: {} =====&#34;; lldptool -t -n -i {}; echo&#39; &lt;/p&gt;&lt;p&gt;===== ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/%E6%9F%A5%E8%AF%A2%E7%89%A9%E7%90%86%E6%9C%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%BF%A1%E6%81%AF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/%E6%9F%A5%E8%AF%A2%E7%89%A9%E7%90%86%E6%9C%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%BF%A1%E6%81%AF/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/%E6%9F%A5%E8%AF%A2%E7%89%A9%E7%90%86%E6%9C%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E4%BF%A1%E6%81%AF/</guid> </item> <item> <title>无交互式修改root密码</title> <description>&lt;p&gt;&lt;code&gt;baecho &#34;密码&#34; | sudo passwd --stdin root&lt;/code&gt;&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E6%97%A0%E4%BA%A4%E4%BA%92%E5%BC%8F%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E6%97%A0%E4%BA%A4%E4%BA%92%E5%BC%8F%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/%E6%97%A0%E4%BA%A4%E4%BA%92%E5%BC%8F%E4%BF%AE%E6%94%B9root%E5%AF%86%E7%A0%81/</guid> </item> <item> <title>清理磁盘</title> <description>&lt;p&gt;查看当前目录最大的占用&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashdu -ah --max-depth=1 . | sort -rh | head -n 20&lt;/code&gt;&lt;/p&gt;&lt;p&gt;删除2025的日志，但不删除今天的&lt;/p&gt;&lt;p&gt;```find ./ -type f -name &#39;db.log.2025*&#39; ! -name &#39;db.log....&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98/</guid> </item> <item> <title>内存是如何分配的</title> <description>&lt;p&gt;在 Linux 中，内存管理是由 &lt;strong&gt;内存管理子系统（Memory Management Subsystem）&lt;/strong&gt; 负责的，涉及多个层次的分配机制，包括 &lt;strong&gt;物理内存管理、虚拟内存管理、页管理、缓存管理&lt;/strong&gt; 等。下面是 Linux 内存分配的主要机制：&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;1. &lt;strong&gt;物理内存管理&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;Linux 物...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E5%86%85%E5%AD%98/%E5%86%85%E5%AD%98%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%86%E9%85%8D%E7%9A%84/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E5%86%85%E5%AD%98/%E5%86%85%E5%AD%98%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%86%E9%85%8D%E7%9A%84/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E5%86%85%E5%AD%98/%E5%86%85%E5%AD%98%E6%98%AF%E5%A6%82%E4%BD%95%E5%88%86%E9%85%8D%E7%9A%84/</guid> </item> <item> <title>记一次内存占用高的分析</title> <description>&lt;p&gt;首先查询系统占用&lt;/p&gt;&lt;p&gt;```[root@ ~]# free -g total used free shared buff/cache availableMem: 510 488 11 ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E5%86%85%E5%AD%98/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E9%AB%98%E7%9A%84%E5%88%86%E6%9E%90/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E5%86%85%E5%AD%98/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E9%AB%98%E7%9A%84%E5%88%86%E6%9E%90/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E5%86%85%E5%AD%98/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E9%AB%98%E7%9A%84%E5%88%86%E6%9E%90/</guid> </item> <item> <title>lldptools</title> <description>&lt;p&gt;lldptool 使用&lt;/p&gt;&lt;p&gt;```bash[root@~]# rpm -ql lldpad-1.0.1-5.git036e314.el7.x86_64 /etc/bash_completion.d/etc/bash_completion.d/lldpad/etc/bash_completion.d/lldp...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/lldptools/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/lldptools/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/lldptools/</guid> </item> <item> <title>tcpdump_lldp</title> <description>&lt;p&gt;s抓包查看网口连接的交换机信息&lt;/p&gt;&lt;p&gt;```bash&lt;/p&gt;&lt;h1&gt;tcpdump -i p0 -env ether proto 0x88cc&lt;/h1&gt;&lt;p&gt;```&lt;/p&gt;&lt;h3&gt;参数解析：&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;tcpdump&lt;/code&gt;：网络数据包抓取工具。&lt;/li&gt;&lt;li&gt;&lt;code&gt;-i p0&lt;/code&gt;：指定接口 &lt;code&gt;p0&lt;/code&gt; 进行抓包。&lt;/li&gt;&lt;li&gt;&lt;code&gt;-e&lt;/code&gt;：显示链路层头部信息（包括源 MAC、目的...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/tcpdump_lldp/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Mar 2025 20:13:02 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/tcpdump_lldp/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/tcpdump_lldp/</guid> </item> <item> <title>numa</title> <description>&lt;p&gt;NUMA（Non-Uniform Memory Access，非统一内存访问）是一种&lt;strong&gt;计算机内存架构&lt;/strong&gt;，广泛应用于多处理器系统（如服务器和高性能计算系统），用于提高系统性能。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;NUMA 的基本概念&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在 NUMA 架构中，每个 CPU（或 CPU 核心）都有直接连接的本地内存（lo...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/numa/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/numa/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/numa/</guid> </item> <item> <title>tr</title> <description>&lt;p&gt;&lt;code&gt;tr&lt;/code&gt; 是 Linux 和 Unix 系统中的一个文本处理命令，名字来源于 &#34;translate&#34;（翻译/转换）。它主要用来转换或删除文本中的字符。&lt;code&gt;tr&lt;/code&gt; 从标准输入读取数据，处理后将结果输出到标准输出。&lt;/p&gt;&lt;h3&gt;基本用法&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;字符替换&lt;/strong&gt;&lt;br&gt; 替换一个字符为另一个字符：&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;```...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/tr/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/tr/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/tr/</guid> </item> <item> <title>不执着于欲望的行为表现</title> <description>&lt;p&gt;不执着于欲望的行为体现在对物质、情感和内心的平衡态度上，而不是完全否定欲望，而是学会不被欲望所控制，从而实现内心的自由与宁静。以下是一些具体的行为和实践：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;物质层面&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;简朴生活&lt;/strong&gt;：&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;不贪恋奢华的物质享受，只追求基本的生活需求。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;对于财富或财物不贪...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E4%B8%8D%E6%89%A7%E7%9D%80%E4%BA%8E%E6%AC%B2%E6%9C%9B%E7%9A%84%E8%A1%8C%E4%B8%BA%E8%A1%A8%E7%8E%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E4%B8%8D%E6%89%A7%E7%9D%80%E4%BA%8E%E6%AC%B2%E6%9C%9B%E7%9A%84%E8%A1%8C%E4%B8%BA%E8%A1%A8%E7%8E%B0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E4%B8%8D%E6%89%A7%E7%9D%80%E4%BA%8E%E6%AC%B2%E6%9C%9B%E7%9A%84%E8%A1%8C%E4%B8%BA%E8%A1%A8%E7%8E%B0/</guid> </item> <item> <title>感情处理</title> <description>&lt;p&gt;面对这样的情况，“不执着于欲望”并不是要放弃喜欢这个人，而是以一种更加智慧和坦然的方式处理自己的感情和现状。以下是一些实际的建议和行为方式：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 接纳现实，调整心态&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;理解现状&lt;/strong&gt;：你喜欢她，但目前的经济条件可能不够理想，这是一个客观的现实。接受这一点，不要因此自卑或感到焦虑。...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85%E5%A4%84%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85%E5%A4%84%E7%90%86/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85%E5%A4%84%E7%90%86/</guid> </item> <item> <title>Linux加模块</title> <description>&lt;p&gt;如果你有一个 &lt;code&gt;.ko&lt;/code&gt; 文件（内核模块文件），并且想使用 &lt;code&gt;modprobe&lt;/code&gt; 加载它，通常需要将该模块文件放置在合适的目录下，或者手动指定模块的路径。&lt;code&gt;modprobe&lt;/code&gt; 默认会在 &lt;code&gt;/lib/modules/$(uname -r)/&lt;/code&gt; 目录下查找模块。如果模块不在该目录下，你需要将它复制到适当的位置，或者使...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E5%8A%A0%E8%BD%BD%E6%A8%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E5%8A%A0%E8%BD%BD%E6%A8%A1/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E5%8A%A0%E8%BD%BD%E6%A8%A1/</guid> </item> <item> <title>把任务存放后台</title> <description>&lt;p&gt;举个例子：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;你执行了一个命令，并按 &lt;code&gt;Ctrl + Z&lt;/code&gt; 暂停了它。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;bash python script.py&lt;/code&gt;&lt;/p&gt;&lt;p&gt;假设在运行时你按了 &lt;code&gt;Ctrl + Z&lt;/code&gt;，此时任务会暂停并进入停止状态。&lt;/p&gt;&lt;ol&gt;&lt;li&gt;然后你可以使用 &lt;code&gt;bg&lt;/code&gt; 命令将它放到后台继续执行： ...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E6%8A%8A%E4%BB%BB%E5%8A%A1%E5%AD%98%E6%94%BE%E5%90%8E%E5%8F%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E6%8A%8A%E4%BB%BB%E5%8A%A1%E5%AD%98%E6%94%BE%E5%90%8E%E5%8F%B0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E6%8A%8A%E4%BB%BB%E5%8A%A1%E5%AD%98%E6%94%BE%E5%90%8E%E5%8F%B0/</guid> </item> <item> <title>查询系统重启记录的方法</title> <description>&lt;p&gt;可以通过查询日志，判断是否人为执行重启命令&lt;/p&gt;&lt;p&gt;&lt;code&gt;grep -i &#39;shutdown\|reboot&#39; /var/log/securecat ~/.bash_history | grep -i &#39;shutdown\|reboot&#39;&lt;/code&gt;&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E8%AE%B0%E5%BD%95%E7%9A%84%E6%96%B9%E6%B3%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E8%AE%B0%E5%BD%95%E7%9A%84%E6%96%B9%E6%B3%95/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E8%AE%B0%E5%BD%95%E7%9A%84%E6%96%B9%E6%B3%95/</guid> </item> <item> <title>给进程做coredump</title> <description>&lt;p&gt;给进程生成 coredump 通常是为了调试程序崩溃或异常行为。以下是常用的方法和步骤：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;检查和设置 coredump 大小限制&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Linux 默认可能禁止生成 coredump，或者限制其大小为 0。可以通过以下命令检查和设置限制：&lt;/p&gt;&lt;h4&gt;检查限制：&lt;/h4&gt;&lt;p&gt;```bashu...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E7%BB%99%E8%BF%9B%E7%A8%8B%E5%81%9Acoredump/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E7%BB%99%E8%BF%9B%E7%A8%8B%E5%81%9Acoredump/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/%E7%BB%99%E8%BF%9B%E7%A8%8B%E5%81%9Acoredump/</guid> </item> <item> <title>缩短长连接</title> <description>&lt;p&gt;&lt;strong&gt;让长连接在不活跃时快速断开，以最大化释放系统资源&lt;/strong&gt;，可以通过以下几种方式来实现：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 调整 TCP Keepalive 参数&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;通过调整 TCP Keepalive 的参数，可以在连接长时间不活跃时迅速检测并关闭无效连接。&lt;/p&gt;&lt;h4&gt;配置方法：&lt;/h4&gt;&lt;p&gt;编辑以下参数：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;**...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E7%BC%A9%E7%9F%AD%E9%95%BF%E8%BF%9E%E6%8E%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E7%BC%A9%E7%9F%AD%E9%95%BF%E8%BF%9E%E6%8E%A5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E7%BC%A9%E7%9F%AD%E9%95%BF%E8%BF%9E%E6%8E%A5/</guid> </item> <item> <title>Charm</title> <description>&lt;h3&gt;简单的 Charm 示例：部署一个简单的 Python Web 应用&lt;/h3&gt;&lt;p&gt;在这个例子中，将创建一个 Charm 来部署一个简单的 Python Web 应用，该应用会在浏览器中显示 &#34;Hello, World!&#34;。&lt;/p&gt;&lt;h4&gt;步骤 1：安装工具&lt;/h4&gt;&lt;p&gt;首先，确保已经安装了 Juju 和 `charmcraft...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/Charm/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 31 Jan 2025 10:55:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/Charm/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/Charm/</guid> </item> </channel></rss>