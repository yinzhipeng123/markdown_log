<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Mon, 16 Dec 2024 14:48:34 -0000</pubDate> <lastBuildDate>Mon, 16 Dec 2024 14:48:34 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>mq对比</title> <description>&lt;p&gt;RabbitMQ 和 RocketMQ 是两种流行的消息队列，它们适用于不同的场景，各有优缺点。以下是它们的详细对比：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. RabbitMQ&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;成熟和稳定&lt;/strong&gt;：&lt;/li&gt;&lt;li&gt;开发时间长，拥有广泛的社区支持和插件生态。&lt;/li&gt;&lt;li&gt;经验证的 AMQP 协议...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 14:48:39 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/</guid> </item> <item> <title>pipeline示例</title> <description>&lt;h1&gt;pipeline示例&lt;/h1&gt;&lt;p&gt;Jenkins服务器本地需部署Registry&lt;/p&gt;&lt;p&gt;```yamlpipeline { agent any&lt;/p&gt;&lt;pre&gt;&lt;code&gt;environment { DOCKER_REGISTRY = &#34;localhost:5000&#34; // 本地 Docker R...&lt;/code&gt;&lt;/pre&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/pipeline%E7%A4%BA%E4%BE%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 14:48:39 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/pipeline%E7%A4%BA%E4%BE%8B/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/pipeline%E7%A4%BA%E4%BE%8B/</guid> </item> <item> <title>Jenkins审查制度</title> <description>&lt;p&gt;在 Jenkins 中，&lt;strong&gt;In-process Script Approval&lt;/strong&gt; 是一种安全机制，主要用于 &lt;strong&gt;防止未经审查的脚本执行&lt;/strong&gt;。即使 Jenkinsfile 看起来没有涉及权限审批的地方，但可能还是触发了 Jenkins 的 &lt;strong&gt;脚本安全策略&lt;/strong&gt;，需要管理员审批。这通常发生在以下几种情况下：&lt;/p&gt;&lt;p&gt;-...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E5%AE%A1%E6%9F%A5%E5%88%B6%E5%BA%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 14:48:38 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E5%AE%A1%E6%9F%A5%E5%88%B6%E5%BA%A6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E5%AE%A1%E6%9F%A5%E5%88%B6%E5%BA%A6/</guid> </item> <item> <title>IDEA_Jenkins插件</title> <description>&lt;p&gt;Jenkins插件&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;image-20241216120257972&#34; src=&#34;https://s2.loli.net/2024/12/16/1c5MXETDdeNKxGn.png&#34;&gt;&lt;/p&gt;&lt;p&gt;配置服务器地址，账号密码&lt;/p&gt;&lt;p&gt;![image-20241216120406893](https://s2.loli.net/2024/...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/IDEA_Jenkins%E6%8F%92%E4%BB%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 14:48:38 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/IDEA_Jenkins%E6%8F%92%E4%BB%B6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/IDEA_Jenkins%E6%8F%92%E4%BB%B6/</guid> </item> <item> <title>registry</title> <description>&lt;p&gt;创建目录。&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashsudo mkdir -p /etc/docker/registry&lt;/code&gt;&lt;/p&gt;&lt;p&gt;创建 &lt;code&gt;htpasswd&lt;/code&gt; 文件&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashsudo htpasswd -c /etc/docker/registry/htpasswd myuser&lt;/code&gt;&lt;/p&gt;&lt;p&gt;系统会提示你输入并确认密码&lt;/p&gt;&lt;p&gt;``...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/docker/registry/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 14:48:36 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/docker/registry/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/docker/registry/</guid> </item> <item> <title>Jenkins的简单构建任务</title> <description>&lt;p&gt;新建任务&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;image-20241213232042711&#34; src=&#34;https://s2.loli.net/2024/12/13/4ydtIc8YpTf9LvN.png&#34;&gt;&lt;/p&gt;&lt;p&gt;添加源码地址&lt;/p&gt;&lt;p&gt;![image-20241213231932916](https://s2.loli.net/2024/12/13/qz4XI...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E7%AE%80%E5%8D%95%E7%9A%84%E6%9E%84%E5%BB%BA%E4%BB%BB%E5%8A%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E7%AE%80%E5%8D%95%E7%9A%84%E6%9E%84%E5%BB%BA%E4%BB%BB%E5%8A%A1/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E7%AE%80%E5%8D%95%E7%9A%84%E6%9E%84%E5%BB%BA%E4%BB%BB%E5%8A%A1/</guid> </item> <item> <title>Jenkins的yum部署</title> <description>&lt;p&gt;配置源&lt;/p&gt;&lt;p&gt;```bash sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo sudo rpm --import https://pkg.jenkins.io/redhat...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/jenkins_yum%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/jenkins_yum%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/jenkins_yum%E9%83%A8%E7%BD%B2/</guid> </item> <item> <title>service服务书写规则</title> <description>&lt;h2&gt;存放systemd配置文件的目录&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/etc/systemd/system/&lt;/code&gt; 和 &lt;code&gt;/lib/systemd/system/&lt;/code&gt; 目录都是 &lt;strong&gt;systemd&lt;/strong&gt; 用来存放服务单元（unit）文件的地方，但是它们的用途有所不同。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;1./etc/systemd/system/&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这个目录是...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/service/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/service/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/service/</guid> </item> <item> <title>service服务快速失败</title> <description>&lt;p&gt;“快速失败”模式（&lt;strong&gt;quick failure mode&lt;/strong&gt;）是指当一个服务在启动过程中连续失败多次时，系统会自动进入一种限制重试次数的状态。这种模式是为了防止某个服务反复失败时，占用过多的系统资源或者无意义地重复尝试，导致系统性能下降或资源浪费。&lt;/p&gt;&lt;h3&gt;如何工作：&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;多次启动失败&lt;/strong&gt;： 当一个服...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5/</guid> </item> <item> <title>文件描述符</title> <description>&lt;p&gt;文件描述符（File Descriptor，FD）是操作系统用来标识进程打开的文件、套接字、管道、设备等资源的一个整数值。它是操作系统与进程之间进行文件或设备操作的桥梁。每当一个程序打开文件或其他资源时，操作系统会为该资源分配一个唯一的文件描述符，程序可以通过该描述符对文件进行读写、关闭等操作。&lt;/p&gt;&lt;p&gt;```l...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/</guid> </item> <item> <title>hostalias</title> <description>&lt;p&gt;在 Kubernetes 中，&lt;code&gt;hostAliases&lt;/code&gt; 是一个字段，它允许你在 Pod 配置中指定额外的主机名解析（hostname resolution）。通过 &lt;code&gt;hostAliases&lt;/code&gt;，你可以为 Pod 中的容器指定额外的主机名和 IP 映射，这些映射会被添加到容器内的 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件中，...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/hostalias/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 20:56:17 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/hostalias/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/hostalias/</guid> </item> <item> <title>shellcheck</title> <description>&lt;h1&gt;shellcheck&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;ShellCheck&lt;/strong&gt; 是一个开源的静态分析工具，专门用于检查 shell 脚本中的语法和潜在错误。它可以帮助开发者发现脚本中的常见错误、最佳实践的建议以及一些可能导致问题的代码。ShellCheck 通过提供详细的警告和提示，帮助用户更容易地调试和优化 shell 脚本。&lt;/p&gt;&lt;p&gt;官...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/shellcheck/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/shellcheck/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/shellcheck/</guid> </item> <item> <title>Virtualenv</title> <description>&lt;p&gt;你可以使用以下命令在Linux上创建&lt;code&gt;virtualenv&lt;/code&gt;：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;首先，确保安装了&lt;code&gt;virtualenv&lt;/code&gt;。如果没有安装，可以通过&lt;code&gt;pip&lt;/code&gt;安装：&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;bash pip install virtualenv&lt;/code&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;然后，创建一个新的虚拟环境：&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;```bash v...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/virtualenv/env/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/virtualenv/env/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/virtualenv/env/</guid> </item> <item> <title>爱情2</title> <description>&lt;h2&gt;男人如何避免出轨：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.增强自我意识和责任感&lt;/strong&gt;：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;[ ] &lt;strong&gt;自我反思&lt;/strong&gt;：男人应该时常反思自己的行为和情感需求，了解自己为何会产生出轨的念头。是情感需求没有得到满足，还是其他因素导致的不满？通过自我认知和反思，能够帮助发现潜在问题，并及时解决。&lt;/li&gt;&lt;li&gt;[ ] &lt;strong&gt;对伴侣的责任&lt;/strong&gt;：出轨往往意味...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85/</guid> </item> <item> <title>犯错</title> <description>&lt;p&gt;每个人都会在生活中犯错，重要的是如何从错误中学习和成长，而不是让错误定义你的人生。即便社会或他人对错误的反应过于严苛，你仍然可以选择以自我宽容、理解和积极的方式应对。&lt;/p&gt;&lt;p&gt;在面对错误时，可以采取以下几个步骤来调整心态和行动：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;接受自己的不完美&lt;/strong&gt;：每个人都会犯错，犯错是学习的一部分，并不代表你是失败者。...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E7%8A%AF%E9%94%99/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E7%8A%AF%E9%94%99/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E7%8A%AF%E9%94%99/</guid> </item> <item> <title>git一次报错</title> <description>&lt;p&gt;记录一个git提交过程中的一个报错&lt;/p&gt;&lt;p&gt;```bash[main 3a71b901] commit_message 3 files changed, 2 insertions(+), 2 deletions(-)Enumerating objects: 1553, done.Counting objects...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/git/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/git/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/git/</guid> </item> <item> <title>Pipeline</title> <description>&lt;p&gt;&lt;strong&gt;Pipeline&lt;/strong&gt; 在 Jenkins 中是指一组自动化的构建、测试、部署等任务的流程，通常用于实现持续集成（CI）和持续交付（CD）。它通过将这些任务定义为代码，提供了更灵活、可控、可扩展的 CI/CD 流程。Pipeline 可以视为软件开发生命周期中所有自动化步骤的流水线，确保每次提交代码时都会经历相...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Pipeline/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Pipeline/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Pipeline/</guid> </item> <item> <title>etc备份</title> <description>&lt;p&gt;ETC备份&lt;/p&gt;&lt;p&gt;```bashETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \--cacert=/opt/KUIN00601/ca.crt \--cert=/opt/KUIN00601/etcd-client.crt \--key=/o...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/etc%E5%A4%87%E4%BB%BD/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/etc%E5%A4%87%E4%BB%BD/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/etc%E5%A4%87%E4%BB%BD/</guid> </item> <item> <title>节点维护</title> <description>&lt;p&gt;节点维护&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashkubectl cordon node02kubectl get nodeskubectl drain node02 --ignore-daemonsets --delete-emptydir-data --force&lt;/code&gt;&lt;/p&gt;&lt;h3&gt;参数解释&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;[ ] `kubectl d...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/</guid> </item> <item> <title>连接器</title> <description>&lt;h3&gt;Kafka Connect 是什么？&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt; 是一个用于在 Kafka 和外部系统（如数据库、文件系统、搜索引擎等）之间快速、可靠地流动数据的框架。它是 Apache Kafka 的一部分，专门设计用于简化和加速数据集成的过程，无需开发复杂的自定义代码。Kafka Conne...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/connect/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/connect/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/kafka/connect/</guid> </item> </channel></rss>