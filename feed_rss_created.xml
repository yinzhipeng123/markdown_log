<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Tue, 06 May 2025 10:25:18 -0000</pubDate> <lastBuildDate>Tue, 06 May 2025 10:25:18 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>juju常用命令</title> <description>&lt;p&gt;juju安装过程&lt;/p&gt;&lt;p&gt;```bashsnap install juju --channel=2.8/stable --classicyum install epel-release -y yum install snapd -ysystemctl enable --now snapd.socket ln ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/juju%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 10:25:34 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/juju%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/juju%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid> </item> <item> <title>Lvs加keepalve脚本</title> <description>&lt;p&gt;&lt;strong&gt;LVS 和 Keepalived 联合部署的完整步骤&lt;/strong&gt;，手把手教你从 0 到 1 搭建一个&lt;strong&gt;高可用的四层负载均衡集群&lt;/strong&gt;，适用于 CentOS 或 Ubuntu 等常见 Linux 系统。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;🧭 一、架构假设&lt;/h2&gt;&lt;p&gt;| 角色 | 主机 IP | 说明 ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalve%E8%84%9A%E6%9C%AC/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 10:25:23 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalve%E8%84%9A%E6%9C%AC/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalve%E8%84%9A%E6%9C%AC/</guid> </item> <item> <title>Lvs加keepalive</title> <description>&lt;p&gt;一个 &lt;strong&gt;LVS + Keepalived 高可用架构一键部署脚本&lt;/strong&gt;，包含：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;🧠 主节点（MASTER）&lt;/li&gt;&lt;li&gt;👥 备节点（BACKUP）&lt;/li&gt;&lt;li&gt;🧱 Real Server（真实后端）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我将为每个角色提供独立脚本，按你的实际服务器角色运行对应的脚本即可。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;🧠 1. MASTER 节点...&lt;/h2&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalive/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 10:25:23 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalive/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalive/</guid> </item> <item> <title>Keepalive如何部署</title> <description>&lt;p&gt;Keepalived 的部署其实非常简单，下面是一个完整的部署步骤，包括安装、配置和启动服务。我们以两台 CentOS / Ubuntu 系统的 Linux 服务器为例：一台作为主节点（MASTER），一台作为备节点（BACKUP），共同管理一个虚拟 IP。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;🚀 一、环境准备&lt;/h2&gt;&lt;p&gt;假设：&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 10:25:23 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2/</guid> </item> <item> <title>Keepalive</title> <description>&lt;h2&gt;🧠 什么是 Keepalived？&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Keepalived&lt;/strong&gt; 是一个高可用性（High Availability, HA）软件，主要用于在 Linux 系统中实现 &lt;strong&gt;虚拟 IP 漂移（VIP漂移）&lt;/strong&gt;，从而提供服务的高可用性。它经常与 &lt;strong&gt;LVS（Linux Virtual Server）&lt;/strong&gt; 配合...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 10:25:23 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive/</guid> </item> <item> <title>Zebra</title> <description>&lt;p&gt;Zebra 是一款开源的路由管理软件，最初由 Kunihiro Ishiguro 和 Yoshinari Yoshikawa 开发，后来成为 &lt;strong&gt;GNU Zebra&lt;/strong&gt; 项目的一部分。它主要用于 Unix/Linux 系统，提供动态路由协议的支持，允许将 Linux 设备转变为功能丰富的路由器。&lt;/p&gt;&lt;h3&gt;主要特...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/zebra/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 10:25:20 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/zebra/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/zebra/</guid> </item> <item> <title>Bgpd</title> <description>&lt;p&gt;&lt;strong&gt;bgpd&lt;/strong&gt; 是 Zebra/Quagga/FRRouting 等开源路由软件套件中专门实现 &lt;strong&gt;BGP（Border Gateway Protocol）&lt;/strong&gt; 协议的守护进程（daemon）。它的核心功能是让设备（如 Linux 服务器或路由器）支持 BGP 协议，用于在大型网络（如互联网或企业骨干网）中交换...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/bgpd/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 10:25:19 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/bgpd/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/bgpd/</guid> </item> <item> <title>什么是TPU</title> <description>&lt;p&gt;&lt;strong&gt;什么是TPU&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;这个问题看起来不复杂，TPU（张量处理单元）是一种由谷歌开发的AI硬件加速器。虽然问题简单，我还是需要按照要求提供几个合适的引用，可能至少三条高质量的来源。由于没有明确要求简洁回答，我可以详细解释TPU的工作原理和应用。使用一些相关的资料和参考文献后，再结合简单易懂的例子来确保用户对TPU...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/TPU/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 28 Apr 2025 14:00:41 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/TPU/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/TPU/</guid> </item> <item> <title>supervisord是什么</title> <description>&lt;p&gt;&lt;code&gt;supervisord&lt;/code&gt; 是一个&lt;strong&gt;进程管理工具&lt;/strong&gt;，全称是 &lt;strong&gt;Supervisor Daemon&lt;/strong&gt;。它主要用来&lt;strong&gt;管理和监控&lt;/strong&gt; Linux/Unix 系统中的&lt;strong&gt;进程&lt;/strong&gt;，尤其是让一些程序（比如 web 服务、后台脚本等）&lt;strong&gt;在崩溃后自动重启&lt;/strong&gt;，保持服务持续运行。&lt;/p&gt;&lt;p&gt;简单说，&lt;code&gt;supervisord&lt;/code&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/Supervisord/Supervisord/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 28 Apr 2025 14:00:41 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/Supervisord/Supervisord/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/Supervisord/Supervisord/</guid> </item> <item> <title>什么是DPU</title> <description>&lt;p&gt;&lt;strong&gt;DPU（Data Processing Unit，数据处理器）&lt;/strong&gt; 是一种专用于 &lt;strong&gt;数据中心基础设施任务&lt;/strong&gt; 的处理器，其核心目标是通过硬件加速和任务卸载，将原本由主机 CPU 处理的网络、存储、安全等任务转移到专用芯片上，从而提升整体系统效率和性能。以下是 DPU 的详细定义和关键特征：&lt;/p&gt;&lt;h3&gt;**1...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/DPU/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 22 Apr 2025 18:17:03 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/DPU/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/DPU/</guid> </item> <item> <title>系统启动分析</title> <description>&lt;p&gt;用AI分析了一下启动时的屏幕打印信息&lt;/p&gt;&lt;p&gt;```bash[SOL Session operational.  Use ~? for help] # SOL会话正在运行，使用~?获取帮助Checkpoint BC21 # 系统自检点BC21[Cpu0.Port0] PCIE Bifutcation = x1...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%88%86%E6%9E%90/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 22 Apr 2025 18:17:03 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%88%86%E6%9E%90/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%88%86%E6%9E%90/</guid> </item> <item> <title>查看系统宕机原因</title> <description>&lt;p&gt;在 Linux 系统宕机时，&lt;code&gt;/var/log/messages&lt;/code&gt; 日志文件中可以搜索一些关键字来定位问题。以下是常见的关键字和它们的作用：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;🔧 常见故障关键字&lt;/h3&gt;&lt;p&gt;| 关键字 | 说明 ||--------|------|| &lt;code&gt;kernel&lt;/code&gt; | 查看内核级别的日志信息，如崩溃、内核Pan...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%AE%95%E6%9C%BA%E5%8E%9F%E5%9B%A0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 22 Apr 2025 18:17:03 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%AE%95%E6%9C%BA%E5%8E%9F%E5%9B%A0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%AE%95%E6%9C%BA%E5%8E%9F%E5%9B%A0/</guid> </item> <item> <title>mft</title> <description>&lt;h1&gt;mft&lt;/h1&gt;&lt;h3&gt;mft RPM包&lt;/h3&gt;&lt;p&gt;```bash[root@ ~]# rpm -qi mftName : mftVersion : 4.29.0Release : 131Architecture: x86_64Install Date: Wed 16 Apr ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/mft/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 17 Apr 2025 18:03:16 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/mft/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/mft/</guid> </item> <item> <title>查看系统启动时间</title> <description>&lt;p&gt;查看系统启动时间&lt;/p&gt;&lt;p&gt;```bash[root@ yinzhipeng]# echo &#34;系统启动时间: $(date -d &#34;$(awk &#39;{print $1}&#39; /proc/uptime) seconds ago&#34;)&#34; &lt;/p&gt;&lt;p&gt;系统启动时间: 2025年 04月 12日 星期六 12:48:48 CST`...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 17 Apr 2025 18:03:16 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%B3%BB%E7%BB%9F%E9%87%8D%E5%90%AF%E9%97%AE%E9%A2%98/%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%97%B6%E9%97%B4/</guid> </item> <item> <title>ls命令</title> <description>&lt;p&gt;ls命令&lt;/p&gt;&lt;p&gt;```bashUsage: ls [OPTION]... [FILE]...列出 FILE 的信息（默认是当前目录）。如果没有指定 -cftuvSUX 或 --sort，则按字母顺序排序条目。&lt;/p&gt;&lt;p&gt;长选项的必需参数对短选项也同样必需。 -a, --all ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/ls%E5%91%BD%E4%BB%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 23:16:00 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/ls%E5%91%BD%E4%BB%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/ls%E5%91%BD%E4%BB%A4/</guid> </item> <item> <title>什么叫NVLink</title> <description>&lt;p&gt;NVLink是由NVIDIA推出的高速互联技术，旨在提升多个GPU之间的通信带宽和数据传输效率。它通过提供比传统PCIe（Peripheral Component Interconnect Express）更高的带宽，允许多个GPU之间实现更快速的数据交换。这使得NVLink非常适合高性能计算、深度学习、AI训练...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVLink/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVLink/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVLink/</guid> </item> <item> <title>什么叫NVSwitch</title> <description>&lt;p&gt;&lt;strong&gt;NVSwitch&lt;/strong&gt;：是一种更加高效和扩展性强的互联技术，专为数据中心和超级计算机中的大型GPU集群设计。它是一种交换芯片，允许多个GPU之间通过高速互联进行数据交换，而不依赖于主机CPU或传统的PCIe连接。NVSwitch能够将多个GPU通过NVLink连接起来，提供更大的带宽和更低的延迟。&lt;/p&gt;&lt;p&gt;NVSwi...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVSwitch/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVSwitch/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVSwitch/</guid> </item> <item> <title>什么叫巨型帧</title> <description>&lt;p&gt;巨型帧（&lt;strong&gt;Jumbo Frames&lt;/strong&gt;）是指&lt;strong&gt;以太网帧的有效负载（Payload）大于标准以太网规定的1500字节最大传输单元（MTU）&lt;/strong&gt;的一种帧格式。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;✅ 标准以太网帧&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;最大传输单元（MTU）：1500字节&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;加上头部、尾部等，总帧长度最多约为1518字节。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;-...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B7%A8%E5%9E%8B%E5%B8%A7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B7%A8%E5%9E%8B%E5%B8%A7/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B7%A8%E5%9E%8B%E5%B8%A7/</guid> </item> <item> <title>如何查看显卡之前的连接状态</title> <description>&lt;p&gt;&lt;code&gt;bashxpu-smi topo --matrix&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;nvidia-smi topo --matrix&lt;/code&gt;&lt;/p&gt;&lt;p&gt;这个命令会显示一个拓扑矩阵，其中包含了每个GPU之间的连接信息，包括它们是否通过NVSwitch连接。输出会显示类似如下内容：&lt;/p&gt;&lt;p&gt;```bash&lt;/p&gt;&lt;pre&gt;&lt;code&gt; GPU...&lt;/code&gt;&lt;/pre&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%B9%8B%E9%97%B4%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%B9%8B%E9%97%B4%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%B9%8B%E9%97%B4%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81/</guid> </item> <item> <title>百度裸金属和阿里云裸金属对比</title> <description>&lt;p&gt;共同点&lt;/p&gt;&lt;p&gt;| &lt;strong&gt;特性/方面&lt;/strong&gt; | &lt;strong&gt;百度云 BBC&lt;/strong&gt; | &lt;strong&gt;阿里云 EBM&lt;/strong&gt; || ------------------ | -------------------------------------- | ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%99%BE%E5%BA%A6%E8%A3%B8%E9%87%91%E5%B1%9E%E5%92%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%A3%B8%E9%87%91%E5%B1%9E/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%99%BE%E5%BA%A6%E8%A3%B8%E9%87%91%E5%B1%9E%E5%92%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%A3%B8%E9%87%91%E5%B1%9E/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%99%BE%E5%BA%A6%E8%A3%B8%E9%87%91%E5%B1%9E%E5%92%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%A3%B8%E9%87%91%E5%B1%9E/</guid> </item> </channel></rss>