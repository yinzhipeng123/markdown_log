<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Mon, 18 Nov 2024 12:16:41 -0000</pubDate> <lastBuildDate>Mon, 18 Nov 2024 12:16:41 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>Brew</title> <description>&lt;h2&gt;brew&lt;/h2&gt;&lt;p&gt;使用brew，https://brew.sh/zh-cn/&lt;/p&gt;&lt;p&gt;在终端进行安装前，因安装需要下载文件，可以在终端中输入代理后再执行安装：&lt;/p&gt;&lt;p&gt;```bash设置代理，代理如何设置需请教资深人士export http_proxy=http://127.0.0.1:1087;export https...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/brew/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:17:21 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/brew/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/brew/</guid> </item> <item> <title>core_dump</title> <description>&lt;p&gt;配置 Core Dump 文件的生成和存储在 Linux 中需要几个步骤，确保在进程崩溃时能够记录完整的进程内存和状态。下面是一个详细的配置步骤和示例：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;启用 Core Dump 生成&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;首先，需要确保操作系统允许生成 Core Dump 文件。可以通过 &lt;code&gt;ulimit&lt;/code&gt; 命令来配置：&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/core_dump/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:17:16 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/core_dump/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/core_dump/</guid> </item> <item> <title>ulimit和limit文件</title> <description>&lt;h2&gt;ulimit命令&lt;/h2&gt;&lt;p&gt;&lt;code&gt;ulimit&lt;/code&gt; 是一个在类 Unix 系统中用于控制进程资源限制的命令。它可以设置当前 shell 会话和所有子进程的资源使用上限。资源限制可以涵盖文件句柄数、进程数量、内存使用量等方面，防止程序过度占用系统资源，影响系统稳定性。&lt;/p&gt;&lt;h3&gt;常见用途：&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;查看当前资源限制&lt;/strong&gt;：...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/ulimit/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:17:11 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/ulimit/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/ulimit/</guid> </item> <item> <title>java_dump命令</title> <description>&lt;p&gt;在 Java 运维和调试中，&#34;dump&#34; 主要指的是生成 Java 进程的堆内存转储（Heap Dump）、线程转储（Thread Dump）和其他诊断信息。以下是常用的生成 dump 文件的 Java 命令和工具：&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;1. 生成 Heap Dump（堆内存转储）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Heap Dump 是 Java...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/java/java_dump/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:16:58 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/java/java_dump/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/java/java_dump/</guid> </item> <item> <title>java运维命令</title> <description>&lt;p&gt;在 Java 的运维中，主要涉及一些常见的命令行工具和操作，帮助管理员或开发者监控、调试和优化 Java 应用程序。以下是一些常用的 Java 运维命令和工具：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 基本 JVM 命令&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;&lt;code&gt;java&lt;/code&gt;&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;用于运行 Java 应用程序。&lt;br&gt;- 查看 JVM 版本：&lt;br&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/java/java/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:16:58 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/java/java/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/java/java/</guid> </item> <item> <title>Nginx概述</title> <description>&lt;p&gt;Nginx（Engine X）是一个高性能的反向代理服务器、HTTP服务器和邮件代理服务器，广泛用于Web服务架构中。它的设计目标是高并发和高性能。以下是Nginx的核心原理和架构特点：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 事件驱动架构&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Nginx采用&lt;strong&gt;事件驱动&lt;/strong&gt;的架构（event-driven archite...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/nginx/nginx%E6%A6%82%E8%BF%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:16:49 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/nginx/nginx%E6%A6%82%E8%BF%B0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/nginx/nginx%E6%A6%82%E8%BF%B0/</guid> </item> <item> <title>docker命令</title> <description>&lt;p&gt;docker命令查询&lt;/p&gt;&lt;p&gt;https://www.fosstechnix.com/docker-command-cheat-sheet/&lt;/p&gt;&lt;p&gt;docker – 查看所有可用的 Docker 命令&lt;/p&gt;&lt;p&gt;docker version – 显示 Docker 版本&lt;/p&gt;&lt;p&gt;docker info – 显示系统范围的详细信息...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/docker/docker%E5%91%BD%E4%BB%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:16:45 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/docker/docker%E5%91%BD%E4%BB%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/docker/docker%E5%91%BD%E4%BB%A4/</guid> </item> <item> <title>dockerfile</title> <description>&lt;h2&gt;&lt;strong&gt;什么是Dockerfile？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt; 是一个包含一系列指令的文本文件，用于定义一个 Docker 镜像的构建过程。这些指令告诉 Docker 如何从一个基础镜像出发，安装软件、复制文件、设置环境等，最终生成一个自定义的 Docker 镜像。&lt;/p&gt;&lt;h3&gt;**Dockerfile...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/docker/dockerfile/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 12:16:45 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/docker/dockerfile/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/docker/dockerfile/</guid> </item> <item> <title>Openstack</title> <description>&lt;p&gt;OpenStack 是一个开源的云计算平台，提供了构建和管理私有云和公共云的工具。它是由一系列松耦合的组件组成，每个组件都负责特定的功能模块。以下是 OpenStack 的主要组件及其功能： &lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;Compute (Nova)&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;功能&lt;/strong&gt;：负责管理和提供虚拟机实例。 &lt;/li&gt;&lt;li&gt;**作...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/openstack/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 13:39:14 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/openstack/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/openstack/</guid> </item> <item> <title>ab复制</title> <description>&lt;p&gt;MySQL 的 AB 复制（主从复制）是一种常见的数据同步机制，用于在主服务器（A）和从服务器（B）之间复制数据，以实现高可用性和负载均衡。以下是部署 MySQL AB 复制的详细步骤：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 环境准备&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;两台服务器：主服务器（A）和从服务器（B）。&lt;/li&gt;&lt;li&gt;已安装并运行 MySQL 数...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/ab%E5%A4%8D%E5%88%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 13:39:14 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/ab%E5%A4%8D%E5%88%B6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/ab%E5%A4%8D%E5%88%B6/</guid> </item> <item> <title>读写分离</title> <description>&lt;p&gt;&lt;strong&gt;读写分离&lt;/strong&gt; 是 MySQL 主从复制的一种扩展应用，通过让主库（Master）处理写操作，从库（Slave）处理读操作，实现数据库的负载均衡和性能优化。它通常结合中间件（如 ProxySQL 或 Mycat）实现透明化的读写分离。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;读写分离的优势&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;性能提升&lt;/strong&gt;：将读操作...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 18 Nov 2024 13:39:14 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/</guid> </item> <item> <title>天干地支</title> <description>&lt;p&gt;天干：甲、乙、丙、丁、戊、己、庚、辛、壬、癸&lt;/p&gt;&lt;p&gt;地支：子、丑、寅、卯、辰、巳、午、未、申、酉、戌、亥&lt;/p&gt;&lt;p&gt;天干和地支配对60年花甲子全表折叠&lt;/p&gt;&lt;p&gt;| &lt;a href=&#34;https://zh.wikipedia.org/wiki/天干&#34;&gt;十干&lt;/a&gt; | 甲 | &lt;strong&gt;乙&lt;/strong&gt; | 丙 | &lt;strong&gt;丁&lt;/strong&gt; | 戊 | &lt;strong&gt;己&lt;/strong&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E5%85%AB%E5%AD%97%E6%98%93%E7%BB%8F/%E5%A4%A9%E5%B9%B2%E5%9C%B0%E6%94%AF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 26 Sep 2024 17:16:21 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E5%85%AB%E5%AD%97%E6%98%93%E7%BB%8F/%E5%A4%A9%E5%B9%B2%E5%9C%B0%E6%94%AF/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E5%85%AB%E5%AD%97%E6%98%93%E7%BB%8F/%E5%A4%A9%E5%B9%B2%E5%9C%B0%E6%94%AF/</guid> </item> <item> <title>般若波罗蜜多心经</title> <description>&lt;h2&gt;般若波罗蜜多心经&lt;/h2&gt;&lt;p&gt;拼音版本&lt;/p&gt;&lt;p&gt;观guān 自zì 在zài 菩pú 萨sà 。 行xíng 深shēn 般bō 若rě 波bō 罗luó 蜜mì 多duō 时shí 。 照zhào 见jiàn 五wǔ 蕴yùn 皆jiē 空kōng 。 度dù 一yī 切qiè 苦kǔ 厄è 。 舍shè 利lì 子...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E8%88%AC%E8%8B%A5%E6%B3%A2%E7%BD%97%E8%9C%9C%E5%A4%9A%E5%BF%83%E7%BB%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 26 Sep 2024 13:35:34 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E8%88%AC%E8%8B%A5%E6%B3%A2%E7%BD%97%E8%9C%9C%E5%A4%9A%E5%BF%83%E7%BB%8F/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E8%88%AC%E8%8B%A5%E6%B3%A2%E7%BD%97%E8%9C%9C%E5%A4%9A%E5%BF%83%E7%BB%8F/</guid> </item> <item> <title>一些心理学概念</title> <description>&lt;h3&gt;黑暗效应&lt;/h3&gt;&lt;p&gt;‌黑暗效应是一种心理学现象，指的是在光线较暗的环境中，人们更容易放下戒备心理，产生安全感，从而促进彼此之间的亲近关系。这一现象在约会、交流等社交场合中尤为明显。黑暗效应的原理在于，当人们在光线较暗的环境中，看不清对方的表情和细节，从而减少了戒备心理，增加了安全感，使得彼此之间的交流更加自然和亲...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E5%BF%83%E7%90%86%E5%AD%A6%E6%A6%82%E5%BF%B5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 31 Jul 2024 17:42:47 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E5%BF%83%E7%90%86%E5%AD%A6%E6%A6%82%E5%BF%B5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E5%BF%83%E7%90%86%E5%AD%A6%E6%A6%82%E5%BF%B5/</guid> </item> <item> <title>了解自我</title> <description>&lt;p&gt;为什么很多人不了解自己？&lt;/p&gt;&lt;p&gt;很多人不了解自己，这可能源于以下几个原因：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;缺乏自我反思&lt;/strong&gt;：忙碌的生活和工作让很多人没有时间或精力进行自我反思。他们习惯于应对外部世界的压力和要求，而忽视了内心的声音。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;社会和文化的影响&lt;/strong&gt;：社会和文化的压力使得人们往往按照他人或社会的期望生活，而不是根据自己...&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BA%86%E8%A7%A3%E8%87%AA%E6%88%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 29 Jul 2024 15:00:42 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BA%86%E8%A7%A3%E8%87%AA%E6%88%91/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E4%BA%86%E8%A7%A3%E8%87%AA%E6%88%91/</guid> </item> <item> <title>道理</title> <description>&lt;p&gt;为什么大多数人都明白很多道理，为什么还是过不好这一生？&lt;/p&gt;&lt;p&gt;以下是一些可能的原因：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;行动与意志的脱节&lt;/strong&gt;：了解某些道理并不意味着能够立刻付诸实践。行动往往需要强大的意志力和长期的坚持，而这对于很多人来说是一个挑战。&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;环境和习惯的影响&lt;/strong&gt;：生活环境、社交圈和日常习惯在很大程度上影响一个人的行为...&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E9%81%93%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 29 Jul 2024 15:00:42 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E9%81%93%E7%90%86/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E9%81%93%E7%90%86/</guid> </item> <item> <title>什么叫三分化和五分化</title> <description>&lt;p&gt;在健身中，“三分化”和“五分化”是指训练计划中每周将不同的肌肉群分配到不同天数进行训练的方法。 &lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;三分化训练（3-Day Split）&lt;/strong&gt;：&lt;/li&gt;&lt;li&gt;三分化训练将全身的肌肉群分为三部分，每个训练日针对其中一部分进行训练。这种方法通常是一周内训练三天，其他天休息或进行低强度的有氧运动。&lt;/li&gt;&lt;li&gt;例子...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BB%80%E4%B9%88%E5%8F%AB%E4%B8%89%E5%88%86%E5%8C%96%E5%92%8C%E4%BA%94%E5%88%86%E5%8C%96/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 02 Jul 2024 17:13:23 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BB%80%E4%B9%88%E5%8F%AB%E4%B8%89%E5%88%86%E5%8C%96%E5%92%8C%E4%BA%94%E5%88%86%E5%8C%96/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E4%BB%80%E4%B9%88%E5%8F%AB%E4%B8%89%E5%88%86%E5%8C%96%E5%92%8C%E4%BA%94%E5%88%86%E5%8C%96/</guid> </item> <item> <title>NSCA-CSCS体能教练笔记</title> <description>&lt;h3&gt;人体骨骼数量&lt;/h3&gt;&lt;p&gt;人体约有206块骨骼，准确的数字可能会因人而异。这种相对较轻但是很坚固的结构起到了提供杠杆、支撑以及保护的作用&lt;/p&gt;&lt;h4&gt;骨密度增加&lt;/h4&gt;&lt;p&gt;有几种情况可以对成人骨骼产生正面影响，这其中大多数是使用肌肉的结果。当身体承受较大负荷(工作和&lt;strong&gt;抗阻训练&lt;/strong&gt;)时，骨密度和骨矿物质含量将增加。如果身体...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/NSCA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 26 Jun 2024 17:04:24 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/NSCA/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/NSCA/</guid> </item> <item> <title>佛法中解脱的方法</title> <description>&lt;h2&gt;众生皆苦&lt;/h2&gt;&lt;p&gt;“众生皆苦”是佛教中的一个重要教义，指的是所有有情众生（即所有具有意识的生命体）都在经历苦难。这个教义源于佛陀的“四谛”教义，特别是“苦谛”，其中明确指出了生命中存在的各种苦难。以下是对“众生皆苦”的详细解释：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;生苦&lt;/strong&gt;：出生的痛苦，包括从母胎中分娩的痛苦。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;老苦&lt;/strong&gt;：衰老...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BD%9B%E6%B3%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 06 Jun 2024 15:52:05 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BD%9B%E6%B3%95/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E4%BD%9B%E6%B3%95/</guid> </item> <item> <title>github代码对比</title> <description>&lt;h1&gt;github 比较好用的代码对比方法&lt;/h1&gt;&lt;p&gt;&lt;img alt=&#34;&#34; src=&#34;https://github.com/yinzhipeng123/markdown_log/blob/main/docs/image/github/select_png.png?raw=true&#34;&gt;&lt;/p&gt;&lt;p&gt;选择版本之后，点击compare后，可以选择和其他版本之前变动...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/github/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 29 May 2024 10:36:09 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/github/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/github/</guid> </item> </channel></rss>