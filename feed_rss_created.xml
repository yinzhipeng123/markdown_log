<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Sun, 12 Jan 2025 06:25:40 -0000</pubDate> <lastBuildDate>Sun, 12 Jan 2025 06:25:40 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>通过ip查询mac地址</title> <description>&lt;p&gt;前提，在同一局域网下：&lt;/p&gt;&lt;p&gt;```\[root@myserver ~]#arp -n 192.168.1.11 #通过arp命令查询ip对应的mac地址192.168.1.11 (192.168.1.11) -- no entry # 无结果&lt;/p&gt;&lt;p&gt;[root@myserver ~]#ping 192.16...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E9%80%9A%E8%BF%87ip%E6%9F%A5%E8%AF%A2mac%E5%9C%B0%E5%9D%80/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 12 Jan 2025 06:25:51 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E9%80%9A%E8%BF%87ip%E6%9F%A5%E8%AF%A2mac%E5%9C%B0%E5%9D%80/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E9%80%9A%E8%BF%87ip%E6%9F%A5%E8%AF%A2mac%E5%9C%B0%E5%9D%80/</guid> </item> <item> <title>split</title> <description>&lt;p&gt;假设你的文件名是 &lt;code&gt;input.txt&lt;/code&gt;，你希望将它拆分成每个文件包含 10 行：&lt;/p&gt;&lt;p&gt;&lt;code&gt;split -l 10 input.txt output_&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;-l 10&lt;/code&gt;：指定每个文件包含 10 行。&lt;/p&gt;&lt;p&gt;&lt;code&gt;input.txt&lt;/code&gt;：要拆分的源文件。&lt;/p&gt;&lt;p&gt;&lt;code&gt;output_&lt;/code&gt;：拆分后的文件名前缀（结果文件名将依次是...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/split/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 12 Jan 2025 06:25:45 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/split/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/split/</guid> </item> <item> <title>Demo</title> <description>&lt;p&gt;一些bash的例子：&lt;/p&gt;&lt;h4&gt;在bash中设置异常捕获，监控循环中可能发生的错误&lt;/h4&gt;&lt;p&gt;```bash&lt;/p&gt;&lt;h1&gt;!/bin/bash&lt;/h1&gt;&lt;h1&gt;可以捕获失败的循环，把错误的循环次数打印在fail.txt中&lt;/h1&gt;&lt;p&gt;set -E&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;fail.txttrap &#39;echo $i &amp;gt;&amp;gt; fail.txt&#39; ERR&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;for ((...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash/demo/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 12 Jan 2025 06:25:44 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash/demo/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash/demo/</guid> </item> <item> <title>云计算概念</title> <description>&lt;p&gt;云计算是一种提供和使用基于互联网的计算资源和服务的模式，这些资源和服务包括各种工具和应用，可以按需分配和使用。云计算的核心组成部分包括以下几个方面：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.服务模型&lt;/strong&gt;：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;基础设施即服务（IaaS）&lt;/strong&gt;：提供虚拟化的计算资源，如虚拟机、存储空间和网络。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;平台即服务（PaaS）&lt;/strong&gt;：提供编程环...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BA%91%E8%AE%A1%E7%AE%97%E6%A6%82%E5%BF%B5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 01 Jan 2025 23:49:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BA%91%E8%AE%A1%E7%AE%97%E6%A6%82%E5%BF%B5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BA%91%E8%AE%A1%E7%AE%97%E6%A6%82%E5%BF%B5/</guid> </item> <item> <title>Bluefield智能网卡</title> <description>&lt;h1&gt;BlueField背景&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Mellanox 的背景&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;成立与发展：&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;[ ] Mellanox 于 &lt;strong&gt;1999 年&lt;/strong&gt;在以色列成立，总部位于加利福尼亚州桑尼维尔（Sunnyvale, CA）。&lt;/li&gt;&lt;li&gt;[ ] 专注于提供高性能网络解决方案，包括 InfiniBand ...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/Bluefield%E6%99%BA%E8%83%BD%E7%BD%91%E5%8D%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 01 Jan 2025 21:27:19 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/Bluefield%E6%99%BA%E8%83%BD%E7%BD%91%E5%8D%A1/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/Bluefield%E6%99%BA%E8%83%BD%E7%BD%91%E5%8D%A1/</guid> </item> <item> <title>Ansible实例</title> <description>&lt;p&gt;Ansible执行命令实例&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashansible all -i host.txt -m shell -a &#34;mv /tmp/testfile /tmp/test&#34; -e &#39;ansible_ssh_common_args=&#34; -o StrictHostKeyChecking=no&#34;&#39;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;`a...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E5%AE%9E%E4%BE%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 01 Jan 2025 21:27:19 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E5%AE%9E%E4%BE%8B/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E5%AE%9E%E4%BE%8B/</guid> </item> <item> <title>rootfs</title> <description>&lt;p&gt;&lt;strong&gt;&lt;code&gt;rootfs&lt;/code&gt;&lt;/strong&gt; 是 Linux 系统中的根文件系统 (&lt;strong&gt;root filesystem&lt;/strong&gt;)，它是操作系统启动后挂载的第一个文件系统。&lt;code&gt;rootfs&lt;/code&gt; 通常包含了系统启动所需的基本文件和目录，例如：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;[ ] &lt;code&gt;/bin&lt;/code&gt;：包含基本的用户命令。&lt;/li&gt;&lt;li&gt;[ ] &lt;code&gt;/sbin&lt;/code&gt;：包含系统管理命令。&lt;/li&gt;&lt;li&gt;...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/rootfs/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 01 Jan 2025 21:27:19 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/rootfs/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/rootfs/</guid> </item> <item> <title>喝酒</title> <description>&lt;h2&gt;为什么吃头炮不能喝酒&lt;/h2&gt;&lt;p&gt;吃了头孢后不能喝酒，是因为头孢类抗生素（例如头孢拉定、头孢呋辛等）和酒精一起作用可能引起&lt;strong&gt;双硫仑样反应&lt;/strong&gt;（又称戒酒硫样反应）。这种反应会导致身体代谢酒精的过程受阻，从而出现不适症状。&lt;/p&gt;&lt;p&gt;具体机制是这样的：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;酒精在体内被代谢时，首先被&lt;strong&gt;乙醇脱氢酶&lt;/strong&gt;分解为乙醛。&lt;/li&gt;&lt;li&gt;乙...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E5%96%9D%E9%85%92/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 29 Dec 2024 17:35:58 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E5%96%9D%E9%85%92/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E5%96%9D%E9%85%92/</guid> </item> <item> <title>抗氧化食物</title> <description>&lt;p&gt;为了减少我的白发，尽量食用抗氧化食物&lt;/p&gt;&lt;p&gt;抗氧化食物富含抗氧化剂，可以帮助中和体内的自由基，保护细胞健康。以下是一些富含抗氧化物质的食物分类和具体建议：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 水果类&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;[ ] &lt;strong&gt;浆果&lt;/strong&gt;：蓝莓、草莓、覆盆子、黑莓（含有丰富的花青素和维生素C）。&lt;/li&gt;&lt;li&gt;[ ] *&lt;em&gt;柑橘类&lt;/em&gt;...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E6%88%91%E9%9C%80%E8%A6%81%E7%9A%84%E6%8A%97%E6%B0%A7%E5%8C%96%E9%A3%9F%E7%89%A9/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 29 Dec 2024 17:35:58 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E6%88%91%E9%9C%80%E8%A6%81%E7%9A%84%E6%8A%97%E6%B0%A7%E5%8C%96%E9%A3%9F%E7%89%A9/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E6%88%91%E9%9C%80%E8%A6%81%E7%9A%84%E6%8A%97%E6%B0%A7%E5%8C%96%E9%A3%9F%E7%89%A9/</guid> </item> <item> <title>戒烟</title> <description>&lt;p&gt;压力大的情况下，吸烟可能让你感觉短暂放松，但长远来看，它对健康的危害显而易见。如果你希望减少吸烟或最终戒烟，可以尝试以下方法来应对压力并替代吸烟的需求：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 替代行为：用健康的方式缓解压力&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;[ ] 深呼吸和放松技巧&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;试试腹式呼吸或冥想练习。吸烟时你会有深呼吸的动作，...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E6%88%92%E7%83%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 29 Dec 2024 17:35:58 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E6%88%92%E7%83%9F/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E6%88%92%E7%83%9F/</guid> </item> <item> <title>喝水</title> <description>&lt;h2&gt;每日喝水量计算&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;每日所需水量（升） = 体重（公斤） × 0.03&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;对于75公斤的体重： &lt;strong&gt;75 × 0.03 = 2.25升&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;所以，一个75公斤体重的人每天大约需要喝&lt;strong&gt;2.25升水&lt;/strong&gt;来维持健康。&lt;/p&gt;&lt;h3&gt;提示：&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;如果运动量大或天气炎热，可能需要额外增加水分摄入，建议在运...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E6%AF%8F%E5%A4%A9%E5%96%9D%E6%B0%B4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 29 Dec 2024 17:35:58 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E6%AF%8F%E5%A4%A9%E5%96%9D%E6%B0%B4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E6%AF%8F%E5%A4%A9%E5%96%9D%E6%B0%B4/</guid> </item> <item> <title>registry</title> <description>&lt;p&gt;创建目录。&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashsudo mkdir -p /etc/docker/registry&lt;/code&gt;&lt;/p&gt;&lt;p&gt;创建 &lt;code&gt;htpasswd&lt;/code&gt; 文件&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashsudo htpasswd -c /etc/docker/registry/htpasswd myuser&lt;/code&gt;&lt;/p&gt;&lt;p&gt;系统会提示你输入并确认密码&lt;/p&gt;&lt;p&gt;``...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/docker/registry/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 22:49:09 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/docker/registry/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/docker/registry/</guid> </item> <item> <title>IDEA_Jenkins插件</title> <description>&lt;p&gt;Jenkins插件&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;image-20241216120257972&#34; src=&#34;https://s2.loli.net/2024/12/16/1c5MXETDdeNKxGn.png&#34;&gt;&lt;/p&gt;&lt;p&gt;配置服务器地址，账号密码&lt;/p&gt;&lt;p&gt;![image-20241216120406893](https://s2.loli.net/2024/...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/IDEA_Jenkins%E6%8F%92%E4%BB%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 22:49:09 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/IDEA_Jenkins%E6%8F%92%E4%BB%B6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/IDEA_Jenkins%E6%8F%92%E4%BB%B6/</guid> </item> <item> <title>Jenkins审查制度</title> <description>&lt;p&gt;在 Jenkins 中，&lt;strong&gt;In-process Script Approval&lt;/strong&gt; 是一种安全机制，主要用于 &lt;strong&gt;防止未经审查的脚本执行&lt;/strong&gt;。即使 Jenkinsfile 看起来没有涉及权限审批的地方，但可能还是触发了 Jenkins 的 &lt;strong&gt;脚本安全策略&lt;/strong&gt;，需要管理员审批。这通常发生在以下几种情况下：&lt;/p&gt;&lt;p&gt;-...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E5%AE%A1%E6%9F%A5%E5%88%B6%E5%BA%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 22:49:09 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E5%AE%A1%E6%9F%A5%E5%88%B6%E5%BA%A6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E5%AE%A1%E6%9F%A5%E5%88%B6%E5%BA%A6/</guid> </item> <item> <title>pipeline示例</title> <description>&lt;h1&gt;pipeline示例&lt;/h1&gt;&lt;p&gt;Jenkins服务器本地需部署Registry&lt;/p&gt;&lt;p&gt;```yamlpipeline { agent any&lt;/p&gt;&lt;pre&gt;&lt;code&gt;environment { DOCKER_REGISTRY = &#34;localhost:5000&#34; // 本地 Docker R...&lt;/code&gt;&lt;/pre&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/pipeline%E7%A4%BA%E4%BE%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 16 Dec 2024 22:49:09 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/pipeline%E7%A4%BA%E4%BE%8B/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/pipeline%E7%A4%BA%E4%BE%8B/</guid> </item> <item> <title>Jenkins的简单构建任务</title> <description>&lt;p&gt;新建任务&lt;/p&gt;&lt;p&gt;&lt;img alt=&#34;image-20241213232042711&#34; src=&#34;https://s2.loli.net/2024/12/13/4ydtIc8YpTf9LvN.png&#34;&gt;&lt;/p&gt;&lt;p&gt;添加源码地址&lt;/p&gt;&lt;p&gt;![image-20241213231932916](https://s2.loli.net/2024/12/13/qz4XI...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E7%AE%80%E5%8D%95%E7%9A%84%E6%9E%84%E5%BB%BA%E4%BB%BB%E5%8A%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E7%AE%80%E5%8D%95%E7%9A%84%E6%9E%84%E5%BB%BA%E4%BB%BB%E5%8A%A1/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/Jenkins%E7%AE%80%E5%8D%95%E7%9A%84%E6%9E%84%E5%BB%BA%E4%BB%BB%E5%8A%A1/</guid> </item> <item> <title>Jenkins的yum部署</title> <description>&lt;p&gt;配置源&lt;/p&gt;&lt;p&gt;```bash sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo sudo rpm --import https://pkg.jenkins.io/redhat...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/jenkins_yum%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/CICD/jenkins_yum%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/CICD/jenkins_yum%E9%83%A8%E7%BD%B2/</guid> </item> <item> <title>service服务书写规则</title> <description>&lt;h2&gt;存放systemd配置文件的目录&lt;/h2&gt;&lt;p&gt;&lt;code&gt;/etc/systemd/system/&lt;/code&gt; 和 &lt;code&gt;/lib/systemd/system/&lt;/code&gt; 目录都是 &lt;strong&gt;systemd&lt;/strong&gt; 用来存放服务单元（unit）文件的地方，但是它们的用途有所不同。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;1./etc/systemd/system/&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这个目录是...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/service/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/service/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/service/</guid> </item> <item> <title>service服务快速失败</title> <description>&lt;p&gt;“快速失败”模式（&lt;strong&gt;quick failure mode&lt;/strong&gt;）是指当一个服务在启动过程中连续失败多次时，系统会自动进入一种限制重试次数的状态。这种模式是为了防止某个服务反复失败时，占用过多的系统资源或者无意义地重复尝试，导致系统性能下降或资源浪费。&lt;/p&gt;&lt;h3&gt;如何工作：&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;多次启动失败&lt;/strong&gt;： 当一个服...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/%E5%BF%AB%E9%80%9F%E5%A4%B1%E8%B4%A5/</guid> </item> <item> <title>文件描述符</title> <description>&lt;p&gt;文件描述符（File Descriptor，FD）是操作系统用来标识进程打开的文件、套接字、管道、设备等资源的一个整数值。它是操作系统与进程之间进行文件或设备操作的桥梁。每当一个程序打开文件或其他资源时，操作系统会为该资源分配一个唯一的文件描述符，程序可以通过该描述符对文件进行读写、关闭等操作。&lt;/p&gt;&lt;p&gt;```l...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sun, 15 Dec 2024 22:23:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_created.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6/</guid> </item> </channel></rss>