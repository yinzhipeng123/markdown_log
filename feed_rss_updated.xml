<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Sat, 12 Apr 2025 13:40:57 -0000</pubDate> <lastBuildDate>Sat, 12 Apr 2025 13:40:57 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>什么叫NVLink</title> <description>&lt;p&gt;NVLink是由NVIDIA推出的高速互联技术，旨在提升多个GPU之间的通信带宽和数据传输效率。它通过提供比传统PCIe（Peripheral Component Interconnect Express）更高的带宽，允许多个GPU之间实现更快速的数据交换。这使得NVLink非常适合高性能计算、深度学习、AI训练...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVLink/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVLink/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVLink/</guid> </item> <item> <title>什么叫NVSwitch</title> <description>&lt;p&gt;&lt;strong&gt;NVSwitch&lt;/strong&gt;：是一种更加高效和扩展性强的互联技术，专为数据中心和超级计算机中的大型GPU集群设计。它是一种交换芯片，允许多个GPU之间通过高速互联进行数据交换，而不依赖于主机CPU或传统的PCIe连接。NVSwitch能够将多个GPU通过NVLink连接起来，提供更大的带宽和更低的延迟。&lt;/p&gt;&lt;p&gt;NVSwi...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVSwitch/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVSwitch/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/NVSwitch/</guid> </item> <item> <title>什么叫巨型帧</title> <description>&lt;p&gt;巨型帧（&lt;strong&gt;Jumbo Frames&lt;/strong&gt;）是指&lt;strong&gt;以太网帧的有效负载（Payload）大于标准以太网规定的1500字节最大传输单元（MTU）&lt;/strong&gt;的一种帧格式。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;✅ 标准以太网帧&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;最大传输单元（MTU）：1500字节&lt;/strong&gt;&lt;/li&gt;&lt;li&gt;加上头部、尾部等，总帧长度最多约为1518字节。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;-...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B7%A8%E5%9E%8B%E5%B8%A7/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B7%A8%E5%9E%8B%E5%B8%A7/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E4%BB%80%E4%B9%88%E6%98%AF%E5%B7%A8%E5%9E%8B%E5%B8%A7/</guid> </item> <item> <title>如何查看显卡之前的连接状态</title> <description>&lt;p&gt;&lt;code&gt;bashxpu-smi topo --matrix&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;nvidia-smi topo --matrix&lt;/code&gt;&lt;/p&gt;&lt;p&gt;这个命令会显示一个拓扑矩阵，其中包含了每个GPU之间的连接信息，包括它们是否通过NVSwitch连接。输出会显示类似如下内容：&lt;/p&gt;&lt;p&gt;```bash&lt;/p&gt;&lt;pre&gt;&lt;code&gt; GPU...&lt;/code&gt;&lt;/pre&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%B9%8B%E9%97%B4%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%B9%8B%E9%97%B4%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%B9%8B%E9%97%B4%E8%BF%9E%E6%8E%A5%E7%8A%B6%E6%80%81/</guid> </item> <item> <title>百度裸金属和阿里云裸金属对比</title> <description>&lt;p&gt;共同点&lt;/p&gt;&lt;p&gt;| &lt;strong&gt;特性/方面&lt;/strong&gt; | &lt;strong&gt;百度云 BBC&lt;/strong&gt; | &lt;strong&gt;阿里云 EBM&lt;/strong&gt; || ------------------ | -------------------------------------- | ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%99%BE%E5%BA%A6%E8%A3%B8%E9%87%91%E5%B1%9E%E5%92%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%A3%B8%E9%87%91%E5%B1%9E/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%99%BE%E5%BA%A6%E8%A3%B8%E9%87%91%E5%B1%9E%E5%92%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%A3%B8%E9%87%91%E5%B1%9E/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%99%BE%E5%BA%A6%E8%A3%B8%E9%87%91%E5%B1%9E%E5%92%8C%E9%98%BF%E9%87%8C%E4%BA%91%E8%A3%B8%E9%87%91%E5%B1%9E/</guid> </item> <item> <title>裸金属服务器</title> <description>&lt;p&gt;“裸金属服务器”（Bare Metal Server）是一种&lt;strong&gt;物理服务器&lt;/strong&gt;，与虚拟服务器不同，它并没有在上面安装虚拟化层或运行多个虚拟机。它是为单一租户（你）提供的独占服务器资源，具有高性能、高可控性的特点。&lt;/p&gt;&lt;p&gt;简单来说，裸金属服务器就是你“独占一整台实体服务器”。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;📦 裸金属服务器...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%A3%B8%E9%87%91%E5%B1%9E%E6%9C%8D%E5%8A%A1%E5%99%A8/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%A3%B8%E9%87%91%E5%B1%9E%E6%9C%8D%E5%8A%A1%E5%99%A8/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%A3%B8%E9%87%91%E5%B1%9E%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid> </item> <item> <title>Bluefield智能网卡</title> <description>&lt;h1&gt;BlueField智能网卡由来&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;Mellanox 的背景&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1成立与发展：&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;[ ] Mellanox 于 &lt;strong&gt;1999 年&lt;/strong&gt;在以色列成立，总部位于加利福尼亚州桑尼维尔（Sunnyvale, CA）。&lt;/li&gt;&lt;li&gt;[ ] 专注于提供高性能网络解决方案，包括 InfiniBand 和以太...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/Bluefield%E6%99%BA%E8%83%BD%E7%BD%91%E5%8D%A1/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/Bluefield%E6%99%BA%E8%83%BD%E7%BD%91%E5%8D%A1/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/Bluefield%E6%99%BA%E8%83%BD%E7%BD%91%E5%8D%A1/</guid> </item> <item> <title>大悲咒</title> <description>&lt;h2&gt;千手千眼无碍大悲心陀罗尼&lt;/h2&gt;&lt;p&gt;拼音版本&lt;/p&gt;&lt;p&gt;南ná 无mó 喝hē 啰là 怛dá 那nuó 哆duō 啰là 夜yè 耶yē 　　 南ná 无mó 阿ā 唎lì 耶yē 　　 婆pó 卢lú 羯jié 帝dì 烁shuò 钵bō 啰là 耶yē 　　 菩pú 提tí 萨sà 埵duǒ 婆pó 耶yē 　　 摩...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E5%A4%A7%E6%82%B2%E5%92%92/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E5%A4%A7%E6%82%B2%E5%92%92/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E5%A4%A7%E6%82%B2%E5%92%92/</guid> </item> <item> <title>crontab</title> <description>&lt;h1&gt;crontab&lt;/h1&gt;&lt;p&gt;crontab -e&lt;/p&gt;&lt;p&gt;&lt;code&gt;bash0 19 * * * /bin/bash /root/clean_access_debug.sh&lt;/code&gt;&lt;/p&gt;&lt;p&gt;非交互式添加计划任务&lt;/p&gt;&lt;p&gt;```bash(crontab -l; echo &#34;0 19 * * * /root/clean_access_d...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/crontab/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/crontab/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/crontab/</guid> </item> <item> <title>日志查看常用命令less</title> <description>&lt;h1&gt;less命令&lt;/h1&gt;&lt;h3&gt;&lt;strong&gt;基本用法&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;bashless [选项] 文件名&lt;/code&gt;&lt;/p&gt;&lt;p&gt;示例：&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashless /var/log/syslog # 查看系统日志文件&lt;/code&gt;&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;常用操作&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;less&lt;/code&gt; 界面中，可以通过快捷键交互：&lt;/p&gt;&lt;p&gt;| 快捷键 ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/less/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/less/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/Linux%E9%80%9A%E7%94%A8%E8%BD%AF%E4%BB%B6/less/</guid> </item> <item> <title>清理磁盘的脚本</title> <description>&lt;p&gt;```bash&lt;/p&gt;&lt;h1&gt;日志如果已经被切分，仅需清理日志文件&lt;/h1&gt;&lt;p&gt;cat log_dirs |while read log_pathdo if [ -d ${log_path} ] then if [[ ${log_path} =~ &#34;log&#34; ]] then cd $log_path...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98%E7%9A%84%E8%84%9A%E6%9C%AC/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Sat, 12 Apr 2025 17:38:59 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98%E7%9A%84%E8%84%9A%E6%9C%AC/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98%E7%9A%84%E8%84%9A%E6%9C%AC/</guid> </item> <item> <title>清理磁盘</title> <description>&lt;p&gt;查看当前目录最大的占用&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashdu -ah --max-depth=1 . | sort -rh | head -n 20&lt;/code&gt;&lt;/p&gt;&lt;p&gt;删除2025的日志，但不删除今天的&lt;/p&gt;&lt;p&gt;```bashfind ./ -type f -name &#39;db.log.2025*&#39; ! -name &#39;db....&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 25 Mar 2025 19:27:33 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/IO/%E6%B8%85%E7%90%86%E7%A3%81%E7%9B%98/</guid> </item> <item> <title>ethtool命令</title> <description>&lt;h1&gt;ethtool命令&lt;/h1&gt;&lt;p&gt;ethtool是用于查询及设置网卡参数的命令。&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://linux.die.net/man/8/ethtool&#34;&gt;ethtool（8） - Linux 手册页 (die.net)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;[ethtool linux 命令 在线中文手册 (51yip.com)](http:/...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/ethtool/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 25 Mar 2025 19:27:33 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/ethtool/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/ethtool/</guid> </item> <item> <title>virsh统计虚拟机占用内存的脚本</title> <description>&lt;p&gt;统计虚拟机&lt;/p&gt;&lt;p&gt;```bashtotal_mem=0for vm in $(virsh list --name); do  mem=$(virsh dommemstat $vm | awk &#39;/actual/ {print $2}&#39;) total_mem=$((total_mem + mem))...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%BB%9F%E8%AE%A1%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 18 Mar 2025 20:58:29 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%BB%9F%E8%AE%A1%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E7%BB%9F%E8%AE%A1%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%86%85%E5%AD%98/</guid> </item> <item> <title>virsh命令</title> <description>&lt;p&gt;```bash[root@ ~]# virsh --help&lt;/p&gt;&lt;p&gt;virsh [选项]... [&amp;lt;命令字符串&amp;gt;]virsh [选项]... &amp;lt;命令&amp;gt; [参数...]&lt;/p&gt;&lt;p&gt;选项: -c | --connect=URI 超级管理程序连接 URI -d | --debug=NUM ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%91%BD%E4%BB%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 18 Mar 2025 20:58:29 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%91%BD%E4%BB%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%91%BD%E4%BB%A4/</guid> </item> <item> <title>Ansible实例</title> <description>&lt;p&gt;Ansible执行命令实例&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashansible all -i host.txt -m shell -a &#34;mv /tmp/testfile /tmp/test&#34; -e &#39;ansible_ssh_common_args=&#34; -o StrictHostKeyChecking=no&#34;&#39;&lt;/code&gt;&lt;/p&gt;&lt;p&gt;`a...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E5%AE%9E%E4%BE%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 18 Mar 2025 20:58:29 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E5%AE%9E%E4%BE%8B/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E5%AE%9E%E4%BE%8B/</guid> </item> <item> <title>awk的一些例子</title> <description>&lt;p&gt;```bash[root@~ ]# cat host_warn.txt | head -n 3node2961-zwlt.haha.comnode2961-zwlt.haha.comnode2996-zwlt.haha.comnode2255-zwlt.haha.com&lt;/p&gt;&lt;p&gt;[root@~ ]# cat...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/awk/awk_demo/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 18 Mar 2025 20:58:29 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/awk/awk_demo/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/awk/awk_demo/</guid> </item> <item> <title>Demo</title> <description>&lt;p&gt;一些bash的例子：&lt;/p&gt;&lt;h4&gt;在bash中设置异常捕获，监控循环中可能发生的错误&lt;/h4&gt;&lt;p&gt;```bash&lt;/p&gt;&lt;h1&gt;!/bin/bash&lt;/h1&gt;&lt;h1&gt;可以捕获失败的循环，把错误的循环次数打印在fail.txt中&lt;/h1&gt;&lt;p&gt;set -E&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;fail.txttrap &#39;echo $i &amp;gt;&amp;gt; fail.txt&#39; ERR&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;for ((...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash/demo/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 18 Mar 2025 20:58:29 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash/demo/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash/demo/</guid> </item> <item> <title>grep多个关键字</title> <description>&lt;p&gt;第一种和第二种方法都可以用来过滤多个关键字，但它们有一些不同的特点和适用场景。以下是它们的优缺点对比：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;第一种方法：使用 &lt;code&gt;-E&lt;/code&gt; 选项（扩展正则表达式）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;bashgrep -E &#39;keyword1|keyword2|keyword3&#39; filename&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;*...&lt;/h4&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/grep%E5%A4%9A%E4%B8%AA%E5%85%B3%E9%94%AE%E5%AD%97/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 18 Mar 2025 20:58:29 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/grep%E5%A4%9A%E4%B8%AA%E5%85%B3%E9%94%AE%E5%AD%97/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/grep%E5%A4%9A%E4%B8%AA%E5%85%B3%E9%94%AE%E5%AD%97/</guid> </item> <item> <title>paste</title> <description>&lt;p&gt;&lt;code&gt;paste&lt;/code&gt; 是 Linux 中的一个命令行工具，主要用于合并多个文件或标准输入的行，按列拼接数据。它的常见用法如下：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;默认拼接（按列合并）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;bashpaste file1.txt file2.txt&lt;/code&gt;&lt;strong&gt;作用&lt;/strong&gt;：按行合并 &lt;code&gt;file1.txt&lt;/code&gt; 和 `fil...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/paste/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 18 Mar 2025 20:58:29 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/paste/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/paste/</guid> </item> </channel></rss>