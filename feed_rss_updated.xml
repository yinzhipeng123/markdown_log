<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Thu, 15 May 2025 06:05:51 -0000</pubDate> <lastBuildDate>Thu, 15 May 2025 06:05:51 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>什么是TPU</title> <description>&lt;h2&gt;背景与定义&lt;/h2&gt;&lt;p&gt;Tensor Processing Unit（TPU）是一种由谷歌专为神经网络机器学习设计的AI加速器应用专用集成电路（ASIC），与TensorFlow无缝集成，用于高效执行张量运算。TPU通过在硬件层面专门优化矩阵乘法操作，实现了在单个全局指令周期内完成256×256矩阵乘加的高吞吐量能力...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/TPU/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 14 May 2025 15:04:55 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/TPU/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/TPU/</guid> </item> <item> <title>检查光模块</title> <description>&lt;p&gt;光模块质量检查&lt;/p&gt;&lt;p&gt;```bash&lt;/p&gt;&lt;h1&gt;ethtool -m p1&lt;/h1&gt;&lt;p&gt;Identifier : 0x11 (QSFP28) # 标识符：QSFP28光模块类型Extended identifier : 0x...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/hardware/%E5%85%89%E6%A8%A1%E5%9D%97%E8%B4%A8%E9%87%8F%E6%A3%80%E6%9F%A5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 13 May 2025 18:10:38 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/hardware/%E5%85%89%E6%A8%A1%E5%9D%97%E8%B4%A8%E9%87%8F%E6%A3%80%E6%9F%A5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/hardware/%E5%85%89%E6%A8%A1%E5%9D%97%E8%B4%A8%E9%87%8F%E6%A3%80%E6%9F%A5/</guid> </item> <item> <title>opnestack中的Ironic服务</title> <description>&lt;h2&gt;一、Ironic 深度讲解&lt;/h2&gt;&lt;h3&gt;1. Ironic 是什么？&lt;/h3&gt;&lt;p&gt;Ironic 是 OpenStack 的一个核心项目，用于裸金属服务器的部署和管理。它不同于传统的虚拟化平台（如 KVM），而是直接与物理服务器交互，实现自动化的裸机生命周期管理。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;2. 核心架构组件&lt;/h3&gt;&lt;p&gt;Ironic ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/Ironic/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 12 May 2025 17:49:03 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/Ironic/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/Ironic/</guid> </item> <item> <title>kubectl</title> <description>&lt;p&gt;kubectl 命令&lt;/p&gt;&lt;p&gt;```[root@maas1-zwlt bf3_init]# kubectl --helpkubectl 控制 Kubernetes 集群管理器。&lt;/p&gt;&lt;p&gt;更多信息请参见：https://kubernetes.io/zh/docs/reference/kubectl/overview...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/kubectl/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 09 May 2025 12:15:16 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/kubectl/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/kubectl/</guid> </item> <item> <title>juju组件逻辑</title> <description>&lt;p&gt;Juju 是 Canonical 开发的一个开源运维编排工具，主要用于部署、配置、管理和扩展云应用。Juju 使用一种叫做 &lt;strong&gt;Charm&lt;/strong&gt; 的模型来管理服务的生命周期。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;一、Juju 的核心组件&lt;/h2&gt;&lt;p&gt;| 组件名称 | 说明 ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/juju%E7%BB%84%E4%BB%B6%E9%80%BB%E8%BE%91/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 09 May 2025 12:15:16 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/juju%E7%BB%84%E4%BB%B6%E9%80%BB%E8%BE%91/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/juju%E7%BB%84%E4%BB%B6%E9%80%BB%E8%BE%91/</guid> </item> <item> <title>Ceph</title> <description>&lt;h3&gt;✅ &lt;strong&gt;Ceph 存储接口概述&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Ceph 是一个高度可扩展的分布式存储系统，提供三种主要的存储接口：&lt;strong&gt;对象存储（RADOS）、块存储（RBD）和文件存储（CephFS）&lt;/strong&gt;。每种接口都有自己的特点、使用场景和技术实现。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;🔷 **1. 对象存储：RADOS 和 RADOS ...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/Ceph/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/Ceph/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/Ceph/</guid> </item> <item> <title>EC 校验</title> <description>&lt;h3&gt;EC 校验（Erasure Coding）是什么？&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;EC（Erasure Coding，纠删码）&lt;/strong&gt;是一种比多副本更节省空间的数据冗余方式，用于对象存储等系统中保障数据可靠性。&lt;/p&gt;&lt;h4&gt;🚀 工作原理：&lt;/h4&gt;&lt;p&gt;假设一个对象被划分为 &lt;code&gt;k&lt;/code&gt; 个数据块，然后通过编码生成 &lt;code&gt;m&lt;/code&gt; 个校验块，总共 `k + ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/EC%E6%A0%A1%E9%AA%8C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/EC%E6%A0%A1%E9%AA%8C/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/EC%E6%A0%A1%E9%AA%8C/</guid> </item> <item> <title>对象存储概念</title> <description>&lt;p&gt;&lt;strong&gt;对象存储（Object Storage）&lt;/strong&gt;是一种用于存储非结构化数据的存储架构，它将数据以“对象”（Object）的形式进行管理，而不是传统文件系统中的“文件”或块存储中的“块”。&lt;/p&gt;&lt;p&gt;每个对象包含三部分：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;数据本体&lt;/strong&gt;：即要存储的实际内容，如图片、视频、文档等。&lt;/li&gt;&lt;li&gt;**元数据（Metadat...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%A6%82%E5%BF%B5/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%A6%82%E5%BF%B5/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8%E6%A6%82%E5%BF%B5/</guid> </item> <item> <title>elk体系</title> <description>&lt;h2&gt;🌟 什么是 ELK？&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;ELK Stack&lt;/strong&gt; 是一套用于搜索、分析和可视化日志数据的开源工具组合，主要包括三个组件：&lt;/p&gt;&lt;p&gt;| 组件 | 作用说明 || ----------...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86/elk/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86/elk/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E6%97%A5%E5%BF%97%E9%87%87%E9%9B%86/elk/</guid> </item> <item> <title>bgpd</title> <description>&lt;p&gt;&lt;strong&gt;bgpd&lt;/strong&gt; 是 Zebra/Quagga/FRRouting 等开源路由软件套件中专门实现 &lt;strong&gt;BGP（Border Gateway Protocol）&lt;/strong&gt; 协议的守护进程（daemon）。它的核心功能是让设备（如 Linux 服务器或路由器）支持 BGP 协议，用于在大型网络（如互联网或企业骨干网）中交换...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/bgpd/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/bgpd/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/bgpd/</guid> </item> <item> <title>zebra</title> <description>&lt;p&gt;Zebra 是一款开源的路由管理软件，最初由 Kunihiro Ishiguro 和 Yoshinari Yoshikawa 开发，后来成为 &lt;strong&gt;GNU Zebra&lt;/strong&gt; 项目的一部分。它主要用于 Unix/Linux 系统，提供动态路由协议的支持，允许将 Linux 设备转变为功能丰富的路由器。&lt;/p&gt;&lt;h3&gt;主要特...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/zebra/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/zebra/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/%E8%B7%AF%E7%94%B1%E5%99%A8/zebra/</guid> </item> <item> <title>lvs加keepalve部署脚本</title> <description>&lt;p&gt;一个 &lt;strong&gt;LVS + Keepalived 高可用架构一键部署脚本&lt;/strong&gt;，包含：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;🧠 主节点（MASTER）&lt;/li&gt;&lt;li&gt;👥 备节点（BACKUP）&lt;/li&gt;&lt;li&gt;🧱 Real Server（真实后端）&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;我将为每个角色提供独立脚本，按你的实际服务器角色运行对应的脚本即可。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;🧠 1. MASTER 节点...&lt;/h2&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalive%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalive%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalive%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/</guid> </item> <item> <title>lvs加keepalive部署</title> <description>&lt;p&gt;&lt;strong&gt;LVS 和 Keepalived 联合部署的完整步骤&lt;/strong&gt;，手把手教你从 0 到 1 搭建一个&lt;strong&gt;高可用的四层负载均衡集群&lt;/strong&gt;，适用于 CentOS 或 Ubuntu 等常见 Linux 系统。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;🧭 一、架构假设&lt;/h2&gt;&lt;p&gt;| 角色 | 主机 IP | 说明 ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalve%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalve%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/lvs%E5%8A%A0keepalve%E9%83%A8%E7%BD%B2/</guid> </item> <item> <title>nmap命令</title> <description>&lt;h2&gt;NMAP命令&lt;/h2&gt;&lt;p&gt;在线ipv6检测：http://www.ipv6scanner.com/cgi-bin/main.py &lt;/p&gt;&lt;p&gt;nmap的帮助手册真的是又臭又长，及时是help提供的内容也非常多，以下是gpt4理解并翻译的内容。&lt;/p&gt;&lt;p&gt;nmap - 网络探索工具、安全或端口扫描仪&lt;/p&gt;&lt;p&gt;语法 &lt;/p&gt;&lt;p&gt;```...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/nmap/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 08 May 2025 15:38:48 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/nmap/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/nmap/</guid> </item> <item> <title>juju常用命令</title> <description>&lt;p&gt;juju安装过程&lt;/p&gt;&lt;p&gt;```bashsnap install juju --channel=2.8/stable --classicyum install epel-release -y yum install snapd -ysystemctl enable --now snapd.socket ln ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/juju%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 07 May 2025 14:11:43 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/juju%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/juju%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/</guid> </item> <item> <title>keepalive</title> <description>&lt;h2&gt;🧠 什么是 Keepalived？&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;Keepalived&lt;/strong&gt; 是一个高可用性（High Availability, HA）软件，主要用于在 Linux 系统中实现 &lt;strong&gt;虚拟 IP 漂移（VIP漂移）&lt;/strong&gt;，从而提供服务的高可用性。它经常与 &lt;strong&gt;LVS（Linux Virtual Server）&lt;/strong&gt; 配合...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 18:26:08 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive/</guid> </item> <item> <title>keepalive部署</title> <description>&lt;p&gt;Keepalived 的部署其实非常简单，下面是一个完整的部署步骤，包括安装、配置和启动服务。我们以两台 CentOS / Ubuntu 系统的 Linux 服务器为例：一台作为主节点（MASTER），一台作为备节点（BACKUP），共同管理一个虚拟 IP。&lt;/p&gt;&lt;hr&gt;&lt;h2&gt;🚀 一、环境准备&lt;/h2&gt;&lt;p&gt;假设：&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 18:26:08 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/load_balance/keepalive%E5%A6%82%E4%BD%95%E9%83%A8%E7%BD%B2/</guid> </item> <item> <title>查询硬件信息-ipmitool</title> <description>&lt;p&gt;```bashipmitool 版本 1.8.18-csv&lt;/p&gt;&lt;p&gt;用法: ipmitool [选项...] &amp;lt;命令&amp;gt;&lt;/p&gt;&lt;pre&gt;&lt;code&gt; -h 显示帮助信息 -V 显示版本信息 -v 启用详细模式（可以多次使用）&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/ipm/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 06 May 2025 18:26:08 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/ipm/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/ipm/</guid> </item> <item> <title>supervisord是什么</title> <description>&lt;p&gt;&lt;code&gt;supervisord&lt;/code&gt; 是一个&lt;strong&gt;进程管理工具&lt;/strong&gt;，全称是 &lt;strong&gt;Supervisor Daemon&lt;/strong&gt;。它主要用来&lt;strong&gt;管理和监控&lt;/strong&gt; Linux/Unix 系统中的&lt;strong&gt;进程&lt;/strong&gt;，尤其是让一些程序（比如 web 服务、后台脚本等）&lt;strong&gt;在崩溃后自动重启&lt;/strong&gt;，保持服务持续运行。&lt;/p&gt;&lt;p&gt;简单说，&lt;code&gt;supervisord&lt;/code&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/Supervisord/Supervisord/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 28 Apr 2025 14:00:41 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/Supervisord/Supervisord/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/Supervisord/Supervisord/</guid> </item> <item> <title>系统启动分析</title> <description>&lt;p&gt;用AI分析了一下启动时的屏幕打印信息&lt;/p&gt;&lt;p&gt;```bash[SOL Session operational.  Use ~? for help] # SOL会话正在运行，使用~?获取帮助Checkpoint BC21 # 系统自检点BC21[Cpu0.Port0] PCIE Bifutcation = x1...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%88%86%E6%9E%90/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 23 Apr 2025 18:46:42 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%88%86%E6%9E%90/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E5%88%86%E6%9E%90/</guid> </item> </channel></rss>