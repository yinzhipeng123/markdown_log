<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Mon, 25 Nov 2024 02:45:33 -0000</pubDate> <lastBuildDate>Mon, 25 Nov 2024 02:45:33 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>机器夯住原因</title> <description>&lt;p&gt;机器“夯住”通常是指设备或系统停止响应、卡住或出现宕机现象，常见原因包括以下几类：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;硬件问题&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;过热&lt;/strong&gt;：CPU、GPU 或其他关键硬件过热可能导致系统卡死。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;硬盘故障&lt;/strong&gt;：机械硬盘或 SSD 的读写问题可能会让系统陷入死机状态。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;内存故障&lt;/strong&gt;：损坏或不兼容的内存模...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E6%9C%BA%E5%99%A8%E5%A4%AF%E4%BD%8F%E5%8E%9F%E5%9B%A0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 25 Nov 2024 02:45:52 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E6%9C%BA%E5%99%A8%E5%A4%AF%E4%BD%8F%E5%8E%9F%E5%9B%A0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/%E6%9C%BA%E5%99%A8%E5%A4%AF%E4%BD%8F%E5%8E%9F%E5%9B%A0/</guid> </item> <item> <title>时序数据库</title> <description>&lt;p&gt;Prometheus 使用的是一种专门为时序数据（time-series data）设计的数据库，通常被称为 &lt;strong&gt;Prometheus 时序数据库（Prometheus TSDB）&lt;/strong&gt;。该数据库是 Prometheus 的核心组成部分，用于存储和管理从各个目标抓取的指标数据。&lt;/p&gt;&lt;h3&gt;Prometheus 数据...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/TSDB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 25 Nov 2024 02:45:38 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/TSDB/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/TSDB/</guid> </item> <item> <title>mq对比</title> <description>&lt;p&gt;RabbitMQ 和 RocketMQ 是两种流行的消息队列，它们适用于不同的场景，各有优缺点。以下是它们的详细对比：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. RabbitMQ&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;成熟和稳定&lt;/strong&gt;：&lt;/li&gt;&lt;li&gt;开发时间长，拥有广泛的社区支持和插件生态。&lt;/li&gt;&lt;li&gt;经验证的 AMQP 协议...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 25 Nov 2024 02:45:37 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/</guid> </item> <item> <title>KVM</title> <description>&lt;p&gt;二进制转换（Binary Translation）是虚拟化技术的一种，用于在不同架构的硬件上运行非本地机器代码或优化本地代码执行。以下是一些与二进制转换相关的典型技术栈和工具：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;基于 CPU 虚拟化的二进制转换&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;这种方法主要用于在不支持硬件虚拟化的系统上运行虚拟机。&lt;/p&gt;&lt;p&gt;-...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/KVM/</guid> </item> <item> <title>CNI</title> <description>&lt;p&gt;在 Kubernetes 中，&lt;strong&gt;CNI 网络模型&lt;/strong&gt;（&lt;strong&gt;Container Network Interface&lt;/strong&gt;）是 Kubernetes 用来管理容器网络的一种插件标准，它定义了如何将容器接入网络，以及如何配置网络功能（如 IP 分配、流量控制等）。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;CNI 的基本概念&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/CNI/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/CNI/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/CNI/</guid> </item> <item> <title>Controller</title> <description>&lt;p&gt;在 Kubernetes (K8S) 中，&lt;strong&gt;Controller&lt;/strong&gt; 是控制循环的一部分，它持续监视集群状态并确保系统实际状态与期望状态一致。Kubernetes 提供了多种内置的 Controller，每种都有特定的功能，用于管理不同类型的资源。&lt;/p&gt;&lt;p&gt;以下是 Kubernetes 中常见的 Controller...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Controller/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Controller/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Controller/</guid> </item> <item> <title>Secret</title> <description>&lt;h1&gt;Secret&lt;/h1&gt;&lt;p&gt;在 Kubernetes 中，可以通过以下几种方式创建 Secret：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;使用命令行创建（推荐简单场景）&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;创建基于字符串的 Secret&lt;/h4&gt;&lt;p&gt;使用 &lt;code&gt;kubectl create secret&lt;/code&gt; 命令：&lt;/p&gt;&lt;p&gt;```bashkubectl crea...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Secret/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Secret/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Secret/</guid> </item> <item> <title>StatefulSet_Mysql</title> <description>&lt;p&gt;以下是使用 &lt;strong&gt;StatefulSet&lt;/strong&gt; 部署 MySQL 的完整示例，包含持久化存储、服务暴露等内容。StatefulSet 是部署 MySQL 等有状态应用的最佳实践。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 准备 MySQL 的 Persistent Volume Claim (PVC)&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Statefu...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/StatefulSet_Mysql/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/StatefulSet_Mysql/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/StatefulSet_Mysql/</guid> </item> <item> <title>prometheus概念</title> <description>&lt;p&gt;Prometheus 是一个开源的监控和报警系统，专门用于记录时序数据（如指标）并提供高效的查询语言（PromQL）来分析这些数据。它最初由 Google 开发，后来成为了云原生计算基金会（CNCF）的一个项目，广泛应用于云原生环境中的应用程序和基础设施监控。&lt;/p&gt;&lt;h3&gt;Prometheus 主要组件&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;*...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/prome/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/prome/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/monitor/prometheus/prome/</guid> </item> <item> <title>查看系统软件变化</title> <description>&lt;h1&gt;Rpm&lt;/h1&gt;&lt;p&gt;rpm命令是Red-Hat Package Manager（RPM软件包管理器）的缩写， 该命令用于管理Linux 下软件包的软件。在 Linux 操作系统下，几乎所有的软件均可以通过RPM 进行安装、卸载及管理等操作。&lt;/p&gt;&lt;p&gt;概括的说，rpm命令包含了五种基本功能：安装、卸载、升级、查询和验证。&lt;/p&gt;&lt;h1&gt;...&lt;/h1&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/rpm/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/rpm/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/rpm/</guid> </item> <item> <title>Centos7启动过程</title> <description>&lt;p&gt;CentOS 7 的启动过程基于 &lt;strong&gt;systemd&lt;/strong&gt; 系统管理器，可以分为以下几个阶段，涵盖了从加载 BIOS 到完全进入用户空间的整个流程：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;BIOS/UEFI 阶段&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;功能：&lt;/strong&gt; 计算机加电后，BIOS 或 UEFI 固件进行硬件初始化（如 CPU、内存、存储设备等...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/Centos7%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/Centos7%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/Centos7%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</guid> </item> <item> <title>iptable</title> <description>&lt;p&gt;&lt;code&gt;iptables&lt;/code&gt; 是 Linux 系统中的一个强大的工具，用于设置防火墙规则以控制网络流量。它通过修改 Linux 内核的网络流量过滤表实现网络包的过滤和转发。以下是 &lt;code&gt;iptables&lt;/code&gt; 规则的基本结构和主要概念：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;表（Table）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;iptables&lt;/code&gt; 规则分为几张表，每...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/iptable/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/iptable/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/iptable/</guid> </item> <item> <title>用户配置文件加载顺序</title> <description>&lt;p&gt;如果你以 &lt;strong&gt;root 用户&lt;/strong&gt; 登录系统，那么登录时这./bashrc，./profile，/etc/profile，/etc/bashrc四个文件的加载顺序和普通用户类似，但有一些细微差别。以下是具体情况：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. root 登录时的加载顺序&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;当你以 &lt;strong&gt;登录 shell&lt;/strong&gt; 的方...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/%E7%94%A8%E6%88%B7%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/</guid> </item> <item> <title>NAT网关模拟</title> <description>&lt;p&gt;在Linux系统上配置NAT并进行实验，可以通过使用 &lt;code&gt;iptables&lt;/code&gt; 或 &lt;code&gt;nftables&lt;/code&gt; 实现。以下是一个完整的实验指导，帮助你将一台Linux主机配置为NAT网关，供私有网络中的设备通过其访问外部网络。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;实验环境&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Linux主机&lt;/strong&gt;：充当NAT网关，具有两块网卡： ...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/NAT%E7%BD%91%E5%85%B3%E6%A8%A1%E6%8B%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/NAT%E7%BD%91%E5%85%B3%E6%A8%A1%E6%8B%9F/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/NAT%E7%BD%91%E5%85%B3%E6%A8%A1%E6%8B%9F/</guid> </item> <item> <title>ip命令</title> <description>&lt;p&gt;&lt;code&gt;ip&lt;/code&gt; 命令是 Linux 系统中用于配置和查看网络接口、路由、隧道等网络相关设置的工具。它是 &lt;code&gt;ifconfig&lt;/code&gt; 命令的现代替代品，提供了更多功能和更强大的灵活性。以下是一些常用的 &lt;code&gt;ip&lt;/code&gt; 命令及其作用：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;查看网络接口信息&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;baship addr&lt;/code&gt;这个命令用于查看所...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/ip/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 21 Nov 2024 19:13:07 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/ip/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/ip/</guid> </item> <item> <title>load高的原因</title> <description>&lt;h1&gt;load高的原因&lt;/h1&gt;&lt;h2&gt;前言&lt;/h2&gt;&lt;p&gt;其实Linux是不区分线程和进程的，在Linux眼里都是进程，Linux为了完成对线程的POSIX标准，引入了LWP，就是轻量级进程，即我们眼中的线程，线程和进程的创建方法在底层是相同的，都是调用do_fork()方法，只是传参不同。就因为这个使得线程和进程的概念混淆了，有人...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/load%E9%AB%98%E7%9A%84%E5%8E%9F%E5%9B%A0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:46:42 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/load%E9%AB%98%E7%9A%84%E5%8E%9F%E5%9B%A0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E8%AE%A1%E7%AE%97/load%E9%AB%98%E7%9A%84%E5%8E%9F%E5%9B%A0/</guid> </item> <item> <title>mypy</title> <description>&lt;p&gt;Mypy是Python的可选静态类型检查器。您可以在Python程序中添加类型提示（PEP 484），并使用mypy进行静态类型检查。查找程序中的错误，甚至不运行它们！&lt;/p&gt;&lt;p&gt;安装&lt;/p&gt;&lt;p&gt;&lt;code&gt;shellpip3 install mypy&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Test继承ABC&lt;/p&gt;&lt;p&gt;1.&lt;/p&gt;&lt;p&gt;```class ABC(object...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/mypy/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/mypy/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/mypy/</guid> </item> <item> <title>常见语法</title> <description>&lt;p&gt;Python 的基础语法简单直观，非常适合初学者上手。以下是 Python 中的一些关键基础语法概念和示例：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 注释&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;单行注释&lt;/strong&gt;：用 &lt;code&gt;#&lt;/code&gt; 开头。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;多行注释&lt;/strong&gt;：用三引号 &lt;code&gt;&#39;&#39;&#39;&lt;/code&gt; 或 &lt;code&gt;&#34;&#34;&#34;&lt;/code&gt; 包裹。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;```python&lt;/p&gt;&lt;h1&gt;这是一个单行注释&lt;/h1&gt;&lt;p&gt;&#34;&#34;&#34;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/some/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/some/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/some/</guid> </item> <item> <title>SYN泛洪</title> <description>&lt;p&gt;&lt;strong&gt;SYN 洪泛&lt;/strong&gt;（SYN Flood）是一种常见的 &lt;strong&gt;拒绝服务攻击（DoS，Denial of Service）&lt;/strong&gt;，主要通过滥用 TCP 协议的三次握手机制，耗尽服务器的资源，导致目标系统无法正常提供服务。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;TCP 三次握手过程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在正常情况下，建立一个 TCP 连接需要以下...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/security/SYN%E6%B3%9B%E6%B4%AA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/security/SYN%E6%B3%9B%E6%B4%AA/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/security/SYN%E6%B3%9B%E6%B4%AA/</guid> </item> <item> <title>7个习惯</title> <description>&lt;p&gt;“高效能人士的七个习惯”是由史蒂芬·柯维（Stephen R. Covey）在他的著作《高效能人士的七个习惯》（The 7 Habits of Highly Effective People）中提出的。这些习惯旨在帮助个人提高效率和实现个人和职业目标。以下是这七个习惯：&lt;/p&gt;&lt;p&gt;**1.积极主动（Be Proactiv...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/7%E4%B8%AA%E4%B9%A0%E6%83%AF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/7%E4%B8%AA%E4%B9%A0%E6%83%AF/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/7%E4%B8%AA%E4%B9%A0%E6%83%AF/</guid> </item> </channel></rss>