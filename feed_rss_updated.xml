<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Fri, 05 Jan 2024 06:34:20 -0000</pubDate> <lastBuildDate>Fri, 05 Jan 2024 06:34:20 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>不同的脚本执行方式</title> <description>&lt;p&gt;在 Unix 和类 Unix 系统中，执行脚本的方式主要有以下几种，每种方式都有其特定的用途和行为差异：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.使用 &lt;code&gt;bash 脚本&lt;/code&gt; 命令&lt;/strong&gt;: - 这种方式是通过直接调用 &lt;code&gt;bash&lt;/code&gt; 程序来执行脚本。 - 这意味着脚本将在 Bash shell 环境中运行，无论脚本的首行（shebang，...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash/%E4%B8%8D%E5%90%8C%E7%9A%84%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 05 Jan 2024 06:34:24 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash/%E4%B8%8D%E5%90%8C%E7%9A%84%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash/%E4%B8%8D%E5%90%8C%E7%9A%84%E8%84%9A%E6%9C%AC%E6%89%A7%E8%A1%8C%E6%96%B9%E5%BC%8F/</guid> </item> <item> <title>生命周期</title> <description>&lt;p&gt;在Kubernetes (K8S) 中，一个 Pod 的生命周期包括以下几个阶段：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.Pending（等待）&lt;/strong&gt;: 在这个阶段，Pod 已被 Kubernetes 系统接受，但是还有一个或多个容器镜像没有创建，这可能是因为镜像正在下载。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;2.Running（运行中）&lt;/strong&gt;: 在这个阶段，Kubern...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 05 Jan 2024 06:34:22 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</guid> </item> <item> <title>Home</title> <description>&lt;h1&gt;MarkDown_Log&lt;/h1&gt;&lt;p&gt;!!! note&lt;/p&gt;&lt;pre&gt;&lt;code&gt;如果没有学会受苦，那么所受的苦就白受了人活的像永远不会死，却死得像从来没有活过&lt;/code&gt;&lt;/pre&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 04 Jan 2024 16:22:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/</guid> </item> <item> <title>initContainers</title> <description>&lt;p&gt;在Kubernetes中，&lt;code&gt;initContainers&lt;/code&gt; 是一种特殊类型的容器，它们在Pod的常规（或“主”）容器启动之前运行。&lt;code&gt;initContainers&lt;/code&gt; 主要用于执行一些预先设置或初始化任务，这些任务必须在Pod的主容器启动前完成。一旦所有的 &lt;code&gt;initContainer&lt;/code&gt; 按顺序成功运行完毕，Kube...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/initContainers/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 04 Jan 2024 16:22:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/initContainers/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/initContainers/</guid> </item> <item> <title>一个比较完整的deployment的样例</title> <description>&lt;p&gt;以下是一个较为丰富且包含完整生命周期钩子的Kubernetes Deployment示例。这个示例展示了一个带有初始化容器（&lt;code&gt;initContainers&lt;/code&gt;）、生命周期钩子（&lt;code&gt;lifecycle&lt;/code&gt;）、就绪探针（&lt;code&gt;readinessProbe&lt;/code&gt;）和存活探针（&lt;code&gt;livenessProbe&lt;/code&gt;）的Deployment。...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84deployment/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Thu, 04 Jan 2024 16:22:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84deployment/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E7%9A%84deployment/</guid> </item> <item> <title>MAC安装Python</title> <description>&lt;h1&gt;MAC安装Python&lt;/h1&gt;&lt;p&gt;直接上官网下载MAC Python安装包，不推荐使用brew安装&lt;/p&gt;&lt;p&gt;https://www.python.org/downloads/macos/&lt;/p&gt;&lt;p&gt;![image-20220703195200634](https://raw.githubusercontent.com/yinz...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/mac/MAC%E5%AE%89%E8%A3%85Python/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 03 Jan 2024 14:54:28 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/mac/MAC%E5%AE%89%E8%A3%85Python/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/mac/MAC%E5%AE%89%E8%A3%85Python/</guid> </item> <item> <title>安装Homebrew</title> <description>&lt;p&gt;安装Homebrew&lt;/p&gt;&lt;p&gt;```sh&lt;/p&gt;&lt;p&gt;% export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;export ALL_PROXY=socks5://127.0.0.1:1080 #设置终端代理&lt;/p&gt;&lt;p&gt;%...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/mac/%E5%AE%89%E8%A3%85Homebrew/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 03 Jan 2024 11:27:38 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/mac/%E5%AE%89%E8%A3%85Homebrew/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/mac/%E5%AE%89%E8%A3%85Homebrew/</guid> </item> <item> <title>常用软件</title> <description>&lt;p&gt;好用的文本编辑器&lt;/p&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/coteditor/CotEditor&#34;&gt;coteditor/CotEditor: Lightweight Plain-Text Editor for macOS (github.com)&lt;/a&gt;&lt;/p&gt;&lt;p&gt;终端工具&lt;/p&gt;&lt;p&gt;[Eugeny/tabby: A termina...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/mac/%E8%BD%AF%E4%BB%B6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 03 Jan 2024 11:27:38 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/mac/%E8%BD%AF%E4%BB%B6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/mac/%E8%BD%AF%E4%BB%B6/</guid> </item> <item> <title>在数据库中备份某些表</title> <description>&lt;h1&gt;只备份某些表，在数据库内备份&lt;/h1&gt;&lt;p&gt;使用 &lt;code&gt;CREATE TABLE ... AS SELECT ...&lt;/code&gt; 命令来创建新表的确会造成原始表的索引和某些表属性丢失。这个命令只会复制数据和基本的表结构，不包括索引、外键、触发器、默认值设定或存储过程等。&lt;/p&gt;&lt;p&gt;如果你需要备份一个表并保留其完整结构（包括索引），...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/BAK_TABLE/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/BAK_TABLE/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/BAK_TABLE/</guid> </item> <item> <title>SHOW_SLAVE_STATUS</title> <description>&lt;p&gt;下面是 &lt;code&gt;SHOW SLAVE STATUS;&lt;/code&gt; 命令返回的字段的完整列表及其解释：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Slave_IO_State&lt;/strong&gt;: 显示从服务器 I/O 线程的当前状态。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Master_Host&lt;/strong&gt;: 主服务器的主机名。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Master_User&lt;/strong&gt;: 用于连接主服务器的 MySQL 用户名。...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/SHOW_SLAVE_STATUS/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/SHOW_SLAVE_STATUS/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/SHOW_SLAVE_STATUS/</guid> </item> <item> <title>备份</title> <description>&lt;h1&gt;备份与恢复&lt;/h1&gt;&lt;p&gt;备份是将系统或者数据库中重要是数据保存起来，目的是为了保证在灾难或故障发生的时候，确保数据不丢失或者是最小程度的丢失&lt;/p&gt;&lt;p&gt;备份策略要求：&lt;/p&gt;&lt;p&gt;第三方备份软件 bacula (开源备份软件)等&lt;/p&gt;&lt;h3&gt;一、备份的分类&lt;/h3&gt;&lt;h4&gt;1、根据备份方法分&lt;/h4&gt;&lt;h5&gt;1）冷备份(cold bac...&lt;/h5&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/bak/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/bak/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/bak/</guid> </item> <item> <title>基本语法</title> <description>&lt;h1&gt;SQL&lt;/h1&gt;&lt;p&gt;(Structured Query Language) 结构化查询语言&lt;/p&gt;&lt;p&gt;专门用来和关系型数据库进行通信的语言&lt;/p&gt;&lt;h3&gt;SQL语句中的大小写问题：&lt;/h3&gt;&lt;p&gt;1）关键字、函数名、列名和索引名不区分大小写&lt;/p&gt;&lt;p&gt;2）数据库名、表名、别名及视图名区分大小写的(因为linux系统是区分大小写的)&lt;/p&gt;&lt;p&gt;3）存储过程、...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/basic/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/basic/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/basic/</guid> </item> <item> <title>约束</title> <description>&lt;h1&gt;约束&lt;/h1&gt;&lt;p&gt;​ 约束也叫完整性约束（integrity constraint ）&lt;/p&gt;&lt;p&gt;什么叫完整性？&lt;/p&gt;&lt;p&gt;​ 完整性约束就是确保数据库中的数据是有意义的、正确的&lt;/p&gt;&lt;p&gt;什么是约束？&lt;/p&gt;&lt;p&gt;​ 为了保证数据的正确性，对关系模型提出的某些约束条件或者是规则。&lt;/p&gt;&lt;p&gt;​ 约束一般作用于字段上&lt;/p&gt;&lt;p&gt;约束有哪些？&lt;/p&gt;&lt;p&gt;​ **非空...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/constraint/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/constraint/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/constraint/</guid> </item> <item> <title>函数</title> <description>&lt;h1&gt;函数&lt;/h1&gt;&lt;h2&gt;举例&lt;/h2&gt;&lt;h3&gt;一、时间函数&lt;/h3&gt;&lt;p&gt;​ 1、查看当前时间&lt;/p&gt;&lt;p&gt;&lt;code&gt;mysql&amp;gt; select current_time();mysql&amp;gt; select curtime();&lt;/code&gt;&lt;/p&gt;&lt;p&gt;​ 2、查看当前日期&lt;/p&gt;&lt;p&gt;```mysql&amp;gt; select current_date();mysq...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/function/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/function/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/function/</guid> </item> <item> <title>授权</title> <description>&lt;h1&gt;用户与授权&lt;/h1&gt;&lt;p&gt;MySQL中的用户存在哪张表中 mysql.user&lt;/p&gt;&lt;p&gt;```sqlmysql&amp;gt; select user,host,password from mysql.user;+------+-----------+-----------------------------------------...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/grant/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/grant/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/grant/</guid> </item> <item> <title>查询</title> <description>&lt;h2&gt;一、指定查询条件&lt;/h2&gt;&lt;ul&gt;&lt;li&gt;&lt;p&gt;select 用来过滤字段的&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;from 指定从哪些表中查询数据&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;where 用来过滤行的&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;查询ula及格的人的姓名和ula成绩&lt;/p&gt;&lt;p&gt;```sqlmysql&amp;gt; select sname,ula from score where ula&amp;gt;=...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/select/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/select/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/select/</guid> </item> <item> <title>数据类型</title> <description>&lt;h1&gt;MySQL 数据类型&lt;/h1&gt;&lt;p&gt;MySQL 中定义数据字段的类型对你数据库的优化是非常重要的。&lt;/p&gt;&lt;p&gt;MySQL 支持多种类型，大致可以分为三类：数值、日期/时间和字符串(字符)类型。&lt;/p&gt;&lt;h2&gt;数值类型&lt;/h2&gt;&lt;p&gt;MySQL 支持所有标准 SQL 数值数据类型。&lt;/p&gt;&lt;p&gt;这些类型包括严格数值数据类型(INTEGER、SMALLI...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/type/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/type/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/type/</guid> </item> <item> <title>慢sql</title> <description>&lt;p&gt;在 MySQL 中查询 SQL 的执行记录通常涉及以下几个步骤：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;慢查询日志&lt;/strong&gt;：MySQL 提供了慢查询日志功能，它记录执行时间超过某个阈值的所有 SQL 查询。首先确保慢查询日志已经被启用，并设置了合适的阈值。&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;```sql SHOW VARIABLES LIKE &#39;slow_que...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E6%85%A2sql/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E6%85%A2sql/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/%E6%85%A2sql/</guid> </item> <item> <title>mysql的编译安装</title> <description>&lt;p&gt;在 CentOS 7 上编译安装 MySQL 5.7，您需要遵循以下步骤：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;安装依赖&lt;/strong&gt;：安装编译 MySQL 所需的依赖，例如开发工具、CMake、GCC、Bison 等。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;```bash sudo yum groupinstall &#34;Development Tools&#34; sudo...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Mon, 01 Jan 2024 20:44:51 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/mysql/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/mysql/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/</guid> </item> <item> <title>Index</title> <description>&lt;p&gt;云计算是一种提供和使用基于互联网的计算资源和服务的模式，这些资源和服务包括各种工具和应用，可以按需分配和使用。云计算的核心组成部分包括以下几个方面：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;1.服务模型&lt;/strong&gt;：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;基础设施即服务（IaaS）&lt;/strong&gt;：提供虚拟化的计算资源，如虚拟机、存储空间和网络。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;平台即服务（PaaS）&lt;/strong&gt;：提供编程环...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 29 Dec 2023 11:03:34 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/Cloud_Computing/</guid> </item> </channel></rss>