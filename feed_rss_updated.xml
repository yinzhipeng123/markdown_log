<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Tue, 10 Dec 2024 12:55:34 -0000</pubDate> <lastBuildDate>Tue, 10 Dec 2024 12:55:34 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>mq对比</title> <description>&lt;p&gt;RabbitMQ 和 RocketMQ 是两种流行的消息队列，它们适用于不同的场景，各有优缺点。以下是它们的详细对比：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. RabbitMQ&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;成熟和稳定&lt;/strong&gt;：&lt;/li&gt;&lt;li&gt;开发时间长，拥有广泛的社区支持和插件生态。&lt;/li&gt;&lt;li&gt;经验证的 AMQP 协议...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 12:55:39 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/</guid> </item> <item> <title>hostalias</title> <description>&lt;p&gt;在 Kubernetes 中，&lt;code&gt;hostAliases&lt;/code&gt; 是一个字段，它允许你在 Pod 配置中指定额外的主机名解析（hostname resolution）。通过 &lt;code&gt;hostAliases&lt;/code&gt;，你可以为 Pod 中的容器指定额外的主机名和 IP 映射，这些映射会被添加到容器内的 &lt;code&gt;/etc/hosts&lt;/code&gt; 文件中，...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/hostalias/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 12:55:38 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/hostalias/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/hostalias/</guid> </item> <item> <title>爱情2</title> <description>&lt;h2&gt;男人如何避免出轨：&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1.增强自我意识和责任感&lt;/strong&gt;：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;[ ] &lt;strong&gt;自我反思&lt;/strong&gt;：男人应该时常反思自己的行为和情感需求，了解自己为何会产生出轨的念头。是情感需求没有得到满足，还是其他因素导致的不满？通过自我认知和反思，能够帮助发现潜在问题，并及时解决。&lt;/li&gt;&lt;li&gt;[ ] &lt;strong&gt;对伴侣的责任&lt;/strong&gt;：出轨往往意味...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:26:09 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E6%84%9F%E6%83%85/</guid> </item> <item> <title>运维命令</title> <description>&lt;h2&gt;查看主题名为『__consumer_offsets』的分区数与副本数&lt;/h2&gt;&lt;p&gt;```bash[root@VM-0-16-centos bin]# sh kafka-topics.sh --bootstrap-server localhost:9092 --describe --topic __consumer_...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/%E8%BF%90%E7%BB%B4%E5%91%BD%E4%BB%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/%E8%BF%90%E7%BB%B4%E5%91%BD%E4%BB%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/kafka/%E8%BF%90%E7%BB%B4%E5%91%BD%E4%BB%A4/</guid> </item> <item> <title>shellcheck</title> <description>&lt;h1&gt;shellcheck&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;ShellCheck&lt;/strong&gt; 是一个开源的静态分析工具，专门用于检查 shell 脚本中的语法和潜在错误。它可以帮助开发者发现脚本中的常见错误、最佳实践的建议以及一些可能导致问题的代码。ShellCheck 通过提供详细的警告和提示，帮助用户更容易地调试和优化 shell 脚本。&lt;/p&gt;&lt;p&gt;官...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/shellcheck/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/shellcheck/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/bash_help/shellcheck/</guid> </item> <item> <title>Virtualenv</title> <description>&lt;p&gt;你可以使用以下命令在Linux上创建&lt;code&gt;virtualenv&lt;/code&gt;：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;首先，确保安装了&lt;code&gt;virtualenv&lt;/code&gt;。如果没有安装，可以通过&lt;code&gt;pip&lt;/code&gt;安装：&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;code&gt;bash pip install virtualenv&lt;/code&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;然后，创建一个新的虚拟环境：&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;```bash v...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/virtualenv/env/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/virtualenv/env/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/virtualenv/env/</guid> </item> <item> <title>佛法中解脱的方法</title> <description>&lt;h2&gt;众生皆苦&lt;/h2&gt;&lt;p&gt;“众生皆苦”是佛教中的一个重要教义，指的是所有有情众生（即所有具有意识的生命体）都在经历苦难。这个教义源于佛陀的“四谛”教义，特别是“苦谛”，其中明确指出了生命中存在的各种苦难。以下是对“众生皆苦”的详细解释：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;生苦&lt;/strong&gt;：出生的痛苦，包括从母胎中分娩的痛苦。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;老苦&lt;/strong&gt;：衰老...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BD%9B%E6%B3%95/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E4%BD%9B%E6%B3%95/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E4%BD%9B%E6%B3%95/</guid> </item> <item> <title>犯错</title> <description>&lt;p&gt;每个人都会在生活中犯错，重要的是如何从错误中学习和成长，而不是让错误定义你的人生。即便社会或他人对错误的反应过于严苛，你仍然可以选择以自我宽容、理解和积极的方式应对。&lt;/p&gt;&lt;p&gt;在面对错误时，可以采取以下几个步骤来调整心态和行动：&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;接受自己的不完美&lt;/strong&gt;：每个人都会犯错，犯错是学习的一部分，并不代表你是失败者。...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/%E7%8A%AF%E9%94%99/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/%E7%8A%AF%E9%94%99/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/%E7%8A%AF%E9%94%99/</guid> </item> <item> <title>brew使用</title> <description>&lt;h2&gt;brew&lt;/h2&gt;&lt;p&gt;使用brew，https://brew.sh/zh-cn/&lt;/p&gt;&lt;p&gt;在终端进行安装前，因安装需要下载文件，可以在终端中输入代理后再执行安装：&lt;/p&gt;&lt;p&gt;```bash设置代理，代理如何设置需请教资深人士export http_proxy=https://127.0.0.1:1087;export http...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/brew/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/brew/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/brew/</guid> </item> <item> <title>git一次报错</title> <description>&lt;p&gt;记录一个git提交过程中的一个报错&lt;/p&gt;&lt;p&gt;```bash[main 3a71b901] commit_message 3 files changed, 2 insertions(+), 2 deletions(-)Enumerating objects: 1553, done.Counting objects...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/git/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Tue, 10 Dec 2024 16:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/git/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/git/</guid> </item> <item> <title>Ansible_Dome</title> <description>&lt;p&gt;要使用 Ansible 安装 &lt;code&gt;sar&lt;/code&gt;（一个用于收集和报告系统性能的工具），你可以编写一个简单的 Playbook 来实现。在这个 Playbook 中，我们将使用 Ansible 的 &lt;code&gt;package&lt;/code&gt; 模块来安装软件包。具体步骤如下：&lt;/p&gt;&lt;h3&gt;1. 创建一个 Playbook 文件&lt;/h3&gt;&lt;p&gt;首先，创建一个名为 ...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible_Dome/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 17:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible_Dome/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible_Dome/</guid> </item> <item> <title>Ansible部署</title> <description>&lt;p&gt;Ansible 是一个开源的自动化工具，可以在 Linux 和 macOS 上轻松安装。下面是不同平台上安装 Ansible 的步骤：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;在 Linux 上安装 Ansible&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;通过 &lt;code&gt;apt&lt;/code&gt; 安装（适用于 Ubuntu/Debian 系统）&lt;/h4&gt;&lt;p&gt;```bashsudo apt...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 17:18:35 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/Ansible%E9%83%A8%E7%BD%B2/</guid> </item> <item> <title>redis快速部署</title> <description>&lt;p&gt;Redis单机部署比较简单，以下是一个基本的部署步骤：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;安装Redis&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;在Linux上安装Redis（以Ubuntu为例）：&lt;/h4&gt;&lt;p&gt;&lt;code&gt;bashsudo apt updatesudo apt install redis-server&lt;/code&gt;&lt;/p&gt;&lt;h4&gt;在CentOS上安装R...&lt;/h4&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/redis/redis%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/redis/redis%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/redis/redis%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2/</guid> </item> <item> <title>redis运维动作</title> <description>&lt;p&gt;Redis 进行日常运维管理。以下是一些检查 Redis 状态是否正常的常见方法，以及一些常见的运维动作&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;查看 Redis 状态是否正常&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;可以通过多种方式检查 Redis 服务的健康状态，下面列出了一些常见的命令和工具。&lt;/p&gt;&lt;p&gt;```bashredis-cli 6.2.16&lt;/p&gt;&lt;p&gt;用法: r...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/database/redis/redis%E8%BF%90%E7%BB%B4%E5%8A%A8%E4%BD%9C/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/database/redis/redis%E8%BF%90%E7%BB%B4%E5%8A%A8%E4%BD%9C/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/database/redis/redis%E8%BF%90%E7%BB%B4%E5%8A%A8%E4%BD%9C/</guid> </item> <item> <title>ClusterRole</title> <description>&lt;h3&gt;Role 与 ClusterRole&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Role&lt;/code&gt; 对象就是一个角色包含了一套表示一组权限的规则。但是只对一个&lt;code&gt;namespace&lt;/code&gt;生效，书写规则的时候必须写上针对哪个&lt;code&gt;namespace&lt;/code&gt;&lt;/p&gt;&lt;p&gt;&lt;code&gt;ClusterRole&lt;/code&gt; 对象也是一个角色包含了一套表示一组权限的规则，但是对整个 Kubernetes 集...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/ClusterRole/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/ClusterRole/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/ClusterRole/</guid> </item> <item> <title>Pipeline</title> <description>&lt;p&gt;&lt;strong&gt;Pipeline&lt;/strong&gt; 在 Jenkins 中是指一组自动化的构建、测试、部署等任务的流程，通常用于实现持续集成（CI）和持续交付（CD）。它通过将这些任务定义为代码，提供了更灵活、可控、可扩展的 CI/CD 流程。Pipeline 可以视为软件开发生命周期中所有自动化步骤的流水线，确保每次提交代码时都会经历相...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Pipeline/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Pipeline/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/Pipeline/</guid> </item> <item> <title>etc备份</title> <description>&lt;p&gt;ETC备份&lt;/p&gt;&lt;p&gt;```bashETCDCTL_API=3 etcdctl --endpoints=https://127.0.0.1:2379 \--cacert=/opt/KUIN00601/ca.crt \--cert=/opt/KUIN00601/etcd-client.crt \--key=/o...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/etc%E5%A4%87%E4%BB%BD/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/etc%E5%A4%87%E4%BB%BD/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/etc%E5%A4%87%E4%BB%BD/</guid> </item> <item> <title>节点维护</title> <description>&lt;p&gt;节点维护&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashkubectl cordon node02kubectl get nodeskubectl drain node02 --ignore-daemonsets --delete-emptydir-data --force&lt;/code&gt;&lt;/p&gt;&lt;h3&gt;参数解释&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;[ ] `kubectl d...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/lxc/kubernetes/%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4/</guid> </item> <item> <title>连接器</title> <description>&lt;h3&gt;Kafka Connect 是什么？&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Kafka Connect&lt;/strong&gt; 是一个用于在 Kafka 和外部系统（如数据库、文件系统、搜索引擎等）之间快速、可靠地流动数据的框架。它是 Apache Kafka 的一部分，专门设计用于简化和加速数据集成的过程，无需开发复杂的自定义代码。Kafka Conne...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/connect/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/connect/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/kafka/connect/</guid> </item> <item> <title>单机部署</title> <description>&lt;p&gt;部署 Kafka 3.9.0 可以按照以下步骤进行：&lt;/p&gt;&lt;h3&gt;1. 安装 Java&lt;/h3&gt;&lt;p&gt;Kafka 需要 Java 8 或更高版本。你可以使用以下命令来安装 Java（以 CentOS 为例）：&lt;/p&gt;&lt;p&gt;&lt;code&gt;bashsudo yum install java-1.8.0-openjdk&lt;/code&gt;&lt;/p&gt;&lt;p&gt;检查 Java 安...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Fri, 06 Dec 2024 16:08:15 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/kafka/%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/kafka/%E5%8D%95%E6%9C%BA%E9%83%A8%E7%BD%B2/</guid> </item> </channel></rss>