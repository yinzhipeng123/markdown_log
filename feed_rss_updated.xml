<?xml version="1.0" encoding="UTF-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/"> <channel><title>MarkDown_Log</title><description>yinzhipengのmarkdown_log</description><link>https://yinzhipeng123.github.io/markdown_log/</link><atom:link href="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml" rel="self" type="application/rss+xml" /><docs>https://github.com/yinzhipeng123/markdown_log/</docs><language>en-None</language> <pubDate>Wed, 20 Nov 2024 11:45:40 -0000</pubDate> <lastBuildDate>Wed, 20 Nov 2024 11:45:40 -0000</lastBuildDate> <ttl>1440</ttl> <generator>MkDocs RSS plugin - v1.7.0</generator> <image> <url>https://upload.wikimedia.org/wikipedia/commons/thumb/4/43/Feed-icon.svg/128px-Feed-icon.svg.png</url> <title>MarkDown_Log</title><link>https://yinzhipeng123.github.io/markdown_log/</link> </image> <item> <title>mq对比</title> <description>&lt;p&gt;RabbitMQ 和 RocketMQ 是两种流行的消息队列，它们适用于不同的场景，各有优缺点。以下是它们的详细对比：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. RabbitMQ&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;成熟和稳定&lt;/strong&gt;：&lt;/li&gt;&lt;li&gt;开发时间长，拥有广泛的社区支持和插件生态。&lt;/li&gt;&lt;li&gt;经验证的 AMQP 协议...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 11:45:44 +0000</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/middleware/MQ/mqvs/</guid> </item> <item> <title>mypy</title> <description>&lt;p&gt;Mypy是Python的可选静态类型检查器。您可以在Python程序中添加类型提示（PEP 484），并使用mypy进行静态类型检查。查找程序中的错误，甚至不运行它们！&lt;/p&gt;&lt;p&gt;安装&lt;/p&gt;&lt;p&gt;&lt;code&gt;shellpip3 install mypy&lt;/code&gt;&lt;/p&gt;&lt;p&gt;Test继承ABC&lt;/p&gt;&lt;p&gt;1.&lt;/p&gt;&lt;p&gt;```class ABC(object...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/mypy/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/mypy/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/mypy/</guid> </item> <item> <title>常见语法</title> <description>&lt;p&gt;Python 的基础语法简单直观，非常适合初学者上手。以下是 Python 中的一些关键基础语法概念和示例：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 注释&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;单行注释&lt;/strong&gt;：用 &lt;code&gt;#&lt;/code&gt; 开头。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;多行注释&lt;/strong&gt;：用三引号 &lt;code&gt;&#39;&#39;&#39;&lt;/code&gt; 或 &lt;code&gt;&#34;&#34;&#34;&lt;/code&gt; 包裹。&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;```python&lt;/p&gt;&lt;h1&gt;这是一个单行注释&lt;/h1&gt;&lt;p&gt;&#34;&#34;&#34;...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/some/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/some/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/basics/some/</guid> </item> <item> <title>SYN泛洪</title> <description>&lt;p&gt;&lt;strong&gt;SYN 洪泛&lt;/strong&gt;（SYN Flood）是一种常见的 &lt;strong&gt;拒绝服务攻击（DoS，Denial of Service）&lt;/strong&gt;，主要通过滥用 TCP 协议的三次握手机制，耗尽服务器的资源，导致目标系统无法正常提供服务。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;TCP 三次握手过程&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;在正常情况下，建立一个 TCP 连接需要以下...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/security/SYN%E6%B3%9B%E6%B4%AA/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/security/SYN%E6%B3%9B%E6%B4%AA/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/security/SYN%E6%B3%9B%E6%B4%AA/</guid> </item> <item> <title>7个习惯</title> <description>&lt;p&gt;“高效能人士的七个习惯”是由史蒂芬·柯维（Stephen R. Covey）在他的著作《高效能人士的七个习惯》（The 7 Habits of Highly Effective People）中提出的。这些习惯旨在帮助个人提高效率和实现个人和职业目标。以下是这七个习惯：&lt;/p&gt;&lt;p&gt;**1.积极主动（Be Proactiv...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/soft/7%E4%B8%AA%E4%B9%A0%E6%83%AF/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/soft/7%E4%B8%AA%E4%B9%A0%E6%83%AF/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/soft/7%E4%B8%AA%E4%B9%A0%E6%83%AF/</guid> </item> <item> <title>Centos7启动过程</title> <description>&lt;p&gt;CentOS 7 的启动过程基于 &lt;strong&gt;systemd&lt;/strong&gt; 系统管理器，可以分为以下几个阶段，涵盖了从加载 BIOS 到完全进入用户空间的整个流程：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;BIOS/UEFI 阶段&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;功能：&lt;/strong&gt; 计算机加电后，BIOS 或 UEFI 固件进行硬件初始化（如 CPU、内存、存储设备等...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/Centos7%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/Centos7%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/Centos7%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/</guid> </item> <item> <title>LVM</title> <description>&lt;h3&gt;&lt;strong&gt;LVM的基本概念&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Physical Volume（PV，物理卷）&lt;/strong&gt;：&lt;/li&gt;&lt;li&gt;是LVM的基础单位，对应实际的硬盘分区或整个硬盘。&lt;/li&gt;&lt;li&gt;通过&lt;code&gt;pvcreate&lt;/code&gt;命令将普通分区或设备转换为PV。&lt;/li&gt;&lt;li&gt;如：&lt;code&gt;pvcreate /dev/sdb1&lt;/code&gt;&lt;/li&gt;&lt;li&gt;**Volume Gr...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/LVM/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/LVM/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/LVM/</guid> </item> <item> <title>firewalld</title> <description>&lt;p&gt;在 CentOS 7 中，防火墙使用 &lt;strong&gt;firewalld&lt;/strong&gt; 服务来管理。你可以通过命令行工具 &lt;code&gt;firewall-cmd&lt;/code&gt; 来配置防火墙规则。以下是详细的配置方法和规则讲解。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. firewalld 基础概念&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Zone（区域）&lt;/strong&gt;：定义了不同的信任级别，网络接口绑定到某...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/firewalld/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/firewalld/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/firewalld/</guid> </item> <item> <title>iptable</title> <description>&lt;p&gt;&lt;code&gt;iptables&lt;/code&gt; 是 Linux 系统中的一个强大的工具，用于设置防火墙规则以控制网络流量。它通过修改 Linux 内核的网络流量过滤表实现网络包的过滤和转发。以下是 &lt;code&gt;iptables&lt;/code&gt; 规则的基本结构和主要概念：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;1. &lt;strong&gt;表（Table）&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;code&gt;iptables&lt;/code&gt; 规则分为几张表，每...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/centos7/iptable/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/centos7/iptable/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/centos7/iptable/</guid> </item> <item> <title>DNS优化</title> <description>&lt;h2&gt;DNS速度优化&lt;/h2&gt;&lt;p&gt;DNS优化，云主机中第一条往往是云平台的DNS，没有公网网站的解析记录，DNS默认查询等待时间比较长，可以手动增加查询限时增加DNS解析速度&lt;/p&gt;&lt;p&gt;可以在最后一行添加，options timeout:1 attempts:1 &lt;/p&gt;&lt;p&gt;最后一行 options timeout:1 attempts:...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/DNS%E4%BC%98%E5%8C%96/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/DNS%E4%BC%98%E5%8C%96/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/DNS%E4%BC%98%E5%8C%96/</guid> </item> <item> <title>IPSecVPN</title> <description>&lt;h2&gt;IPSecVPN&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;IPsec VPN&lt;/strong&gt; 是一种基于 &lt;strong&gt;IPsec（Internet Protocol Security）&lt;/strong&gt; 协议的虚拟私人网络技术，用于通过公共网络（如互联网）建立安全的通信隧道。它通过加密和认证技术，保护数据在网络中的传输安全，确保数据的机密性、完整性和认证性。&lt;/p&gt;&lt;h3&gt;...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/IPSecVPN/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/IPSecVPN/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/IPSecVPN/</guid> </item> <item> <title>IPSecVPN和SSLVPN区别</title> <description>&lt;p&gt;IPSec VPN和SSL VPN都是常见的虚拟专用网络（VPN）技术，它们都用于安全地连接远程用户或网络，但它们的工作原理、应用场景和加密方式有所不同。下面是它们之间的主要区别和联系：&lt;/p&gt;&lt;h3&gt;1. &lt;strong&gt;加密机制&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;IPSec VPN&lt;/strong&gt;：IPSec主要使用的是&lt;strong&gt;对称加密&lt;/strong&gt;技术（例如AES...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/IPSecVPN%E5%92%8CSSLVPN%E5%8C%BA%E5%88%AB/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/IPSecVPN%E5%92%8CSSLVPN%E5%8C%BA%E5%88%AB/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/IPSecVPN%E5%92%8CSSLVPN%E5%8C%BA%E5%88%AB/</guid> </item> <item> <title>SSL_VPN</title> <description>&lt;p&gt;SSL VPN（Secure Sockets Layer Virtual Private Network）是一种基于SSL（现为TLS）协议的虚拟专用网络技术，用于在公共网络上提供安全的远程访问服务。以下是SSL VPN的原理和关键特性：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;SSL VPN的原理&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;**基于SSL/...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/SSL_VPN%E5%8E%9F%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/SSL_VPN%E5%8E%9F%E7%90%86/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/SSL_VPN%E5%8E%9F%E7%90%86/</guid> </item> <item> <title>bonding</title> <description>&lt;p&gt;&lt;strong&gt;网卡绑定（NIC Bonding 或 Network Bonding）&lt;/strong&gt;是指将多块网络接口卡（NIC）绑定在一起，以实现更高的网络吞吐量、更好的冗余性和可靠性。常见于Linux系统中的网卡绑定通过内核支持的多种模式来实现。&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;网卡绑定的常见模式&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;**mode=0（balance-rr，...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/bonding/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/bonding/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/bonding/</guid> </item> <item> <title>https原理</title> <description>&lt;p&gt;HTTPS（HyperText Transfer Protocol Secure）是基于HTTP和SSL/TLS协议的安全通信协议，主要用于保障网络传输的安全性。它为HTTP加入了加密、认证和完整性校验，确保数据在客户端和服务器之间的传输安全。&lt;/p&gt;&lt;p&gt;以下是HTTPS的工作原理的详细解析：&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;**1...&lt;/h3&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/https%E5%8E%9F%E7%90%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/https%E5%8E%9F%E7%90%86/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/https%E5%8E%9F%E7%90%86/</guid> </item> <item> <title>python模拟浏览器验证证书</title> <description>&lt;p&gt;Python模拟浏览器验证证书&lt;/p&gt;&lt;p&gt;使用 Python 来模拟证书验证过程。Python 提供了多种库来帮助你验证证书的合法性，模拟 HTTPS 连接和执行证书验证的各个环节。以下是实现这个过程的一些关键步骤和相关库的使用方法。&lt;/p&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;1. 模拟证书验证的基本步骤&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;以下是模拟客户端验证服务器...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/python%E6%A8%A1%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8%E9%AA%8C%E8%AF%81%E8%AF%81%E4%B9%A6/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/python%E6%A8%A1%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8%E9%AA%8C%E8%AF%81%E8%AF%81%E4%B9%A6/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/python%E6%A8%A1%E6%8B%9F%E6%B5%8F%E8%A7%88%E5%99%A8%E9%AA%8C%E8%AF%81%E8%AF%81%E4%B9%A6/</guid> </item> <item> <title>对称加密</title> <description>&lt;p&gt;&lt;strong&gt;对称加密&lt;/strong&gt;（Symmetric Encryption）是一种加密方法，其中加密和解密过程使用&lt;strong&gt;相同的密钥&lt;/strong&gt;。也就是说，发送方和接收方都使用相同的密钥来加密和解密数据。&lt;/p&gt;&lt;h3&gt;对称加密的工作原理：&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;加密&lt;/strong&gt;：发送方使用一个密钥对原始数据（明文）进行加密，生成密文。&lt;/li&gt;&lt;li&gt;&lt;strong&gt;传输&lt;/strong&gt;：密文通...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</guid> </item> <item> <title>非对称加密</title> <description>&lt;p&gt;&lt;strong&gt;非对称加密&lt;/strong&gt;（Asymmetric Encryption）是一种加密方法，它使用&lt;strong&gt;一对密钥&lt;/strong&gt;：一个是&lt;strong&gt;公钥&lt;/strong&gt;（public key），另一个是&lt;strong&gt;私钥&lt;/strong&gt;（private key）。这两把密钥是成对存在的，并且它们具有以下特点：&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;公钥&lt;/strong&gt;：可以公开传播，任何人都可以使用公钥进行加密。&lt;/li&gt;&lt;li&gt;...&lt;/li&gt;&lt;/ul&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/system/linux/%E7%BD%91%E7%BB%9C/%E9%9D%9E%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/</guid> </item> <item> <title>siege压测</title> <description>&lt;p&gt;&lt;code&gt;siege&lt;/code&gt; 是一个功能强大的 HTTP 负载测试和基准测试工具，用于评估 Web 服务器的性能和稳定性。它支持模拟多个用户同时向目标服务器发送请求，从而帮助测试服务器在高负载情况下的表现。&lt;/p&gt;&lt;h3&gt;&lt;code&gt;siege&lt;/code&gt; 的主要功能&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;压力测试&lt;/strong&gt;：通过模拟并发用户来测试服务器的性能。&lt;/li&gt;&lt;li&gt;*&lt;em&gt;基准测试&lt;/em&gt;...&lt;/li&gt;&lt;/ol&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/tool/siege%E5%8E%8B%E6%B5%8B/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 19:19:26 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/tool/siege%E5%8E%8B%E6%B5%8B/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/tool/siege%E5%8E%8B%E6%B5%8B/</guid> </item> <item> <title>python函数参数</title> <description>&lt;h1&gt;&lt;code&gt;*args&lt;/code&gt;和&lt;code&gt;**kwargs&lt;/code&gt;&lt;/h1&gt;&lt;p&gt;&lt;code&gt;*args&lt;/code&gt;和&lt;code&gt;**kwargs&lt;/code&gt;主要用于函数的定义。当函数的参数不确定时，可以使用&lt;code&gt;*args&lt;/code&gt;和&lt;code&gt;**kwargs&lt;/code&gt;来将不 定数量的参数传递给一个函数。这里不定的意思是预先并不知道函数的使用者会传递多少个参数，所以, 在这种场景下可以使用这两个关键字。&lt;/p&gt;&lt;p&gt;`*ar...&lt;/p&gt;</description><link>https://yinzhipeng123.github.io/markdown_log/programming_language/python/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0/?utm_source=documentation&amp;utm_medium=RSS&amp;utm_campaign=feed-syndication</link> <pubDate>Wed, 20 Nov 2024 10:46:28 +0800</pubDate><source url="https://yinzhipeng123.github.io/markdown_log/feed_rss_updated.xml">MarkDown_Log</source><comments>https://yinzhipeng123.github.io/markdown_log/programming_language/python/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0/#__comments</comments><guid isPermaLink="true">https://yinzhipeng123.github.io/markdown_log/programming_language/python/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0/</guid> </item> </channel></rss>